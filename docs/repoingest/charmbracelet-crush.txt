Directory structure:
└── charmbracelet-crush/
    ├── README.md
    ├── CLA.md
    ├── crush.json
    ├── CRUSH.md
    ├── cspell.json
    ├── go.mod
    ├── go.sum
    ├── LICENSE.md
    ├── main.go
    ├── schema.json
    ├── sqlc.yaml
    ├── Taskfile.yaml
    ├── .golangci.yml
    ├── .goreleaser.yml
    ├── internal/
    │   ├── ansiext/
    │   │   └── ansi.go
    │   ├── app/
    │   │   ├── app.go
    │   │   ├── lsp.go
    │   │   └── lsp_events.go
    │   ├── cmd/
    │   │   ├── logs.go
    │   │   ├── root.go
    │   │   ├── run.go
    │   │   └── schema.go
    │   ├── config/
    │   │   ├── config.go
    │   │   ├── init.go
    │   │   ├── load.go
    │   │   ├── load_test.go
    │   │   ├── merge.go
    │   │   ├── merge_test.go
    │   │   ├── provider.go
    │   │   ├── provider_empty_test.go
    │   │   ├── provider_test.go
    │   │   ├── resolve.go
    │   │   └── resolve_test.go
    │   ├── csync/
    │   │   ├── doc.go
    │   │   ├── maps.go
    │   │   ├── maps_test.go
    │   │   ├── slices.go
    │   │   └── slices_test.go
    │   ├── db/
    │   │   ├── connect.go
    │   │   ├── db.go
    │   │   ├── embed.go
    │   │   ├── files.sql.go
    │   │   ├── messages.sql.go
    │   │   ├── models.go
    │   │   ├── querier.go
    │   │   ├── sessions.sql.go
    │   │   ├── migrations/
    │   │   │   ├── 20250424200609_initial.sql
    │   │   │   ├── 20250515105448_add_summary_message_id.sql
    │   │   │   ├── 20250624000000_add_created_at_indexes.sql
    │   │   │   └── 20250627000000_add_provider_to_messages.sql
    │   │   └── sql/
    │   │       ├── files.sql
    │   │       ├── messages.sql
    │   │       └── sessions.sql
    │   ├── diff/
    │   │   └── diff.go
    │   ├── format/
    │   │   └── spinner.go
    │   ├── fsext/
    │   │   ├── expand.go
    │   │   ├── fileutil.go
    │   │   ├── home.go
    │   │   ├── ignore_test.go
    │   │   ├── ls.go
    │   │   ├── ls_test.go
    │   │   ├── owner_others.go
    │   │   ├── owner_windows.go
    │   │   └── parent.go
    │   ├── history/
    │   │   └── file.go
    │   ├── llm/
    │   │   ├── agent/
    │   │   │   ├── agent-tool.go
    │   │   │   ├── agent.go
    │   │   │   └── mcp-tools.go
    │   │   ├── prompt/
    │   │   │   ├── anthropic.md
    │   │   │   ├── coder.go
    │   │   │   ├── gemini.md
    │   │   │   ├── init.md
    │   │   │   ├── initialize.go
    │   │   │   ├── openai.md
    │   │   │   ├── prompt.go
    │   │   │   ├── prompt_test.go
    │   │   │   ├── summarize.md
    │   │   │   ├── summarizer.go
    │   │   │   ├── task.go
    │   │   │   ├── title.go
    │   │   │   ├── title.md
    │   │   │   └── v2.md
    │   │   ├── provider/
    │   │   │   ├── anthropic.go
    │   │   │   ├── azure.go
    │   │   │   ├── bedrock.go
    │   │   │   ├── gemini.go
    │   │   │   ├── openai.go
    │   │   │   ├── openai_test.go
    │   │   │   ├── provider.go
    │   │   │   └── vertexai.go
    │   │   └── tools/
    │   │       ├── bash.go
    │   │       ├── diagnostics.go
    │   │       ├── download.go
    │   │       ├── edit.go
    │   │       ├── fetch.go
    │   │       ├── file.go
    │   │       ├── glob.go
    │   │       ├── grep.go
    │   │       ├── grep_test.go
    │   │       ├── ls.go
    │   │       ├── multiedit.go
    │   │       ├── rg.go
    │   │       ├── safe.go
    │   │       ├── sourcegraph.go
    │   │       ├── tools.go
    │   │       ├── view.go
    │   │       └── write.go
    │   ├── log/
    │   │   ├── http.go
    │   │   ├── http_test.go
    │   │   └── log.go
    │   ├── lsp/
    │   │   ├── client.go
    │   │   ├── client_test.go
    │   │   ├── handlers.go
    │   │   ├── language.go
    │   │   ├── methods.go
    │   │   ├── protocol.go
    │   │   ├── transport.go
    │   │   ├── protocol/
    │   │   │   ├── interface.go
    │   │   │   ├── LICENSE
    │   │   │   ├── pattern_interfaces.go
    │   │   │   ├── tables.go
    │   │   │   ├── tsdocument-changes.go
    │   │   │   └── uri.go
    │   │   ├── util/
    │   │   │   └── edit.go
    │   │   └── watcher/
    │   │       ├── ulimit_bsd.go
    │   │       ├── ulimit_darwin.go
    │   │       ├── ulimit_fallback.go
    │   │       ├── ulimit_linux.go
    │   │       ├── ulimit_windows.go
    │   │       └── watcher.go
    │   ├── message/
    │   │   ├── attachment.go
    │   │   ├── content.go
    │   │   └── message.go
    │   ├── permission/
    │   │   ├── permission.go
    │   │   └── permission_test.go
    │   ├── pubsub/
    │   │   ├── broker.go
    │   │   └── events.go
    │   ├── session/
    │   │   └── session.go
    │   ├── shell/
    │   │   ├── command_block_test.go
    │   │   ├── comparison_test.go
    │   │   ├── doc.go
    │   │   ├── persistent.go
    │   │   ├── shell.go
    │   │   └── shell_test.go
    │   ├── slicesext/
    │   │   ├── slices.go
    │   │   └── slices_test.go
    │   ├── tui/
    │   │   ├── keys.go
    │   │   ├── tui.go
    │   │   ├── components/
    │   │   │   ├── anim/
    │   │   │   │   ├── anim.go
    │   │   │   │   └── example/
    │   │   │   │       └── main.go
    │   │   │   ├── chat/
    │   │   │   │   ├── chat.go
    │   │   │   │   ├── queue.go
    │   │   │   │   ├── editor/
    │   │   │   │   │   ├── editor.go
    │   │   │   │   │   └── keys.go
    │   │   │   │   ├── header/
    │   │   │   │   │   └── header.go
    │   │   │   │   ├── messages/
    │   │   │   │   │   ├── messages.go
    │   │   │   │   │   ├── renderer.go
    │   │   │   │   │   └── tool.go
    │   │   │   │   ├── sidebar/
    │   │   │   │   │   └── sidebar.go
    │   │   │   │   └── splash/
    │   │   │   │       ├── keys.go
    │   │   │   │       └── splash.go
    │   │   │   ├── completions/
    │   │   │   │   ├── completions.go
    │   │   │   │   └── keys.go
    │   │   │   ├── core/
    │   │   │   │   ├── core.go
    │   │   │   │   ├── status_test.go
    │   │   │   │   ├── layout/
    │   │   │   │   │   └── layout.go
    │   │   │   │   ├── status/
    │   │   │   │   │   └── status.go
    │   │   │   │   └── testdata/
    │   │   │   │       ├── TestStatus/
    │   │   │   │       │   ├── AllFieldsWithExtraContent.golden
    │   │   │   │       │   ├── Default.golden
    │   │   │   │       │   ├── EmptyDescription.golden
    │   │   │   │       │   ├── LongDescription.golden
    │   │   │   │       │   ├── NarrowWidth.golden
    │   │   │   │       │   ├── NoIcon.golden
    │   │   │   │       │   ├── VeryNarrowWidth.golden
    │   │   │   │       │   ├── WithColors.golden
    │   │   │   │       │   ├── WithCustomIcon.golden
    │   │   │   │       │   └── WithExtraContent.golden
    │   │   │   │       └── TestStatusTruncation/
    │   │   │   │           ├── Width20.golden
    │   │   │   │           ├── Width30.golden
    │   │   │   │           ├── Width40.golden
    │   │   │   │           ├── Width50.golden
    │   │   │   │           └── Width60.golden
    │   │   │   ├── dialogs/
    │   │   │   │   ├── dialogs.go
    │   │   │   │   ├── keys.go
    │   │   │   │   ├── commands/
    │   │   │   │   │   ├── arguments.go
    │   │   │   │   │   ├── commands.go
    │   │   │   │   │   ├── keys.go
    │   │   │   │   │   └── loader.go
    │   │   │   │   ├── compact/
    │   │   │   │   │   ├── compact.go
    │   │   │   │   │   └── keys.go
    │   │   │   │   ├── filepicker/
    │   │   │   │   │   ├── filepicker.go
    │   │   │   │   │   └── keys.go
    │   │   │   │   ├── models/
    │   │   │   │   │   ├── apikey.go
    │   │   │   │   │   ├── keys.go
    │   │   │   │   │   ├── list.go
    │   │   │   │   │   └── models.go
    │   │   │   │   ├── permissions/
    │   │   │   │   │   ├── keys.go
    │   │   │   │   │   └── permissions.go
    │   │   │   │   ├── quit/
    │   │   │   │   │   ├── keys.go
    │   │   │   │   │   └── quit.go
    │   │   │   │   └── sessions/
    │   │   │   │       ├── keys.go
    │   │   │   │       └── sessions.go
    │   │   │   ├── files/
    │   │   │   │   └── files.go
    │   │   │   ├── image/
    │   │   │   │   ├── image.go
    │   │   │   │   └── load.go
    │   │   │   ├── logo/
    │   │   │   │   └── logo.go
    │   │   │   ├── lsp/
    │   │   │   │   └── lsp.go
    │   │   │   └── mcp/
    │   │   │       └── mcp.go
    │   │   ├── exp/
    │   │   │   ├── diffview/
    │   │   │   │   ├── chroma.go
    │   │   │   │   ├── diffview.go
    │   │   │   │   ├── diffview_test.go
    │   │   │   │   ├── split.go
    │   │   │   │   ├── style.go
    │   │   │   │   ├── Taskfile.yaml
    │   │   │   │   ├── udiff_test.go
    │   │   │   │   ├── util.go
    │   │   │   │   ├── util_test.go
    │   │   │   │   └── testdata/
    │   │   │   │       ├── TestDefault.after
    │   │   │   │       ├── TestDefault.before
    │   │   │   │       ├── TestLineBreakIssue.after
    │   │   │   │       ├── TestLineBreakIssue.before
    │   │   │   │       ├── TestMultipleHunks.after
    │   │   │   │       ├── TestMultipleHunks.before
    │   │   │   │       ├── TestNarrow.after
    │   │   │   │       ├── TestNarrow.before
    │   │   │   │       ├── TestTabs.after
    │   │   │   │       ├── TestTabs.before
    │   │   │   │       ├── TestDiffView/
    │   │   │   │       │   ├── Split/
    │   │   │   │       │   │   ├── CustomContextLines/
    │   │   │   │       │   │   │   ├── DarkMode.golden
    │   │   │   │       │   │   │   └── LightMode.golden
    │   │   │   │       │   │   ├── Default/
    │   │   │   │       │   │   │   ├── DarkMode.golden
    │   │   │   │       │   │   │   └── LightMode.golden
    │   │   │   │       │   │   ├── LargeWidth/
    │   │   │   │       │   │   │   ├── DarkMode.golden
    │   │   │   │       │   │   │   └── LightMode.golden
    │   │   │   │       │   │   ├── MultipleHunks/
    │   │   │   │       │   │   │   ├── DarkMode.golden
    │   │   │   │       │   │   │   └── LightMode.golden
    │   │   │   │       │   │   ├── Narrow/
    │   │   │   │       │   │   │   ├── DarkMode.golden
    │   │   │   │       │   │   │   └── LightMode.golden
    │   │   │   │       │   │   ├── NoLineNumbers/
    │   │   │   │       │   │   │   ├── DarkMode.golden
    │   │   │   │       │   │   │   └── LightMode.golden
    │   │   │   │       │   │   ├── NoSyntaxHighlight/
    │   │   │   │       │   │   │   ├── DarkMode.golden
    │   │   │   │       │   │   │   └── LightMode.golden
    │   │   │   │       │   │   └── SmallWidth/
    │   │   │   │       │   │       ├── DarkMode.golden
    │   │   │   │       │   │       └── LightMode.golden
    │   │   │   │       │   └── Unified/
    │   │   │   │       │       ├── CustomContextLines/
    │   │   │   │       │       │   ├── DarkMode.golden
    │   │   │   │       │       │   └── LightMode.golden
    │   │   │   │       │       ├── Default/
    │   │   │   │       │       │   ├── DarkMode.golden
    │   │   │   │       │       │   └── LightMode.golden
    │   │   │   │       │       ├── LargeWidth/
    │   │   │   │       │       │   ├── DarkMode.golden
    │   │   │   │       │       │   └── LightMode.golden
    │   │   │   │       │       ├── MultipleHunks/
    │   │   │   │       │       │   ├── DarkMode.golden
    │   │   │   │       │       │   └── LightMode.golden
    │   │   │   │       │       ├── Narrow/
    │   │   │   │       │       │   ├── DarkMode.golden
    │   │   │   │       │       │   └── LightMode.golden
    │   │   │   │       │       ├── NoLineNumbers/
    │   │   │   │       │       │   ├── DarkMode.golden
    │   │   │   │       │       │   └── LightMode.golden
    │   │   │   │       │       ├── NoSyntaxHighlight/
    │   │   │   │       │       │   ├── DarkMode.golden
    │   │   │   │       │       │   └── LightMode.golden
    │   │   │   │       │       └── SmallWidth/
    │   │   │   │       │           ├── DarkMode.golden
    │   │   │   │       │           └── LightMode.golden
    │   │   │   │       ├── TestDiffViewHeight/
    │   │   │   │       │   ├── Split/
    │   │   │   │       │   │   ├── HeightOf001.golden
    │   │   │   │       │   │   ├── HeightOf002.golden
    │   │   │   │       │   │   ├── HeightOf003.golden
    │   │   │   │       │   │   ├── HeightOf004.golden
    │   │   │   │       │   │   ├── HeightOf005.golden
    │   │   │   │       │   │   ├── HeightOf006.golden
    │   │   │   │       │   │   ├── HeightOf007.golden
    │   │   │   │       │   │   ├── HeightOf008.golden
    │   │   │   │       │   │   ├── HeightOf009.golden
    │   │   │   │       │   │   ├── HeightOf010.golden
    │   │   │   │       │   │   ├── HeightOf011.golden
    │   │   │   │       │   │   ├── HeightOf012.golden
    │   │   │   │       │   │   ├── HeightOf013.golden
    │   │   │   │       │   │   ├── HeightOf014.golden
    │   │   │   │       │   │   ├── HeightOf015.golden
    │   │   │   │       │   │   ├── HeightOf016.golden
    │   │   │   │       │   │   ├── HeightOf017.golden
    │   │   │   │       │   │   ├── HeightOf018.golden
    │   │   │   │       │   │   ├── HeightOf019.golden
    │   │   │   │       │   │   └── HeightOf020.golden
    │   │   │   │       │   └── Unified/
    │   │   │   │       │       ├── HeightOf001.golden
    │   │   │   │       │       ├── HeightOf002.golden
    │   │   │   │       │       ├── HeightOf003.golden
    │   │   │   │       │       ├── HeightOf004.golden
    │   │   │   │       │       ├── HeightOf005.golden
    │   │   │   │       │       ├── HeightOf006.golden
    │   │   │   │       │       ├── HeightOf007.golden
    │   │   │   │       │       ├── HeightOf008.golden
    │   │   │   │       │       ├── HeightOf009.golden
    │   │   │   │       │       ├── HeightOf010.golden
    │   │   │   │       │       ├── HeightOf011.golden
    │   │   │   │       │       ├── HeightOf012.golden
    │   │   │   │       │       ├── HeightOf013.golden
    │   │   │   │       │       ├── HeightOf014.golden
    │   │   │   │       │       ├── HeightOf015.golden
    │   │   │   │       │       ├── HeightOf016.golden
    │   │   │   │       │       ├── HeightOf017.golden
    │   │   │   │       │       ├── HeightOf018.golden
    │   │   │   │       │       ├── HeightOf019.golden
    │   │   │   │       │       └── HeightOf020.golden
    │   │   │   │       ├── TestDiffViewLineBreakIssue/
    │   │   │   │       │   ├── Split.golden
    │   │   │   │       │   └── Unified.golden
    │   │   │   │       ├── TestDiffViewTabs/
    │   │   │   │       │   ├── Split.golden
    │   │   │   │       │   └── Unified.golden
    │   │   │   │       ├── TestDiffViewWidth/
    │   │   │   │       │   ├── Split/
    │   │   │   │       │   │   ├── WidthOf001.golden
    │   │   │   │       │   │   ├── WidthOf002.golden
    │   │   │   │       │   │   ├── WidthOf003.golden
    │   │   │   │       │   │   ├── WidthOf004.golden
    │   │   │   │       │   │   ├── WidthOf005.golden
    │   │   │   │       │   │   ├── WidthOf006.golden
    │   │   │   │       │   │   ├── WidthOf007.golden
    │   │   │   │       │   │   ├── WidthOf008.golden
    │   │   │   │       │   │   ├── WidthOf009.golden
    │   │   │   │       │   │   ├── WidthOf010.golden
    │   │   │   │       │   │   ├── WidthOf011.golden
    │   │   │   │       │   │   ├── WidthOf012.golden
    │   │   │   │       │   │   ├── WidthOf013.golden
    │   │   │   │       │   │   ├── WidthOf014.golden
    │   │   │   │       │   │   ├── WidthOf015.golden
    │   │   │   │       │   │   ├── WidthOf016.golden
    │   │   │   │       │   │   ├── WidthOf017.golden
    │   │   │   │       │   │   ├── WidthOf018.golden
    │   │   │   │       │   │   ├── WidthOf019.golden
    │   │   │   │       │   │   ├── WidthOf020.golden
    │   │   │   │       │   │   ├── WidthOf021.golden
    │   │   │   │       │   │   ├── WidthOf022.golden
    │   │   │   │       │   │   ├── WidthOf023.golden
    │   │   │   │       │   │   ├── WidthOf024.golden
    │   │   │   │       │   │   ├── WidthOf025.golden
    │   │   │   │       │   │   ├── WidthOf026.golden
    │   │   │   │       │   │   ├── WidthOf027.golden
    │   │   │   │       │   │   ├── WidthOf028.golden
    │   │   │   │       │   │   ├── WidthOf029.golden
    │   │   │   │       │   │   ├── WidthOf030.golden
    │   │   │   │       │   │   ├── WidthOf031.golden
    │   │   │   │       │   │   ├── WidthOf032.golden
    │   │   │   │       │   │   ├── WidthOf033.golden
    │   │   │   │       │   │   ├── WidthOf034.golden
    │   │   │   │       │   │   ├── WidthOf035.golden
    │   │   │   │       │   │   ├── WidthOf036.golden
    │   │   │   │       │   │   ├── WidthOf037.golden
    │   │   │   │       │   │   ├── WidthOf038.golden
    │   │   │   │       │   │   ├── WidthOf039.golden
    │   │   │   │       │   │   ├── WidthOf040.golden
    │   │   │   │       │   │   ├── WidthOf041.golden
    │   │   │   │       │   │   ├── WidthOf042.golden
    │   │   │   │       │   │   ├── WidthOf043.golden
    │   │   │   │       │   │   ├── WidthOf044.golden
    │   │   │   │       │   │   ├── WidthOf045.golden
    │   │   │   │       │   │   ├── WidthOf046.golden
    │   │   │   │       │   │   ├── WidthOf047.golden
    │   │   │   │       │   │   ├── WidthOf048.golden
    │   │   │   │       │   │   ├── WidthOf049.golden
    │   │   │   │       │   │   ├── WidthOf050.golden
    │   │   │   │       │   │   ├── WidthOf051.golden
    │   │   │   │       │   │   ├── WidthOf052.golden
    │   │   │   │       │   │   ├── WidthOf053.golden
    │   │   │   │       │   │   ├── WidthOf054.golden
    │   │   │   │       │   │   ├── WidthOf055.golden
    │   │   │   │       │   │   ├── WidthOf056.golden
    │   │   │   │       │   │   ├── WidthOf057.golden
    │   │   │   │       │   │   ├── WidthOf058.golden
    │   │   │   │       │   │   ├── WidthOf059.golden
    │   │   │   │       │   │   ├── WidthOf060.golden
    │   │   │   │       │   │   ├── WidthOf061.golden
    │   │   │   │       │   │   ├── WidthOf062.golden
    │   │   │   │       │   │   ├── WidthOf063.golden
    │   │   │   │       │   │   ├── WidthOf064.golden
    │   │   │   │       │   │   ├── WidthOf065.golden
    │   │   │   │       │   │   ├── WidthOf066.golden
    │   │   │   │       │   │   ├── WidthOf067.golden
    │   │   │   │       │   │   ├── WidthOf068.golden
    │   │   │   │       │   │   ├── WidthOf069.golden
    │   │   │   │       │   │   ├── WidthOf070.golden
    │   │   │   │       │   │   ├── WidthOf071.golden
    │   │   │   │       │   │   ├── WidthOf072.golden
    │   │   │   │       │   │   ├── WidthOf073.golden
    │   │   │   │       │   │   ├── WidthOf074.golden
    │   │   │   │       │   │   ├── WidthOf075.golden
    │   │   │   │       │   │   ├── WidthOf076.golden
    │   │   │   │       │   │   ├── WidthOf077.golden
    │   │   │   │       │   │   ├── WidthOf078.golden
    │   │   │   │       │   │   ├── WidthOf079.golden
    │   │   │   │       │   │   ├── WidthOf080.golden
    │   │   │   │       │   │   ├── WidthOf081.golden
    │   │   │   │       │   │   ├── WidthOf082.golden
    │   │   │   │       │   │   ├── WidthOf083.golden
    │   │   │   │       │   │   ├── WidthOf084.golden
    │   │   │   │       │   │   ├── WidthOf085.golden
    │   │   │   │       │   │   ├── WidthOf086.golden
    │   │   │   │       │   │   ├── WidthOf087.golden
    │   │   │   │       │   │   ├── WidthOf088.golden
    │   │   │   │       │   │   ├── WidthOf089.golden
    │   │   │   │       │   │   ├── WidthOf090.golden
    │   │   │   │       │   │   ├── WidthOf091.golden
    │   │   │   │       │   │   ├── WidthOf092.golden
    │   │   │   │       │   │   ├── WidthOf093.golden
    │   │   │   │       │   │   ├── WidthOf094.golden
    │   │   │   │       │   │   ├── WidthOf095.golden
    │   │   │   │       │   │   ├── WidthOf096.golden
    │   │   │   │       │   │   ├── WidthOf097.golden
    │   │   │   │       │   │   ├── WidthOf098.golden
    │   │   │   │       │   │   ├── WidthOf099.golden
    │   │   │   │       │   │   ├── WidthOf100.golden
    │   │   │   │       │   │   ├── WidthOf101.golden
    │   │   │   │       │   │   ├── WidthOf102.golden
    │   │   │   │       │   │   ├── WidthOf103.golden
    │   │   │   │       │   │   ├── WidthOf104.golden
    │   │   │   │       │   │   ├── WidthOf105.golden
    │   │   │   │       │   │   ├── WidthOf106.golden
    │   │   │   │       │   │   ├── WidthOf107.golden
    │   │   │   │       │   │   ├── WidthOf108.golden
    │   │   │   │       │   │   ├── WidthOf109.golden
    │   │   │   │       │   │   └── WidthOf110.golden
    │   │   │   │       │   └── Unified/
    │   │   │   │       │       ├── WidthOf001.golden
    │   │   │   │       │       ├── WidthOf002.golden
    │   │   │   │       │       ├── WidthOf003.golden
    │   │   │   │       │       ├── WidthOf004.golden
    │   │   │   │       │       ├── WidthOf005.golden
    │   │   │   │       │       ├── WidthOf006.golden
    │   │   │   │       │       ├── WidthOf007.golden
    │   │   │   │       │       ├── WidthOf008.golden
    │   │   │   │       │       ├── WidthOf009.golden
    │   │   │   │       │       ├── WidthOf010.golden
    │   │   │   │       │       ├── WidthOf011.golden
    │   │   │   │       │       ├── WidthOf012.golden
    │   │   │   │       │       ├── WidthOf013.golden
    │   │   │   │       │       ├── WidthOf014.golden
    │   │   │   │       │       ├── WidthOf015.golden
    │   │   │   │       │       ├── WidthOf016.golden
    │   │   │   │       │       ├── WidthOf017.golden
    │   │   │   │       │       ├── WidthOf018.golden
    │   │   │   │       │       ├── WidthOf019.golden
    │   │   │   │       │       ├── WidthOf020.golden
    │   │   │   │       │       ├── WidthOf021.golden
    │   │   │   │       │       ├── WidthOf022.golden
    │   │   │   │       │       ├── WidthOf023.golden
    │   │   │   │       │       ├── WidthOf024.golden
    │   │   │   │       │       ├── WidthOf025.golden
    │   │   │   │       │       ├── WidthOf026.golden
    │   │   │   │       │       ├── WidthOf027.golden
    │   │   │   │       │       ├── WidthOf028.golden
    │   │   │   │       │       ├── WidthOf029.golden
    │   │   │   │       │       ├── WidthOf030.golden
    │   │   │   │       │       ├── WidthOf031.golden
    │   │   │   │       │       ├── WidthOf032.golden
    │   │   │   │       │       ├── WidthOf033.golden
    │   │   │   │       │       ├── WidthOf034.golden
    │   │   │   │       │       ├── WidthOf035.golden
    │   │   │   │       │       ├── WidthOf036.golden
    │   │   │   │       │       ├── WidthOf037.golden
    │   │   │   │       │       ├── WidthOf038.golden
    │   │   │   │       │       ├── WidthOf039.golden
    │   │   │   │       │       ├── WidthOf040.golden
    │   │   │   │       │       ├── WidthOf041.golden
    │   │   │   │       │       ├── WidthOf042.golden
    │   │   │   │       │       ├── WidthOf043.golden
    │   │   │   │       │       ├── WidthOf044.golden
    │   │   │   │       │       ├── WidthOf045.golden
    │   │   │   │       │       ├── WidthOf046.golden
    │   │   │   │       │       ├── WidthOf047.golden
    │   │   │   │       │       ├── WidthOf048.golden
    │   │   │   │       │       ├── WidthOf049.golden
    │   │   │   │       │       ├── WidthOf050.golden
    │   │   │   │       │       ├── WidthOf051.golden
    │   │   │   │       │       ├── WidthOf052.golden
    │   │   │   │       │       ├── WidthOf053.golden
    │   │   │   │       │       ├── WidthOf054.golden
    │   │   │   │       │       ├── WidthOf055.golden
    │   │   │   │       │       ├── WidthOf056.golden
    │   │   │   │       │       ├── WidthOf057.golden
    │   │   │   │       │       ├── WidthOf058.golden
    │   │   │   │       │       ├── WidthOf059.golden
    │   │   │   │       │       └── WidthOf060.golden
    │   │   │   │       ├── TestDiffViewXOffset/
    │   │   │   │       │   ├── Split/
    │   │   │   │       │   │   ├── XOffsetOf00.golden
    │   │   │   │       │   │   ├── XOffsetOf01.golden
    │   │   │   │       │   │   ├── XOffsetOf02.golden
    │   │   │   │       │   │   ├── XOffsetOf03.golden
    │   │   │   │       │   │   ├── XOffsetOf04.golden
    │   │   │   │       │   │   ├── XOffsetOf05.golden
    │   │   │   │       │   │   ├── XOffsetOf06.golden
    │   │   │   │       │   │   ├── XOffsetOf07.golden
    │   │   │   │       │   │   ├── XOffsetOf08.golden
    │   │   │   │       │   │   ├── XOffsetOf09.golden
    │   │   │   │       │   │   ├── XOffsetOf10.golden
    │   │   │   │       │   │   ├── XOffsetOf11.golden
    │   │   │   │       │   │   ├── XOffsetOf12.golden
    │   │   │   │       │   │   ├── XOffsetOf13.golden
    │   │   │   │       │   │   ├── XOffsetOf14.golden
    │   │   │   │       │   │   ├── XOffsetOf15.golden
    │   │   │   │       │   │   ├── XOffsetOf16.golden
    │   │   │   │       │   │   ├── XOffsetOf17.golden
    │   │   │   │       │   │   ├── XOffsetOf18.golden
    │   │   │   │       │   │   ├── XOffsetOf19.golden
    │   │   │   │       │   │   └── XOffsetOf20.golden
    │   │   │   │       │   └── Unified/
    │   │   │   │       │       ├── XOffsetOf00.golden
    │   │   │   │       │       ├── XOffsetOf01.golden
    │   │   │   │       │       ├── XOffsetOf02.golden
    │   │   │   │       │       ├── XOffsetOf03.golden
    │   │   │   │       │       ├── XOffsetOf04.golden
    │   │   │   │       │       ├── XOffsetOf05.golden
    │   │   │   │       │       ├── XOffsetOf06.golden
    │   │   │   │       │       ├── XOffsetOf07.golden
    │   │   │   │       │       ├── XOffsetOf08.golden
    │   │   │   │       │       ├── XOffsetOf09.golden
    │   │   │   │       │       ├── XOffsetOf10.golden
    │   │   │   │       │       ├── XOffsetOf11.golden
    │   │   │   │       │       ├── XOffsetOf12.golden
    │   │   │   │       │       ├── XOffsetOf13.golden
    │   │   │   │       │       ├── XOffsetOf14.golden
    │   │   │   │       │       ├── XOffsetOf15.golden
    │   │   │   │       │       ├── XOffsetOf16.golden
    │   │   │   │       │       ├── XOffsetOf17.golden
    │   │   │   │       │       ├── XOffsetOf18.golden
    │   │   │   │       │       ├── XOffsetOf19.golden
    │   │   │   │       │       └── XOffsetOf20.golden
    │   │   │   │       ├── TestDiffViewYOffset/
    │   │   │   │       │   ├── Split/
    │   │   │   │       │   │   ├── YOffsetOf00.golden
    │   │   │   │       │   │   ├── YOffsetOf01.golden
    │   │   │   │       │   │   ├── YOffsetOf02.golden
    │   │   │   │       │   │   ├── YOffsetOf03.golden
    │   │   │   │       │   │   ├── YOffsetOf04.golden
    │   │   │   │       │   │   ├── YOffsetOf05.golden
    │   │   │   │       │   │   ├── YOffsetOf06.golden
    │   │   │   │       │   │   ├── YOffsetOf07.golden
    │   │   │   │       │   │   ├── YOffsetOf08.golden
    │   │   │   │       │   │   ├── YOffsetOf09.golden
    │   │   │   │       │   │   ├── YOffsetOf10.golden
    │   │   │   │       │   │   ├── YOffsetOf11.golden
    │   │   │   │       │   │   ├── YOffsetOf12.golden
    │   │   │   │       │   │   ├── YOffsetOf13.golden
    │   │   │   │       │   │   ├── YOffsetOf14.golden
    │   │   │   │       │   │   ├── YOffsetOf15.golden
    │   │   │   │       │   │   └── YOffsetOf16.golden
    │   │   │   │       │   └── Unified/
    │   │   │   │       │       ├── YOffsetOf00.golden
    │   │   │   │       │       ├── YOffsetOf01.golden
    │   │   │   │       │       ├── YOffsetOf02.golden
    │   │   │   │       │       ├── YOffsetOf03.golden
    │   │   │   │       │       ├── YOffsetOf04.golden
    │   │   │   │       │       ├── YOffsetOf05.golden
    │   │   │   │       │       ├── YOffsetOf06.golden
    │   │   │   │       │       ├── YOffsetOf07.golden
    │   │   │   │       │       ├── YOffsetOf08.golden
    │   │   │   │       │       ├── YOffsetOf09.golden
    │   │   │   │       │       ├── YOffsetOf10.golden
    │   │   │   │       │       ├── YOffsetOf11.golden
    │   │   │   │       │       ├── YOffsetOf12.golden
    │   │   │   │       │       ├── YOffsetOf13.golden
    │   │   │   │       │       ├── YOffsetOf14.golden
    │   │   │   │       │       ├── YOffsetOf15.golden
    │   │   │   │       │       └── YOffsetOf16.golden
    │   │   │   │       ├── TestDiffViewYOffsetInfinite/
    │   │   │   │       │   ├── Split/
    │   │   │   │       │   │   ├── YOffsetOf00.golden
    │   │   │   │       │   │   ├── YOffsetOf01.golden
    │   │   │   │       │   │   ├── YOffsetOf02.golden
    │   │   │   │       │   │   ├── YOffsetOf03.golden
    │   │   │   │       │   │   ├── YOffsetOf04.golden
    │   │   │   │       │   │   ├── YOffsetOf05.golden
    │   │   │   │       │   │   ├── YOffsetOf06.golden
    │   │   │   │       │   │   ├── YOffsetOf07.golden
    │   │   │   │       │   │   ├── YOffsetOf08.golden
    │   │   │   │       │   │   ├── YOffsetOf09.golden
    │   │   │   │       │   │   ├── YOffsetOf10.golden
    │   │   │   │       │   │   ├── YOffsetOf11.golden
    │   │   │   │       │   │   ├── YOffsetOf12.golden
    │   │   │   │       │   │   ├── YOffsetOf13.golden
    │   │   │   │       │   │   ├── YOffsetOf14.golden
    │   │   │   │       │   │   ├── YOffsetOf15.golden
    │   │   │   │       │   │   └── YOffsetOf16.golden
    │   │   │   │       │   └── Unified/
    │   │   │   │       │       ├── YOffsetOf00.golden
    │   │   │   │       │       ├── YOffsetOf01.golden
    │   │   │   │       │       ├── YOffsetOf02.golden
    │   │   │   │       │       ├── YOffsetOf03.golden
    │   │   │   │       │       ├── YOffsetOf04.golden
    │   │   │   │       │       ├── YOffsetOf05.golden
    │   │   │   │       │       ├── YOffsetOf06.golden
    │   │   │   │       │       ├── YOffsetOf07.golden
    │   │   │   │       │       ├── YOffsetOf08.golden
    │   │   │   │       │       ├── YOffsetOf09.golden
    │   │   │   │       │       ├── YOffsetOf10.golden
    │   │   │   │       │       ├── YOffsetOf11.golden
    │   │   │   │       │       ├── YOffsetOf12.golden
    │   │   │   │       │       ├── YOffsetOf13.golden
    │   │   │   │       │       ├── YOffsetOf14.golden
    │   │   │   │       │       ├── YOffsetOf15.golden
    │   │   │   │       │       └── YOffsetOf16.golden
    │   │   │   │       └── TestUdiff/
    │   │   │   │           ├── Unified.golden
    │   │   │   │           └── ToUnifiedDiff/
    │   │   │   │               ├── DefaultContextLines/
    │   │   │   │               │   ├── Content.golden
    │   │   │   │               │   └── JSON.golden
    │   │   │   │               ├── DefaultContextLinesPlusOne/
    │   │   │   │               │   ├── Content.golden
    │   │   │   │               │   └── JSON.golden
    │   │   │   │               └── DefaultContextLinesPlusTwo/
    │   │   │   │                   ├── Content.golden
    │   │   │   │                   └── JSON.golden
    │   │   │   └── list/
    │   │   │       ├── filterable.go
    │   │   │       ├── filterable_group.go
    │   │   │       ├── filterable_test.go
    │   │   │       ├── grouped.go
    │   │   │       ├── items.go
    │   │   │       ├── keys.go
    │   │   │       ├── list.go
    │   │   │       ├── list_test.go
    │   │   │       └── testdata/
    │   │   │           ├── TestFilterableList/
    │   │   │           │   └── should_create_simple_filterable_list.golden
    │   │   │           ├── TestList/
    │   │   │           │   ├── should_go_to_selected_item_at_the_beginning.golden
    │   │   │           │   ├── should_go_to_selected_item_at_the_beginning_backwards.golden
    │   │   │           │   ├── should_have_correct_positions_in_list_that_does_not_fits_the_items.golden
    │   │   │           │   ├── should_have_correct_positions_in_list_that_does_not_fits_the_items_and_has_multi_line_items.golden
    │   │   │           │   ├── should_have_correct_positions_in_list_that_does_not_fits_the_items_and_has_multi_line_items_backwards.golden
    │   │   │           │   ├── should_have_correct_positions_in_list_that_does_not_fits_the_items_backwards.golden
    │   │   │           │   ├── should_have_correct_positions_in_list_that_fits_the_items.golden
    │   │   │           │   └── should_have_correct_positions_in_list_that_fits_the_items_backwards.golden
    │   │   │           └── TestListMovement/
    │   │   │               ├── should_move_viewport_down.golden
    │   │   │               ├── should_move_viewport_down_and_up.golden
    │   │   │               ├── should_move_viewport_up.golden
    │   │   │               ├── should_move_viewport_up_and_down.golden
    │   │   │               ├── should_not_change_offset_when_new_items_are_appended_and_we_are_at_the_bottom_in_backwards_list.golden
    │   │   │               ├── should_not_change_offset_when_new_items_are_prepended_and_we_are_at_the_top_in_forward_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_if_an_item_is_appended_and_we_are_in_forward_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_if_an_item_is_prepended_and_we_are_in_backwards_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_when_new_items_are_added_but_we_moved_down_in_forward_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_when_new_items_are_added_but_we_moved_up_in_backwards_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_when_the_hight_of_an_item_above_is_decreases_in_forward_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_when_the_hight_of_an_item_above_is_increased_in_backwards_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_when_the_hight_of_an_item_above_is_increased_in_forward_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_when_the_hight_of_an_item_below_is_decreases_in_backwards_list.golden
    │   │   │               ├── should_stay_at_the_position_it_is_when_the_hight_of_an_item_below_is_increased_in_backwards_list.golden
    │   │   │               └── should_stay_at_the_position_it_is_when_the_hight_of_an_item_below_is_increased_in_forward_list.golden
    │   │   ├── highlight/
    │   │   │   └── highlight.go
    │   │   ├── page/
    │   │   │   ├── page.go
    │   │   │   └── chat/
    │   │   │       ├── chat.go
    │   │   │       └── keys.go
    │   │   ├── styles/
    │   │   │   ├── charmtone.go
    │   │   │   ├── chroma.go
    │   │   │   ├── icons.go
    │   │   │   ├── markdown.go
    │   │   │   └── theme.go
    │   │   └── util/
    │   │       └── util.go
    │   └── version/
    │       └── version.go
    ├── scripts/
    │   └── run-issue-labeler.sh
    └── .github/
        ├── cla-signatures.json
        ├── CODEOWNERS
        ├── dependabot.yml
        ├── entitlements.plist
        ├── labeler.yml
        └── workflows/
            ├── build.yml
            ├── cla.yml
            ├── issue-labeler.yml
            ├── lint-sync.yml
            ├── lint.yml
            ├── nightly.yml
            ├── release.yml
            └── schema-update.yml

================================================
FILE: README.md
================================================
# Crush

<p align="center">
    <a href="https://stuff.charm.sh/crush/charm-crush.png"><img width="450" alt="Charm Crush Logo" src="https://github.com/user-attachments/assets/adc1a6f4-b284-4603-836c-59038caa2e8b" /></a><br />
    <a href="https://github.com/charmbracelet/crush/releases"><img src="https://img.shields.io/github/release/charmbracelet/crush" alt="Latest Release"></a>
    <a href="https://github.com/charmbracelet/crush/actions"><img src="https://github.com/charmbracelet/crush/workflows/build/badge.svg" alt="Build Status"></a>
</p>

<p align="center">Your new coding bestie, now available in your favourite terminal.<br />Your tools, your code, and your workflows, wired into your LLM of choice.</p>

<p align="center"><img width="800" alt="Crush Demo" src="https://github.com/user-attachments/assets/58280caf-851b-470a-b6f7-d5c4ea8a1968" /></p>

## Features

- **Multi-Model:** choose from a wide range of LLMs or add your own via OpenAI- or Anthropic-compatible APIs
- **Flexible:** switch LLMs mid-session while preserving context
- **Session-Based:** maintain multiple work sessions and contexts per project
- **LSP-Enhanced:** Crush uses LSPs for additional context, just like you do
- **Extensible:** add capabilities via MCPs (`http`, `stdio`, and `sse`)
- **Works Everywhere:** first-class support in every terminal on macOS, Linux, Windows (PowerShell and WSL), FreeBSD, OpenBSD, and NetBSD

## Installation

Use a package manager:

```bash
# Homebrew
brew install charmbracelet/tap/crush

# NPM
npm install -g @charmland/crush

# Arch Linux (btw)
yay -S crush-bin

# Nix
nix run github:numtide/nix-ai-tools#crush
```

Windows users:

```bash
# Winget
winget install charmbracelet.crush

# Scoop
scoop bucket add charm https://github.com/charmbracelet/scoop-bucket.git
scoop install crush
```

<details>
<summary><strong>Nix (NUR)</strong></summary>

Crush is available via [NUR](https://github.com/nix-community/NUR) in `nur.repos.charmbracelet.crush`.

You can also try out Crush via `nix-shell`:

```bash
# Add the NUR channel.
nix-channel --add https://github.com/nix-community/NUR/archive/main.tar.gz nur
nix-channel --update

# Get Crush in a Nix shell.
nix-shell -p '(import <nur> { pkgs = import <nixpkgs> {}; }).repos.charmbracelet.crush'
```

</details>

<details>
<summary><strong>Debian/Ubuntu</strong></summary>

```bash
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
sudo apt update && sudo apt install crush
```

</details>

<details>
<summary><strong>Fedora/RHEL</strong></summary>

```bash
echo '[charm]
name=Charm
baseurl=https://repo.charm.sh/yum/
enabled=1
gpgcheck=1
gpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo
sudo yum install crush
```

</details>

Or, download it:

- [Packages][releases] are available in Debian and RPM formats
- [Binaries][releases] are available for Linux, macOS, Windows, FreeBSD, OpenBSD, and NetBSD

[releases]: https://github.com/charmbracelet/crush/releases

Or just install it with Go:

```
go install github.com/charmbracelet/crush@latest
```

> [!WARNING]
> Productivity may increase when using Crush and you may find yourself nerd
> sniped when first using the application. If the symptoms persist, join the
> [Discord][discord] and nerd snipe the rest of us.

## Getting Started

The quickest way to get started is to grab an API key for your preferred
provider such as Anthropic, OpenAI, Groq, or OpenRouter and just start
Crush. You'll be prompted to enter your API key.

That said, you can also set environment variables for preferred providers.

| Environment Variable       | Provider                                           |
| -------------------------- | -------------------------------------------------- |
| `ANTHROPIC_API_KEY`        | Anthropic                                          |
| `OPENAI_API_KEY`           | OpenAI                                             |
| `OPENROUTER_API_KEY`       | OpenRouter                                         |
| `GEMINI_API_KEY`           | Google Gemini                                      |
| `VERTEXAI_PROJECT`         | Google Cloud VertexAI (Gemini)                     |
| `VERTEXAI_LOCATION`        | Google Cloud VertexAI (Gemini)                     |
| `GROQ_API_KEY`             | Groq                                               |
| `AWS_ACCESS_KEY_ID`        | AWS Bedrock (Claude)                               |
| `AWS_SECRET_ACCESS_KEY`    | AWS Bedrock (Claude)                               |
| `AWS_REGION`               | AWS Bedrock (Claude)                               |
| `AZURE_OPENAI_ENDPOINT`    | Azure OpenAI models                                |
| `AZURE_OPENAI_API_KEY`     | Azure OpenAI models (optional when using Entra ID) |
| `AZURE_OPENAI_API_VERSION` | Azure OpenAI models                                |

### By the Way

Is there a provider you’d like to see in Crush? Is there an existing model that needs an update?

Crush’s default model listing is managed in [Catwalk](https://github.com/charmbracelet/catwalk), an community-supported, open source repository of Crush-compatible models, and you’re welcome to contribute.

<a href="https://github.com/charmbracelet/catwalk"><img width="174" height="174" alt="Catwalk Badge" src="https://github.com/user-attachments/assets/95b49515-fe82-4409-b10d-5beb0873787d" /></a>

## Configuration

Crush runs great with no configuration. That said, if you do need or want to
customize Crush, configuration can be added either local to the project itself,
or globally, with the following priority:

1. `.crush.json`
2. `crush.json`
3. `$HOME/.config/crush/crush.json` (Windows: `%USERPROFILE%\AppData\Local\crush\crush.json`)

Configuration itself is stored as a JSON object:

```json
{
   "this-setting": {"this": "that"},
   "that-setting": ["ceci", "cela"]
}
```

As an additional note, Crush also stores ephemeral data, such as application state, in one additional location:

```bash
# Unix
$HOME/.local/share/crush/crush.json

# Windows
%LOCALAPPDATA%\crush\crush.json
```

### LSPs

Crush can use LSPs for additional context to help inform its decisions, just
like you would. LSPs can be added manually like so:

```json
{
  "$schema": "https://charm.land/crush.json",
  "lsp": {
    "go": {
      "command": "gopls",
      "env": {
        "GOTOOLCHAIN": "go1.24.5"
      }
    },
    "typescript": {
      "command": "typescript-language-server",
      "args": ["--stdio"]
    },
    "nix": {
      "command": "nil"
    }
  }
}
```

### MCPs

Crush also supports Model Context Protocol (MCP) servers through three
transport types: `stdio` for command-line servers, `http` for HTTP endpoints,
and `sse` for Server-Sent Events. Environment variable expansion is supported
using `$(echo $VAR)` syntax.

```json
{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "filesystem": {
      "type": "stdio",
      "command": "node",
      "args": ["/path/to/mcp-server.js"],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "github": {
      "type": "http",
      "url": "https://example.com/mcp/",
      "headers": {
        "Authorization": "$(echo Bearer $EXAMPLE_MCP_TOKEN)"
      }
    },
    "streaming-service": {
      "type": "sse",
      "url": "https://example.com/mcp/sse",
      "headers": {
        "API-Key": "$(echo $API_KEY)"
      }
    }
  }
}
```

### Ignoring Files

Crush respects `.gitignore` files by default, but you can also create a
`.crushignore` file to specify additional files and directories that Crush
should ignore. This is useful for excluding files that you want in version
control but don't want Crush to consider when providing context.

The `.crushignore` file uses the same syntax as `.gitignore` and can be placed
in the root of your project or in subdirectories.

### Allowing Tools

By default, Crush will ask you for permission before running tool calls. If
you'd like, you can allow tools to be executed without prompting you for
permissions. Use this with care.

```json
{
  "$schema": "https://charm.land/crush.json",
  "permissions": {
    "allowed_tools": [
      "view",
      "ls",
      "grep",
      "edit",
      "mcp_context7_get-library-doc"
    ]
  }
}
```

You can also skip all permission prompts entirely by running Crush with the
`--yolo` flag. Be very, very careful with this feature.

### Local Models

Local models can also be configured via OpenAI-compatible API. Here are two common examples:

#### Ollama

```json
{
  "providers": {
    "ollama": {
      "name": "Ollama",
      "base_url": "http://localhost:11434/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen3:30b",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
```

#### LM Studio

```json
{
  "providers": {
    "lmstudio": {
      "name": "LM Studio",
      "base_url": "http://localhost:1234/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen/qwen3-30b-a3b-2507",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
```

### Custom Providers

Crush supports custom provider configurations for both OpenAI-compatible and
Anthropic-compatible APIs.

#### OpenAI-Compatible APIs

Here’s an example configuration for Deepseek, which uses an OpenAI-compatible
API. Don't forget to set `DEEPSEEK_API_KEY` in your environment.

```json
{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "deepseek": {
      "type": "openai",
      "base_url": "https://api.deepseek.com/v1",
      "api_key": "$DEEPSEEK_API_KEY",
      "models": [
        {
          "id": "deepseek-chat",
          "name": "Deepseek V3",
          "cost_per_1m_in": 0.27,
          "cost_per_1m_out": 1.1,
          "cost_per_1m_in_cached": 0.07,
          "cost_per_1m_out_cached": 1.1,
          "context_window": 64000,
          "default_max_tokens": 5000
        }
      ]
    }
  }
}
```

#### Anthropic-Compatible APIs

Custom Anthropic-compatible providers follow this format:

```json
{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "custom-anthropic": {
      "type": "anthropic",
      "base_url": "https://api.anthropic.com/v1",
      "api_key": "$ANTHROPIC_API_KEY",
      "extra_headers": {
        "anthropic-version": "2023-06-01"
      },
      "models": [
        {
          "id": "claude-sonnet-4-20250514",
          "name": "Claude Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
```

### Amazon Bedrock

Crush currently supports running Anthropic models through Bedrock, with caching disabled.

* A Bedrock provider will appear once you have AWS configured, i.e. `aws configure`
* Crush also expects the `AWS_REGION` or `AWS_DEFAULT_REGION` to be set
* To use a specific AWS profile set `AWS_PROFILE` in your environment, i.e. `AWS_PROFILE=myprofile crush`

### Vertex AI Platform

Vertex AI will appear in the list of available providers when `VERTEXAI_PROJECT` and `VERTEXAI_LOCATION` are set. You will also need to be authenticated:

```bash
gcloud auth application-default login
```

To add specific models to the configuration, configure as such:

```json
{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "vertexai": {
      "models": [
        {
          "id": "claude-sonnet-4@20250514",
          "name": "VertexAI Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
```

## A Note on Claude Max and GitHub Copilot

Crush only supports model providers through official, compliant APIs. We do not
support or endorse any methods that rely on personal Claude Max and GitHub Copilot
accounts or OAuth workarounds, which may violate Anthropic and Microsoft’s
Terms of Service.

We’re committed to building sustainable, trusted integrations with model
providers. If you’re a provider interested in working with us,
[reach out](mailto:vt100@charm.sh).

## Logging

Sometimes you need to look at logs. Luckily, Crush logs all sorts of
stuff. Logs are stored in `./.crush/logs/crush.log` relative to the project.

The CLI also contains some helper commands to make perusing recent logs easier:

```bash
# Print the last 1000 lines
crush logs

# Print the last 500 lines
crush logs --tail 500

# Follow logs in real time
crush logs --follow
```

Want more logging? Run `crush` with the `--debug` flag, or enable it in the
config:

```json
{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "debug": true,
    "debug_lsp": true
  }
}
```

## Whatcha think?

We’d love to hear your thoughts on this project. Need help? We gotchu. You can find us on:

- [Twitter](https://twitter.com/charmcli)
- [Discord][discord]
- [Slack](https://charm.land/slack)
- [The Fediverse](https://mastodon.social/@charmcli)

[discord]: https://charm.land/discord

## License

[FSL-1.1-MIT](https://github.com/charmbracelet/crush/raw/main/LICENSE.md)

---

Part of [Charm](https://charm.land).

<a href="https://charm.land/"><img alt="The Charm logo" width="400" src="https://stuff.charm.sh/charm-banner-next.jpg" /></a>

<!--prettier-ignore-->
Charm热爱开源 • Charm loves open source



================================================
FILE: CLA.md
================================================
# Contributor License Agreement

Thank you for your interest in the open source project(s) managed by Charmbracelet, Inc. ("Company"). In order to clarify the intellectual property license granted with Contributions from any person or entity, Company must have a Contributor License Agreement ("CLA") on file that has been signed by each contributor, indicating agreement to the license terms below. This license is for your protection as a contributor as well as the protection of Company and its other contributors and users; it does not change your rights to use your own Contributions for any other purpose.
By submitting a contribution to this repository (e.g. opening a pull request) or otherwise agreeing in writing, You accept and agree to these terms and conditions for Your present and future Contributions submitted to Company. In return, Company shall consider Your Contributions for addition to the official Company open source project(s) for which they were submitted. Except for the license granted herein to Company and recipients of software distributed by Company, You reserve all right, title, and interest in and to Your Contributions.

1. Definitions.
   - "You" (or "Your") shall mean the copyright owner or legal entity authorized by the copyright owner that is entering into this CLA with Company. For legal entities, the entity making a Contribution and all other entities that control, are controlled by, or are under common control with that entity are considered to be a single Contributor. For the purposes of this definition, "control" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.
   - "Contribution" shall mean any code, documentation or other original works of authorship, including any modifications or additions to an existing work, that are intentionally submitted by You to Company for inclusion in, or documentation of, any of the products owned or managed by Company (the "Work"). For the purposes of this definition, "submitted" means any form of electronic, verbal, or written communication sent to Company or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, Company for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by You as "Not a Contribution."
2. Grant of Copyright License. Subject to the terms and conditions of this CLA, You hereby grant to Company and to recipients of software distributed by Company a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute Your Contributions and such derivative works.
3. Grant of Patent License. Subject to the terms and conditions of this CLA, You hereby grant to Company and to recipients of software distributed by Company a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by You that are necessarily infringed by Your Contribution(s) alone or by combination of Your Contribution(s) with the Work to which such Contribution(s) were submitted. If any entity institutes patent litigation against You or any other entity (including a cross-claim or counterclaim in a lawsuit) alleging that Your Contribution, or the Work to which You have contributed, constitutes direct or contributory patent infringement, then any patent licenses granted to that entity under this CLA for that Contribution or Work shall terminate as of the date such litigation is filed.
4. You represent and warrant that You are legally entitled to grant the above license. If You are an individual and Your employer(s) has rights to intellectual property that You create that includes Your Contributions, You represent that You have received permission to make Contributions on behalf of that employer, that Your employer has waived such rights for Your Contributions to Company, or that Your employer has entered into a separate CLA with Company covering Your Contributions. If You are a company, You represent further that each employee making a Contribution to Company under the company’s name is authorized to submit Contributions on behalf of the company.
5. You represent and warrant that each of Your Contributions is Your original creation (see section 7 for submissions on behalf of others). You represent and warrant that, to Your knowledge, none of Your Contributions infringe, violate, or misappropriate any third party intellectual property or other proprietary rights.
6. You are not expected to provide support for Your Contributions, except to the extent You desire to provide support. You may provide support for free, for a fee, or not at all. Unless required by applicable law or agreed to in writing, except for the warranties set forth above, You provide Your Contributions on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
7. Should You wish to submit work that is not Your original creation, You may submit it to Company separately from any Contribution, identifying the complete details of its source and of any license or other restriction (including, but not limited to, related patents, trademarks, and license agreements) of which You are personally aware, and conspicuously marking the work as "Submitted on behalf of a third-party: [named here]".
8. You agree to notify Company of any facts or circumstances of which You become aware that would make the above representations and warranties inaccurate in any respect.
9. If You are entering into this CLA as a company, You represent and warrant that the individual accepting this CLA is duly authorized to enter into this CLA on the company’s behalf.

For any copyright notices or other communications, please contact us at [vt100@charm.land](mailto:vt100@charm.land).



================================================
FILE: crush.json
================================================
{
  "$schema": "https://charm.land/crush.json",
  "lsp": {
    "Go": {
      "command": "gopls"
    }
  }
}



================================================
FILE: CRUSH.md
================================================
# Crush Development Guide

## Build/Test/Lint Commands

- **Build**: `go build .` or `go run .`
- **Test**: `task test` or `go test ./...` (run single test: `go test ./internal/llm/prompt -run TestGetContextFromPaths`)
- **Update Golden Files**: `go test ./... -update` (regenerates .golden files when test output changes)
  - Update specific package: `go test ./internal/tui/components/core -update` (in this case, we're updating "core")
- **Lint**: `task lint-fix`
- **Format**: `task fmt` (gofumpt -w .)
- **Dev**: `task dev` (runs with profiling enabled)

## Code Style Guidelines

- **Imports**: Use goimports formatting, group stdlib, external, internal packages
- **Formatting**: Use gofumpt (stricter than gofmt), enabled in golangci-lint
- **Naming**: Standard Go conventions - PascalCase for exported, camelCase for unexported
- **Types**: Prefer explicit types, use type aliases for clarity (e.g., `type AgentName string`)
- **Error handling**: Return errors explicitly, use `fmt.Errorf` for wrapping
- **Context**: Always pass context.Context as first parameter for operations
- **Interfaces**: Define interfaces in consuming packages, keep them small and focused
- **Structs**: Use struct embedding for composition, group related fields
- **Constants**: Use typed constants with iota for enums, group in const blocks
- **Testing**: Use testify's `require` package, parallel tests with `t.Parallel()`,
  `t.SetEnv()` to set environment variables. Always use `t.Tempdir()` when in
  need of a temporary directory. This directory does not need to be removed.
- **JSON tags**: Use snake_case for JSON field names
- **File permissions**: Use octal notation (0o755, 0o644) for file permissions
- **Comments**: End comments in periods unless comments are at the end of the line.

## Testing with Mock Providers

When writing tests that involve provider configurations, use the mock providers to avoid API calls:

```go
func TestYourFunction(t *testing.T) {
    // Enable mock providers for testing
    originalUseMock := config.UseMockProviders
    config.UseMockProviders = true
    defer func() {
        config.UseMockProviders = originalUseMock
        config.ResetProviders()
    }()

    // Reset providers to ensure fresh mock data
    config.ResetProviders()

    // Your test code here - providers will now return mock data
    providers := config.Providers()
    // ... test logic
}
```

## Formatting

- ALWAYS format any Go code you write.
  - First, try `goftumpt -w .`.
  - If `gofumpt` is not available, use `goimports`.
  - If `goimports` is not available, use `gofmt`.
  - You can also use `task fmt` to run `gofumpt -w .` on the entire project,
    as long as `gofumpt` is on the `PATH`.



================================================
FILE: cspell.json
================================================
{"flagWords":[],"version":"0.2","language":"en","words":["afero","agentic","alecthomas","anthropics","aymanbagabas","azidentity","bmatcuk","bubbletea","charlievieth","charmbracelet","charmtone","Charple","chkconfig","crush","curlie","cursorrules","diffview","doas","Dockerfiles","doublestar","dpkg","Emph","fastwalk","fdisk","filepicker","Focusable","fseventsd","fsext","genai","goquery","GROQ","Guac","imageorient","Inex","jetta","jsons","jsonschema","jspm","Kaufmann","killall","Lanczos","lipgloss","LOCALAPPDATA","lsps","lucasb","makepkg","mcps","MSYS","mvdan","natefinch","nfnt","noctx","nohup","nolint","nslookup","oksvg","Oneshot","openrouter","opkg","pacman","paru","pfctl","postamble","postambles","preconfigured","Preproc","Proactiveness","Puerkito","pycache","pytest","qjebbs","rasterx","rivo","sabhiram","sess","shortlog","sjson","Sourcegraph","srwiley","SSEMCP","Streamable","stretchr","Strikethrough","substrs","Suscriber","systeminfo","tasklist","termenv","textinput","tidwall","timedout","trashhalo","udiff","uniseg","Unticked","urllib","USERPROFILE","VERTEXAI","webp","whatis","whereis","sahilm","csync"]}


================================================
FILE: go.mod
================================================
module github.com/charmbracelet/crush

go 1.25.0

require (
	github.com/JohannesKaufmann/html-to-markdown v1.6.0
	github.com/MakeNowJust/heredoc v1.0.0
	github.com/PuerkitoBio/goquery v1.10.3
	github.com/alecthomas/chroma/v2 v2.20.0
	github.com/anthropics/anthropic-sdk-go v1.6.2
	github.com/atotto/clipboard v0.1.4
	github.com/aymanbagabas/go-udiff v0.3.1
	github.com/bmatcuk/doublestar/v4 v4.9.1
	github.com/charlievieth/fastwalk v1.0.12
	github.com/charmbracelet/bubbles/v2 v2.0.0-beta.1.0.20250820203609-601216f68ee2
	github.com/charmbracelet/bubbletea/v2 v2.0.0-beta.4.0.20250813213544-5cc219db8892
	github.com/charmbracelet/catwalk v0.4.12
	github.com/charmbracelet/fang v0.3.1-0.20250711140230-d5ebb8c1d674
	github.com/charmbracelet/glamour/v2 v2.0.0-20250811143442-a27abb32f018
	github.com/charmbracelet/lipgloss/v2 v2.0.0-beta.3.0.20250721205738-ea66aa652ee0
	github.com/charmbracelet/log/v2 v2.0.0-20250226163916-c379e29ff706
	github.com/charmbracelet/x/ansi v0.10.1
	github.com/charmbracelet/x/exp/charmtone v0.0.0-20250708181618-a60a724ba6c3
	github.com/charmbracelet/x/exp/golden v0.0.0-20250207160936-21c02780d27a
	github.com/disintegration/imageorient v0.0.0-20180920195336-8147d86e83ec
	github.com/fsnotify/fsnotify v1.9.0
	github.com/google/uuid v1.6.0
	github.com/invopop/jsonschema v0.13.0
	github.com/joho/godotenv v1.5.1
	github.com/mark3labs/mcp-go v0.37.0
	github.com/muesli/termenv v0.16.0
	github.com/ncruces/go-sqlite3 v0.27.1
	github.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646
	github.com/nxadm/tail v1.4.11
	github.com/openai/openai-go v1.12.0
	github.com/pressly/goose/v3 v3.24.3
	github.com/qjebbs/go-jsons v0.0.0-20221222033332-a534c5fc1c4c
	github.com/sabhiram/go-gitignore v0.0.0-20210923224102-525f6e181f06
	github.com/sahilm/fuzzy v0.1.1
	github.com/spf13/cobra v1.9.1
	github.com/srwiley/oksvg v0.0.0-20221011165216-be6e8873101c
	github.com/srwiley/rasterx v0.0.0-20220730225603-2ab79fcdd4ef
	github.com/stretchr/testify v1.10.0
	github.com/tidwall/sjson v1.2.5
	github.com/zeebo/xxh3 v1.0.2
	gopkg.in/natefinch/lumberjack.v2 v2.2.1
	mvdan.cc/sh/v3 v3.12.1-0.20250726150758-e256f53bade8
)

require (
	cloud.google.com/go v0.116.0 // indirect
	cloud.google.com/go/auth v0.13.0 // indirect
	cloud.google.com/go/auth/oauth2adapt v0.2.6 // indirect
	cloud.google.com/go/compute/metadata v0.6.0 // indirect
	github.com/Azure/azure-sdk-for-go/sdk/azcore v1.17.0 // indirect
	github.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 // indirect
	github.com/andybalholm/cascadia v1.3.3 // indirect
	github.com/aws/aws-sdk-go-v2 v1.30.3 // indirect
	github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.3 // indirect
	github.com/aws/aws-sdk-go-v2/config v1.27.27 // indirect
	github.com/aws/aws-sdk-go-v2/credentials v1.17.27 // indirect
	github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.11 // indirect
	github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.15 // indirect
	github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.15 // indirect
	github.com/aws/aws-sdk-go-v2/internal/ini v1.8.0 // indirect
	github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.3 // indirect
	github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.17 // indirect
	github.com/aws/aws-sdk-go-v2/service/sso v1.22.4 // indirect
	github.com/aws/aws-sdk-go-v2/service/ssooidc v1.26.4 // indirect
	github.com/aws/aws-sdk-go-v2/service/sts v1.30.3 // indirect
	github.com/aws/smithy-go v1.20.3 // indirect
	github.com/aymanbagabas/go-osc52/v2 v2.0.1 // indirect
	github.com/aymerick/douceur v0.2.0 // indirect
	github.com/bahlo/generic-list-go v0.2.0 // indirect
	github.com/buger/jsonparser v1.1.1 // indirect
	github.com/charmbracelet/colorprofile v0.3.2 // indirect
	github.com/charmbracelet/ultraviolet v0.0.0-20250813213450-50737e162af5
	github.com/charmbracelet/x/cellbuf v0.0.14-0.20250811133356-e0c5dbe5ea4a // indirect
	github.com/charmbracelet/x/exp/slice v0.0.0-20250611152503-f53cdd7e01ef
	github.com/charmbracelet/x/term v0.2.1
	github.com/charmbracelet/x/termios v0.1.1 // indirect
	github.com/charmbracelet/x/windows v0.2.2 // indirect
	github.com/davecgh/go-spew v1.1.1 // indirect
	github.com/disintegration/gift v1.1.2 // indirect
	github.com/dlclark/regexp2 v1.11.5 // indirect
	github.com/dustin/go-humanize v1.0.1 // indirect
	github.com/felixge/httpsnoop v1.0.4 // indirect
	github.com/go-logfmt/logfmt v0.6.0 // indirect
	github.com/go-logr/logr v1.4.2 // indirect
	github.com/go-logr/stdr v1.2.2 // indirect
	github.com/google/go-cmp v0.7.0 // indirect
	github.com/google/s2a-go v0.1.8 // indirect
	github.com/googleapis/enterprise-certificate-proxy v0.3.4 // indirect
	github.com/googleapis/gax-go/v2 v2.14.1 // indirect
	github.com/gorilla/css v1.0.1 // indirect
	github.com/gorilla/websocket v1.5.3 // indirect
	github.com/inconshreveable/mousetrap v1.1.0 // indirect
	github.com/klauspost/compress v1.18.0 // indirect
	github.com/klauspost/cpuid/v2 v2.0.9 // indirect
	github.com/klauspost/pgzip v1.2.6 // indirect
	github.com/lucasb-eyer/go-colorful v1.2.0
	github.com/mailru/easyjson v0.7.7 // indirect
	github.com/mattn/go-isatty v0.0.20 // indirect
	github.com/mattn/go-runewidth v0.0.16 // indirect
	github.com/mfridman/interpolate v0.0.2 // indirect
	github.com/microcosm-cc/bluemonday v1.0.27 // indirect
	github.com/muesli/cancelreader v0.2.2 // indirect
	github.com/muesli/mango v0.1.0 // indirect
	github.com/muesli/mango-cobra v1.2.0 // indirect
	github.com/muesli/mango-pflag v0.1.0 // indirect
	github.com/muesli/roff v0.1.0 // indirect
	github.com/ncruces/julianday v1.0.0 // indirect
	github.com/pierrec/lz4/v4 v4.1.22 // indirect
	github.com/pmezard/go-difflib v1.0.0 // indirect
	github.com/rivo/uniseg v0.4.7
	github.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3 // indirect
	github.com/sethvargo/go-retry v0.3.0 // indirect
	github.com/spf13/cast v1.7.1 // indirect
	github.com/spf13/pflag v1.0.7 // indirect
	github.com/tetratelabs/wazero v1.9.0 // indirect
	github.com/tidwall/gjson v1.18.0 // indirect
	github.com/tidwall/match v1.1.1 // indirect
	github.com/tidwall/pretty v1.2.1 // indirect
	github.com/u-root/u-root v0.14.1-0.20250807200646-5e7721023dc7 // indirect
	github.com/u-root/uio v0.0.0-20240224005618-d2acac8f3701 // indirect
	github.com/wk8/go-ordered-map/v2 v2.1.8 // indirect
	github.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e // indirect
	github.com/yosida95/uritemplate/v3 v3.0.2 // indirect
	github.com/yuin/goldmark v1.7.8 // indirect
	github.com/yuin/goldmark-emoji v1.0.5 // indirect
	go.opentelemetry.io/auto/sdk v1.1.0 // indirect
	go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 // indirect
	go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 // indirect
	go.opentelemetry.io/otel v1.35.0 // indirect
	go.opentelemetry.io/otel/metric v1.35.0 // indirect
	go.opentelemetry.io/otel/trace v1.35.0 // indirect
	go.uber.org/multierr v1.11.0 // indirect
	golang.org/x/crypto v0.40.0 // indirect
	golang.org/x/exp v0.0.0-20250506013437-ce4c2cf36ca6 // indirect
	golang.org/x/image v0.26.0 // indirect
	golang.org/x/net v0.41.0 // indirect
	golang.org/x/oauth2 v0.30.0 // indirect
	golang.org/x/sync v0.16.0 // indirect
	golang.org/x/sys v0.35.0
	golang.org/x/term v0.33.0 // indirect
	golang.org/x/text v0.28.0
	golang.org/x/time v0.8.0 // indirect
	google.golang.org/api v0.211.0 // indirect
	google.golang.org/genai v1.20.0
	google.golang.org/genproto/googleapis/rpc v0.0.0-20250324211829-b45e905df463 // indirect
	google.golang.org/grpc v1.71.0 // indirect
	google.golang.org/protobuf v1.36.6 // indirect
	gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 // indirect
	gopkg.in/yaml.v3 v3.0.1 // indirect
	mvdan.cc/sh/moreinterp v0.0.0-20250807215248-5a1a658912aa
)



================================================
FILE: go.sum
================================================
cloud.google.com/go v0.116.0 h1:B3fRrSDkLRt5qSHWe40ERJvhvnQwdZiHu0bJOpldweE=
cloud.google.com/go v0.116.0/go.mod h1:cEPSRWPzZEswwdr9BxE6ChEn01dWlTaF05LiC2Xs70U=
cloud.google.com/go/auth v0.13.0 h1:8Fu8TZy167JkW8Tj3q7dIkr2v4cndv41ouecJx0PAHs=
cloud.google.com/go/auth v0.13.0/go.mod h1:COOjD9gwfKNKz+IIduatIhYJQIc0mG3H102r/EMxX6Q=
cloud.google.com/go/auth/oauth2adapt v0.2.6 h1:V6a6XDu2lTwPZWOawrAa9HUK+DB2zfJyTuciBG5hFkU=
cloud.google.com/go/auth/oauth2adapt v0.2.6/go.mod h1:AlmsELtlEBnaNTL7jCj8VQFLy6mbZv0s4Q7NGBeQ5E8=
cloud.google.com/go/compute/metadata v0.6.0 h1:A6hENjEsCDtC1k8byVsgwvVcioamEHvZ4j01OwKxG9I=
cloud.google.com/go/compute/metadata v0.6.0/go.mod h1:FjyFAW1MW0C203CEOMDTu3Dk1FlqW3Rga40jzHL4hfg=
github.com/Azure/azure-sdk-for-go/sdk/azcore v1.17.0 h1:g0EZJwz7xkXQiZAI5xi9f3WWFYBlX1CPTrR+NDToRkQ=
github.com/Azure/azure-sdk-for-go/sdk/azcore v1.17.0/go.mod h1:XCW7KnZet0Opnr7HccfUw1PLc4CjHqpcaxW8DHklNkQ=
github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.7.0 h1:tfLQ34V6F7tVSwoTf/4lH5sE0o6eCJuNDTmH09nDpbc=
github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.7.0/go.mod h1:9kIvujWAA58nmPmWB1m23fyWic1kYZMxD9CxaWn4Qpg=
github.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 h1:ywEEhmNahHBihViHepv3xPBn1663uRv2t2q/ESv9seY=
github.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0/go.mod h1:iZDifYGJTIgIIkYRNWPENUnqx6bJ2xnSDFI2tjwZNuY=
github.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 h1:XHOnouVk1mxXfQidrMEnLlPk9UMeRtyBTnEFtxkV0kU=
github.com/AzureAD/microsoft-authentication-library-for-go v1.2.2/go.mod h1:wP83P5OoQ5p6ip3ScPr0BAq0BvuPAvacpEuSzyouqAI=
github.com/JohannesKaufmann/html-to-markdown v1.6.0 h1:04VXMiE50YYfCfLboJCLcgqF5x+rHJnb1ssNmqpLH/k=
github.com/JohannesKaufmann/html-to-markdown v1.6.0/go.mod h1:NUI78lGg/a7vpEJTz/0uOcYMaibytE4BUOQS8k78yPQ=
github.com/MakeNowJust/heredoc v1.0.0 h1:cXCdzVdstXyiTqTvfqk9SDHpKNjxuom+DOlyEeQ4pzQ=
github.com/MakeNowJust/heredoc v1.0.0/go.mod h1:mG5amYoWBHf8vpLOuehzbGGw0EHxpZZ6lCpQ4fNJ8LE=
github.com/PuerkitoBio/goquery v1.9.2/go.mod h1:GHPCaP0ODyyxqcNoFGYlAprUFH81NuRPd0GX3Zu2Mvk=
github.com/PuerkitoBio/goquery v1.10.3 h1:pFYcNSqHxBD06Fpj/KsbStFRsgRATgnf3LeXiUkhzPo=
github.com/PuerkitoBio/goquery v1.10.3/go.mod h1:tMUX0zDMHXYlAQk6p35XxQMqMweEKB7iK7iLNd4RH4Y=
github.com/alecthomas/assert/v2 v2.11.0 h1:2Q9r3ki8+JYXvGsDyBXwH3LcJ+WK5D0gc5E8vS6K3D0=
github.com/alecthomas/assert/v2 v2.11.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=
github.com/alecthomas/chroma/v2 v2.20.0 h1:sfIHpxPyR07/Oylvmcai3X/exDlE8+FA820NTz+9sGw=
github.com/alecthomas/chroma/v2 v2.20.0/go.mod h1:e7tViK0xh/Nf4BYHl00ycY6rV7b8iXBksI9E359yNmA=
github.com/alecthomas/repr v0.5.1 h1:E3G4t2QbHTSNpPKBgMTln5KLkZHLOcU7r37J4pXBuIg=
github.com/alecthomas/repr v0.5.1/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=
github.com/andybalholm/cascadia v1.3.2/go.mod h1:7gtRlve5FxPPgIgX36uWBX58OdBsSS6lUvCFb+h7KvU=
github.com/andybalholm/cascadia v1.3.3 h1:AG2YHrzJIm4BZ19iwJ/DAua6Btl3IwJX+VI4kktS1LM=
github.com/andybalholm/cascadia v1.3.3/go.mod h1:xNd9bqTn98Ln4DwST8/nG+H0yuB8Hmgu1YHNnWw0GeA=
github.com/anthropics/anthropic-sdk-go v1.6.2 h1:oORA212y0/zAxe7OPvdgIbflnn/x5PGk5uwjF60GqXM=
github.com/anthropics/anthropic-sdk-go v1.6.2/go.mod h1:3qSNQ5NrAmjC8A2ykuruSQttfqfdEYNZY5o8c0XSHB8=
github.com/atotto/clipboard v0.1.4 h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=
github.com/atotto/clipboard v0.1.4/go.mod h1:ZY9tmq7sm5xIbd9bOK4onWV4S6X0u6GY7Vn0Yu86PYI=
github.com/aws/aws-sdk-go-v2 v1.30.3 h1:jUeBtG0Ih+ZIFH0F4UkmL9w3cSpaMv9tYYDbzILP8dY=
github.com/aws/aws-sdk-go-v2 v1.30.3/go.mod h1:nIQjQVp5sfpQcTc9mPSr1B0PaWK5ByX9MOoDadSN4lc=
github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.3 h1:tW1/Rkad38LA15X4UQtjXZXNKsCgkshC3EbmcUmghTg=
github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.3/go.mod h1:UbnqO+zjqk3uIt9yCACHJ9IVNhyhOCnYk8yA19SAWrM=
github.com/aws/aws-sdk-go-v2/config v1.27.27 h1:HdqgGt1OAP0HkEDDShEl0oSYa9ZZBSOmKpdpsDMdO90=
github.com/aws/aws-sdk-go-v2/config v1.27.27/go.mod h1:MVYamCg76dFNINkZFu4n4RjDixhVr51HLj4ErWzrVwg=
github.com/aws/aws-sdk-go-v2/credentials v1.17.27 h1:2raNba6gr2IfA0eqqiP2XiQ0UVOpGPgDSi0I9iAP+UI=
github.com/aws/aws-sdk-go-v2/credentials v1.17.27/go.mod h1:gniiwbGahQByxan6YjQUMcW4Aov6bLC3m+evgcoN4r4=
github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.11 h1:KreluoV8FZDEtI6Co2xuNk/UqI9iwMrOx/87PBNIKqw=
github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.11/go.mod h1:SeSUYBLsMYFoRvHE0Tjvn7kbxaUhl75CJi1sbfhMxkU=
github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.15 h1:SoNJ4RlFEQEbtDcCEt+QG56MY4fm4W8rYirAmq+/DdU=
github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.15/go.mod h1:U9ke74k1n2bf+RIgoX1SXFed1HLs51OgUSs+Ph0KJP8=
github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.15 h1:C6WHdGnTDIYETAm5iErQUiVNsclNx9qbJVPIt03B6bI=
github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.15/go.mod h1:ZQLZqhcu+JhSrA9/NXRm8SkDvsycE+JkV3WGY41e+IM=
github.com/aws/aws-sdk-go-v2/internal/ini v1.8.0 h1:hT8rVHwugYE2lEfdFE0QWVo81lF7jMrYJVDWI+f+VxU=
github.com/aws/aws-sdk-go-v2/internal/ini v1.8.0/go.mod h1:8tu/lYfQfFe6IGnaOdrpVgEL2IrrDOf6/m9RQum4NkY=
github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.3 h1:dT3MqvGhSoaIhRseqw2I0yH81l7wiR2vjs57O51EAm8=
github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.3/go.mod h1:GlAeCkHwugxdHaueRr4nhPuY+WW+gR8UjlcqzPr1SPI=
github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.17 h1:HGErhhrxZlQ044RiM+WdoZxp0p+EGM62y3L6pwA4olE=
github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.17/go.mod h1:RkZEx4l0EHYDJpWppMJ3nD9wZJAa8/0lq9aVC+r2UII=
github.com/aws/aws-sdk-go-v2/service/sso v1.22.4 h1:BXx0ZIxvrJdSgSvKTZ+yRBeSqqgPM89VPlulEcl37tM=
github.com/aws/aws-sdk-go-v2/service/sso v1.22.4/go.mod h1:ooyCOXjvJEsUw7x+ZDHeISPMhtwI3ZCB7ggFMcFfWLU=
github.com/aws/aws-sdk-go-v2/service/ssooidc v1.26.4 h1:yiwVzJW2ZxZTurVbYWA7QOrAaCYQR72t0wrSBfoesUE=
github.com/aws/aws-sdk-go-v2/service/ssooidc v1.26.4/go.mod h1:0oxfLkpz3rQ/CHlx5hB7H69YUpFiI1tql6Q6Ne+1bCw=
github.com/aws/aws-sdk-go-v2/service/sts v1.30.3 h1:ZsDKRLXGWHk8WdtyYMoGNO7bTudrvuKpDKgMVRlepGE=
github.com/aws/aws-sdk-go-v2/service/sts v1.30.3/go.mod h1:zwySh8fpFyXp9yOr/KVzxOl8SRqgf/IDw5aUt9UKFcQ=
github.com/aws/smithy-go v1.20.3 h1:ryHwveWzPV5BIof6fyDvor6V3iUL7nTfiTKXHiW05nE=
github.com/aws/smithy-go v1.20.3/go.mod h1:krry+ya/rV9RDcV/Q16kpu6ypI4K2czasz0NC3qS14E=
github.com/aymanbagabas/go-osc52/v2 v2.0.1 h1:HwpRHbFMcZLEVr42D4p7XBqjyuxQH5SMiErDT4WkJ2k=
github.com/aymanbagabas/go-osc52/v2 v2.0.1/go.mod h1:uYgXzlJ7ZpABp8OJ+exZzJJhRNQ2ASbcXHWsFqH8hp8=
github.com/aymanbagabas/go-udiff v0.3.1 h1:LV+qyBQ2pqe0u42ZsUEtPiCaUoqgA9gYRDs3vj1nolY=
github.com/aymanbagabas/go-udiff v0.3.1/go.mod h1:G0fsKmG+P6ylD0r6N/KgQD/nWzgfnl8ZBcNLgcbrw8E=
github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=
github.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=
github.com/bahlo/generic-list-go v0.2.0 h1:5sz/EEAK+ls5wF+NeqDpk5+iNdMDXrh3z3nPnH1Wvgk=
github.com/bahlo/generic-list-go v0.2.0/go.mod h1:2KvAjgMlE5NNynlg/5iLrrCCZ2+5xWbdbCW3pNTGyYg=
github.com/bmatcuk/doublestar/v4 v4.9.1 h1:X8jg9rRZmJd4yRy7ZeNDRnM+T3ZfHv15JiBJ/avrEXE=
github.com/bmatcuk/doublestar/v4 v4.9.1/go.mod h1:xBQ8jztBU6kakFMg+8WGxn0c6z1fTSPVIjEY1Wr7jzc=
github.com/buger/jsonparser v1.1.1 h1:2PnMjfWD7wBILjqQbt530v576A/cAbQvEW9gGIpYMUs=
github.com/buger/jsonparser v1.1.1/go.mod h1:6RYKKt7H4d4+iWqouImQ9R2FZql3VbhNgx27UK13J/0=
github.com/charlievieth/fastwalk v1.0.12 h1:pwfxe1LajixViQqo7EFLXU2+mQxb6OaO0CeNdVwRKTg=
github.com/charlievieth/fastwalk v1.0.12/go.mod h1:yGy1zbxog41ZVMcKA/i8ojXLFsuayX5VvwhQVoj9PBI=
github.com/charmbracelet/bubbles/v2 v2.0.0-beta.1.0.20250820203609-601216f68ee2 h1:973OHYuq2Jx9deyuPwe/6lsuQrDCatOsjP8uCd02URE=
github.com/charmbracelet/bubbles/v2 v2.0.0-beta.1.0.20250820203609-601216f68ee2/go.mod h1:6HamsBKWqEC/FVHuQMHgQL+knPyvHH55HwJDHl/adMw=
github.com/charmbracelet/bubbletea/v2 v2.0.0-beta.4.0.20250813213544-5cc219db8892 h1:lqoYD2DrKhSdC9xCr59JMXtbbdR5/AZ6xfd/G8eOQJM=
github.com/charmbracelet/bubbletea/v2 v2.0.0-beta.4.0.20250813213544-5cc219db8892/go.mod h1:TUpoECaG4/3CwFx5lTlXNpR87Yo7gOwGqucnHGfAm20=
github.com/charmbracelet/catwalk v0.4.12 h1:HN7l/VVH+ecJbropJSoODeAawPuWk2mBApn99fs1MGM=
github.com/charmbracelet/catwalk v0.4.12/go.mod h1:WnKgNPmQHuMyk7GtwAQwl+ezHusfH40IvzML2qwUGwc=
github.com/charmbracelet/colorprofile v0.3.2 h1:9J27WdztfJQVAQKX2WOlSSRB+5gaKqqITmrvb1uTIiI=
github.com/charmbracelet/colorprofile v0.3.2/go.mod h1:mTD5XzNeWHj8oqHb+S1bssQb7vIHbepiebQ2kPKVKbI=
github.com/charmbracelet/fang v0.3.1-0.20250711140230-d5ebb8c1d674 h1:+Cz+VfxD5DO+JT1LlswXWhre0HYLj6l2HW8HVGfMuC0=
github.com/charmbracelet/fang v0.3.1-0.20250711140230-d5ebb8c1d674/go.mod h1:9gCUAHmVx5BwSafeyNr3GI0GgvlB1WYjL21SkPp1jyU=
github.com/charmbracelet/glamour/v2 v2.0.0-20250811143442-a27abb32f018 h1:PU4Zvpagsk5sgaDxn5W4sxHuLp9QRMBZB3bFSk40A4w=
github.com/charmbracelet/glamour/v2 v2.0.0-20250811143442-a27abb32f018/go.mod h1:Z/GLmp9fzaqX4ze3nXG7StgWez5uBM5XtlLHK8V/qSk=
github.com/charmbracelet/lipgloss/v2 v2.0.0-beta.3.0.20250721205738-ea66aa652ee0 h1:sWRGoSw/JsO2S4t2+fmmEkRbkOxphI0AxZkQPQVKWbs=
github.com/charmbracelet/lipgloss/v2 v2.0.0-beta.3.0.20250721205738-ea66aa652ee0/go.mod h1:XIuqKpZTUXtVyeyiN1k9Tc/U7EzfaDnVc34feFHfBws=
github.com/charmbracelet/log/v2 v2.0.0-20250226163916-c379e29ff706 h1:WkwO6Ks3mSIGnGuSdKl9qDSyfbYK50z2wc2gGMggegE=
github.com/charmbracelet/log/v2 v2.0.0-20250226163916-c379e29ff706/go.mod h1:mjJGp00cxcfvD5xdCa+bso251Jt4owrQvuimJtVmEmM=
github.com/charmbracelet/ultraviolet v0.0.0-20250813213450-50737e162af5 h1:7FlxuSTw5paY5Km8AK1WwfSVjAIOW4UiZI6Okva83pY=
github.com/charmbracelet/ultraviolet v0.0.0-20250813213450-50737e162af5/go.mod h1:uQXXTlOPWiN05pLfSdajBj5FaaszPUrrr9qRFmmQ79M=
github.com/charmbracelet/x/ansi v0.10.1 h1:rL3Koar5XvX0pHGfovN03f5cxLbCF2YvLeyz7D2jVDQ=
github.com/charmbracelet/x/ansi v0.10.1/go.mod h1:3RQDQ6lDnROptfpWuUVIUG64bD2g2BgntdxH0Ya5TeE=
github.com/charmbracelet/x/cellbuf v0.0.14-0.20250811133356-e0c5dbe5ea4a h1:zYSNtEJM9jwHbJts2k+Hroj+xQwsW1yxc4Wopdv7KaI=
github.com/charmbracelet/x/cellbuf v0.0.14-0.20250811133356-e0c5dbe5ea4a/go.mod h1:rc2bsPC6MWae3LdOxNO1mOb443NlMrrDL0xEya48NNc=
github.com/charmbracelet/x/exp/charmtone v0.0.0-20250708181618-a60a724ba6c3 h1:1xwHZg6eMZ9Wv5TE1UGub6ARubyOd1Lo5kPUI/6VL50=
github.com/charmbracelet/x/exp/charmtone v0.0.0-20250708181618-a60a724ba6c3/go.mod h1:T9jr8CzFpjhFVHjNjKwbAD7KwBNyFnj2pntAO7F2zw0=
github.com/charmbracelet/x/exp/golden v0.0.0-20250207160936-21c02780d27a h1:FsHEJ52OC4VuTzU8t+n5frMjLvpYWEznSr/u8tnkCYw=
github.com/charmbracelet/x/exp/golden v0.0.0-20250207160936-21c02780d27a/go.mod h1:wDlXFlCrmJ8J+swcL/MnGUuYnqgQdW9rhSD61oNMb6U=
github.com/charmbracelet/x/exp/slice v0.0.0-20250611152503-f53cdd7e01ef h1:v7qwsZ2OxzlwvpKwz8dtZXp7fIJlcDEUOyFBNE4fz4Q=
github.com/charmbracelet/x/exp/slice v0.0.0-20250611152503-f53cdd7e01ef/go.mod h1:vI5nDVMWi6veaYH+0Fmvpbe/+cv/iJfMntdh+N0+Tms=
github.com/charmbracelet/x/term v0.2.1 h1:AQeHeLZ1OqSXhrAWpYUtZyX1T3zVxfpZuEQMIQaGIAQ=
github.com/charmbracelet/x/term v0.2.1/go.mod h1:oQ4enTYFV7QN4m0i9mzHrViD7TQKvNEEkHUMCmsxdUg=
github.com/charmbracelet/x/termios v0.1.1 h1:o3Q2bT8eqzGnGPOYheoYS8eEleT5ZVNYNy8JawjaNZY=
github.com/charmbracelet/x/termios v0.1.1/go.mod h1:rB7fnv1TgOPOyyKRJ9o+AsTU/vK5WHJ2ivHeut/Pcwo=
github.com/charmbracelet/x/windows v0.2.2 h1:IofanmuvaxnKHuV04sC0eBy/smG6kIKrWG2/jYn2GuM=
github.com/charmbracelet/x/windows v0.2.2/go.mod h1:/8XtdKZzedat74NQFn0NGlGL4soHB0YQZrETF96h75k=
github.com/cpuguy83/go-md2man/v2 v2.0.6/go.mod h1:oOW0eioCTA6cOiMLiUPZOpcVxMig6NIQQ7OS05n1F4g=
github.com/creack/pty v1.1.24 h1:bJrF4RRfyJnbTJqzRLHzcGaZK1NeM5kTC9jGgovnR1s=
github.com/creack/pty v1.1.24/go.mod h1:08sCNb52WyoAwi2QDyzUCTgcvVFhUzewun7wtTfvcwE=
github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/disintegration/gift v1.1.2 h1:9ZyHJr+kPamiH10FX3Pynt1AxFUob812bU9Wt4GMzhs=
github.com/disintegration/gift v1.1.2/go.mod h1:Jh2i7f7Q2BM7Ezno3PhfezbR1xpUg9dUg3/RlKGr4HI=
github.com/disintegration/imageorient v0.0.0-20180920195336-8147d86e83ec h1:YrB6aVr9touOt75I9O1SiancmR2GMg45U9UYf0gtgWg=
github.com/disintegration/imageorient v0.0.0-20180920195336-8147d86e83ec/go.mod h1:K0KBFIr1gWu/C1Gp10nFAcAE4hsB7JxE6OgLijrJ8Sk=
github.com/dlclark/regexp2 v1.11.5 h1:Q/sSnsKerHeCkc/jSTNq1oCm7KiVgUMZRDUoRu0JQZQ=
github.com/dlclark/regexp2 v1.11.5/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=
github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=
github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=
github.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=
github.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=
github.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=
github.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=
github.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=
github.com/fsnotify/fsnotify v1.9.0 h1:2Ml+OJNzbYCTzsxtv8vKSFD9PbJjmhYF14k/jKC7S9k=
github.com/fsnotify/fsnotify v1.9.0/go.mod h1:8jBTzvmWwFyi3Pb8djgCCO5IBqzKJ/Jwo8TRcHyHii0=
github.com/go-logfmt/logfmt v0.6.0 h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=
github.com/go-logfmt/logfmt v0.6.0/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=
github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=
github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=
github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=
github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=
github.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=
github.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=
github.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=
github.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=
github.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=
github.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=
github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
github.com/google/go-cmp v0.7.0 h1:wk8382ETsv4JYUZwIsn6YpYiWiBsYLSJiTsyBybVuN8=
github.com/google/go-cmp v0.7.0/go.mod h1:pXiqmnSA92OHEEa9HXL2W4E7lf9JzCmGVUdgjX3N/iU=
github.com/google/s2a-go v0.1.8 h1:zZDs9gcbt9ZPLV0ndSyQk6Kacx2g/X+SKYovpnz3SMM=
github.com/google/s2a-go v0.1.8/go.mod h1:6iNWHTpQ+nfNRN5E00MSdfDwVesa8hhS32PhPO8deJA=
github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/googleapis/enterprise-certificate-proxy v0.3.4 h1:XYIDZApgAnrN1c855gTgghdIA6Stxb52D5RnLI1SLyw=
github.com/googleapis/enterprise-certificate-proxy v0.3.4/go.mod h1:YKe7cfqYXjKGpGvmSg28/fFvhNzinZQm8DGnaburhGA=
github.com/googleapis/gax-go/v2 v2.14.1 h1:hb0FFeiPaQskmvakKu5EbCbpntQn48jyHuvrkurSS/Q=
github.com/googleapis/gax-go/v2 v2.14.1/go.mod h1:Hb/NubMaVM88SrNkvl8X/o8XWwDJEPqouaLeN2IUxoA=
github.com/gorilla/css v1.0.1 h1:ntNaBIghp6JmvWnxbZKANoLyuXTPZ4cAMlo6RyhlbO8=
github.com/gorilla/css v1.0.1/go.mod h1:BvnYkspnSzMmwRK+b8/xgNPLiIuNZr6vbZBTPQ2A3b0=
github.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=
github.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=
github.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=
github.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=
github.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=
github.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=
github.com/invopop/jsonschema v0.13.0 h1:KvpoAJWEjR3uD9Kbm2HWJmqsEaHt8lBUpd0qHcIi21E=
github.com/invopop/jsonschema v0.13.0/go.mod h1:ffZ5Km5SWWRAIN6wbDXItl95euhFz2uON45H2qjYt+0=
github.com/joho/godotenv v1.5.1 h1:7eLL/+HRGLY0ldzfGMeQkb7vMd0as4CfYvUVzLqw0N0=
github.com/joho/godotenv v1.5.1/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=
github.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=
github.com/klauspost/compress v1.18.0 h1:c/Cqfb0r+Yi+JtIEq73FWXVkRonBlf0CRNYc8Zttxdo=
github.com/klauspost/compress v1.18.0/go.mod h1:2Pp+KzxcywXVXMr50+X0Q/Lsb43OQHYWRCY2AiWywWQ=
github.com/klauspost/cpuid/v2 v2.0.9 h1:lgaqFMSdTdQYdZ04uHyN2d/eKdOMyi2YLSvlQIBFYa4=
github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=
github.com/klauspost/pgzip v1.2.6 h1:8RXeL5crjEUFnR2/Sn6GJNWtSQ3Dk8pq4CL3jvdDyjU=
github.com/klauspost/pgzip v1.2.6/go.mod h1:Ch1tH69qFZu15pkjo5kYi6mth2Zzwzt50oCQKQE9RUs=
github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=
github.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=
github.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=
github.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=
github.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=
github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=
github.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=
github.com/mark3labs/mcp-go v0.37.0 h1:BywvZLPRT6Zx6mMG/MJfxLSZQkTGIcJSEGKsvr4DsoQ=
github.com/mark3labs/mcp-go v0.37.0/go.mod h1:T7tUa2jO6MavG+3P25Oy/jR7iCeJPHImCZHRymCn39g=
github.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=
github.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=
github.com/mattn/go-runewidth v0.0.16 h1:E5ScNMtiwvlvB5paMFdw9p4kSQzbXFikJ5SQO6TULQc=
github.com/mattn/go-runewidth v0.0.16/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=
github.com/mfridman/interpolate v0.0.2 h1:pnuTK7MQIxxFz1Gr+rjSIx9u7qVjf5VOoM/u6BbAxPY=
github.com/mfridman/interpolate v0.0.2/go.mod h1:p+7uk6oE07mpE/Ik1b8EckO0O4ZXiGAfshKBWLUM9Xg=
github.com/microcosm-cc/bluemonday v1.0.27 h1:MpEUotklkwCSLeH+Qdx1VJgNqLlpY2KXwXFM08ygZfk=
github.com/microcosm-cc/bluemonday v1.0.27/go.mod h1:jFi9vgW+H7c3V0lb6nR74Ib/DIB5OBs92Dimizgw2cA=
github.com/muesli/cancelreader v0.2.2 h1:3I4Kt4BQjOR54NavqnDogx/MIoWBFa0StPA8ELUXHmA=
github.com/muesli/cancelreader v0.2.2/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=
github.com/muesli/mango v0.1.0 h1:DZQK45d2gGbql1arsYA4vfg4d7I9Hfx5rX/GCmzsAvI=
github.com/muesli/mango v0.1.0/go.mod h1:5XFpbC8jY5UUv89YQciiXNlbi+iJgt29VDC5xbzrLL4=
github.com/muesli/mango-cobra v1.2.0 h1:DQvjzAM0PMZr85Iv9LIMaYISpTOliMEg+uMFtNbYvWg=
github.com/muesli/mango-cobra v1.2.0/go.mod h1:vMJL54QytZAJhCT13LPVDfkvCUJ5/4jNUKF/8NC2UjA=
github.com/muesli/mango-pflag v0.1.0 h1:UADqbYgpUyRoBja3g6LUL+3LErjpsOwaC9ywvBWe7Sg=
github.com/muesli/mango-pflag v0.1.0/go.mod h1:YEQomTxaCUp8PrbhFh10UfbhbQrM/xJ4i2PB8VTLLW0=
github.com/muesli/roff v0.1.0 h1:YD0lalCotmYuF5HhZliKWlIx7IEhiXeSfq7hNjFqGF8=
github.com/muesli/roff v0.1.0/go.mod h1:pjAHQM9hdUUwm/krAfrLGgJkXJ+YuhtsfZ42kieB2Ig=
github.com/muesli/termenv v0.16.0 h1:S5AlUN9dENB57rsbnkPyfdGuWIlkmzJjbFf0Tf5FWUc=
github.com/muesli/termenv v0.16.0/go.mod h1:ZRfOIKPFDYQoDFF4Olj7/QJbW60Ol/kL1pU3VfY/Cnk=
github.com/ncruces/go-sqlite3 v0.27.1 h1:suqlM7xhSyDVMV9RgX99MCPqt9mB6YOCzHZuiI36K34=
github.com/ncruces/go-sqlite3 v0.27.1/go.mod h1:gpF5s+92aw2MbDmZK0ZOnCdFlpe11BH20CTspVqri0c=
github.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=
github.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=
github.com/ncruces/julianday v1.0.0 h1:fH0OKwa7NWvniGQtxdJRxAgkBMolni2BjDHaWTxqt7M=
github.com/ncruces/julianday v1.0.0/go.mod h1:Dusn2KvZrrovOMJuOt0TNXL6tB7U2E8kvza5fFc9G7g=
github.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646 h1:zYyBkD/k9seD2A7fsi6Oo2LfFZAehjjQMERAvZLEDnQ=
github.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646/go.mod h1:jpp1/29i3P1S/RLdc7JQKbRpFeM1dOBd8T9ki5s+AY8=
github.com/nxadm/tail v1.4.11 h1:8feyoE3OzPrcshW5/MJ4sGESc5cqmGkGCWlco4l0bqY=
github.com/nxadm/tail v1.4.11/go.mod h1:OTaG3NK980DZzxbRq6lEuzgU+mug70nY11sMd4JXXHc=
github.com/openai/openai-go v1.12.0 h1:NBQCnXzqOTv5wsgNC36PrFEiskGfO5wccfCWDo9S1U0=
github.com/openai/openai-go v1.12.0/go.mod h1:g461MYGXEXBVdV5SaR/5tNzNbSfwTBBefwc+LlDCK0Y=
github.com/pierrec/lz4/v4 v4.1.22 h1:cKFw6uJDK+/gfw5BcDL0JL5aBsAFdsIT18eRtLj7VIU=
github.com/pierrec/lz4/v4 v4.1.22/go.mod h1:gZWDp/Ze/IJXGXf23ltt2EXimqmTUXEy0GFuRQyBid4=
github.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=
github.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=
github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
github.com/pressly/goose/v3 v3.24.3 h1:DSWWNwwggVUsYZ0X2VitiAa9sKuqtBfe+Jr9zFGwWlM=
github.com/pressly/goose/v3 v3.24.3/go.mod h1:v9zYL4xdViLHCUUJh/mhjnm6JrK7Eul8AS93IxiZM4E=
github.com/qjebbs/go-jsons v0.0.0-20221222033332-a534c5fc1c4c h1:kmzxiX+OB0knCo1V0dkEkdPelzCdAzCURCfmFArn2/A=
github.com/qjebbs/go-jsons v0.0.0-20221222033332-a534c5fc1c4c/go.mod h1:wNJrtinHyC3YSf6giEh4FJN8+yZV7nXBjvmfjhBIcw4=
github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=
github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=
github.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=
github.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=
github.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=
github.com/rogpeppe/go-internal v1.14.1 h1:UQB4HGPB6osV0SQTLymcB4TgvyWu6ZyliaW0tI/otEQ=
github.com/rogpeppe/go-internal v1.14.1/go.mod h1:MaRKkUm5W0goXpeCfT7UZI6fk/L7L7so1lCWt35ZSgc=
github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
github.com/sabhiram/go-gitignore v0.0.0-20210923224102-525f6e181f06 h1:OkMGxebDjyw0ULyrTYWeN0UNCCkmCWfjPnIA2W6oviI=
github.com/sabhiram/go-gitignore v0.0.0-20210923224102-525f6e181f06/go.mod h1:+ePHsJ1keEjQtpvf9HHw0f4ZeJ0TLRsxhunSI2hYJSs=
github.com/sahilm/fuzzy v0.1.1 h1:ceu5RHF8DGgoi+/dR5PsECjCDH1BE3Fnmpo7aVXOdRA=
github.com/sahilm/fuzzy v0.1.1/go.mod h1:VFvziUEIMCrT6A6tw2RFIXPXXmzXbOsSHF0DOI8ZK9Y=
github.com/sebdah/goldie/v2 v2.5.3 h1:9ES/mNN+HNUbNWpVAlrzuZ7jE+Nrczbj8uFRjM7624Y=
github.com/sebdah/goldie/v2 v2.5.3/go.mod h1:oZ9fp0+se1eapSRjfYbsV/0Hqhbuu3bJVvKI/NNtssI=
github.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=
github.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=
github.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3 h1:n661drycOFuPLCN3Uc8sB6B/s6Z4t2xvBgU1htSHuq8=
github.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3/go.mod h1:A0bzQcvG0E7Rwjx0REVgAGH58e96+X0MeOfepqsbeW4=
github.com/sethvargo/go-retry v0.3.0 h1:EEt31A35QhrcRZtrYFDTBg91cqZVnFL2navjDrah2SE=
github.com/sethvargo/go-retry v0.3.0/go.mod h1:mNX17F0C/HguQMyMyJxcnU471gOZGxCLyYaFyAZraas=
github.com/spf13/cast v1.7.1 h1:cuNEagBQEHWN1FnbGEjCXL2szYEXqfJPbP2HNUaca9Y=
github.com/spf13/cast v1.7.1/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=
github.com/spf13/cobra v1.9.1 h1:CXSaggrXdbHK9CF+8ywj8Amf7PBRmPCOJugH954Nnlo=
github.com/spf13/cobra v1.9.1/go.mod h1:nDyEzZ8ogv936Cinf6g1RU9MRY64Ir93oCnqb9wxYW0=
github.com/spf13/pflag v1.0.6/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=
github.com/spf13/pflag v1.0.7 h1:vN6T9TfwStFPFM5XzjsvmzZkLuaLX+HS+0SeFLRgU6M=
github.com/spf13/pflag v1.0.7/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=
github.com/srwiley/oksvg v0.0.0-20221011165216-be6e8873101c h1:km8GpoQut05eY3GiYWEedbTT0qnSxrCjsVbb7yKY1KE=
github.com/srwiley/oksvg v0.0.0-20221011165216-be6e8873101c/go.mod h1:cNQ3dwVJtS5Hmnjxy6AgTPd0Inb3pW05ftPSX7NZO7Q=
github.com/srwiley/rasterx v0.0.0-20220730225603-2ab79fcdd4ef h1:Ch6Q+AZUxDBCVqdkI8FSpFyZDtCVBc2VmejdNrm5rRQ=
github.com/srwiley/rasterx v0.0.0-20220730225603-2ab79fcdd4ef/go.mod h1:nXTWP6+gD5+LUJ8krVhhoeHjvHTutPxMYl5SvkcnJNE=
github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=
github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=
github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
github.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=
github.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
github.com/tetratelabs/wazero v1.9.0 h1:IcZ56OuxrtaEz8UYNRHBrUa9bYeX9oVY93KspZZBf/I=
github.com/tetratelabs/wazero v1.9.0/go.mod h1:TSbcXCfFP0L2FGkRPxHphadXPjo1T6W+CseNNY7EkjM=
github.com/tidwall/gjson v1.14.2/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=
github.com/tidwall/gjson v1.18.0 h1:FIDeeyB800efLX89e5a8Y0BNH+LOngJyGrIWxG2FKQY=
github.com/tidwall/gjson v1.18.0/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=
github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=
github.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=
github.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=
github.com/tidwall/pretty v1.2.1 h1:qjsOFOWWQl+N3RsoF5/ssm1pHmJJwhjlSbZ51I6wMl4=
github.com/tidwall/pretty v1.2.1/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=
github.com/tidwall/sjson v1.2.5 h1:kLy8mja+1c9jlljvWTlSazM7cKDRfJuR/bOJhcY5NcY=
github.com/tidwall/sjson v1.2.5/go.mod h1:Fvgq9kS/6ociJEDnK0Fk1cpYF4FIW6ZF7LAe+6jwd28=
github.com/u-root/u-root v0.14.1-0.20250807200646-5e7721023dc7 h1:ax+jBy7xFhh+Ka0IGLmH5mft+YDuqvzEjSgWuAP0nsM=
github.com/u-root/u-root v0.14.1-0.20250807200646-5e7721023dc7/go.mod h1:/0Qr7qJeDwWxoKku2xKQ4Szc+SwBE3g9VE8jNiamsmc=
github.com/u-root/uio v0.0.0-20240224005618-d2acac8f3701 h1:pyC9PaHYZFgEKFdlp3G8RaCKgVpHZnecvArXvPXcFkM=
github.com/u-root/uio v0.0.0-20240224005618-d2acac8f3701/go.mod h1:P3a5rG4X7tI17Nn3aOIAYr5HbIMukwXG0urG0WuL8OA=
github.com/wk8/go-ordered-map/v2 v2.1.8 h1:5h/BUHu93oj4gIdvHHHGsScSTMijfx5PeYkE/fJgbpc=
github.com/wk8/go-ordered-map/v2 v2.1.8/go.mod h1:5nJHM5DyteebpVlHnWMV0rPz6Zp7+xBAnxjb1X5vnTw=
github.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e h1:JVG44RsyaB9T2KIHavMF/ppJZNG9ZpyihvCd0w101no=
github.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e/go.mod h1:RbqR21r5mrJuqunuUZ/Dhy/avygyECGrLceyNeo4LiM=
github.com/yosida95/uritemplate/v3 v3.0.2 h1:Ed3Oyj9yrmi9087+NczuL5BwkIc4wvTb5zIM+UJPGz4=
github.com/yosida95/uritemplate/v3 v3.0.2/go.mod h1:ILOh0sOhIJR3+L/8afwt/kE++YT040gmv5BQTMR2HP4=
github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=
github.com/yuin/goldmark v1.7.1/go.mod h1:uzxRWxtg69N339t3louHJ7+O03ezfj6PlliRlaOzY1E=
github.com/yuin/goldmark v1.7.8 h1:iERMLn0/QJeHFhxSt3p6PeN9mGnvIKSpG9YYorDMnic=
github.com/yuin/goldmark v1.7.8/go.mod h1:uzxRWxtg69N339t3louHJ7+O03ezfj6PlliRlaOzY1E=
github.com/yuin/goldmark-emoji v1.0.5 h1:EMVWyCGPlXJfUXBXpuMu+ii3TIaxbVBnEX9uaDC4cIk=
github.com/yuin/goldmark-emoji v1.0.5/go.mod h1:tTkZEbwu5wkPmgTcitqddVxY9osFZiavD+r4AzQrh1U=
github.com/zeebo/assert v1.3.0 h1:g7C04CbJuIDKNPFHmsk4hwZDO5O+kntRxzaUoNXj+IQ=
github.com/zeebo/assert v1.3.0/go.mod h1:Pq9JiuJQpG8JLJdtkwrJESF0Foym2/D9XMU5ciN/wJ0=
github.com/zeebo/xxh3 v1.0.2 h1:xZmwmqxHZA8AI603jOQ0tMqmBr9lPeFwGg6d+xy9DC0=
github.com/zeebo/xxh3 v1.0.2/go.mod h1:5NWz9Sef7zIDm2JHfFlcQvNekmcEl9ekUZQQKCYaDcA=
go.opentelemetry.io/auto/sdk v1.1.0 h1:cH53jehLUN6UFLY71z+NDOiNJqDdPRaXzTel0sJySYA=
go.opentelemetry.io/auto/sdk v1.1.0/go.mod h1:3wSPjt5PWp2RhlCcmmOial7AvC4DQqZb7a7wCow3W8A=
go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 h1:r6I7RJCN86bpD/FQwedZ0vSixDpwuWREjW9oRMsmqDc=
go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0/go.mod h1:B9yO6b04uB80CzjedvewuqDhxJxi11s7/GtiGa8bAjI=
go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=
go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=
go.opentelemetry.io/otel v1.35.0 h1:xKWKPxrxB6OtMCbmMY021CqC45J+3Onta9MqjhnusiQ=
go.opentelemetry.io/otel v1.35.0/go.mod h1:UEqy8Zp11hpkUrL73gSlELM0DupHoiq72dR+Zqel/+Y=
go.opentelemetry.io/otel/metric v1.35.0 h1:0znxYu2SNyuMSQT4Y9WDWej0VpcsxkuklLa4/siN90M=
go.opentelemetry.io/otel/metric v1.35.0/go.mod h1:nKVFgxBZ2fReX6IlyW28MgZojkoAkJGaE8CpgeAU3oE=
go.opentelemetry.io/otel/sdk v1.34.0 h1:95zS4k/2GOy069d321O8jWgYsW3MzVV+KuSPKp7Wr1A=
go.opentelemetry.io/otel/sdk v1.34.0/go.mod h1:0e/pNiaMAqaykJGKbi+tSjWfNNHMTxoC9qANsCzbyxU=
go.opentelemetry.io/otel/sdk/metric v1.34.0 h1:5CeK9ujjbFVL5c1PhLuStg1wxA7vQv7ce1EK0Gyvahk=
go.opentelemetry.io/otel/sdk/metric v1.34.0/go.mod h1:jQ/r8Ze28zRKoNRdkjCZxfs6YvBTG1+YIqyFVFYec5w=
go.opentelemetry.io/otel/trace v1.35.0 h1:dPpEfJu1sDIqruz7BHFG3c7528f6ddfSWfFDVt/xgMs=
go.opentelemetry.io/otel/trace v1.35.0/go.mod h1:WUk7DtFp1Aw2MkvqGdwiXYDZZNvA/1J8o6xRXLrIkyc=
go.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=
go.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=
golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
golang.org/x/crypto v0.13.0/go.mod h1:y6Z2r+Rw4iayiXXAIxJIDAJ1zMW4yaTpebo8fPOliYc=
golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=
golang.org/x/crypto v0.22.0/go.mod h1:vr6Su+7cTlO45qkww3VDJlzDn0ctJvRgYbC2NvXHt+M=
golang.org/x/crypto v0.23.0/go.mod h1:CKFgDieR+mRhux2Lsu27y0fO304Db0wZe70UKqHu0v8=
golang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=
golang.org/x/crypto v0.40.0 h1:r4x+VvoG5Fm+eJcxMaY8CQM7Lb0l1lsmjGBQ6s8BfKM=
golang.org/x/crypto v0.40.0/go.mod h1:Qr1vMER5WyS2dfPHAlsOj01wgLbsyWtFn/aY+5+ZdxY=
golang.org/x/exp v0.0.0-20250506013437-ce4c2cf36ca6 h1:y5zboxd6LQAqYIhHnB48p0ByQ/GnQx2BE33L8BOHQkI=
golang.org/x/exp v0.0.0-20250506013437-ce4c2cf36ca6/go.mod h1:U6Lno4MTRCDY+Ba7aCcauB9T60gsv5s4ralQzP72ZoQ=
golang.org/x/image v0.26.0 h1:4XjIFEZWQmCZi6Wv8BoxsDhRU3RVnLX04dToTDAEPlY=
golang.org/x/image v0.26.0/go.mod h1:lcxbMFAovzpnJxzXS3nyL83K27tmqtKzIJpctK8YO5c=
golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=
golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=
golang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=
golang.org/x/mod v0.15.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=
golang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=
golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=
golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
golang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=
golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=
golang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=
golang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=
golang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=
golang.org/x/net v0.41.0 h1:vBTly1HeNPEn3wtREYfy4GZ/NECgw2Cnl+nK6Nz3uvw=
golang.org/x/net v0.41.0/go.mod h1:B/K4NNqkfmg07DQYrbwvSluqCJOOXwUjeb/5lOisjbA=
golang.org/x/oauth2 v0.30.0 h1:dnDm7JmhM45NNpd8FDDeLhK6FwqbOf4MLCM9zb1BOHI=
golang.org/x/oauth2 v0.30.0/go.mod h1:B++QgG3ZKulg6sRPGD/mqlHQs5rB3Ml9erfeDY7xKlU=
golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=
golang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=
golang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=
golang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=
golang.org/x/sync v0.16.0 h1:ycBJEhp9p4vXvUZNszeOq0kGTPghopOL8q0fq3vstxw=
golang.org/x/sync v0.16.0/go.mod h1:1dzgHSNfp02xaA81J2MS99Qcpr2w7fw1gpm99rleRqA=
golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.19.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.35.0 h1:vz1N37gP5bs89s7He8XuIYXpyY0+QlsKmzipCbUtyxI=
golang.org/x/sys v0.35.0/go.mod h1:BJP2sWEmIv4KK5OTEluFJCKSidICx8ciO85XgH3Ak8k=
golang.org/x/telemetry v0.0.0-20240228155512-f48c80bd79b2/go.mod h1:TeRTkGYfJXctD9OcfyVLyj2J3IxLnKwHJR8f4D8a3YE=
golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
golang.org/x/term v0.7.0/go.mod h1:P32HKFT3hSsZrRxla30E9HqToFYAQPCMs/zFMBUFqPY=
golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
golang.org/x/term v0.12.0/go.mod h1:owVbMEjm3cBLCHdkQu9b1opXd4ETQWc3BhuQGKgXgvU=
golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=
golang.org/x/term v0.19.0/go.mod h1:2CuTdWZ7KHSQwUzKva0cbMg6q2DMI3Mmxp+gKJbskEk=
golang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=
golang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=
golang.org/x/term v0.33.0 h1:NuFncQrRcaRvVmgRkvM3j/F00gWIAlcmlB8ACEKmGIg=
golang.org/x/term v0.33.0/go.mod h1:s18+ql9tYWp1IfpV9DmCtQDDSRBUjKaw9M1eAv5UeF0=
golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=
golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=
golang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=
golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=
golang.org/x/text v0.15.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=
golang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=
golang.org/x/text v0.28.0 h1:rhazDwis8INMIwQ4tpjLDzUhx6RlXqZNPEM0huQojng=
golang.org/x/text v0.28.0/go.mod h1:U8nCwOR8jO/marOQ0QbDiOngZVEBB7MAiitBuMjXiNU=
golang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=
golang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=
golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=
golang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=
golang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=
golang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=
golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
google.golang.org/api v0.211.0 h1:IUpLjq09jxBSV1lACO33CGY3jsRcbctfGzhj+ZSE/Bg=
google.golang.org/api v0.211.0/go.mod h1:XOloB4MXFH4UTlQSGuNUxw0UT74qdENK8d6JNsXKLi0=
google.golang.org/genai v1.20.0 h1:nmDZSJjXwBvSXcdOohz7pzTVGP9yuNITY8kZ2Ta24xY=
google.golang.org/genai v1.20.0/go.mod h1:QPj5NGJw+3wEOHg+PrsWwJKvG6UC84ex5FR7qAYsN/M=
google.golang.org/genproto/googleapis/rpc v0.0.0-20250324211829-b45e905df463 h1:e0AIkUUhxyBKh6ssZNrAMeqhA7RKUj42346d1y02i2g=
google.golang.org/genproto/googleapis/rpc v0.0.0-20250324211829-b45e905df463/go.mod h1:qQ0YXyHHx3XkvlzUtpXDkS29lDSafHMZBAZDc03LQ3A=
google.golang.org/grpc v1.71.0 h1:kF77BGdPTQ4/JZWMlb9VpJ5pa25aqvVqogsxNHHdeBg=
google.golang.org/grpc v1.71.0/go.mod h1:H0GRtasmQOh9LkFoCPDu3ZrwUtD1YGE+b2vYBYd/8Ec=
google.golang.org/protobuf v1.36.6 h1:z1NpPI8ku2WgiWnf+t9wTPsn6eP1L7ksHUlkfLvd9xY=
google.golang.org/protobuf v1.36.6/go.mod h1:jduwjTPXsFjZGTmRluh+L6NjiWu7pchiJ2/5YcXBHnY=
gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=
gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=
gopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=
gopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=
gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=
gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=
gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=
gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=
gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
modernc.org/libc v1.65.0 h1:e183gLDnAp9VJh6gWKdTy0CThL9Pt7MfcR/0bgb7Y1Y=
modernc.org/libc v1.65.0/go.mod h1:7m9VzGq7APssBTydds2zBcxGREwvIGpuUBaKTXdm2Qs=
modernc.org/mathutil v1.7.1 h1:GCZVGXdaN8gTqB1Mf/usp1Y/hSqgI2vAGGP4jZMCxOU=
modernc.org/mathutil v1.7.1/go.mod h1:4p5IwJITfppl0G4sUEDtCr4DthTaT47/N3aT6MhfgJg=
modernc.org/memory v1.10.0 h1:fzumd51yQ1DxcOxSO+S6X7+QTuVU+n8/Aj7swYjFfC4=
modernc.org/memory v1.10.0/go.mod h1:/JP4VbVC+K5sU2wZi9bHoq2MAkCnrt2r98UGeSK7Mjw=
modernc.org/sqlite v1.37.0 h1:s1TMe7T3Q3ovQiK2Ouz4Jwh7dw4ZDqbebSDTlSJdfjI=
modernc.org/sqlite v1.37.0/go.mod h1:5YiWv+YviqGMuGw4V+PNplcyaJ5v+vQd7TQOgkACoJM=
mvdan.cc/sh/moreinterp v0.0.0-20250807215248-5a1a658912aa h1:sRmA9AmA5+9CbK6a7N52q9W9jAeoBy1EJ7cncm+SLxw=
mvdan.cc/sh/moreinterp v0.0.0-20250807215248-5a1a658912aa/go.mod h1:Of9PCedbLDYT8b3EyiYG64rNnx5nOp27OLCVdDrjJyo=
mvdan.cc/sh/v3 v3.12.1-0.20250726150758-e256f53bade8 h1:yOKqXg3uKDx7VxqnrKRUzB+InP3whTBi7jeggyFkfX0=
mvdan.cc/sh/v3 v3.12.1-0.20250726150758-e256f53bade8/go.mod h1:Se6Cj17eYSn+sNooLZiEUnNNmNxg0imoYlTu4CyaGyg=



================================================
FILE: LICENSE.md
================================================
# Functional Source License, Version 1.1, MIT Future License

## Abbreviation

FSL-1.1-MIT

## Notice

Copyright 2025 Charmbracelet, Inc

## Terms and Conditions

### Licensor ("We")

The party offering the Software under these Terms and Conditions.

### The Software

The "Software" is each version of the software that we make available under
these Terms and Conditions, as indicated by our inclusion of these Terms and
Conditions with the Software.

### License Grant

Subject to your compliance with this License Grant and the Patents,
Redistribution and Trademark clauses below, we hereby grant you the right to
use, copy, modify, create derivative works, publicly perform, publicly display
and redistribute the Software for any Permitted Purpose identified below.

### Permitted Purpose

A Permitted Purpose is any purpose other than a Competing Use. A Competing Use
means making the Software available to others in a commercial product or
service that:

1. substitutes for the Software;

2. substitutes for any other product or service we offer using the Software
   that exists as of the date we make the Software available; or

3. offers the same or substantially similar functionality as the Software.

Permitted Purposes specifically include using the Software:

1. for your internal use and access;

2. for non-commercial education;

3. for non-commercial research; and

4. in connection with professional services that you provide to a licensee
   using the Software in accordance with these Terms and Conditions.

### Patents

To the extent your use for a Permitted Purpose would necessarily infringe our
patents, the license grant above includes a license under our patents. If you
make a claim against any party that the Software infringes or contributes to
the infringement of any patent, then your patent license to the Software ends
immediately.

### Redistribution

The Terms and Conditions apply to all copies, modifications and derivatives of
the Software.

If you redistribute any copies, modifications or derivatives of the Software,
you must include a copy of or a link to these Terms and Conditions and not
remove any copyright notices provided in or with the Software.

### Disclaimer

THE SOFTWARE IS PROVIDED "AS IS" AND WITHOUT WARRANTIES OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING WITHOUT LIMITATION WARRANTIES OF FITNESS FOR A PARTICULAR
PURPOSE, MERCHANTABILITY, TITLE OR NON-INFRINGEMENT.

IN NO EVENT WILL WE HAVE ANY LIABILITY TO YOU ARISING OUT OF OR RELATED TO THE
SOFTWARE, INCLUDING INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES,
EVEN IF WE HAVE BEEN INFORMED OF THEIR POSSIBILITY IN ADVANCE.

### Trademarks

Except for displaying the License Details and identifying us as the origin of
the Software, you have no right under these Terms and Conditions to use our
trademarks, trade names, service marks or product names.

## Grant of Future License

We hereby irrevocably grant you an additional license to use the Software under
the MIT license that is effective on the second anniversary of the date we make
the Software available. On or after that date, you may use the Software under
the MIT license, in which case the following will apply:

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

---

MIT License

Copyright (c) 2025-03-21 - 2025-05-30 Kujtim Hoxha

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.



================================================
FILE: main.go
================================================
package main

import (
	"log/slog"
	"net/http"
	"os"

	_ "net/http/pprof" // profiling

	_ "github.com/joho/godotenv/autoload" // automatically load .env files

	"github.com/charmbracelet/crush/internal/cmd"
	"github.com/charmbracelet/crush/internal/log"
)

func main() {
	defer log.RecoverPanic("main", func() {
		slog.Error("Application terminated due to unhandled panic")
	})

	if os.Getenv("CRUSH_PROFILE") != "" {
		go func() {
			slog.Info("Serving pprof at localhost:6060")
			if httpErr := http.ListenAndServe("localhost:6060", nil); httpErr != nil {
				slog.Error("Failed to pprof listen", "error", httpErr)
			}
		}()
	}

	cmd.Execute()
}



================================================
FILE: schema.json
================================================
{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/charmbracelet/crush/internal/config/config",
  "$ref": "#/$defs/Config",
  "$defs": {
    "Config": {
      "properties": {
        "$schema": {
          "type": "string"
        },
        "models": {
          "additionalProperties": {
            "$ref": "#/$defs/SelectedModel"
          },
          "type": "object",
          "description": "Model configurations for different model types"
        },
        "providers": {
          "additionalProperties": {
            "$ref": "#/$defs/ProviderConfig"
          },
          "type": "object",
          "description": "AI provider configurations"
        },
        "mcp": {
          "$ref": "#/$defs/MCPs",
          "description": "Model Context Protocol server configurations"
        },
        "lsp": {
          "$ref": "#/$defs/LSPs",
          "description": "Language Server Protocol configurations"
        },
        "options": {
          "$ref": "#/$defs/Options",
          "description": "General application options"
        },
        "permissions": {
          "$ref": "#/$defs/Permissions",
          "description": "Permission settings for tool usage"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "LSPConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether this LSP server is disabled",
          "default": false
        },
        "command": {
          "type": "string",
          "description": "Command to execute for the LSP server",
          "examples": [
            "gopls"
          ]
        },
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Arguments to pass to the LSP server command"
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Environment variables to set to the LSP server command"
        },
        "options": {
          "description": "LSP server-specific configuration options"
        },
        "filetypes": {
          "items": {
            "type": "string",
            "examples": [
              "go",
              "mod",
              "rs",
              "c",
              "js",
              "ts"
            ]
          },
          "type": "array",
          "description": "File types this LSP server handles"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "command"
      ]
    },
    "LSPs": {
      "additionalProperties": {
        "$ref": "#/$defs/LSPConfig"
      },
      "type": "object"
    },
    "MCPConfig": {
      "properties": {
        "command": {
          "type": "string",
          "description": "Command to execute for stdio MCP servers",
          "examples": [
            "npx"
          ]
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Environment variables to set for the MCP server"
        },
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Arguments to pass to the MCP server command"
        },
        "type": {
          "type": "string",
          "enum": [
            "stdio",
            "sse",
            "http"
          ],
          "description": "Type of MCP connection",
          "default": "stdio"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL for HTTP or SSE MCP servers",
          "examples": [
            "http://localhost:3000/mcp"
          ]
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether this MCP server is disabled",
          "default": false
        },
        "timeout": {
          "type": "integer",
          "description": "Timeout in seconds for MCP server connections",
          "default": 15,
          "examples": [
            30,
            60,
            120
          ]
        },
        "headers": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "HTTP headers for HTTP/SSE MCP servers"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type"
      ]
    },
    "MCPs": {
      "additionalProperties": {
        "$ref": "#/$defs/MCPConfig"
      },
      "type": "object"
    },
    "Model": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cost_per_1m_in": {
          "type": "number"
        },
        "cost_per_1m_out": {
          "type": "number"
        },
        "cost_per_1m_in_cached": {
          "type": "number"
        },
        "cost_per_1m_out_cached": {
          "type": "number"
        },
        "context_window": {
          "type": "integer"
        },
        "default_max_tokens": {
          "type": "integer"
        },
        "can_reason": {
          "type": "boolean"
        },
        "has_reasoning_efforts": {
          "type": "boolean"
        },
        "default_reasoning_effort": {
          "type": "string"
        },
        "supports_attachments": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "id",
        "name",
        "cost_per_1m_in",
        "cost_per_1m_out",
        "cost_per_1m_in_cached",
        "cost_per_1m_out_cached",
        "context_window",
        "default_max_tokens",
        "can_reason",
        "has_reasoning_efforts",
        "supports_attachments"
      ]
    },
    "Options": {
      "properties": {
        "context_paths": {
          "items": {
            "type": "string",
            "examples": [
              ".cursorrules",
              "CRUSH.md"
            ]
          },
          "type": "array",
          "description": "Paths to files containing context information for the AI"
        },
        "tui": {
          "$ref": "#/$defs/TUIOptions",
          "description": "Terminal user interface options"
        },
        "debug": {
          "type": "boolean",
          "description": "Enable debug logging",
          "default": false
        },
        "debug_lsp": {
          "type": "boolean",
          "description": "Enable debug logging for LSP servers",
          "default": false
        },
        "disable_auto_summarize": {
          "type": "boolean",
          "description": "Disable automatic conversation summarization",
          "default": false
        },
        "data_directory": {
          "type": "string",
          "description": "Directory for storing application data (relative to working directory)",
          "default": ".crush",
          "examples": [
            ".crush"
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Permissions": {
      "properties": {
        "allowed_tools": {
          "items": {
            "type": "string",
            "examples": [
              "bash",
              "view"
            ]
          },
          "type": "array",
          "description": "List of tools that don't require permission prompts"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "ProviderConfig": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the provider",
          "examples": [
            "openai"
          ]
        },
        "name": {
          "type": "string",
          "description": "Human-readable name for the provider",
          "examples": [
            "OpenAI"
          ]
        },
        "base_url": {
          "type": "string",
          "format": "uri",
          "description": "Base URL for the provider's API",
          "examples": [
            "https://api.openai.com/v1"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "openai",
            "anthropic",
            "gemini",
            "azure",
            "vertexai"
          ],
          "description": "Provider type that determines the API format",
          "default": "openai"
        },
        "api_key": {
          "type": "string",
          "description": "API key for authentication with the provider",
          "examples": [
            "$OPENAI_API_KEY"
          ]
        },
        "disable": {
          "type": "boolean",
          "description": "Whether this provider is disabled",
          "default": false
        },
        "system_prompt_prefix": {
          "type": "string",
          "description": "Custom prefix to add to system prompts for this provider"
        },
        "extra_headers": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Additional HTTP headers to send with requests"
        },
        "extra_body": {
          "type": "object",
          "description": "Additional fields to include in request bodies"
        },
        "models": {
          "items": {
            "$ref": "#/$defs/Model"
          },
          "type": "array",
          "description": "List of models available from this provider"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "SelectedModel": {
      "properties": {
        "model": {
          "type": "string",
          "description": "The model ID as used by the provider API",
          "examples": [
            "gpt-4o"
          ]
        },
        "provider": {
          "type": "string",
          "description": "The model provider ID that matches a key in the providers config",
          "examples": [
            "openai"
          ]
        },
        "reasoning_effort": {
          "type": "string",
          "enum": [
            "low",
            "medium",
            "high"
          ],
          "description": "Reasoning effort level for OpenAI models that support it"
        },
        "max_tokens": {
          "type": "integer",
          "maximum": 200000,
          "minimum": 1,
          "description": "Maximum number of tokens for model responses",
          "examples": [
            4096
          ]
        },
        "think": {
          "type": "boolean",
          "description": "Enable thinking mode for Anthropic models that support reasoning"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "model",
        "provider"
      ]
    },
    "TUIOptions": {
      "properties": {
        "compact_mode": {
          "type": "boolean",
          "description": "Enable compact mode for the TUI interface",
          "default": false
        },
        "diff_mode": {
          "type": "string",
          "enum": [
            "unified",
            "split"
          ],
          "description": "Diff mode for the TUI interface"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  }
}



================================================
FILE: sqlc.yaml
================================================
version: "2"
sql:
  - engine: "sqlite"
    schema: "internal/db/migrations"
    queries: "internal/db/sql"
    gen:
      go:
        package: "db"
        out: "internal/db"
        emit_json_tags: true
        emit_prepared_queries: true
        emit_interface: true
        emit_exact_table_names: false
        emit_empty_slices: true



================================================
FILE: Taskfile.yaml
================================================
# https://taskfile.dev

version: "3"

env:
  CGO_ENABLED: 0
  GOEXPERIMENT: greenteagc

tasks:
  lint:install:
    desc: Install golangci-lint
    cmds:
      - go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@latest
    env:
      GOTOOLCHAIN: go1.25.0

  lint:
    desc: Run base linters
    cmds:
      - golangci-lint run --path-mode=abs --config=".golangci.yml" --timeout=5m
    env:
      GOEXPERIMENT: null

  lint-fix:
    desc: Run base linters and fix issues
    cmds:
      - golangci-lint run --path-mode=abs --config=".golangci.yml" --timeout=5m --fix
    env:
      GOEXPERIMENT: null

  build:
    desc: Run build
    cmds:
      - go build .
    generates:
      - crush

  test:
    desc: Run tests
    cmds:
      - go test ./... {{.CLI_ARGS}}

  fmt:
    desc: Run gofumpt
    cmds:
      - gofumpt -w .

  dev:
    desc: Run with profiling enabled
    env:
      CRUSH_PROFILE: true
    cmds:
      - go run .

  install:
    desc: Install the application
    cmds:
      - go install -v .

  profile:cpu:
    desc: 10s CPU profile
    cmds:
      - go tool pprof -http :6061 'http://localhost:6060/debug/pprof/profile?seconds=10'

  profile:heap:
    desc: Heap profile
    cmds:
      - go tool pprof -http :6061 'http://localhost:6060/debug/pprof/heap'

  profile:allocs:
    desc: Allocations profile
    cmds:
      - go tool pprof -http :6061 'http://localhost:6060/debug/pprof/allocs'

  schema:
    desc: Generate JSON schema for configuration
    cmds:
      - go run main.go schema > schema.json
      - echo "Generated schema.json"
    generates:
      - schema.json



================================================
FILE: .golangci.yml
================================================
version: "2"
linters:
  enable:
    - bodyclose
    # - exhaustive
    # - goconst
    # - godot
    # - godox
    # - gomoddirectives
    - goprintffuncname
    # - gosec
    - misspell
    # - nakedret
    # - nestif
    # - nilerr
    - noctx
    - nolintlint
    # - prealloc
    # - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - tparallel
    # - unconvert
    # - unparam
    - whitespace
    # - wrapcheck
  disable:
    - errcheck
    - ineffassign
    - unused
  exclusions:
    generated: lax
    presets:
      - common-false-positives
    rules:
      - text: '(slog|log)\.\w+'
        linters:
          - noctx
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gofumpt
    - goimports
  exclusions:
    generated: lax



================================================
FILE: .goreleaser.yml
================================================
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=jcroql
version: 2

project_name: crush

includes:
  - from_url:
      url: charmbracelet/meta/main/notarize.yaml

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"
  license: "FSL-1.1-MIT"
  homepage: "https://charm.sh/crush"
  description: "A powerful terminal-based AI assistant for developers, providing intelligent coding assistance directly in your terminal."
  full_description: "A powerful terminal-based AI assistant for developers, providing intelligent coding assistance directly in your terminal."
  maintainers:
    - "kujtimiihoxha <kujtim@charm.sh>"
    - "caarlos0 <carlos@charm.sh>" # for aur

nightly:
  publish_release: true
  keep_single_release: true
  version_template: "{{ incminor .Version }}-nightly"

snapshot:
  version_template: "0.0.0-{{ .Timestamp }}"

before:
  hooks:
    - go mod tidy
    - rm -rf completions
    - mkdir completions
    - rm -rf manpages
    - mkdir manpages
    - sh -c 'go run . completion bash >./completions/crush.bash'
    - sh -c 'go run . completion zsh >./completions/crush.zsh'
    - sh -c 'go run . completion fish >./completions/crush.fish'
    - sh -c 'go run . man | gzip -c >./manpages/crush.1.gz'

# gomod:
#   proxy: true

builds:
  - env:
      - CGO_ENABLED=0
      - GOEXPERIMENT=greenteagc
    goos:
      - linux
      - darwin
      - windows
      - freebsd
      - openbsd
      - netbsd
      - android
    goarch:
      - amd64
      - arm64
      - "386"
      - arm
    goarm:
      - "7"
    ignore:
      - goos: android
        goarch: amd64
      - goos: android
        goarch: arm
      - goos: android
        goarch: "386"
    ldflags:
      - -s -w -X github.com/charmbracelet/crush/internal/version.Version={{.Version}}

archives:
  - name_template: >-
      crush_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- with .Arm}}v{{ . }}{{ end }}
    wrap_in_directory: true
    files:
      - README*
      - LICENSE*
      - manpages/*
      - completions/*
    format_overrides:
      - goos: windows
        formats: [zip]

checksum:
  name_template: "checksums.txt"

aur_sources:
  - private_key: "{{ .Env.AUR_KEY }}"
    git_url: "ssh://aur@aur.archlinux.org/crush.git"
    commit_author:
      name: "Charm"
      email: "charmcli@users.noreply.github.com"
    makedepends:
      - go
      - git
    prepare: |-
      go mod download
    build: |-
      mkdir completions
      mkdir manpages
      export CGO_CPPFLAGS="${CPPFLAGS}"
      export CGO_CFLAGS="${CFLAGS}"
      export CGO_CXXFLAGS="${CXXFLAGS}"
      export CGO_LDFLAGS="${LDFLAGS}"
      export GOFLAGS="-buildmode=pie -trimpath -mod=readonly -modcacherw"
      go build -ldflags="-w -s -buildid='' -linkmode=external -X main.version=v${pkgver}" .
      ./crush completion bash >./completions/crush.bash
      ./crush completion zsh >./completions/crush.zsh
      ./crush completion fish >./completions/crush.fish
      ./crush man | gzip -c >./manpages/crush.1.gz
    package: |-
      # bin
      install -Dm755 "./crush" "${pkgdir}/usr/bin/crush"
      # license
      mkdir -p "${pkgdir}/usr/share/licenses/crush/"
      install -Dm644 ./LICENSE* "${pkgdir}/usr/share/licenses/crush/"
      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/crush.bash" "${pkgdir}/usr/share/bash-completion/completions/crush"
      install -Dm644 "./completions/crush.zsh" "${pkgdir}/usr/share/zsh/site-functions/_crush"
      install -Dm644 "./completions/crush.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/crush.fish"
      # man pages
      install -Dm644 "./manpages/crush.1.gz" "${pkgdir}/usr/share/man/man1/crush.1.gz"
      # readme
      mkdir -pv "${pkgdir}/usr/share/doc/crush/"
      install -Dm644 README* "${pkgdir}/usr/share/doc/crush/"

aurs:
  - private_key: "{{ .Env.AUR_KEY }}"
    git_url: "ssh://aur@aur.archlinux.org/crush-bin.git"
    commit_author:
      name: "Charm"
      email: "charmcli@users.noreply.github.com"
    provides:
      - crush
    conflicts:
      - crush
    package: |-
      cd "${srcdir}/crush_${pkgver}_Linux_${CARCH}"
      # bin
      install -Dm755 "./crush" "${pkgdir}/usr/bin/crush"
      # license
      mkdir -p "${pkgdir}/usr/share/licenses/crush/"
      install -Dm644 ./LICENSE* "${pkgdir}/usr/share/licenses/crush/"
      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/crush.bash" "${pkgdir}/usr/share/bash-completion/completions/crush"
      install -Dm644 "./completions/crush.zsh" "${pkgdir}/usr/share/zsh/site-functions/_crush"
      install -Dm644 "./completions/crush.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/crush.fish"
      # man pages
      install -Dm644 "./manpages/crush.1.gz" "${pkgdir}/usr/share/man/man1/crush.1.gz"
      # readme
      mkdir -pv "${pkgdir}/usr/share/doc/crush/"
      install -Dm644 README* "${pkgdir}/usr/share/doc/crush/"

furies:
  - disable: "{{ .IsNightly }}"
    account: "{{ with .Env.FURY_TOKEN }}charmcli{{ else }}{{ end }}"
    secret_name: FURY_TOKEN

brews:
  - repository:
      owner: charmbracelet
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: "Charm"
      email: "charmcli@users.noreply.github.com"
    goarm: 7
    extra_install: |-
      bash_completion.install "completions/{{ .ProjectName }}.bash" => "{{ .ProjectName }}"
      zsh_completion.install "completions/{{ .ProjectName }}.zsh" => "_{{ .ProjectName }}"
      fish_completion.install "completions/{{ .ProjectName }}.fish"
      man1.install "manpages/{{ .ProjectName }}.1.gz"

scoops:
  - repository:
      owner: charmbracelet
      name: scoop-bucket
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: "Charm"
      email: "charmcli@users.noreply.github.com"

npms:
  - name: "@charmland/crush"
    repository: "git+https://github.com/charmbracelet/crush.git"
    bugs: https://github.com/charmbracelet/crush/issues
    access: public

nfpms:
  - formats:
      - apk
      - deb
      - rpm
      - archlinux
      - termux.deb
    file_name_template: "{{ .ConventionalFileName }}"
    contents:
      - src: ./completions/crush.bash
        dst: '{{ if eq .Format "termux.deb" }}/data/data/com.termux/files/usr{{ end }}/etc/bash_completion.d/crush'
      - src: ./completions/crush.fish
        dst: '{{ if eq .Format "termux.deb" }}/data/data/com.termux/files{{ end }}/usr/share/fish/vendor_completions.d/crush.fish'
      - src: ./completions/crush.zsh
        dst: '{{ if eq .Format "termux.deb" }}/data/data/com.termux/files{{ end }}/usr/share/zsh/site-functions/_crush'
      - src: ./manpages/crush.1.gz
        dst: '{{ if eq .Format "termux.deb" }}/data/data/com.termux/files{{ end }}/usr/share/man/man1/crush.1.gz'
    rpm:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'
    deb:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'

signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

source:
  enabled: true

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

nix:
  - repository:
      owner: "charmbracelet"
      name: nur
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: "Charm"
      email: "charmcli@users.noreply.github.com"
    license: fsl11Mit
    extra_install: |-
      installManPage ./manpages/crush.1.gz
      installShellCompletion ./completions/*

winget:
  - publisher: charmbracelet
    copyright: Charmbracelet, Inc
    publisher_url: https://charm.land
    release_notes_url: "https://github.com/charmbracelet/crush/releases/tag/{{.Tag}}"
    license_url: https://github.com/charmbracelet/crush/blob/main/LICENSE.md
    commit_author:
      name: "Charm"
      email: "charmcli@users.noreply.github.com"
    repository:
      owner: "charmbracelet"
      name: winget-pkgs
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
      branch: "crush-{{.Version}}"
      pull_request:
        enabled: true
        draft: false
        check_boxes: true
        base:
          owner: microsoft
          name: winget-pkgs
          branch: master

changelog:
  sort: asc
  disable: "{{ .IsNightly }}"
  use: github
  filters:
    exclude:
      - "^(build|ci): "
      - "^chore: auto-update generated files$"
      - "^chore: docs$"
      - "^chore: schema update$"
      - "^chore: schema$"
      - "^chore: typo$"
      - "^chore: update schema$"
      - "^chore: update$"
      - "^chore\\(legal\\): "
      - "^chore\\(deps\\): "
      - "^docs: update$"
      - "^test:"
      - "^test\\("
      - "merge conflict"
      - "merge conflict"
      - Merge branch
      - Merge pull request
      - Merge remote-tracking branch
      - go mod tidy
      - "^wip "
      - "^wip:"
  groups:
    - title: "New Features"
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\(.+\))??!?:.+$'
      order: 150
    - title: "Bug fixes and improvements"
      regexp: '^.*?(fix|refactor)(\(.+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?docs?(\(.+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999

release:
  prerelease: auto
  footer:
    from_url:
      url: https://raw.githubusercontent.com/charmbracelet/meta/main/footer.md



================================================
FILE: internal/ansiext/ansi.go
================================================
package ansiext

import (
	"strings"

	"github.com/charmbracelet/x/ansi"
)

// Escape replaces control characters with their Unicode Control Picture
// representations to ensure they are displayed correctly in the UI.
func Escape(content string) string {
	var sb strings.Builder
	sb.Grow(len(content))
	for _, r := range content {
		switch {
		case r >= 0 && r <= 0x1f: // Control characters 0x00-0x1F
			sb.WriteRune('\u2400' + r)
		case r == ansi.DEL:
			sb.WriteRune('\u2421')
		default:
			sb.WriteRune(r)
		}
	}
	return sb.String()
}



================================================
FILE: internal/app/app.go
================================================
package app

import (
	"context"
	"database/sql"
	"errors"
	"fmt"
	"log/slog"
	"maps"
	"sync"
	"time"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/db"
	"github.com/charmbracelet/crush/internal/format"
	"github.com/charmbracelet/crush/internal/history"
	"github.com/charmbracelet/crush/internal/llm/agent"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/charmbracelet/crush/internal/pubsub"

	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/session"
)

type App struct {
	Sessions    session.Service
	Messages    message.Service
	History     history.Service
	Permissions permission.Service

	CoderAgent agent.Service

	LSPClients map[string]*lsp.Client

	clientsMutex sync.RWMutex

	watcherCancelFuncs *csync.Slice[context.CancelFunc]
	lspWatcherWG       sync.WaitGroup

	config *config.Config

	serviceEventsWG *sync.WaitGroup
	eventsCtx       context.Context
	events          chan tea.Msg
	tuiWG           *sync.WaitGroup

	// global context and cleanup functions
	globalCtx    context.Context
	cleanupFuncs []func()
}

// New initializes a new applcation instance.
func New(ctx context.Context, conn *sql.DB, cfg *config.Config) (*App, error) {
	q := db.New(conn)
	sessions := session.NewService(q)
	messages := message.NewService(q)
	files := history.NewService(q, conn)
	skipPermissionsRequests := cfg.Permissions != nil && cfg.Permissions.SkipRequests
	allowedTools := []string{}
	if cfg.Permissions != nil && cfg.Permissions.AllowedTools != nil {
		allowedTools = cfg.Permissions.AllowedTools
	}

	app := &App{
		Sessions:    sessions,
		Messages:    messages,
		History:     files,
		Permissions: permission.NewPermissionService(cfg.WorkingDir(), skipPermissionsRequests, allowedTools),
		LSPClients:  make(map[string]*lsp.Client),

		globalCtx: ctx,

		config: cfg,

		watcherCancelFuncs: csync.NewSlice[context.CancelFunc](),

		events:          make(chan tea.Msg, 100),
		serviceEventsWG: &sync.WaitGroup{},
		tuiWG:           &sync.WaitGroup{},
	}

	app.setupEvents()

	// Initialize LSP clients in the background.
	app.initLSPClients(ctx)

	// TODO: remove the concept of agent config, most likely.
	if cfg.IsConfigured() {
		if err := app.InitCoderAgent(); err != nil {
			return nil, fmt.Errorf("failed to initialize coder agent: %w", err)
		}
	} else {
		slog.Warn("No agent configuration found")
	}
	return app, nil
}

// Config returns the application configuration.
func (app *App) Config() *config.Config {
	return app.config
}

// RunNonInteractive handles the execution flow when a prompt is provided via
// CLI flag.
func (app *App) RunNonInteractive(ctx context.Context, prompt string, quiet bool) error {
	slog.Info("Running in non-interactive mode")

	ctx, cancel := context.WithCancel(ctx)
	defer cancel()

	// Start spinner if not in quiet mode.
	var spinner *format.Spinner
	if !quiet {
		spinner = format.NewSpinner(ctx, cancel, "Generating")
		spinner.Start()
	}

	// Helper function to stop spinner once.
	stopSpinner := func() {
		if !quiet && spinner != nil {
			spinner.Stop()
			spinner = nil
		}
	}
	defer stopSpinner()

	const maxPromptLengthForTitle = 100
	titlePrefix := "Non-interactive: "
	var titleSuffix string

	if len(prompt) > maxPromptLengthForTitle {
		titleSuffix = prompt[:maxPromptLengthForTitle] + "..."
	} else {
		titleSuffix = prompt
	}
	title := titlePrefix + titleSuffix

	sess, err := app.Sessions.Create(ctx, title)
	if err != nil {
		return fmt.Errorf("failed to create session for non-interactive mode: %w", err)
	}
	slog.Info("Created session for non-interactive run", "session_id", sess.ID)

	// Automatically approve all permission requests for this non-interactive session
	app.Permissions.AutoApproveSession(sess.ID)

	done, err := app.CoderAgent.Run(ctx, sess.ID, prompt)
	if err != nil {
		return fmt.Errorf("failed to start agent processing stream: %w", err)
	}

	messageEvents := app.Messages.Subscribe(ctx)
	readBts := 0

	for {
		select {
		case result := <-done:
			stopSpinner()

			if result.Error != nil {
				if errors.Is(result.Error, context.Canceled) || errors.Is(result.Error, agent.ErrRequestCancelled) {
					slog.Info("Non-interactive: agent processing cancelled", "session_id", sess.ID)
					return nil
				}
				return fmt.Errorf("agent processing failed: %w", result.Error)
			}

			msgContent := result.Message.Content().String()
			if len(msgContent) < readBts {
				slog.Error("Non-interactive: message content is shorter than read bytes", "message_length", len(msgContent), "read_bytes", readBts)
				return fmt.Errorf("message content is shorter than read bytes: %d < %d", len(msgContent), readBts)
			}
			fmt.Println(msgContent[readBts:])

			slog.Info("Non-interactive: run completed", "session_id", sess.ID)
			return nil

		case event := <-messageEvents:
			msg := event.Payload
			if msg.SessionID == sess.ID && msg.Role == message.Assistant && len(msg.Parts) > 0 {
				stopSpinner()
				part := msg.Content().String()[readBts:]
				fmt.Print(part)
				readBts += len(part)
			}

		case <-ctx.Done():
			stopSpinner()
			return ctx.Err()
		}
	}
}

func (app *App) UpdateAgentModel() error {
	return app.CoderAgent.UpdateModel()
}

func (app *App) setupEvents() {
	ctx, cancel := context.WithCancel(app.globalCtx)
	app.eventsCtx = ctx
	setupSubscriber(ctx, app.serviceEventsWG, "sessions", app.Sessions.Subscribe, app.events)
	setupSubscriber(ctx, app.serviceEventsWG, "messages", app.Messages.Subscribe, app.events)
	setupSubscriber(ctx, app.serviceEventsWG, "permissions", app.Permissions.Subscribe, app.events)
	setupSubscriber(ctx, app.serviceEventsWG, "permissions-notifications", app.Permissions.SubscribeNotifications, app.events)
	setupSubscriber(ctx, app.serviceEventsWG, "history", app.History.Subscribe, app.events)
	setupSubscriber(ctx, app.serviceEventsWG, "mcp", agent.SubscribeMCPEvents, app.events)
	setupSubscriber(ctx, app.serviceEventsWG, "lsp", SubscribeLSPEvents, app.events)
	cleanupFunc := func() {
		cancel()
		app.serviceEventsWG.Wait()
	}
	app.cleanupFuncs = append(app.cleanupFuncs, cleanupFunc)
}

func setupSubscriber[T any](
	ctx context.Context,
	wg *sync.WaitGroup,
	name string,
	subscriber func(context.Context) <-chan pubsub.Event[T],
	outputCh chan<- tea.Msg,
) {
	wg.Add(1)
	go func() {
		defer wg.Done()
		subCh := subscriber(ctx)
		for {
			select {
			case event, ok := <-subCh:
				if !ok {
					slog.Debug("subscription channel closed", "name", name)
					return
				}
				var msg tea.Msg = event
				select {
				case outputCh <- msg:
				case <-time.After(2 * time.Second):
					slog.Warn("message dropped due to slow consumer", "name", name)
				case <-ctx.Done():
					slog.Debug("subscription cancelled", "name", name)
					return
				}
			case <-ctx.Done():
				slog.Debug("subscription cancelled", "name", name)
				return
			}
		}
	}()
}

func (app *App) InitCoderAgent() error {
	coderAgentCfg := app.config.Agents["coder"]
	if coderAgentCfg.ID == "" {
		return fmt.Errorf("coder agent configuration is missing")
	}
	var err error
	app.CoderAgent, err = agent.NewAgent(
		app.globalCtx,
		coderAgentCfg,
		app.Permissions,
		app.Sessions,
		app.Messages,
		app.History,
		app.LSPClients,
	)
	if err != nil {
		slog.Error("Failed to create coder agent", "err", err)
		return err
	}

	// Add MCP client cleanup to shutdown process
	app.cleanupFuncs = append(app.cleanupFuncs, agent.CloseMCPClients)

	setupSubscriber(app.eventsCtx, app.serviceEventsWG, "coderAgent", app.CoderAgent.Subscribe, app.events)
	return nil
}

// Subscribe sends events to the TUI as tea.Msgs.
func (app *App) Subscribe(program *tea.Program) {
	defer log.RecoverPanic("app.Subscribe", func() {
		slog.Info("TUI subscription panic: attempting graceful shutdown")
		program.Quit()
	})

	app.tuiWG.Add(1)
	tuiCtx, tuiCancel := context.WithCancel(app.globalCtx)
	app.cleanupFuncs = append(app.cleanupFuncs, func() {
		slog.Debug("Cancelling TUI message handler")
		tuiCancel()
		app.tuiWG.Wait()
	})
	defer app.tuiWG.Done()

	for {
		select {
		case <-tuiCtx.Done():
			slog.Debug("TUI message handler shutting down")
			return
		case msg, ok := <-app.events:
			if !ok {
				slog.Debug("TUI message channel closed")
				return
			}
			program.Send(msg)
		}
	}
}

// Shutdown performs a graceful shutdown of the application.
func (app *App) Shutdown() {
	if app.CoderAgent != nil {
		app.CoderAgent.CancelAll()
	}

	for cancel := range app.watcherCancelFuncs.Seq() {
		cancel()
	}

	// Wait for all LSP watchers to finish.
	app.lspWatcherWG.Wait()

	// Get all LSP clients.
	app.clientsMutex.RLock()
	clients := make(map[string]*lsp.Client, len(app.LSPClients))
	maps.Copy(clients, app.LSPClients)
	app.clientsMutex.RUnlock()

	// Shutdown all LSP clients.
	for name, client := range clients {
		shutdownCtx, cancel := context.WithTimeout(app.globalCtx, 5*time.Second)
		if err := client.Shutdown(shutdownCtx); err != nil {
			slog.Error("Failed to shutdown LSP client", "name", name, "error", err)
		}
		cancel()
	}

	// Call call cleanup functions.
	for _, cleanup := range app.cleanupFuncs {
		if cleanup != nil {
			cleanup()
		}
	}
}



================================================
FILE: internal/app/lsp.go
================================================
package app

import (
	"context"
	"log/slog"
	"time"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/lsp/watcher"
)

// initLSPClients initializes LSP clients.
func (app *App) initLSPClients(ctx context.Context) {
	for name, clientConfig := range app.config.LSP {
		go app.createAndStartLSPClient(ctx, name, clientConfig)
	}
	slog.Info("LSP clients initialization started in background")
}

// createAndStartLSPClient creates a new LSP client, initializes it, and starts its workspace watcher
func (app *App) createAndStartLSPClient(ctx context.Context, name string, config config.LSPConfig) {
	slog.Info("Creating LSP client", "name", name, "command", config.Command, "fileTypes", config.FileTypes, "args", config.Args)

	// Update state to starting
	updateLSPState(name, lsp.StateStarting, nil, nil, 0)

	// Create LSP client.
	lspClient, err := lsp.NewClient(ctx, name, config)
	if err != nil {
		slog.Error("Failed to create LSP client for", name, err)
		updateLSPState(name, lsp.StateError, err, nil, 0)
		return
	}

	// Set diagnostics callback
	lspClient.SetDiagnosticsCallback(updateLSPDiagnostics)

	// Increase initialization timeout as some servers take more time to start.
	initCtx, cancel := context.WithTimeout(ctx, 30*time.Second)
	defer cancel()

	// Initialize LSP client.
	_, err = lspClient.InitializeLSPClient(initCtx, app.config.WorkingDir())
	if err != nil {
		slog.Error("Initialize failed", "name", name, "error", err)
		updateLSPState(name, lsp.StateError, err, lspClient, 0)
		lspClient.Close()
		return
	}

	// Wait for the server to be ready.
	if err := lspClient.WaitForServerReady(initCtx); err != nil {
		slog.Error("Server failed to become ready", "name", name, "error", err)
		// Server never reached a ready state, but let's continue anyway, as
		// some functionality might still work.
		lspClient.SetServerState(lsp.StateError)
		updateLSPState(name, lsp.StateError, err, lspClient, 0)
	} else {
		// Server reached a ready state scuccessfully.
		slog.Info("LSP server is ready", "name", name)
		lspClient.SetServerState(lsp.StateReady)
		updateLSPState(name, lsp.StateReady, nil, lspClient, 0)
	}

	slog.Info("LSP client initialized", "name", name)

	// Create a child context that can be canceled when the app is shutting
	// down.
	watchCtx, cancelFunc := context.WithCancel(ctx)

	// Create the workspace watcher.
	workspaceWatcher := watcher.NewWorkspaceWatcher(name, lspClient)

	// Store the cancel function to be called during cleanup.
	app.watcherCancelFuncs.Append(cancelFunc)

	// Add to map with mutex protection before starting goroutine
	app.clientsMutex.Lock()
	app.LSPClients[name] = lspClient
	app.clientsMutex.Unlock()

	// Run workspace watcher.
	app.lspWatcherWG.Add(1)
	go app.runWorkspaceWatcher(watchCtx, name, workspaceWatcher)
}

// runWorkspaceWatcher executes the workspace watcher for an LSP client.
func (app *App) runWorkspaceWatcher(ctx context.Context, name string, workspaceWatcher *watcher.WorkspaceWatcher) {
	defer app.lspWatcherWG.Done()
	defer log.RecoverPanic("LSP-"+name, func() {
		// Try to restart the client.
		app.restartLSPClient(ctx, name)
	})

	workspaceWatcher.WatchWorkspace(ctx, app.config.WorkingDir())
	slog.Info("Workspace watcher stopped", "client", name)
}

// restartLSPClient attempts to restart a crashed or failed LSP client.
func (app *App) restartLSPClient(ctx context.Context, name string) {
	// Get the original configuration.
	clientConfig, exists := app.config.LSP[name]
	if !exists {
		slog.Error("Cannot restart client, configuration not found", "client", name)
		return
	}

	// Clean up the old client if it exists.
	app.clientsMutex.Lock()
	oldClient, exists := app.LSPClients[name]
	if exists {
		// Remove from map before potentially slow shutdown.
		delete(app.LSPClients, name)
	}
	app.clientsMutex.Unlock()

	if exists && oldClient != nil {
		// Try to shut down client gracefully, but don't block on errors.
		shutdownCtx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
		_ = oldClient.Shutdown(shutdownCtx)
		cancel()
	}

	// Create a new client using the shared function.
	app.createAndStartLSPClient(ctx, name, clientConfig)
	slog.Info("Successfully restarted LSP client", "client", name)
}



================================================
FILE: internal/app/lsp_events.go
================================================
package app

import (
	"context"
	"time"

	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/pubsub"
)

// LSPEventType represents the type of LSP event
type LSPEventType string

const (
	LSPEventStateChanged       LSPEventType = "state_changed"
	LSPEventDiagnosticsChanged LSPEventType = "diagnostics_changed"
)

// LSPEvent represents an event in the LSP system
type LSPEvent struct {
	Type            LSPEventType
	Name            string
	State           lsp.ServerState
	Error           error
	DiagnosticCount int
}

// LSPClientInfo holds information about an LSP client's state
type LSPClientInfo struct {
	Name            string
	State           lsp.ServerState
	Error           error
	Client          *lsp.Client
	DiagnosticCount int
	ConnectedAt     time.Time
}

var (
	lspStates = csync.NewMap[string, LSPClientInfo]()
	lspBroker = pubsub.NewBroker[LSPEvent]()
)

// SubscribeLSPEvents returns a channel for LSP events
func SubscribeLSPEvents(ctx context.Context) <-chan pubsub.Event[LSPEvent] {
	return lspBroker.Subscribe(ctx)
}

// GetLSPStates returns the current state of all LSP clients
func GetLSPStates() map[string]LSPClientInfo {
	states := make(map[string]LSPClientInfo)
	for name, info := range lspStates.Seq2() {
		states[name] = info
	}
	return states
}

// GetLSPState returns the state of a specific LSP client
func GetLSPState(name string) (LSPClientInfo, bool) {
	return lspStates.Get(name)
}

// updateLSPState updates the state of an LSP client and publishes an event
func updateLSPState(name string, state lsp.ServerState, err error, client *lsp.Client, diagnosticCount int) {
	info := LSPClientInfo{
		Name:            name,
		State:           state,
		Error:           err,
		Client:          client,
		DiagnosticCount: diagnosticCount,
	}
	if state == lsp.StateReady {
		info.ConnectedAt = time.Now()
	}
	lspStates.Set(name, info)

	// Publish state change event
	lspBroker.Publish(pubsub.UpdatedEvent, LSPEvent{
		Type:            LSPEventStateChanged,
		Name:            name,
		State:           state,
		Error:           err,
		DiagnosticCount: diagnosticCount,
	})
}

// updateLSPDiagnostics updates the diagnostic count for an LSP client and publishes an event
func updateLSPDiagnostics(name string, diagnosticCount int) {
	if info, exists := lspStates.Get(name); exists {
		info.DiagnosticCount = diagnosticCount
		lspStates.Set(name, info)

		// Publish diagnostics change event
		lspBroker.Publish(pubsub.UpdatedEvent, LSPEvent{
			Type:            LSPEventDiagnosticsChanged,
			Name:            name,
			State:           info.State,
			Error:           info.Error,
			DiagnosticCount: diagnosticCount,
		})
	}
}



================================================
FILE: internal/cmd/logs.go
================================================
package cmd

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"slices"
	"time"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/log/v2"
	"github.com/nxadm/tail"
	"github.com/spf13/cobra"
)

const defaultTailLines = 1000

var logsCmd = &cobra.Command{
	Use:   "logs",
	Short: "View crush logs",
	Long:  `View the logs generated by Crush. This command allows you to see the log output for debugging and monitoring.`,
	RunE: func(cmd *cobra.Command, args []string) error {
		cwd, err := cmd.Flags().GetString("cwd")
		if err != nil {
			return fmt.Errorf("failed to get current working directory: %v", err)
		}

		dataDir, err := cmd.Flags().GetString("data-dir")
		if err != nil {
			return fmt.Errorf("failed to get data directory: %v", err)
		}

		follow, err := cmd.Flags().GetBool("follow")
		if err != nil {
			return fmt.Errorf("failed to get follow flag: %v", err)
		}

		tailLines, err := cmd.Flags().GetInt("tail")
		if err != nil {
			return fmt.Errorf("failed to get tail flag: %v", err)
		}

		log.SetLevel(log.DebugLevel)
		log.SetOutput(os.Stdout)

		cfg, err := config.Load(cwd, dataDir, false)
		if err != nil {
			return fmt.Errorf("failed to load configuration: %v", err)
		}
		logsFile := filepath.Join(cfg.Options.DataDirectory, "logs", "crush.log")
		_, err = os.Stat(logsFile)
		if os.IsNotExist(err) {
			log.Warn("Looks like you are not in a crush project. No logs found.")
			return nil
		}

		if follow {
			return followLogs(cmd.Context(), logsFile, tailLines)
		}

		return showLogs(logsFile, tailLines)
	},
}

func init() {
	logsCmd.Flags().BoolP("follow", "f", false, "Follow log output")
	logsCmd.Flags().IntP("tail", "t", defaultTailLines, "Show only the last N lines default: 1000 for performance")
	rootCmd.AddCommand(logsCmd)
}

func followLogs(ctx context.Context, logsFile string, tailLines int) error {
	t, err := tail.TailFile(logsFile, tail.Config{
		Follow: false,
		ReOpen: false,
		Logger: tail.DiscardingLogger,
	})
	if err != nil {
		return fmt.Errorf("failed to tail log file: %v", err)
	}

	var lines []string
	for line := range t.Lines {
		if line.Err != nil {
			continue
		}
		lines = append(lines, line.Text)
		if len(lines) > tailLines {
			lines = lines[len(lines)-tailLines:]
		}
	}
	t.Stop()

	for _, line := range lines {
		printLogLine(line)
	}

	if len(lines) == tailLines {
		fmt.Fprintf(os.Stderr, "\nShowing last %d lines. Full logs available at: %s\n", tailLines, logsFile)
		fmt.Fprintf(os.Stderr, "Following new log entries...\n\n")
	}

	t, err = tail.TailFile(logsFile, tail.Config{
		Follow:   true,
		ReOpen:   true,
		Logger:   tail.DiscardingLogger,
		Location: &tail.SeekInfo{Offset: 0, Whence: io.SeekEnd},
	})
	if err != nil {
		return fmt.Errorf("failed to tail log file: %v", err)
	}
	defer t.Stop()

	for {
		select {
		case line := <-t.Lines:
			if line.Err != nil {
				continue
			}
			printLogLine(line.Text)
		case <-ctx.Done():
			return nil
		}
	}
}

func showLogs(logsFile string, tailLines int) error {
	t, err := tail.TailFile(logsFile, tail.Config{
		Follow:      false,
		ReOpen:      false,
		Logger:      tail.DiscardingLogger,
		MaxLineSize: 0,
	})
	if err != nil {
		return fmt.Errorf("failed to tail log file: %v", err)
	}
	defer t.Stop()

	var lines []string
	for line := range t.Lines {
		if line.Err != nil {
			continue
		}
		lines = append(lines, line.Text)
		if len(lines) > tailLines {
			lines = lines[len(lines)-tailLines:]
		}
	}

	for _, line := range lines {
		printLogLine(line)
	}

	if len(lines) == tailLines {
		fmt.Fprintf(os.Stderr, "\nShowing last %d lines. Full logs available at: %s\n", tailLines, logsFile)
	}

	return nil
}

func printLogLine(lineText string) {
	var data map[string]any
	if err := json.Unmarshal([]byte(lineText), &data); err != nil {
		return
	}
	msg := data["msg"]
	level := data["level"]
	otherData := []any{}
	keys := []string{}
	for k := range data {
		keys = append(keys, k)
	}
	slices.Sort(keys)
	for _, k := range keys {
		switch k {
		case "msg", "level", "time":
			continue
		case "source":
			source, ok := data[k].(map[string]any)
			if !ok {
				continue
			}
			sourceFile := fmt.Sprintf("%s:%d", source["file"], int(source["line"].(float64)))
			otherData = append(otherData, "source", sourceFile)

		default:
			otherData = append(otherData, k, data[k])
		}
	}
	log.SetTimeFunction(func(_ time.Time) time.Time {
		// parse the timestamp from the log line if available
		t, err := time.Parse(time.RFC3339, data["time"].(string))
		if err != nil {
			return time.Now() // fallback to current time if parsing fails
		}
		return t
	})
	switch level {
	case "INFO":
		log.Info(msg, otherData...)
	case "DEBUG":
		log.Debug(msg, otherData...)
	case "ERROR":
		log.Error(msg, otherData...)
	case "WARN":
		log.Warn(msg, otherData...)
	default:
		log.Info(msg, otherData...)
	}
}



================================================
FILE: internal/cmd/root.go
================================================
package cmd

import (
	"context"
	"fmt"
	"io"
	"log/slog"
	"os"
	"path/filepath"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/app"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/db"
	"github.com/charmbracelet/crush/internal/tui"
	"github.com/charmbracelet/crush/internal/version"
	"github.com/charmbracelet/fang"
	"github.com/charmbracelet/x/term"
	"github.com/spf13/cobra"
)

func init() {
	rootCmd.PersistentFlags().StringP("cwd", "c", "", "Current working directory")
	rootCmd.PersistentFlags().StringP("data-dir", "D", "", "Custom crush data directory")
	rootCmd.PersistentFlags().BoolP("debug", "d", false, "Debug")

	rootCmd.Flags().BoolP("help", "h", false, "Help")
	rootCmd.Flags().BoolP("yolo", "y", false, "Automatically accept all permissions (dangerous mode)")

	rootCmd.AddCommand(runCmd)
}

var rootCmd = &cobra.Command{
	Use:   "crush",
	Short: "Terminal-based AI assistant for software development",
	Long: `Crush is a powerful terminal-based AI assistant that helps with software development tasks.
It provides an interactive chat interface with AI capabilities, code analysis, and LSP integration
to assist developers in writing, debugging, and understanding code directly from the terminal.`,
	Example: `
# Run in interactive mode
crush

# Run with debug logging
crush -d

# Run with debug logging in a specific directory
crush -d -c /path/to/project

# Run with custom data directory
crush -D /path/to/custom/.crush

# Print version
crush -v

# Run a single non-interactive prompt
crush run "Explain the use of context in Go"

# Run in dangerous mode (auto-accept all permissions)
crush -y
  `,
	RunE: func(cmd *cobra.Command, args []string) error {
		app, err := setupApp(cmd)
		if err != nil {
			return err
		}
		defer app.Shutdown()

		// Set up the TUI.
		program := tea.NewProgram(
			tui.New(app),
			tea.WithAltScreen(),
			tea.WithContext(cmd.Context()),
			tea.WithMouseCellMotion(),            // Use cell motion instead of all motion to reduce event flooding
			tea.WithFilter(tui.MouseEventFilter), // Filter mouse events based on focus state
		)

		go app.Subscribe(program)

		if _, err := program.Run(); err != nil {
			slog.Error("TUI run error", "error", err)
			return fmt.Errorf("TUI error: %v", err)
		}
		return nil
	},
}

func Execute() {
	if err := fang.Execute(
		context.Background(),
		rootCmd,
		fang.WithVersion(version.Version),
		fang.WithNotifySignal(os.Interrupt),
	); err != nil {
		os.Exit(1)
	}
}

// setupApp handles the common setup logic for both interactive and non-interactive modes.
// It returns the app instance, config, cleanup function, and any error.
func setupApp(cmd *cobra.Command) (*app.App, error) {
	debug, _ := cmd.Flags().GetBool("debug")
	yolo, _ := cmd.Flags().GetBool("yolo")
	dataDir, _ := cmd.Flags().GetString("data-dir")
	ctx := cmd.Context()

	cwd, err := ResolveCwd(cmd)
	if err != nil {
		return nil, err
	}

	cfg, err := config.Init(cwd, dataDir, debug)
	if err != nil {
		return nil, err
	}

	if cfg.Permissions == nil {
		cfg.Permissions = &config.Permissions{}
	}
	cfg.Permissions.SkipRequests = yolo

	if err := createDotCrushDir(cfg.Options.DataDirectory); err != nil {
		return nil, err
	}

	// Connect to DB; this will also run migrations.
	conn, err := db.Connect(ctx, cfg.Options.DataDirectory)
	if err != nil {
		return nil, err
	}

	appInstance, err := app.New(ctx, conn, cfg)
	if err != nil {
		slog.Error("Failed to create app instance", "error", err)
		return nil, err
	}

	return appInstance, nil
}

func MaybePrependStdin(prompt string) (string, error) {
	if term.IsTerminal(os.Stdin.Fd()) {
		return prompt, nil
	}
	fi, err := os.Stdin.Stat()
	if err != nil {
		return prompt, err
	}
	if fi.Mode()&os.ModeNamedPipe == 0 {
		return prompt, nil
	}
	bts, err := io.ReadAll(os.Stdin)
	if err != nil {
		return prompt, err
	}
	return string(bts) + "\n\n" + prompt, nil
}

func ResolveCwd(cmd *cobra.Command) (string, error) {
	cwd, _ := cmd.Flags().GetString("cwd")
	if cwd != "" {
		err := os.Chdir(cwd)
		if err != nil {
			return "", fmt.Errorf("failed to change directory: %v", err)
		}
		return cwd, nil
	}
	cwd, err := os.Getwd()
	if err != nil {
		return "", fmt.Errorf("failed to get current working directory: %v", err)
	}
	return cwd, nil
}

func createDotCrushDir(dir string) error {
	if err := os.MkdirAll(dir, 0o700); err != nil {
		return fmt.Errorf("failed to create data directory: %q %w", dir, err)
	}

	gitIgnorePath := filepath.Join(dir, ".gitignore")
	if _, err := os.Stat(gitIgnorePath); os.IsNotExist(err) {
		if err := os.WriteFile(gitIgnorePath, []byte("*\n"), 0o644); err != nil {
			return fmt.Errorf("failed to create .gitignore file: %q %w", gitIgnorePath, err)
		}
	}

	return nil
}



================================================
FILE: internal/cmd/run.go
================================================
package cmd

import (
	"fmt"
	"log/slog"
	"strings"

	"github.com/spf13/cobra"
)

var runCmd = &cobra.Command{
	Use:   "run [prompt...]",
	Short: "Run a single non-interactive prompt",
	Long: `Run a single prompt in non-interactive mode and exit.
The prompt can be provided as arguments or piped from stdin.`,
	Example: `
# Run a simple prompt
crush run Explain the use of context in Go

# Pipe input from stdin
echo "What is this code doing?" | crush run

# Run with quiet mode (no spinner)
crush run -q "Generate a README for this project"
  `,
	RunE: func(cmd *cobra.Command, args []string) error {
		quiet, _ := cmd.Flags().GetBool("quiet")

		app, err := setupApp(cmd)
		if err != nil {
			return err
		}
		defer app.Shutdown()

		if !app.Config().IsConfigured() {
			return fmt.Errorf("no providers configured - please run 'crush' to set up a provider interactively")
		}

		prompt := strings.Join(args, " ")

		prompt, err = MaybePrependStdin(prompt)
		if err != nil {
			slog.Error("Failed to read from stdin", "error", err)
			return err
		}

		if prompt == "" {
			return fmt.Errorf("no prompt provided")
		}

		// Run non-interactive flow using the App method
		return app.RunNonInteractive(cmd.Context(), prompt, quiet)
	},
}

func init() {
	runCmd.Flags().BoolP("quiet", "q", false, "Hide spinner")
}



================================================
FILE: internal/cmd/schema.go
================================================
package cmd

import (
	"encoding/json"
	"fmt"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/invopop/jsonschema"
	"github.com/spf13/cobra"
)

var schemaCmd = &cobra.Command{
	Use:    "schema",
	Short:  "Generate JSON schema for configuration",
	Long:   "Generate JSON schema for the crush configuration file",
	Hidden: true,
	RunE: func(cmd *cobra.Command, args []string) error {
		reflector := new(jsonschema.Reflector)
		bts, err := json.MarshalIndent(reflector.Reflect(&config.Config{}), "", "  ")
		if err != nil {
			return fmt.Errorf("failed to marshal schema: %w", err)
		}
		fmt.Println(string(bts))
		return nil
	},
}

func init() {
	rootCmd.AddCommand(schemaCmd)
}



================================================
FILE: internal/config/config.go
================================================
package config

import (
	"context"
	"fmt"
	"log/slog"
	"net/http"
	"net/url"
	"os"
	"slices"
	"strings"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/env"
	"github.com/tidwall/sjson"
)

const (
	appName              = "crush"
	defaultDataDirectory = ".crush"
)

var defaultContextPaths = []string{
	".github/copilot-instructions.md",
	".cursorrules",
	".cursor/rules/",
	"CLAUDE.md",
	"CLAUDE.local.md",
	"GEMINI.md",
	"gemini.md",
	"crush.md",
	"crush.local.md",
	"Crush.md",
	"Crush.local.md",
	"CRUSH.md",
	"CRUSH.local.md",
	"AGENTS.md",
	"agents.md",
	"Agents.md",
}

type SelectedModelType string

const (
	SelectedModelTypeLarge SelectedModelType = "large"
	SelectedModelTypeSmall SelectedModelType = "small"
)

type SelectedModel struct {
	// The model id as used by the provider API.
	// Required.
	Model string `json:"model" jsonschema:"required,description=The model ID as used by the provider API,example=gpt-4o"`
	// The model provider, same as the key/id used in the providers config.
	// Required.
	Provider string `json:"provider" jsonschema:"required,description=The model provider ID that matches a key in the providers config,example=openai"`

	// Only used by models that use the openai provider and need this set.
	ReasoningEffort string `json:"reasoning_effort,omitempty" jsonschema:"description=Reasoning effort level for OpenAI models that support it,enum=low,enum=medium,enum=high"`

	// Overrides the default model configuration.
	MaxTokens int64 `json:"max_tokens,omitempty" jsonschema:"description=Maximum number of tokens for model responses,minimum=1,maximum=200000,example=4096"`

	// Used by anthropic models that can reason to indicate if the model should think.
	Think bool `json:"think,omitempty" jsonschema:"description=Enable thinking mode for Anthropic models that support reasoning"`
}

type ProviderConfig struct {
	// The provider's id.
	ID string `json:"id,omitempty" jsonschema:"description=Unique identifier for the provider,example=openai"`
	// The provider's name, used for display purposes.
	Name string `json:"name,omitempty" jsonschema:"description=Human-readable name for the provider,example=OpenAI"`
	// The provider's API endpoint.
	BaseURL string `json:"base_url,omitempty" jsonschema:"description=Base URL for the provider's API,format=uri,example=https://api.openai.com/v1"`
	// The provider type, e.g. "openai", "anthropic", etc. if empty it defaults to openai.
	Type catwalk.Type `json:"type,omitempty" jsonschema:"description=Provider type that determines the API format,enum=openai,enum=anthropic,enum=gemini,enum=azure,enum=vertexai,default=openai"`
	// The provider's API key.
	APIKey string `json:"api_key,omitempty" jsonschema:"description=API key for authentication with the provider,example=$OPENAI_API_KEY"`
	// Marks the provider as disabled.
	Disable bool `json:"disable,omitempty" jsonschema:"description=Whether this provider is disabled,default=false"`

	// Custom system prompt prefix.
	SystemPromptPrefix string `json:"system_prompt_prefix,omitempty" jsonschema:"description=Custom prefix to add to system prompts for this provider"`

	// Extra headers to send with each request to the provider.
	ExtraHeaders map[string]string `json:"extra_headers,omitempty" jsonschema:"description=Additional HTTP headers to send with requests"`
	// Extra body
	ExtraBody map[string]any `json:"extra_body,omitempty" jsonschema:"description=Additional fields to include in request bodies"`

	// Used to pass extra parameters to the provider.
	ExtraParams map[string]string `json:"-"`

	// The provider models
	Models []catwalk.Model `json:"models,omitempty" jsonschema:"description=List of models available from this provider"`
}

type MCPType string

const (
	MCPStdio MCPType = "stdio"
	MCPSse   MCPType = "sse"
	MCPHttp  MCPType = "http"
)

type MCPConfig struct {
	Command  string            `json:"command,omitempty" jsonschema:"description=Command to execute for stdio MCP servers,example=npx"`
	Env      map[string]string `json:"env,omitempty" jsonschema:"description=Environment variables to set for the MCP server"`
	Args     []string          `json:"args,omitempty" jsonschema:"description=Arguments to pass to the MCP server command"`
	Type     MCPType           `json:"type" jsonschema:"required,description=Type of MCP connection,enum=stdio,enum=sse,enum=http,default=stdio"`
	URL      string            `json:"url,omitempty" jsonschema:"description=URL for HTTP or SSE MCP servers,format=uri,example=http://localhost:3000/mcp"`
	Disabled bool              `json:"disabled,omitempty" jsonschema:"description=Whether this MCP server is disabled,default=false"`
	Timeout  int               `json:"timeout,omitempty" jsonschema:"description=Timeout in seconds for MCP server connections,default=15,example=30,example=60,example=120"`

	// TODO: maybe make it possible to get the value from the env
	Headers map[string]string `json:"headers,omitempty" jsonschema:"description=HTTP headers for HTTP/SSE MCP servers"`
}

type LSPConfig struct {
	Disabled  bool              `json:"enabled,omitempty" jsonschema:"description=Whether this LSP server is disabled,default=false"`
	Command   string            `json:"command" jsonschema:"required,description=Command to execute for the LSP server,example=gopls"`
	Args      []string          `json:"args,omitempty" jsonschema:"description=Arguments to pass to the LSP server command"`
	Env       map[string]string `json:"env,omitempty" jsonschema:"description=Environment variables to set to the LSP server command"`
	Options   any               `json:"options,omitempty" jsonschema:"description=LSP server-specific configuration options"`
	FileTypes []string          `json:"filetypes,omitempty" jsonschema:"description=File types this LSP server handles,example=go,example=mod,example=rs,example=c,example=js,example=ts"`
}

type TUIOptions struct {
	CompactMode bool   `json:"compact_mode,omitempty" jsonschema:"description=Enable compact mode for the TUI interface,default=false"`
	DiffMode    string `json:"diff_mode,omitempty" jsonschema:"description=Diff mode for the TUI interface,enum=unified,enum=split"`
	// Here we can add themes later or any TUI related options
}

type Permissions struct {
	AllowedTools []string `json:"allowed_tools,omitempty" jsonschema:"description=List of tools that don't require permission prompts,example=bash,example=view"` // Tools that don't require permission prompts
	SkipRequests bool     `json:"-"`                                                                                                                              // Automatically accept all permissions (YOLO mode)
}

type Options struct {
	ContextPaths         []string    `json:"context_paths,omitempty" jsonschema:"description=Paths to files containing context information for the AI,example=.cursorrules,example=CRUSH.md"`
	TUI                  *TUIOptions `json:"tui,omitempty" jsonschema:"description=Terminal user interface options"`
	Debug                bool        `json:"debug,omitempty" jsonschema:"description=Enable debug logging,default=false"`
	DebugLSP             bool        `json:"debug_lsp,omitempty" jsonschema:"description=Enable debug logging for LSP servers,default=false"`
	DisableAutoSummarize bool        `json:"disable_auto_summarize,omitempty" jsonschema:"description=Disable automatic conversation summarization,default=false"`
	DataDirectory        string      `json:"data_directory,omitempty" jsonschema:"description=Directory for storing application data (relative to working directory),default=.crush,example=.crush"` // Relative to the cwd
}

type MCPs map[string]MCPConfig

type MCP struct {
	Name string    `json:"name"`
	MCP  MCPConfig `json:"mcp"`
}

func (m MCPs) Sorted() []MCP {
	sorted := make([]MCP, 0, len(m))
	for k, v := range m {
		sorted = append(sorted, MCP{
			Name: k,
			MCP:  v,
		})
	}
	slices.SortFunc(sorted, func(a, b MCP) int {
		return strings.Compare(a.Name, b.Name)
	})
	return sorted
}

type LSPs map[string]LSPConfig

type LSP struct {
	Name string    `json:"name"`
	LSP  LSPConfig `json:"lsp"`
}

func (l LSPs) Sorted() []LSP {
	sorted := make([]LSP, 0, len(l))
	for k, v := range l {
		sorted = append(sorted, LSP{
			Name: k,
			LSP:  v,
		})
	}
	slices.SortFunc(sorted, func(a, b LSP) int {
		return strings.Compare(a.Name, b.Name)
	})
	return sorted
}

func (l LSPConfig) ResolvedEnv() []string {
	return resolveEnvs(l.Env)
}

func (m MCPConfig) ResolvedEnv() []string {
	return resolveEnvs(m.Env)
}

func (m MCPConfig) ResolvedHeaders() map[string]string {
	resolver := NewShellVariableResolver(env.New())
	for e, v := range m.Headers {
		var err error
		m.Headers[e], err = resolver.ResolveValue(v)
		if err != nil {
			slog.Error("error resolving header variable", "error", err, "variable", e, "value", v)
			continue
		}
	}
	return m.Headers
}

type Agent struct {
	ID          string `json:"id,omitempty"`
	Name        string `json:"name,omitempty"`
	Description string `json:"description,omitempty"`
	// This is the id of the system prompt used by the agent
	Disabled bool `json:"disabled,omitempty"`

	Model SelectedModelType `json:"model" jsonschema:"required,description=The model type to use for this agent,enum=large,enum=small,default=large"`

	// The available tools for the agent
	//  if this is nil, all tools are available
	AllowedTools []string `json:"allowed_tools,omitempty"`

	// this tells us which MCPs are available for this agent
	//  if this is empty all mcps are available
	//  the string array is the list of tools from the AllowedMCP the agent has available
	//  if the string array is nil, all tools from the AllowedMCP are available
	AllowedMCP map[string][]string `json:"allowed_mcp,omitempty"`

	// The list of LSPs that this agent can use
	//  if this is nil, all LSPs are available
	AllowedLSP []string `json:"allowed_lsp,omitempty"`

	// Overrides the context paths for this agent
	ContextPaths []string `json:"context_paths,omitempty"`
}

// Config holds the configuration for crush.
type Config struct {
	Schema string `json:"$schema,omitempty"`

	// We currently only support large/small as values here.
	Models map[SelectedModelType]SelectedModel `json:"models,omitempty" jsonschema:"description=Model configurations for different model types,example={\"large\":{\"model\":\"gpt-4o\",\"provider\":\"openai\"}}"`

	// The providers that are configured
	Providers *csync.Map[string, ProviderConfig] `json:"providers,omitempty" jsonschema:"description=AI provider configurations"`

	MCP MCPs `json:"mcp,omitempty" jsonschema:"description=Model Context Protocol server configurations"`

	LSP LSPs `json:"lsp,omitempty" jsonschema:"description=Language Server Protocol configurations"`

	Options *Options `json:"options,omitempty" jsonschema:"description=General application options"`

	Permissions *Permissions `json:"permissions,omitempty" jsonschema:"description=Permission settings for tool usage"`

	// Internal
	workingDir string `json:"-"`
	// TODO: most likely remove this concept when I come back to it
	Agents map[string]Agent `json:"-"`
	// TODO: find a better way to do this this should probably not be part of the config
	resolver       VariableResolver
	dataConfigDir  string             `json:"-"`
	knownProviders []catwalk.Provider `json:"-"`
}

func (c *Config) WorkingDir() string {
	return c.workingDir
}

func (c *Config) EnabledProviders() []ProviderConfig {
	var enabled []ProviderConfig
	for p := range c.Providers.Seq() {
		if !p.Disable {
			enabled = append(enabled, p)
		}
	}
	return enabled
}

// IsConfigured  return true if at least one provider is configured
func (c *Config) IsConfigured() bool {
	return len(c.EnabledProviders()) > 0
}

func (c *Config) GetModel(provider, model string) *catwalk.Model {
	if providerConfig, ok := c.Providers.Get(provider); ok {
		for _, m := range providerConfig.Models {
			if m.ID == model {
				return &m
			}
		}
	}
	return nil
}

func (c *Config) GetProviderForModel(modelType SelectedModelType) *ProviderConfig {
	model, ok := c.Models[modelType]
	if !ok {
		return nil
	}
	if providerConfig, ok := c.Providers.Get(model.Provider); ok {
		return &providerConfig
	}
	return nil
}

func (c *Config) GetModelByType(modelType SelectedModelType) *catwalk.Model {
	model, ok := c.Models[modelType]
	if !ok {
		return nil
	}
	return c.GetModel(model.Provider, model.Model)
}

func (c *Config) LargeModel() *catwalk.Model {
	model, ok := c.Models[SelectedModelTypeLarge]
	if !ok {
		return nil
	}
	return c.GetModel(model.Provider, model.Model)
}

func (c *Config) SmallModel() *catwalk.Model {
	model, ok := c.Models[SelectedModelTypeSmall]
	if !ok {
		return nil
	}
	return c.GetModel(model.Provider, model.Model)
}

func (c *Config) SetCompactMode(enabled bool) error {
	if c.Options == nil {
		c.Options = &Options{}
	}
	c.Options.TUI.CompactMode = enabled
	return c.SetConfigField("options.tui.compact_mode", enabled)
}

func (c *Config) Resolve(key string) (string, error) {
	if c.resolver == nil {
		return "", fmt.Errorf("no variable resolver configured")
	}
	return c.resolver.ResolveValue(key)
}

func (c *Config) UpdatePreferredModel(modelType SelectedModelType, model SelectedModel) error {
	c.Models[modelType] = model
	if err := c.SetConfigField(fmt.Sprintf("models.%s", modelType), model); err != nil {
		return fmt.Errorf("failed to update preferred model: %w", err)
	}
	return nil
}

func (c *Config) SetConfigField(key string, value any) error {
	// read the data
	data, err := os.ReadFile(c.dataConfigDir)
	if err != nil {
		if os.IsNotExist(err) {
			data = []byte("{}")
		} else {
			return fmt.Errorf("failed to read config file: %w", err)
		}
	}

	newValue, err := sjson.Set(string(data), key, value)
	if err != nil {
		return fmt.Errorf("failed to set config field %s: %w", key, err)
	}
	if err := os.WriteFile(c.dataConfigDir, []byte(newValue), 0o600); err != nil {
		return fmt.Errorf("failed to write config file: %w", err)
	}
	return nil
}

func (c *Config) SetProviderAPIKey(providerID, apiKey string) error {
	// First save to the config file
	err := c.SetConfigField("providers."+providerID+".api_key", apiKey)
	if err != nil {
		return fmt.Errorf("failed to save API key to config file: %w", err)
	}

	providerConfig, exists := c.Providers.Get(providerID)
	if exists {
		providerConfig.APIKey = apiKey
		c.Providers.Set(providerID, providerConfig)
		return nil
	}

	var foundProvider *catwalk.Provider
	for _, p := range c.knownProviders {
		if string(p.ID) == providerID {
			foundProvider = &p
			break
		}
	}

	if foundProvider != nil {
		// Create new provider config based on known provider
		providerConfig = ProviderConfig{
			ID:           providerID,
			Name:         foundProvider.Name,
			BaseURL:      foundProvider.APIEndpoint,
			Type:         foundProvider.Type,
			APIKey:       apiKey,
			Disable:      false,
			ExtraHeaders: make(map[string]string),
			ExtraParams:  make(map[string]string),
			Models:       foundProvider.Models,
		}
	} else {
		return fmt.Errorf("provider with ID %s not found in known providers", providerID)
	}
	// Store the updated provider config
	c.Providers.Set(providerID, providerConfig)
	return nil
}

func (c *Config) SetupAgents() {
	agents := map[string]Agent{
		"coder": {
			ID:           "coder",
			Name:         "Coder",
			Description:  "An agent that helps with executing coding tasks.",
			Model:        SelectedModelTypeLarge,
			ContextPaths: c.Options.ContextPaths,
			// All tools allowed
		},
		"task": {
			ID:           "task",
			Name:         "Task",
			Description:  "An agent that helps with searching for context and finding implementation details.",
			Model:        SelectedModelTypeLarge,
			ContextPaths: c.Options.ContextPaths,
			AllowedTools: []string{
				"glob",
				"grep",
				"ls",
				"sourcegraph",
				"view",
			},
			// NO MCPs or LSPs by default
			AllowedMCP: map[string][]string{},
			AllowedLSP: []string{},
		},
	}
	c.Agents = agents
}

func (c *Config) Resolver() VariableResolver {
	return c.resolver
}

func (c *ProviderConfig) TestConnection(resolver VariableResolver) error {
	testURL := ""
	headers := make(map[string]string)
	apiKey, _ := resolver.ResolveValue(c.APIKey)
	switch c.Type {
	case catwalk.TypeOpenAI:
		baseURL, _ := resolver.ResolveValue(c.BaseURL)
		if baseURL == "" {
			baseURL = "https://api.openai.com/v1"
		}
		testURL = baseURL + "/models"
		headers["Authorization"] = "Bearer " + apiKey
	case catwalk.TypeAnthropic:
		baseURL, _ := resolver.ResolveValue(c.BaseURL)
		if baseURL == "" {
			baseURL = "https://api.anthropic.com/v1"
		}
		testURL = baseURL + "/models"
		headers["x-api-key"] = apiKey
		headers["anthropic-version"] = "2023-06-01"
	case catwalk.TypeGemini:
		baseURL, _ := resolver.ResolveValue(c.BaseURL)
		if baseURL == "" {
			baseURL = "https://generativelanguage.googleapis.com"
		}
		testURL = baseURL + "/v1beta/models?key=" + url.QueryEscape(apiKey)
	}
	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()
	client := &http.Client{}
	req, err := http.NewRequestWithContext(ctx, "GET", testURL, nil)
	if err != nil {
		return fmt.Errorf("failed to create request for provider %s: %w", c.ID, err)
	}
	for k, v := range headers {
		req.Header.Set(k, v)
	}
	for k, v := range c.ExtraHeaders {
		req.Header.Set(k, v)
	}
	b, err := client.Do(req)
	if err != nil {
		return fmt.Errorf("failed to create request for provider %s: %w", c.ID, err)
	}
	if b.StatusCode != http.StatusOK {
		return fmt.Errorf("failed to connect to provider %s: %s", c.ID, b.Status)
	}
	_ = b.Body.Close()
	return nil
}

func resolveEnvs(envs map[string]string) []string {
	resolver := NewShellVariableResolver(env.New())
	for e, v := range envs {
		var err error
		envs[e], err = resolver.ResolveValue(v)
		if err != nil {
			slog.Error("error resolving environment variable", "error", err, "variable", e, "value", v)
			continue
		}
	}

	res := make([]string, 0, len(envs))
	for k, v := range envs {
		res = append(res, fmt.Sprintf("%s=%s", k, v))
	}
	return res
}



================================================
FILE: internal/config/init.go
================================================
package config

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"
	"sync/atomic"
)

const (
	InitFlagFilename = "init"
)

type ProjectInitFlag struct {
	Initialized bool `json:"initialized"`
}

// TODO: we need to remove the global config instance keeping it now just until everything is migrated
var instance atomic.Pointer[Config]

func Init(workingDir, dataDir string, debug bool) (*Config, error) {
	cfg, err := Load(workingDir, dataDir, debug)
	if err != nil {
		return nil, err
	}
	instance.Store(cfg)
	return instance.Load(), nil
}

func Get() *Config {
	cfg := instance.Load()
	return cfg
}

func ProjectNeedsInitialization() (bool, error) {
	cfg := Get()
	if cfg == nil {
		return false, fmt.Errorf("config not loaded")
	}

	flagFilePath := filepath.Join(cfg.Options.DataDirectory, InitFlagFilename)

	_, err := os.Stat(flagFilePath)
	if err == nil {
		return false, nil
	}

	if !os.IsNotExist(err) {
		return false, fmt.Errorf("failed to check init flag file: %w", err)
	}

	crushExists, err := crushMdExists(cfg.WorkingDir())
	if err != nil {
		return false, fmt.Errorf("failed to check for CRUSH.md files: %w", err)
	}
	if crushExists {
		return false, nil
	}

	return true, nil
}

func crushMdExists(dir string) (bool, error) {
	entries, err := os.ReadDir(dir)
	if err != nil {
		return false, err
	}

	for _, entry := range entries {
		if entry.IsDir() {
			continue
		}

		name := strings.ToLower(entry.Name())
		if name == "crush.md" {
			return true, nil
		}
	}

	return false, nil
}

func MarkProjectInitialized() error {
	cfg := Get()
	if cfg == nil {
		return fmt.Errorf("config not loaded")
	}
	flagFilePath := filepath.Join(cfg.Options.DataDirectory, InitFlagFilename)

	file, err := os.Create(flagFilePath)
	if err != nil {
		return fmt.Errorf("failed to create init flag file: %w", err)
	}
	defer file.Close()

	return nil
}

func HasInitialDataConfig() bool {
	cfgPath := GlobalConfigData()
	if _, err := os.Stat(cfgPath); err != nil {
		return false
	}
	return Get().IsConfigured()
}



================================================
FILE: internal/config/load.go
================================================
package config

import (
	"encoding/json"
	"fmt"
	"io"
	"log/slog"
	"maps"
	"os"
	"path/filepath"
	"runtime"
	"slices"
	"strings"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/env"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/log"
)

const defaultCatwalkURL = "https://catwalk.charm.sh"

// LoadReader config via io.Reader.
func LoadReader(fd io.Reader) (*Config, error) {
	data, err := io.ReadAll(fd)
	if err != nil {
		return nil, err
	}

	var config Config
	err = json.Unmarshal(data, &config)
	if err != nil {
		return nil, err
	}
	return &config, err
}

// Load loads the configuration from the default paths.
func Load(workingDir, dataDir string, debug bool) (*Config, error) {
	// uses default config paths
	configPaths := []string{
		globalConfig(),
		GlobalConfigData(),
		filepath.Join(workingDir, fmt.Sprintf("%s.json", appName)),
		filepath.Join(workingDir, fmt.Sprintf(".%s.json", appName)),
	}
	cfg, err := loadFromConfigPaths(configPaths)
	if err != nil {
		return nil, fmt.Errorf("failed to load config from paths %v: %w", configPaths, err)
	}

	cfg.dataConfigDir = GlobalConfigData()

	cfg.setDefaults(workingDir, dataDir)

	if debug {
		cfg.Options.Debug = true
	}

	// Setup logs
	log.Setup(
		filepath.Join(cfg.Options.DataDirectory, "logs", fmt.Sprintf("%s.log", appName)),
		cfg.Options.Debug,
	)

	// Load known providers, this loads the config from catwalk
	providers, err := Providers()
	if err != nil || len(providers) == 0 {
		return nil, fmt.Errorf("failed to load providers: %w", err)
	}
	cfg.knownProviders = providers

	env := env.New()
	// Configure providers
	valueResolver := NewShellVariableResolver(env)
	cfg.resolver = valueResolver
	if err := cfg.configureProviders(env, valueResolver, providers); err != nil {
		return nil, fmt.Errorf("failed to configure providers: %w", err)
	}

	if !cfg.IsConfigured() {
		slog.Warn("No providers configured")
		return cfg, nil
	}

	if err := cfg.configureSelectedModels(providers); err != nil {
		return nil, fmt.Errorf("failed to configure selected models: %w", err)
	}
	cfg.SetupAgents()
	return cfg, nil
}

func PushPopCrushEnv() func() {
	found := []string{}
	for _, ev := range os.Environ() {
		if strings.HasPrefix(ev, "CRUSH_") {
			pair := strings.SplitN(ev, "=", 2)
			if len(pair) != 2 {
				continue
			}
			found = append(found, strings.TrimPrefix(pair[0], "CRUSH_"))
		}
	}
	backups := make(map[string]string)
	for _, ev := range found {
		backups[ev] = os.Getenv(ev)
	}

	for _, ev := range found {
		os.Setenv(ev, os.Getenv("CRUSH_"+ev))
	}

	restore := func() {
		for k, v := range backups {
			os.Setenv(k, v)
		}
	}
	return restore
}

func (c *Config) configureProviders(env env.Env, resolver VariableResolver, knownProviders []catwalk.Provider) error {
	knownProviderNames := make(map[string]bool)
	restore := PushPopCrushEnv()
	defer restore()
	for _, p := range knownProviders {
		knownProviderNames[string(p.ID)] = true
		config, configExists := c.Providers.Get(string(p.ID))
		// if the user configured a known provider we need to allow it to override a couple of parameters
		if configExists {
			if config.Disable {
				slog.Debug("Skipping provider due to disable flag", "provider", p.ID)
				c.Providers.Del(string(p.ID))
				continue
			}
			if config.BaseURL != "" {
				p.APIEndpoint = config.BaseURL
			}
			if config.APIKey != "" {
				p.APIKey = config.APIKey
			}
			if len(config.Models) > 0 {
				models := []catwalk.Model{}
				seen := make(map[string]bool)

				for _, model := range config.Models {
					if seen[model.ID] {
						continue
					}
					seen[model.ID] = true
					if model.Name == "" {
						model.Name = model.ID
					}
					models = append(models, model)
				}
				for _, model := range p.Models {
					if seen[model.ID] {
						continue
					}
					seen[model.ID] = true
					if model.Name == "" {
						model.Name = model.ID
					}
					models = append(models, model)
				}

				p.Models = models
			}
		}

		headers := map[string]string{}
		if len(p.DefaultHeaders) > 0 {
			maps.Copy(headers, p.DefaultHeaders)
		}
		if len(config.ExtraHeaders) > 0 {
			maps.Copy(headers, config.ExtraHeaders)
		}
		prepared := ProviderConfig{
			ID:                 string(p.ID),
			Name:               p.Name,
			BaseURL:            p.APIEndpoint,
			APIKey:             p.APIKey,
			Type:               p.Type,
			Disable:            config.Disable,
			SystemPromptPrefix: config.SystemPromptPrefix,
			ExtraHeaders:       headers,
			ExtraBody:          config.ExtraBody,
			ExtraParams:        make(map[string]string),
			Models:             p.Models,
		}

		switch p.ID {
		// Handle specific providers that require additional configuration
		case catwalk.InferenceProviderVertexAI:
			if !hasVertexCredentials(env) {
				if configExists {
					slog.Warn("Skipping Vertex AI provider due to missing credentials")
					c.Providers.Del(string(p.ID))
				}
				continue
			}
			prepared.ExtraParams["project"] = env.Get("VERTEXAI_PROJECT")
			prepared.ExtraParams["location"] = env.Get("VERTEXAI_LOCATION")
		case catwalk.InferenceProviderAzure:
			endpoint, err := resolver.ResolveValue(p.APIEndpoint)
			if err != nil || endpoint == "" {
				if configExists {
					slog.Warn("Skipping Azure provider due to missing API endpoint", "provider", p.ID, "error", err)
					c.Providers.Del(string(p.ID))
				}
				continue
			}
			prepared.BaseURL = endpoint
			prepared.ExtraParams["apiVersion"] = env.Get("AZURE_OPENAI_API_VERSION")
		case catwalk.InferenceProviderBedrock:
			if !hasAWSCredentials(env) {
				if configExists {
					slog.Warn("Skipping Bedrock provider due to missing AWS credentials")
					c.Providers.Del(string(p.ID))
				}
				continue
			}
			prepared.ExtraParams["region"] = env.Get("AWS_REGION")
			if prepared.ExtraParams["region"] == "" {
				prepared.ExtraParams["region"] = env.Get("AWS_DEFAULT_REGION")
			}
			for _, model := range p.Models {
				if !strings.HasPrefix(model.ID, "anthropic.") {
					return fmt.Errorf("bedrock provider only supports anthropic models for now, found: %s", model.ID)
				}
			}
		default:
			// if the provider api or endpoint are missing we skip them
			v, err := resolver.ResolveValue(p.APIKey)
			if v == "" || err != nil {
				if configExists {
					slog.Warn("Skipping provider due to missing API key", "provider", p.ID)
					c.Providers.Del(string(p.ID))
				}
				continue
			}
		}
		c.Providers.Set(string(p.ID), prepared)
	}

	// validate the custom providers
	for id, providerConfig := range c.Providers.Seq2() {
		if knownProviderNames[id] {
			continue
		}

		// Make sure the provider ID is set
		providerConfig.ID = id
		if providerConfig.Name == "" {
			providerConfig.Name = id // Use ID as name if not set
		}
		// default to OpenAI if not set
		if providerConfig.Type == "" {
			providerConfig.Type = catwalk.TypeOpenAI
		}

		if providerConfig.Disable {
			slog.Debug("Skipping custom provider due to disable flag", "provider", id)
			c.Providers.Del(id)
			continue
		}
		if providerConfig.APIKey == "" {
			slog.Warn("Provider is missing API key, this might be OK for local providers", "provider", id)
		}
		if providerConfig.BaseURL == "" {
			slog.Warn("Skipping custom provider due to missing API endpoint", "provider", id)
			c.Providers.Del(id)
			continue
		}
		if len(providerConfig.Models) == 0 {
			slog.Warn("Skipping custom provider because the provider has no models", "provider", id)
			c.Providers.Del(id)
			continue
		}
		if providerConfig.Type != catwalk.TypeOpenAI && providerConfig.Type != catwalk.TypeAnthropic {
			slog.Warn("Skipping custom provider because the provider type is not supported", "provider", id, "type", providerConfig.Type)
			c.Providers.Del(id)
			continue
		}

		apiKey, err := resolver.ResolveValue(providerConfig.APIKey)
		if apiKey == "" || err != nil {
			slog.Warn("Provider is missing API key, this might be OK for local providers", "provider", id)
		}
		baseURL, err := resolver.ResolveValue(providerConfig.BaseURL)
		if baseURL == "" || err != nil {
			slog.Warn("Skipping custom provider due to missing API endpoint", "provider", id, "error", err)
			c.Providers.Del(id)
			continue
		}

		c.Providers.Set(id, providerConfig)
	}
	return nil
}

func (c *Config) setDefaults(workingDir, dataDir string) {
	c.workingDir = workingDir
	if c.Options == nil {
		c.Options = &Options{}
	}
	if c.Options.TUI == nil {
		c.Options.TUI = &TUIOptions{}
	}
	if c.Options.ContextPaths == nil {
		c.Options.ContextPaths = []string{}
	}
	if dataDir != "" {
		c.Options.DataDirectory = dataDir
	} else if c.Options.DataDirectory == "" {
		if path, ok := fsext.SearchParent(workingDir, defaultDataDirectory); ok {
			c.Options.DataDirectory = path
		} else {
			c.Options.DataDirectory = filepath.Join(workingDir, defaultDataDirectory)
		}
	}
	if c.Providers == nil {
		c.Providers = csync.NewMap[string, ProviderConfig]()
	}
	if c.Models == nil {
		c.Models = make(map[SelectedModelType]SelectedModel)
	}
	if c.MCP == nil {
		c.MCP = make(map[string]MCPConfig)
	}
	if c.LSP == nil {
		c.LSP = make(map[string]LSPConfig)
	}

	// Apply default file types for known LSP servers if not specified
	applyDefaultLSPFileTypes(c.LSP)

	// Add the default context paths if they are not already present
	c.Options.ContextPaths = append(defaultContextPaths, c.Options.ContextPaths...)
	slices.Sort(c.Options.ContextPaths)
	c.Options.ContextPaths = slices.Compact(c.Options.ContextPaths)
}

var defaultLSPFileTypes = map[string][]string{
	"gopls":                      {"go", "mod", "sum", "work"},
	"typescript-language-server": {"ts", "tsx", "js", "jsx", "mjs", "cjs"},
	"vtsls":                      {"ts", "tsx", "js", "jsx", "mjs", "cjs"},
	"bash-language-server":       {"sh", "bash", "zsh", "ksh"},
	"rust-analyzer":              {"rs"},
	"pyright":                    {"py", "pyi"},
	"pylsp":                      {"py", "pyi"},
	"clangd":                     {"c", "cpp", "cc", "cxx", "h", "hpp"},
	"jdtls":                      {"java"},
	"vscode-html-languageserver": {"html", "htm"},
	"vscode-css-languageserver":  {"css", "scss", "sass", "less"},
	"vscode-json-languageserver": {"json", "jsonc"},
	"yaml-language-server":       {"yaml", "yml"},
	"lua-language-server":        {"lua"},
	"solargraph":                 {"rb"},
	"elixir-ls":                  {"ex", "exs"},
	"zls":                        {"zig"},
}

// applyDefaultLSPFileTypes sets default file types for known LSP servers
func applyDefaultLSPFileTypes(lspConfigs map[string]LSPConfig) {
	for name, config := range lspConfigs {
		if len(config.FileTypes) != 0 {
			continue
		}
		bin := strings.ToLower(filepath.Base(config.Command))
		config.FileTypes = defaultLSPFileTypes[bin]
		lspConfigs[name] = config
	}
}

func (c *Config) defaultModelSelection(knownProviders []catwalk.Provider) (largeModel SelectedModel, smallModel SelectedModel, err error) {
	if len(knownProviders) == 0 && c.Providers.Len() == 0 {
		err = fmt.Errorf("no providers configured, please configure at least one provider")
		return
	}

	// Use the first provider enabled based on the known providers order
	// if no provider found that is known use the first provider configured
	for _, p := range knownProviders {
		providerConfig, ok := c.Providers.Get(string(p.ID))
		if !ok || providerConfig.Disable {
			continue
		}
		defaultLargeModel := c.GetModel(string(p.ID), p.DefaultLargeModelID)
		if defaultLargeModel == nil {
			err = fmt.Errorf("default large model %s not found for provider %s", p.DefaultLargeModelID, p.ID)
			return
		}
		largeModel = SelectedModel{
			Provider:        string(p.ID),
			Model:           defaultLargeModel.ID,
			MaxTokens:       defaultLargeModel.DefaultMaxTokens,
			ReasoningEffort: defaultLargeModel.DefaultReasoningEffort,
		}

		defaultSmallModel := c.GetModel(string(p.ID), p.DefaultSmallModelID)
		if defaultSmallModel == nil {
			err = fmt.Errorf("default small model %s not found for provider %s", p.DefaultSmallModelID, p.ID)
			return
		}
		smallModel = SelectedModel{
			Provider:        string(p.ID),
			Model:           defaultSmallModel.ID,
			MaxTokens:       defaultSmallModel.DefaultMaxTokens,
			ReasoningEffort: defaultSmallModel.DefaultReasoningEffort,
		}
		return
	}

	enabledProviders := c.EnabledProviders()
	slices.SortFunc(enabledProviders, func(a, b ProviderConfig) int {
		return strings.Compare(a.ID, b.ID)
	})

	if len(enabledProviders) == 0 {
		err = fmt.Errorf("no providers configured, please configure at least one provider")
		return
	}

	providerConfig := enabledProviders[0]
	if len(providerConfig.Models) == 0 {
		err = fmt.Errorf("provider %s has no models configured", providerConfig.ID)
		return
	}
	defaultLargeModel := c.GetModel(providerConfig.ID, providerConfig.Models[0].ID)
	largeModel = SelectedModel{
		Provider:  providerConfig.ID,
		Model:     defaultLargeModel.ID,
		MaxTokens: defaultLargeModel.DefaultMaxTokens,
	}
	defaultSmallModel := c.GetModel(providerConfig.ID, providerConfig.Models[0].ID)
	smallModel = SelectedModel{
		Provider:  providerConfig.ID,
		Model:     defaultSmallModel.ID,
		MaxTokens: defaultSmallModel.DefaultMaxTokens,
	}
	return
}

func (c *Config) configureSelectedModels(knownProviders []catwalk.Provider) error {
	defaultLarge, defaultSmall, err := c.defaultModelSelection(knownProviders)
	if err != nil {
		return fmt.Errorf("failed to select default models: %w", err)
	}
	large, small := defaultLarge, defaultSmall

	largeModelSelected, largeModelConfigured := c.Models[SelectedModelTypeLarge]
	if largeModelConfigured {
		if largeModelSelected.Model != "" {
			large.Model = largeModelSelected.Model
		}
		if largeModelSelected.Provider != "" {
			large.Provider = largeModelSelected.Provider
		}
		model := c.GetModel(large.Provider, large.Model)
		if model == nil {
			large = defaultLarge
			// override the model type to large
			err := c.UpdatePreferredModel(SelectedModelTypeLarge, large)
			if err != nil {
				return fmt.Errorf("failed to update preferred large model: %w", err)
			}
		} else {
			if largeModelSelected.MaxTokens > 0 {
				large.MaxTokens = largeModelSelected.MaxTokens
			} else {
				large.MaxTokens = model.DefaultMaxTokens
			}
			if largeModelSelected.ReasoningEffort != "" {
				large.ReasoningEffort = largeModelSelected.ReasoningEffort
			}
			large.Think = largeModelSelected.Think
		}
	}
	smallModelSelected, smallModelConfigured := c.Models[SelectedModelTypeSmall]
	if smallModelConfigured {
		if smallModelSelected.Model != "" {
			small.Model = smallModelSelected.Model
		}
		if smallModelSelected.Provider != "" {
			small.Provider = smallModelSelected.Provider
		}

		model := c.GetModel(small.Provider, small.Model)
		if model == nil {
			small = defaultSmall
			// override the model type to small
			err := c.UpdatePreferredModel(SelectedModelTypeSmall, small)
			if err != nil {
				return fmt.Errorf("failed to update preferred small model: %w", err)
			}
		} else {
			if smallModelSelected.MaxTokens > 0 {
				small.MaxTokens = smallModelSelected.MaxTokens
			} else {
				small.MaxTokens = model.DefaultMaxTokens
			}
			small.ReasoningEffort = smallModelSelected.ReasoningEffort
			small.Think = smallModelSelected.Think
		}
	}
	c.Models[SelectedModelTypeLarge] = large
	c.Models[SelectedModelTypeSmall] = small
	return nil
}

func loadFromConfigPaths(configPaths []string) (*Config, error) {
	var configs []io.Reader

	for _, path := range configPaths {
		fd, err := os.Open(path)
		if err != nil {
			if os.IsNotExist(err) {
				continue
			}
			return nil, fmt.Errorf("failed to open config file %s: %w", path, err)
		}
		defer fd.Close()

		configs = append(configs, fd)
	}

	return loadFromReaders(configs)
}

func loadFromReaders(readers []io.Reader) (*Config, error) {
	if len(readers) == 0 {
		return &Config{}, nil
	}

	merged, err := Merge(readers)
	if err != nil {
		return nil, fmt.Errorf("failed to merge configuration readers: %w", err)
	}

	return LoadReader(merged)
}

func hasVertexCredentials(env env.Env) bool {
	hasProject := env.Get("VERTEXAI_PROJECT") != ""
	hasLocation := env.Get("VERTEXAI_LOCATION") != ""
	return hasProject && hasLocation
}

func hasAWSCredentials(env env.Env) bool {
	if env.Get("AWS_ACCESS_KEY_ID") != "" && env.Get("AWS_SECRET_ACCESS_KEY") != "" {
		return true
	}

	if env.Get("AWS_PROFILE") != "" || env.Get("AWS_DEFAULT_PROFILE") != "" {
		return true
	}

	if env.Get("AWS_REGION") != "" || env.Get("AWS_DEFAULT_REGION") != "" {
		return true
	}

	if env.Get("AWS_CONTAINER_CREDENTIALS_RELATIVE_URI") != "" ||
		env.Get("AWS_CONTAINER_CREDENTIALS_FULL_URI") != "" {
		return true
	}
	return false
}

func globalConfig() string {
	xdgConfigHome := os.Getenv("XDG_CONFIG_HOME")
	if xdgConfigHome != "" {
		return filepath.Join(xdgConfigHome, appName, fmt.Sprintf("%s.json", appName))
	}

	// return the path to the main config directory
	// for windows, it should be in `%LOCALAPPDATA%/crush/`
	// for linux and macOS, it should be in `$HOME/.config/crush/`
	if runtime.GOOS == "windows" {
		localAppData := os.Getenv("LOCALAPPDATA")
		if localAppData == "" {
			localAppData = filepath.Join(os.Getenv("USERPROFILE"), "AppData", "Local")
		}
		return filepath.Join(localAppData, appName, fmt.Sprintf("%s.json", appName))
	}

	return filepath.Join(os.Getenv("HOME"), ".config", appName, fmt.Sprintf("%s.json", appName))
}

// GlobalConfigData returns the path to the main data directory for the application.
// this config is used when the app overrides configurations instead of updating the global config.
func GlobalConfigData() string {
	xdgDataHome := os.Getenv("XDG_DATA_HOME")
	if xdgDataHome != "" {
		return filepath.Join(xdgDataHome, appName, fmt.Sprintf("%s.json", appName))
	}

	// return the path to the main data directory
	// for windows, it should be in `%LOCALAPPDATA%/crush/`
	// for linux and macOS, it should be in `$HOME/.local/share/crush/`
	if runtime.GOOS == "windows" {
		localAppData := os.Getenv("LOCALAPPDATA")
		if localAppData == "" {
			localAppData = filepath.Join(os.Getenv("USERPROFILE"), "AppData", "Local")
		}
		return filepath.Join(localAppData, appName, fmt.Sprintf("%s.json", appName))
	}

	return filepath.Join(os.Getenv("HOME"), ".local", "share", appName, fmt.Sprintf("%s.json", appName))
}



================================================
FILE: internal/config/load_test.go
================================================
package config

import (
	"io"
	"log/slog"
	"os"
	"path/filepath"
	"strings"
	"testing"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/env"
	"github.com/stretchr/testify/require"
)

func TestMain(m *testing.M) {
	slog.SetDefault(slog.New(slog.NewTextHandler(io.Discard, nil)))

	exitVal := m.Run()
	os.Exit(exitVal)
}

func TestConfig_LoadFromReaders(t *testing.T) {
	data1 := strings.NewReader(`{"providers": {"openai": {"api_key": "key1", "base_url": "https://api.openai.com/v1"}}}`)
	data2 := strings.NewReader(`{"providers": {"openai": {"api_key": "key2", "base_url": "https://api.openai.com/v2"}}}`)
	data3 := strings.NewReader(`{"providers": {"openai": {}}}`)

	loadedConfig, err := loadFromReaders([]io.Reader{data1, data2, data3})

	require.NoError(t, err)
	require.NotNil(t, loadedConfig)
	require.Equal(t, 1, loadedConfig.Providers.Len())
	pc, _ := loadedConfig.Providers.Get("openai")
	require.Equal(t, "key2", pc.APIKey)
	require.Equal(t, "https://api.openai.com/v2", pc.BaseURL)
}

func TestConfig_setDefaults(t *testing.T) {
	cfg := &Config{}

	cfg.setDefaults("/tmp", "")

	require.NotNil(t, cfg.Options)
	require.NotNil(t, cfg.Options.TUI)
	require.NotNil(t, cfg.Options.ContextPaths)
	require.NotNil(t, cfg.Providers)
	require.NotNil(t, cfg.Models)
	require.NotNil(t, cfg.LSP)
	require.NotNil(t, cfg.MCP)
	require.Equal(t, filepath.Join("/tmp", ".crush"), cfg.Options.DataDirectory)
	for _, path := range defaultContextPaths {
		require.Contains(t, cfg.Options.ContextPaths, path)
	}
	require.Equal(t, "/tmp", cfg.workingDir)
}

func TestConfig_configureProviders(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          "openai",
			APIKey:      "$OPENAI_API_KEY",
			APIEndpoint: "https://api.openai.com/v1",
			Models: []catwalk.Model{{
				ID: "test-model",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"OPENAI_API_KEY": "test-key",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	require.Equal(t, 1, cfg.Providers.Len())

	// We want to make sure that we keep the configured API key as a placeholder
	pc, _ := cfg.Providers.Get("openai")
	require.Equal(t, "$OPENAI_API_KEY", pc.APIKey)
}

func TestConfig_configureProvidersWithOverride(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          "openai",
			APIKey:      "$OPENAI_API_KEY",
			APIEndpoint: "https://api.openai.com/v1",
			Models: []catwalk.Model{{
				ID: "test-model",
			}},
		},
	}

	cfg := &Config{
		Providers: csync.NewMap[string, ProviderConfig](),
	}
	cfg.Providers.Set("openai", ProviderConfig{
		APIKey:  "xyz",
		BaseURL: "https://api.openai.com/v2",
		Models: []catwalk.Model{
			{
				ID:   "test-model",
				Name: "Updated",
			},
			{
				ID: "another-model",
			},
		},
	})
	cfg.setDefaults("/tmp", "")

	env := env.NewFromMap(map[string]string{
		"OPENAI_API_KEY": "test-key",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	require.Equal(t, 1, cfg.Providers.Len())

	// We want to make sure that we keep the configured API key as a placeholder
	pc, _ := cfg.Providers.Get("openai")
	require.Equal(t, "xyz", pc.APIKey)
	require.Equal(t, "https://api.openai.com/v2", pc.BaseURL)
	require.Len(t, pc.Models, 2)
	require.Equal(t, "Updated", pc.Models[0].Name)
}

func TestConfig_configureProvidersWithNewProvider(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          "openai",
			APIKey:      "$OPENAI_API_KEY",
			APIEndpoint: "https://api.openai.com/v1",
			Models: []catwalk.Model{{
				ID: "test-model",
			}},
		},
	}

	cfg := &Config{
		Providers: csync.NewMapFrom(map[string]ProviderConfig{
			"custom": {
				APIKey:  "xyz",
				BaseURL: "https://api.someendpoint.com/v2",
				Models: []catwalk.Model{
					{
						ID: "test-model",
					},
				},
			},
		}),
	}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"OPENAI_API_KEY": "test-key",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	// Should be to because of the env variable
	require.Equal(t, cfg.Providers.Len(), 2)

	// We want to make sure that we keep the configured API key as a placeholder
	pc, _ := cfg.Providers.Get("custom")
	require.Equal(t, "xyz", pc.APIKey)
	// Make sure we set the ID correctly
	require.Equal(t, "custom", pc.ID)
	require.Equal(t, "https://api.someendpoint.com/v2", pc.BaseURL)
	require.Len(t, pc.Models, 1)

	_, ok := cfg.Providers.Get("openai")
	require.True(t, ok, "OpenAI provider should still be present")
}

func TestConfig_configureProvidersBedrockWithCredentials(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          catwalk.InferenceProviderBedrock,
			APIKey:      "",
			APIEndpoint: "",
			Models: []catwalk.Model{{
				ID: "anthropic.claude-sonnet-4-20250514-v1:0",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"AWS_ACCESS_KEY_ID":     "test-key-id",
		"AWS_SECRET_ACCESS_KEY": "test-secret-key",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	require.Equal(t, cfg.Providers.Len(), 1)

	bedrockProvider, ok := cfg.Providers.Get("bedrock")
	require.True(t, ok, "Bedrock provider should be present")
	require.Len(t, bedrockProvider.Models, 1)
	require.Equal(t, "anthropic.claude-sonnet-4-20250514-v1:0", bedrockProvider.Models[0].ID)
}

func TestConfig_configureProvidersBedrockWithoutCredentials(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          catwalk.InferenceProviderBedrock,
			APIKey:      "",
			APIEndpoint: "",
			Models: []catwalk.Model{{
				ID: "anthropic.claude-sonnet-4-20250514-v1:0",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	// Provider should not be configured without credentials
	require.Equal(t, cfg.Providers.Len(), 0)
}

func TestConfig_configureProvidersBedrockWithoutUnsupportedModel(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          catwalk.InferenceProviderBedrock,
			APIKey:      "",
			APIEndpoint: "",
			Models: []catwalk.Model{{
				ID: "some-random-model",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"AWS_ACCESS_KEY_ID":     "test-key-id",
		"AWS_SECRET_ACCESS_KEY": "test-secret-key",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.Error(t, err)
}

func TestConfig_configureProvidersVertexAIWithCredentials(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          catwalk.InferenceProviderVertexAI,
			APIKey:      "",
			APIEndpoint: "",
			Models: []catwalk.Model{{
				ID: "gemini-pro",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"VERTEXAI_PROJECT":  "test-project",
		"VERTEXAI_LOCATION": "us-central1",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	require.Equal(t, cfg.Providers.Len(), 1)

	vertexProvider, ok := cfg.Providers.Get("vertexai")
	require.True(t, ok, "VertexAI provider should be present")
	require.Len(t, vertexProvider.Models, 1)
	require.Equal(t, "gemini-pro", vertexProvider.Models[0].ID)
	require.Equal(t, "test-project", vertexProvider.ExtraParams["project"])
	require.Equal(t, "us-central1", vertexProvider.ExtraParams["location"])
}

func TestConfig_configureProvidersVertexAIWithoutCredentials(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          catwalk.InferenceProviderVertexAI,
			APIKey:      "",
			APIEndpoint: "",
			Models: []catwalk.Model{{
				ID: "gemini-pro",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"GOOGLE_GENAI_USE_VERTEXAI": "false",
		"GOOGLE_CLOUD_PROJECT":      "test-project",
		"GOOGLE_CLOUD_LOCATION":     "us-central1",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	// Provider should not be configured without proper credentials
	require.Equal(t, cfg.Providers.Len(), 0)
}

func TestConfig_configureProvidersVertexAIMissingProject(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          catwalk.InferenceProviderVertexAI,
			APIKey:      "",
			APIEndpoint: "",
			Models: []catwalk.Model{{
				ID: "gemini-pro",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"GOOGLE_GENAI_USE_VERTEXAI": "true",
		"GOOGLE_CLOUD_LOCATION":     "us-central1",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	// Provider should not be configured without project
	require.Equal(t, cfg.Providers.Len(), 0)
}

func TestConfig_configureProvidersSetProviderID(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          "openai",
			APIKey:      "$OPENAI_API_KEY",
			APIEndpoint: "https://api.openai.com/v1",
			Models: []catwalk.Model{{
				ID: "test-model",
			}},
		},
	}

	cfg := &Config{}
	cfg.setDefaults("/tmp", "")
	env := env.NewFromMap(map[string]string{
		"OPENAI_API_KEY": "test-key",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)
	require.Equal(t, cfg.Providers.Len(), 1)

	// Provider ID should be set
	pc, _ := cfg.Providers.Get("openai")
	require.Equal(t, "openai", pc.ID)
}

func TestConfig_EnabledProviders(t *testing.T) {
	t.Run("all providers enabled", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"openai": {
					ID:      "openai",
					APIKey:  "key1",
					Disable: false,
				},
				"anthropic": {
					ID:      "anthropic",
					APIKey:  "key2",
					Disable: false,
				},
			}),
		}

		enabled := cfg.EnabledProviders()
		require.Len(t, enabled, 2)
	})

	t.Run("some providers disabled", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"openai": {
					ID:      "openai",
					APIKey:  "key1",
					Disable: false,
				},
				"anthropic": {
					ID:      "anthropic",
					APIKey:  "key2",
					Disable: true,
				},
			}),
		}

		enabled := cfg.EnabledProviders()
		require.Len(t, enabled, 1)
		require.Equal(t, "openai", enabled[0].ID)
	})

	t.Run("empty providers map", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMap[string, ProviderConfig](),
		}

		enabled := cfg.EnabledProviders()
		require.Len(t, enabled, 0)
	})
}

func TestConfig_IsConfigured(t *testing.T) {
	t.Run("returns true when at least one provider is enabled", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"openai": {
					ID:      "openai",
					APIKey:  "key1",
					Disable: false,
				},
			}),
		}

		require.True(t, cfg.IsConfigured())
	})

	t.Run("returns false when no providers are configured", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMap[string, ProviderConfig](),
		}

		require.False(t, cfg.IsConfigured())
	})

	t.Run("returns false when all providers are disabled", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"openai": {
					ID:      "openai",
					APIKey:  "key1",
					Disable: true,
				},
				"anthropic": {
					ID:      "anthropic",
					APIKey:  "key2",
					Disable: true,
				},
			}),
		}

		require.False(t, cfg.IsConfigured())
	})
}

func TestConfig_configureProvidersWithDisabledProvider(t *testing.T) {
	knownProviders := []catwalk.Provider{
		{
			ID:          "openai",
			APIKey:      "$OPENAI_API_KEY",
			APIEndpoint: "https://api.openai.com/v1",
			Models: []catwalk.Model{{
				ID: "test-model",
			}},
		},
	}

	cfg := &Config{
		Providers: csync.NewMapFrom(map[string]ProviderConfig{
			"openai": {
				Disable: true,
			},
		}),
	}
	cfg.setDefaults("/tmp", "")

	env := env.NewFromMap(map[string]string{
		"OPENAI_API_KEY": "test-key",
	})
	resolver := NewEnvironmentVariableResolver(env)
	err := cfg.configureProviders(env, resolver, knownProviders)
	require.NoError(t, err)

	// Provider should be removed from config when disabled
	require.Equal(t, cfg.Providers.Len(), 0)
	_, exists := cfg.Providers.Get("openai")
	require.False(t, exists)
}

func TestConfig_configureProvidersCustomProviderValidation(t *testing.T) {
	t.Run("custom provider with missing API key is allowed, but not known providers", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					BaseURL: "https://api.custom.com/v1",
					Models: []catwalk.Model{{
						ID: "test-model",
					}},
				},
				"openai": {
					APIKey: "$MISSING",
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, []catwalk.Provider{})
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 1)
		_, exists := cfg.Providers.Get("custom")
		require.True(t, exists)
	})

	t.Run("custom provider with missing BaseURL is removed", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey: "test-key",
					Models: []catwalk.Model{{
						ID: "test-model",
					}},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, []catwalk.Provider{})
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 0)
		_, exists := cfg.Providers.Get("custom")
		require.False(t, exists)
	})

	t.Run("custom provider with no models is removed", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey:  "test-key",
					BaseURL: "https://api.custom.com/v1",
					Models:  []catwalk.Model{},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, []catwalk.Provider{})
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 0)
		_, exists := cfg.Providers.Get("custom")
		require.False(t, exists)
	})

	t.Run("custom provider with unsupported type is removed", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey:  "test-key",
					BaseURL: "https://api.custom.com/v1",
					Type:    "unsupported",
					Models: []catwalk.Model{{
						ID: "test-model",
					}},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, []catwalk.Provider{})
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 0)
		_, exists := cfg.Providers.Get("custom")
		require.False(t, exists)
	})

	t.Run("valid custom provider is kept and ID is set", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey:  "test-key",
					BaseURL: "https://api.custom.com/v1",
					Type:    catwalk.TypeOpenAI,
					Models: []catwalk.Model{{
						ID: "test-model",
					}},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, []catwalk.Provider{})
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 1)
		customProvider, exists := cfg.Providers.Get("custom")
		require.True(t, exists)
		require.Equal(t, "custom", customProvider.ID)
		require.Equal(t, "test-key", customProvider.APIKey)
		require.Equal(t, "https://api.custom.com/v1", customProvider.BaseURL)
	})

	t.Run("custom anthropic provider is supported", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom-anthropic": {
					APIKey:  "test-key",
					BaseURL: "https://api.anthropic.com/v1",
					Type:    catwalk.TypeAnthropic,
					Models: []catwalk.Model{{
						ID: "claude-3-sonnet",
					}},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, []catwalk.Provider{})
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 1)
		customProvider, exists := cfg.Providers.Get("custom-anthropic")
		require.True(t, exists)
		require.Equal(t, "custom-anthropic", customProvider.ID)
		require.Equal(t, "test-key", customProvider.APIKey)
		require.Equal(t, "https://api.anthropic.com/v1", customProvider.BaseURL)
		require.Equal(t, catwalk.TypeAnthropic, customProvider.Type)
	})

	t.Run("disabled custom provider is removed", func(t *testing.T) {
		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey:  "test-key",
					BaseURL: "https://api.custom.com/v1",
					Type:    catwalk.TypeOpenAI,
					Disable: true,
					Models: []catwalk.Model{{
						ID: "test-model",
					}},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, []catwalk.Provider{})
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 0)
		_, exists := cfg.Providers.Get("custom")
		require.False(t, exists)
	})
}

func TestConfig_configureProvidersEnhancedCredentialValidation(t *testing.T) {
	t.Run("VertexAI provider removed when credentials missing with existing config", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:          catwalk.InferenceProviderVertexAI,
				APIKey:      "",
				APIEndpoint: "",
				Models: []catwalk.Model{{
					ID: "gemini-pro",
				}},
			},
		}

		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"vertexai": {
					BaseURL: "custom-url",
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{
			"GOOGLE_GENAI_USE_VERTEXAI": "false",
		})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 0)
		_, exists := cfg.Providers.Get("vertexai")
		require.False(t, exists)
	})

	t.Run("Bedrock provider removed when AWS credentials missing with existing config", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:          catwalk.InferenceProviderBedrock,
				APIKey:      "",
				APIEndpoint: "",
				Models: []catwalk.Model{{
					ID: "anthropic.claude-sonnet-4-20250514-v1:0",
				}},
			},
		}

		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"bedrock": {
					BaseURL: "custom-url",
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 0)
		_, exists := cfg.Providers.Get("bedrock")
		require.False(t, exists)
	})

	t.Run("provider removed when API key missing with existing config", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:          "openai",
				APIKey:      "$MISSING_API_KEY",
				APIEndpoint: "https://api.openai.com/v1",
				Models: []catwalk.Model{{
					ID: "test-model",
				}},
			},
		}

		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"openai": {
					BaseURL: "custom-url",
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 0)
		_, exists := cfg.Providers.Get("openai")
		require.False(t, exists)
	})

	t.Run("known provider should still be added if the endpoint is missing the client will use default endpoints", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:          "openai",
				APIKey:      "$OPENAI_API_KEY",
				APIEndpoint: "$MISSING_ENDPOINT",
				Models: []catwalk.Model{{
					ID: "test-model",
				}},
			},
		}

		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"openai": {
					APIKey: "test-key",
				},
			}),
		}
		cfg.setDefaults("/tmp", "")

		env := env.NewFromMap(map[string]string{
			"OPENAI_API_KEY": "test-key",
		})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		require.Equal(t, cfg.Providers.Len(), 1)
		_, exists := cfg.Providers.Get("openai")
		require.True(t, exists)
	})
}

func TestConfig_defaultModelSelection(t *testing.T) {
	t.Run("default behavior uses the default models for given provider", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "abc",
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		large, small, err := cfg.defaultModelSelection(knownProviders)
		require.NoError(t, err)
		require.Equal(t, "large-model", large.Model)
		require.Equal(t, "openai", large.Provider)
		require.Equal(t, int64(1000), large.MaxTokens)
		require.Equal(t, "small-model", small.Model)
		require.Equal(t, "openai", small.Provider)
		require.Equal(t, int64(500), small.MaxTokens)
	})
	t.Run("should error if no providers configured", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "$MISSING_KEY",
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		_, _, err = cfg.defaultModelSelection(knownProviders)
		require.Error(t, err)
	})
	t.Run("should error if model is missing", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "abc",
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "not-large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)
		_, _, err = cfg.defaultModelSelection(knownProviders)
		require.Error(t, err)
	})

	t.Run("should configure the default models with a custom provider", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "$MISSING", // will not be included in the config
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "not-large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey:  "test-key",
					BaseURL: "https://api.custom.com/v1",
					Models: []catwalk.Model{
						{
							ID:               "model",
							DefaultMaxTokens: 600,
						},
					},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)
		large, small, err := cfg.defaultModelSelection(knownProviders)
		require.NoError(t, err)
		require.Equal(t, "model", large.Model)
		require.Equal(t, "custom", large.Provider)
		require.Equal(t, int64(600), large.MaxTokens)
		require.Equal(t, "model", small.Model)
		require.Equal(t, "custom", small.Provider)
		require.Equal(t, int64(600), small.MaxTokens)
	})

	t.Run("should fail if no model configured", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "$MISSING", // will not be included in the config
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "not-large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey:  "test-key",
					BaseURL: "https://api.custom.com/v1",
					Models:  []catwalk.Model{},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)
		_, _, err = cfg.defaultModelSelection(knownProviders)
		require.Error(t, err)
	})
	t.Run("should use the default provider first", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "set",
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{
			Providers: csync.NewMapFrom(map[string]ProviderConfig{
				"custom": {
					APIKey:  "test-key",
					BaseURL: "https://api.custom.com/v1",
					Models: []catwalk.Model{
						{
							ID:               "large-model",
							DefaultMaxTokens: 1000,
						},
					},
				},
			}),
		}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)
		large, small, err := cfg.defaultModelSelection(knownProviders)
		require.NoError(t, err)
		require.Equal(t, "large-model", large.Model)
		require.Equal(t, "openai", large.Provider)
		require.Equal(t, int64(1000), large.MaxTokens)
		require.Equal(t, "small-model", small.Model)
		require.Equal(t, "openai", small.Provider)
		require.Equal(t, int64(500), small.MaxTokens)
	})
}

func TestConfig_configureSelectedModels(t *testing.T) {
	t.Run("should override defaults", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "abc",
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "larger-model",
						DefaultMaxTokens: 2000,
					},
					{
						ID:               "large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{
			Models: map[SelectedModelType]SelectedModel{
				"large": {
					Model: "larger-model",
				},
			},
		}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		err = cfg.configureSelectedModels(knownProviders)
		require.NoError(t, err)
		large := cfg.Models[SelectedModelTypeLarge]
		small := cfg.Models[SelectedModelTypeSmall]
		require.Equal(t, "larger-model", large.Model)
		require.Equal(t, "openai", large.Provider)
		require.Equal(t, int64(2000), large.MaxTokens)
		require.Equal(t, "small-model", small.Model)
		require.Equal(t, "openai", small.Provider)
		require.Equal(t, int64(500), small.MaxTokens)
	})
	t.Run("should be possible to use multiple providers", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "abc",
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
			{
				ID:                  "anthropic",
				APIKey:              "abc",
				DefaultLargeModelID: "a-large-model",
				DefaultSmallModelID: "a-small-model",
				Models: []catwalk.Model{
					{
						ID:               "a-large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "a-small-model",
						DefaultMaxTokens: 200,
					},
				},
			},
		}

		cfg := &Config{
			Models: map[SelectedModelType]SelectedModel{
				"small": {
					Model:     "a-small-model",
					Provider:  "anthropic",
					MaxTokens: 300,
				},
			},
		}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		err = cfg.configureSelectedModels(knownProviders)
		require.NoError(t, err)
		large := cfg.Models[SelectedModelTypeLarge]
		small := cfg.Models[SelectedModelTypeSmall]
		require.Equal(t, "large-model", large.Model)
		require.Equal(t, "openai", large.Provider)
		require.Equal(t, int64(1000), large.MaxTokens)
		require.Equal(t, "a-small-model", small.Model)
		require.Equal(t, "anthropic", small.Provider)
		require.Equal(t, int64(300), small.MaxTokens)
	})

	t.Run("should override the max tokens only", func(t *testing.T) {
		knownProviders := []catwalk.Provider{
			{
				ID:                  "openai",
				APIKey:              "abc",
				DefaultLargeModelID: "large-model",
				DefaultSmallModelID: "small-model",
				Models: []catwalk.Model{
					{
						ID:               "large-model",
						DefaultMaxTokens: 1000,
					},
					{
						ID:               "small-model",
						DefaultMaxTokens: 500,
					},
				},
			},
		}

		cfg := &Config{
			Models: map[SelectedModelType]SelectedModel{
				"large": {
					MaxTokens: 100,
				},
			},
		}
		cfg.setDefaults("/tmp", "")
		env := env.NewFromMap(map[string]string{})
		resolver := NewEnvironmentVariableResolver(env)
		err := cfg.configureProviders(env, resolver, knownProviders)
		require.NoError(t, err)

		err = cfg.configureSelectedModels(knownProviders)
		require.NoError(t, err)
		large := cfg.Models[SelectedModelTypeLarge]
		require.Equal(t, "large-model", large.Model)
		require.Equal(t, "openai", large.Provider)
		require.Equal(t, int64(100), large.MaxTokens)
	})
}



================================================
FILE: internal/config/merge.go
================================================
package config

import (
	"bytes"
	"io"

	"github.com/qjebbs/go-jsons"
)

func Merge(data []io.Reader) (io.Reader, error) {
	got, err := jsons.Merge(data)
	if err != nil {
		return nil, err
	}
	return bytes.NewReader(got), nil
}



================================================
FILE: internal/config/merge_test.go
================================================
package config

import (
	"io"
	"strings"
	"testing"
)

func TestMerge(t *testing.T) {
	data1 := strings.NewReader(`{"foo": "bar"}`)
	data2 := strings.NewReader(`{"baz": "qux"}`)

	merged, err := Merge([]io.Reader{data1, data2})
	if err != nil {
		t.Fatalf("expected no error, got %v", err)
	}

	expected := `{"baz":"qux","foo":"bar"}`
	got, err := io.ReadAll(merged)
	if err != nil {
		t.Fatalf("expected no error reading merged data, got %v", err)
	}

	if string(got) != expected {
		t.Errorf("expected %s, got %s", expected, string(got))
	}
}



================================================
FILE: internal/config/provider.go
================================================
package config

import (
	"cmp"
	"encoding/json"
	"fmt"
	"log/slog"
	"os"
	"path/filepath"
	"runtime"
	"sync"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
)

type ProviderClient interface {
	GetProviders() ([]catwalk.Provider, error)
}

var (
	providerOnce sync.Once
	providerList []catwalk.Provider
)

// file to cache provider data
func providerCacheFileData() string {
	xdgDataHome := os.Getenv("XDG_DATA_HOME")
	if xdgDataHome != "" {
		return filepath.Join(xdgDataHome, appName, "providers.json")
	}

	// return the path to the main data directory
	// for windows, it should be in `%LOCALAPPDATA%/crush/`
	// for linux and macOS, it should be in `$HOME/.local/share/crush/`
	if runtime.GOOS == "windows" {
		localAppData := os.Getenv("LOCALAPPDATA")
		if localAppData == "" {
			localAppData = filepath.Join(os.Getenv("USERPROFILE"), "AppData", "Local")
		}
		return filepath.Join(localAppData, appName, "providers.json")
	}

	return filepath.Join(os.Getenv("HOME"), ".local", "share", appName, "providers.json")
}

func saveProvidersInCache(path string, providers []catwalk.Provider) error {
	slog.Info("Saving cached provider data", "path", path)
	if err := os.MkdirAll(filepath.Dir(path), 0o755); err != nil {
		return fmt.Errorf("failed to create directory for provider cache: %w", err)
	}

	data, err := json.MarshalIndent(providers, "", "  ")
	if err != nil {
		return fmt.Errorf("failed to marshal provider data: %w", err)
	}

	if err := os.WriteFile(path, data, 0o644); err != nil {
		return fmt.Errorf("failed to write provider data to cache: %w", err)
	}
	return nil
}

func loadProvidersFromCache(path string) ([]catwalk.Provider, error) {
	data, err := os.ReadFile(path)
	if err != nil {
		return nil, fmt.Errorf("failed to read provider cache file: %w", err)
	}

	var providers []catwalk.Provider
	if err := json.Unmarshal(data, &providers); err != nil {
		return nil, fmt.Errorf("failed to unmarshal provider data from cache: %w", err)
	}
	return providers, nil
}

func Providers() ([]catwalk.Provider, error) {
	catwalkURL := cmp.Or(os.Getenv("CATWALK_URL"), defaultCatwalkURL)
	client := catwalk.NewWithURL(catwalkURL)
	path := providerCacheFileData()
	return loadProvidersOnce(client, path)
}

func loadProvidersOnce(client ProviderClient, path string) ([]catwalk.Provider, error) {
	var err error
	providerOnce.Do(func() {
		providerList, err = loadProviders(client, path)
	})
	if err != nil {
		return nil, err
	}
	return providerList, nil
}

func loadProviders(client ProviderClient, path string) (providerList []catwalk.Provider, err error) {
	// if cache is not stale, load from it
	stale, exists := isCacheStale(path)
	if !stale {
		slog.Info("Using cached provider data", "path", path)
		providerList, err = loadProvidersFromCache(path)
		if len(providerList) > 0 && err == nil {
			go func() {
				slog.Info("Updating provider cache in background", "path", path)
				updated, uerr := client.GetProviders()
				if len(updated) > 0 && uerr == nil {
					_ = saveProvidersInCache(path, updated)
				}
			}()
			return
		}
	}

	slog.Info("Getting live provider data", "path", path)
	providerList, err = client.GetProviders()
	if len(providerList) > 0 && err == nil {
		err = saveProvidersInCache(path, providerList)
		return
	}
	if !exists {
		err = fmt.Errorf("failed to load providers")
		return
	}
	slog.Info("Loading provider data from cache", "path", path)
	providerList, err = loadProvidersFromCache(path)
	return
}

func isCacheStale(path string) (stale, exists bool) {
	info, err := os.Stat(path)
	if err != nil {
		return true, false
	}
	return time.Since(info.ModTime()) > 24*time.Hour, true
}



================================================
FILE: internal/config/provider_empty_test.go
================================================
package config

import (
	"encoding/json"
	"os"
	"testing"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/stretchr/testify/require"
)

type emptyProviderClient struct{}

func (m *emptyProviderClient) GetProviders() ([]catwalk.Provider, error) {
	return []catwalk.Provider{}, nil
}

func TestProvider_loadProvidersEmptyResult(t *testing.T) {
	client := &emptyProviderClient{}
	tmpPath := t.TempDir() + "/providers.json"

	providers, err := loadProviders(client, tmpPath)
	require.EqualError(t, err, "failed to load providers")
	require.Empty(t, providers)
	require.Len(t, providers, 0)

	// Check that no cache file was created for empty results
	require.NoFileExists(t, tmpPath, "Cache file should not exist for empty results")
}

func TestProvider_loadProvidersEmptyCache(t *testing.T) {
	client := &mockProviderClient{shouldFail: false}
	tmpPath := t.TempDir() + "/providers.json"

	// Create an empty cache file
	emptyProviders := []catwalk.Provider{}
	data, err := json.Marshal(emptyProviders)
	require.NoError(t, err)
	require.NoError(t, os.WriteFile(tmpPath, data, 0o644))

	// Should refresh and get real providers instead of using empty cache
	providers, err := loadProviders(client, tmpPath)
	require.NoError(t, err)
	require.NotNil(t, providers)
	require.Len(t, providers, 1)
	require.Equal(t, "Mock", providers[0].Name)
}



================================================
FILE: internal/config/provider_test.go
================================================
package config

import (
	"encoding/json"
	"errors"
	"os"
	"testing"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/stretchr/testify/require"
)

type mockProviderClient struct {
	shouldFail bool
}

func (m *mockProviderClient) GetProviders() ([]catwalk.Provider, error) {
	if m.shouldFail {
		return nil, errors.New("failed to load providers")
	}
	return []catwalk.Provider{
		{
			Name: "Mock",
		},
	}, nil
}

func TestProvider_loadProvidersNoIssues(t *testing.T) {
	client := &mockProviderClient{shouldFail: false}
	tmpPath := t.TempDir() + "/providers.json"
	providers, err := loadProviders(client, tmpPath)
	require.NoError(t, err)
	require.NotNil(t, providers)
	require.Len(t, providers, 1)

	// check if file got saved
	fileInfo, err := os.Stat(tmpPath)
	require.NoError(t, err)
	require.False(t, fileInfo.IsDir(), "Expected a file, not a directory")
}

func TestProvider_loadProvidersWithIssues(t *testing.T) {
	client := &mockProviderClient{shouldFail: true}
	tmpPath := t.TempDir() + "/providers.json"
	// store providers to a temporary file
	oldProviders := []catwalk.Provider{
		{
			Name: "OldProvider",
		},
	}
	data, err := json.Marshal(oldProviders)
	if err != nil {
		t.Fatalf("Failed to marshal old providers: %v", err)
	}

	err = os.WriteFile(tmpPath, data, 0o644)
	if err != nil {
		t.Fatalf("Failed to write old providers to file: %v", err)
	}
	providers, err := loadProviders(client, tmpPath)
	require.NoError(t, err)
	require.NotNil(t, providers)
	require.Len(t, providers, 1)
	require.Equal(t, "OldProvider", providers[0].Name, "Expected to keep old provider when loading fails")
}

func TestProvider_loadProvidersWithIssuesAndNoCache(t *testing.T) {
	client := &mockProviderClient{shouldFail: true}
	tmpPath := t.TempDir() + "/providers.json"
	providers, err := loadProviders(client, tmpPath)
	require.Error(t, err)
	require.Nil(t, providers, "Expected nil providers when loading fails and no cache exists")
}



================================================
FILE: internal/config/resolve.go
================================================
package config

import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/env"
	"github.com/charmbracelet/crush/internal/shell"
)

type VariableResolver interface {
	ResolveValue(value string) (string, error)
}

type Shell interface {
	Exec(ctx context.Context, command string) (stdout, stderr string, err error)
}

type shellVariableResolver struct {
	shell Shell
	env   env.Env
}

func NewShellVariableResolver(env env.Env) VariableResolver {
	return &shellVariableResolver{
		env: env,
		shell: shell.NewShell(
			&shell.Options{
				Env: env.Env(),
			},
		),
	}
}

// ResolveValue is a method for resolving values, such as environment variables.
// it will resolve shell-like variable substitution anywhere in the string, including:
// - $(command) for command substitution
// - $VAR or ${VAR} for environment variables
func (r *shellVariableResolver) ResolveValue(value string) (string, error) {
	// Special case: lone $ is an error (backward compatibility)
	if value == "$" {
		return "", fmt.Errorf("invalid value format: %s", value)
	}

	// If no $ found, return as-is
	if !strings.Contains(value, "$") {
		return value, nil
	}

	result := value

	// Handle command substitution: $(command)
	for {
		start := strings.Index(result, "$(")
		if start == -1 {
			break
		}

		// Find matching closing parenthesis
		depth := 0
		end := -1
		for i := start + 2; i < len(result); i++ {
			if result[i] == '(' {
				depth++
			} else if result[i] == ')' {
				if depth == 0 {
					end = i
					break
				}
				depth--
			}
		}

		if end == -1 {
			return "", fmt.Errorf("unmatched $( in value: %s", value)
		}

		command := result[start+2 : end]
		ctx, cancel := context.WithTimeout(context.Background(), 5*time.Minute)

		stdout, _, err := r.shell.Exec(ctx, command)
		cancel()
		if err != nil {
			return "", fmt.Errorf("command execution failed for '%s': %w", command, err)
		}

		// Replace the $(command) with the output
		replacement := strings.TrimSpace(stdout)
		result = result[:start] + replacement + result[end+1:]
	}

	// Handle environment variables: $VAR and ${VAR}
	searchStart := 0
	for {
		start := strings.Index(result[searchStart:], "$")
		if start == -1 {
			break
		}
		start += searchStart // Adjust for the offset

		// Skip if this is part of $( which we already handled
		if start+1 < len(result) && result[start+1] == '(' {
			// Skip past this $(...)
			searchStart = start + 1
			continue
		}
		var varName string
		var end int

		if start+1 < len(result) && result[start+1] == '{' {
			// Handle ${VAR} format
			closeIdx := strings.Index(result[start+2:], "}")
			if closeIdx == -1 {
				return "", fmt.Errorf("unmatched ${ in value: %s", value)
			}
			varName = result[start+2 : start+2+closeIdx]
			end = start + 2 + closeIdx + 1
		} else {
			// Handle $VAR format - variable names must start with letter or underscore
			if start+1 >= len(result) {
				return "", fmt.Errorf("incomplete variable reference at end of string: %s", value)
			}

			if result[start+1] != '_' &&
				(result[start+1] < 'a' || result[start+1] > 'z') &&
				(result[start+1] < 'A' || result[start+1] > 'Z') {
				return "", fmt.Errorf("invalid variable name starting with '%c' in: %s", result[start+1], value)
			}

			end = start + 1
			for end < len(result) && (result[end] == '_' ||
				(result[end] >= 'a' && result[end] <= 'z') ||
				(result[end] >= 'A' && result[end] <= 'Z') ||
				(result[end] >= '0' && result[end] <= '9')) {
				end++
			}
			varName = result[start+1 : end]
		}

		envValue := r.env.Get(varName)
		if envValue == "" {
			return "", fmt.Errorf("environment variable %q not set", varName)
		}

		result = result[:start] + envValue + result[end:]
		searchStart = start + len(envValue) // Continue searching after the replacement
	}

	return result, nil
}

type environmentVariableResolver struct {
	env env.Env
}

func NewEnvironmentVariableResolver(env env.Env) VariableResolver {
	return &environmentVariableResolver{
		env: env,
	}
}

// ResolveValue resolves environment variables from the provided env.Env.
func (r *environmentVariableResolver) ResolveValue(value string) (string, error) {
	if !strings.HasPrefix(value, "$") {
		return value, nil
	}

	varName := strings.TrimPrefix(value, "$")
	resolvedValue := r.env.Get(varName)
	if resolvedValue == "" {
		return "", fmt.Errorf("environment variable %q not set", varName)
	}
	return resolvedValue, nil
}



================================================
FILE: internal/config/resolve_test.go
================================================
package config

import (
	"context"
	"errors"
	"testing"

	"github.com/charmbracelet/crush/internal/env"
	"github.com/stretchr/testify/require"
)

// mockShell implements the Shell interface for testing
type mockShell struct {
	execFunc func(ctx context.Context, command string) (stdout, stderr string, err error)
}

func (m *mockShell) Exec(ctx context.Context, command string) (stdout, stderr string, err error) {
	if m.execFunc != nil {
		return m.execFunc(ctx, command)
	}
	return "", "", nil
}

func TestShellVariableResolver_ResolveValue(t *testing.T) {
	tests := []struct {
		name        string
		value       string
		envVars     map[string]string
		shellFunc   func(ctx context.Context, command string) (stdout, stderr string, err error)
		expected    string
		expectError bool
	}{
		{
			name:     "non-variable string returns as-is",
			value:    "plain-string",
			expected: "plain-string",
		},
		{
			name:     "environment variable resolution",
			value:    "$HOME",
			envVars:  map[string]string{"HOME": "/home/user"},
			expected: "/home/user",
		},
		{
			name:        "missing environment variable returns error",
			value:       "$MISSING_VAR",
			envVars:     map[string]string{},
			expectError: true,
		},

		{
			name:  "shell command with whitespace trimming",
			value: "$(echo '  spaced  ')",
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				if command == "echo '  spaced  '" {
					return "  spaced  \n", "", nil
				}
				return "", "", errors.New("unexpected command")
			},
			expected: "spaced",
		},
		{
			name:  "shell command execution error",
			value: "$(false)",
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				return "", "", errors.New("command failed")
			},
			expectError: true,
		},
		{
			name:        "invalid format returns error",
			value:       "$",
			expectError: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			testEnv := env.NewFromMap(tt.envVars)
			resolver := &shellVariableResolver{
				shell: &mockShell{execFunc: tt.shellFunc},
				env:   testEnv,
			}

			result, err := resolver.ResolveValue(tt.value)

			if tt.expectError {
				require.Error(t, err)
			} else {
				require.NoError(t, err)
				require.Equal(t, tt.expected, result)
			}
		})
	}
}

func TestShellVariableResolver_EnhancedResolveValue(t *testing.T) {
	tests := []struct {
		name        string
		value       string
		envVars     map[string]string
		shellFunc   func(ctx context.Context, command string) (stdout, stderr string, err error)
		expected    string
		expectError bool
	}{
		{
			name:  "command substitution within string",
			value: "Bearer $(echo token123)",
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				if command == "echo token123" {
					return "token123\n", "", nil
				}
				return "", "", errors.New("unexpected command")
			},
			expected: "Bearer token123",
		},
		{
			name:     "environment variable within string",
			value:    "Bearer $TOKEN",
			envVars:  map[string]string{"TOKEN": "sk-ant-123"},
			expected: "Bearer sk-ant-123",
		},
		{
			name:     "environment variable with braces within string",
			value:    "Bearer ${TOKEN}",
			envVars:  map[string]string{"TOKEN": "sk-ant-456"},
			expected: "Bearer sk-ant-456",
		},
		{
			name:  "mixed command and environment substitution",
			value: "$USER-$(date +%Y)-$HOST",
			envVars: map[string]string{
				"USER": "testuser",
				"HOST": "localhost",
			},
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				if command == "date +%Y" {
					return "2024\n", "", nil
				}
				return "", "", errors.New("unexpected command")
			},
			expected: "testuser-2024-localhost",
		},
		{
			name:  "multiple command substitutions",
			value: "$(echo hello) $(echo world)",
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				switch command {
				case "echo hello":
					return "hello\n", "", nil
				case "echo world":
					return "world\n", "", nil
				}
				return "", "", errors.New("unexpected command")
			},
			expected: "hello world",
		},
		{
			name:  "nested parentheses in command",
			value: "$(echo $(echo inner))",
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				if command == "echo $(echo inner)" {
					return "nested\n", "", nil
				}
				return "", "", errors.New("unexpected command")
			},
			expected: "nested",
		},
		{
			name:        "lone dollar with non-variable chars",
			value:       "prefix$123suffix", // Numbers can't start variable names
			expectError: true,
		},
		{
			name:        "dollar with special chars",
			value:       "a$@b$#c", // Special chars aren't valid in variable names
			expectError: true,
		},
		{
			name:        "empty environment variable substitution",
			value:       "Bearer $EMPTY_VAR",
			envVars:     map[string]string{},
			expectError: true,
		},
		{
			name:        "unmatched command substitution opening",
			value:       "Bearer $(echo test",
			expectError: true,
		},
		{
			name:        "unmatched environment variable braces",
			value:       "Bearer ${TOKEN",
			expectError: true,
		},
		{
			name:  "command substitution with error",
			value: "Bearer $(false)",
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				return "", "", errors.New("command failed")
			},
			expectError: true,
		},
		{
			name:  "complex real-world example",
			value: "Bearer $(cat /tmp/token.txt | base64 -w 0)",
			shellFunc: func(ctx context.Context, command string) (stdout, stderr string, err error) {
				if command == "cat /tmp/token.txt | base64 -w 0" {
					return "c2stYW50LXRlc3Q=\n", "", nil
				}
				return "", "", errors.New("unexpected command")
			},
			expected: "Bearer c2stYW50LXRlc3Q=",
		},
		{
			name:     "environment variable with underscores and numbers",
			value:    "Bearer $API_KEY_V2",
			envVars:  map[string]string{"API_KEY_V2": "sk-test-123"},
			expected: "Bearer sk-test-123",
		},
		{
			name:     "no substitution needed",
			value:    "Bearer sk-ant-static-token",
			expected: "Bearer sk-ant-static-token",
		},
		{
			name:        "incomplete variable at end",
			value:       "Bearer $",
			expectError: true,
		},
		{
			name:        "variable with invalid character",
			value:       "Bearer $VAR-NAME", // Hyphen not allowed in variable names
			expectError: true,
		},
		{
			name:        "multiple invalid variables",
			value:       "$1$2$3",
			expectError: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			testEnv := env.NewFromMap(tt.envVars)
			resolver := &shellVariableResolver{
				shell: &mockShell{execFunc: tt.shellFunc},
				env:   testEnv,
			}

			result, err := resolver.ResolveValue(tt.value)

			if tt.expectError {
				require.Error(t, err)
			} else {
				require.NoError(t, err)
				require.Equal(t, tt.expected, result)
			}
		})
	}
}

func TestEnvironmentVariableResolver_ResolveValue(t *testing.T) {
	tests := []struct {
		name        string
		value       string
		envVars     map[string]string
		expected    string
		expectError bool
	}{
		{
			name:     "non-variable string returns as-is",
			value:    "plain-string",
			expected: "plain-string",
		},
		{
			name:     "environment variable resolution",
			value:    "$HOME",
			envVars:  map[string]string{"HOME": "/home/user"},
			expected: "/home/user",
		},
		{
			name:     "environment variable with complex value",
			value:    "$PATH",
			envVars:  map[string]string{"PATH": "/usr/bin:/bin:/usr/local/bin"},
			expected: "/usr/bin:/bin:/usr/local/bin",
		},
		{
			name:        "missing environment variable returns error",
			value:       "$MISSING_VAR",
			envVars:     map[string]string{},
			expectError: true,
		},
		{
			name:        "empty environment variable returns error",
			value:       "$EMPTY_VAR",
			envVars:     map[string]string{"EMPTY_VAR": ""},
			expectError: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			testEnv := env.NewFromMap(tt.envVars)
			resolver := NewEnvironmentVariableResolver(testEnv)

			result, err := resolver.ResolveValue(tt.value)

			if tt.expectError {
				require.Error(t, err)
			} else {
				require.NoError(t, err)
				require.Equal(t, tt.expected, result)
			}
		})
	}
}

func TestNewShellVariableResolver(t *testing.T) {
	testEnv := env.NewFromMap(map[string]string{"TEST": "value"})
	resolver := NewShellVariableResolver(testEnv)

	require.NotNil(t, resolver)
	require.Implements(t, (*VariableResolver)(nil), resolver)
}

func TestNewEnvironmentVariableResolver(t *testing.T) {
	testEnv := env.NewFromMap(map[string]string{"TEST": "value"})
	resolver := NewEnvironmentVariableResolver(testEnv)

	require.NotNil(t, resolver)
	require.Implements(t, (*VariableResolver)(nil), resolver)
}



================================================
FILE: internal/csync/doc.go
================================================
// Package csync provides concurrent data structures for safe access in
// multi-threaded environments.
package csync



================================================
FILE: internal/csync/maps.go
================================================
package csync

import (
	"encoding/json"
	"iter"
	"maps"
	"sync"
)

// Map is a concurrent map implementation that provides thread-safe access.
type Map[K comparable, V any] struct {
	inner map[K]V
	mu    sync.RWMutex
}

// NewMap creates a new thread-safe map with the specified key and value types.
func NewMap[K comparable, V any]() *Map[K, V] {
	return &Map[K, V]{
		inner: make(map[K]V),
	}
}

// NewMapFrom creates a new thread-safe map from an existing map.
func NewMapFrom[K comparable, V any](m map[K]V) *Map[K, V] {
	return &Map[K, V]{
		inner: m,
	}
}

// Set sets the value for the specified key in the map.
func (m *Map[K, V]) Set(key K, value V) {
	m.mu.Lock()
	defer m.mu.Unlock()
	m.inner[key] = value
}

// Del deletes the specified key from the map.
func (m *Map[K, V]) Del(key K) {
	m.mu.Lock()
	defer m.mu.Unlock()
	delete(m.inner, key)
}

// Get gets the value for the specified key from the map.
func (m *Map[K, V]) Get(key K) (V, bool) {
	m.mu.RLock()
	defer m.mu.RUnlock()
	v, ok := m.inner[key]
	return v, ok
}

// Len returns the number of items in the map.
func (m *Map[K, V]) Len() int {
	m.mu.RLock()
	defer m.mu.RUnlock()
	return len(m.inner)
}

// GetOrSet gets and returns the key if it exists, otherwise, it executes the
// given function, set its return value for the given key, and returns it.
func (m *Map[K, V]) GetOrSet(key K, fn func() V) V {
	got, ok := m.Get(key)
	if ok {
		return got
	}
	value := fn()
	m.Set(key, value)
	return value
}

// Take gets an item and then deletes it.
func (m *Map[K, V]) Take(key K) (V, bool) {
	m.mu.Lock()
	defer m.mu.Unlock()
	v, ok := m.inner[key]
	delete(m.inner, key)
	return v, ok
}

// Seq2 returns an iter.Seq2 that yields key-value pairs from the map.
func (m *Map[K, V]) Seq2() iter.Seq2[K, V] {
	dst := make(map[K]V)
	m.mu.RLock()
	maps.Copy(dst, m.inner)
	m.mu.RUnlock()
	return func(yield func(K, V) bool) {
		for k, v := range dst {
			if !yield(k, v) {
				return
			}
		}
	}
}

// Seq returns an iter.Seq that yields values from the map.
func (m *Map[K, V]) Seq() iter.Seq[V] {
	return func(yield func(V) bool) {
		for _, v := range m.Seq2() {
			if !yield(v) {
				return
			}
		}
	}
}

var (
	_ json.Unmarshaler = &Map[string, any]{}
	_ json.Marshaler   = &Map[string, any]{}
)

func (Map[K, V]) JSONSchemaAlias() any { //nolint
	m := map[K]V{}
	return m
}

// UnmarshalJSON implements json.Unmarshaler.
func (m *Map[K, V]) UnmarshalJSON(data []byte) error {
	m.mu.Lock()
	defer m.mu.Unlock()
	m.inner = make(map[K]V)
	return json.Unmarshal(data, &m.inner)
}

// MarshalJSON implements json.Marshaler.
func (m *Map[K, V]) MarshalJSON() ([]byte, error) {
	m.mu.RLock()
	defer m.mu.RUnlock()
	return json.Marshal(m.inner)
}



================================================
FILE: internal/csync/maps_test.go
================================================
package csync

import (
	"encoding/json"
	"maps"
	"sync"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestNewMap(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	require.NotNil(t, m)
	require.NotNil(t, m.inner)
	require.Equal(t, 0, m.Len())
}

func TestNewMapFrom(t *testing.T) {
	t.Parallel()

	original := map[string]int{
		"key1": 1,
		"key2": 2,
	}

	m := NewMapFrom(original)
	require.NotNil(t, m)
	require.Equal(t, original, m.inner)
	require.Equal(t, 2, m.Len())

	value, ok := m.Get("key1")
	require.True(t, ok)
	require.Equal(t, 1, value)
}

func TestMap_Set(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()

	m.Set("key1", 42)
	value, ok := m.Get("key1")
	require.True(t, ok)
	require.Equal(t, 42, value)
	require.Equal(t, 1, m.Len())

	m.Set("key1", 100)
	value, ok = m.Get("key1")
	require.True(t, ok)
	require.Equal(t, 100, value)
	require.Equal(t, 1, m.Len())
}

func TestMap_GetOrSet(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()

	require.Equal(t, 42, m.GetOrSet("key1", func() int { return 42 }))
	require.Equal(t, 42, m.GetOrSet("key1", func() int { return 99999 }))
	require.Equal(t, 1, m.Len())
}

func TestMap_Get(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()

	value, ok := m.Get("nonexistent")
	require.False(t, ok)
	require.Equal(t, 0, value)

	m.Set("key1", 42)
	value, ok = m.Get("key1")
	require.True(t, ok)
	require.Equal(t, 42, value)
}

func TestMap_Del(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 42)
	m.Set("key2", 100)

	require.Equal(t, 2, m.Len())

	m.Del("key1")
	_, ok := m.Get("key1")
	require.False(t, ok)
	require.Equal(t, 1, m.Len())

	value, ok := m.Get("key2")
	require.True(t, ok)
	require.Equal(t, 100, value)

	m.Del("nonexistent")
	require.Equal(t, 1, m.Len())
}

func TestMap_Len(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	require.Equal(t, 0, m.Len())

	m.Set("key1", 1)
	require.Equal(t, 1, m.Len())

	m.Set("key2", 2)
	require.Equal(t, 2, m.Len())

	m.Del("key1")
	require.Equal(t, 1, m.Len())

	m.Del("key2")
	require.Equal(t, 0, m.Len())
}

func TestMap_Take(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 42)
	m.Set("key2", 100)

	require.Equal(t, 2, m.Len())

	value, ok := m.Take("key1")
	require.True(t, ok)
	require.Equal(t, 42, value)
	require.Equal(t, 1, m.Len())

	_, exists := m.Get("key1")
	require.False(t, exists)

	value, ok = m.Get("key2")
	require.True(t, ok)
	require.Equal(t, 100, value)
}

func TestMap_Take_NonexistentKey(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 42)

	value, ok := m.Take("nonexistent")
	require.False(t, ok)
	require.Equal(t, 0, value)
	require.Equal(t, 1, m.Len())

	value, ok = m.Get("key1")
	require.True(t, ok)
	require.Equal(t, 42, value)
}

func TestMap_Take_EmptyMap(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()

	value, ok := m.Take("key1")
	require.False(t, ok)
	require.Equal(t, 0, value)
	require.Equal(t, 0, m.Len())
}

func TestMap_Take_SameKeyTwice(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 42)

	value, ok := m.Take("key1")
	require.True(t, ok)
	require.Equal(t, 42, value)
	require.Equal(t, 0, m.Len())

	value, ok = m.Take("key1")
	require.False(t, ok)
	require.Equal(t, 0, value)
	require.Equal(t, 0, m.Len())
}

func TestMap_Seq2(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 1)
	m.Set("key2", 2)
	m.Set("key3", 3)

	collected := maps.Collect(m.Seq2())

	require.Equal(t, 3, len(collected))
	require.Equal(t, 1, collected["key1"])
	require.Equal(t, 2, collected["key2"])
	require.Equal(t, 3, collected["key3"])
}

func TestMap_Seq2_EarlyReturn(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 1)
	m.Set("key2", 2)
	m.Set("key3", 3)

	count := 0
	for range m.Seq2() {
		count++
		if count == 2 {
			break
		}
	}

	require.Equal(t, 2, count)
}

func TestMap_Seq2_EmptyMap(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()

	count := 0
	for range m.Seq2() {
		count++
	}

	require.Equal(t, 0, count)
}

func TestMap_Seq(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 1)
	m.Set("key2", 2)
	m.Set("key3", 3)

	collected := make([]int, 0)
	for v := range m.Seq() {
		collected = append(collected, v)
	}

	require.Equal(t, 3, len(collected))
	require.Contains(t, collected, 1)
	require.Contains(t, collected, 2)
	require.Contains(t, collected, 3)
}

func TestMap_Seq_EarlyReturn(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 1)
	m.Set("key2", 2)
	m.Set("key3", 3)

	count := 0
	for range m.Seq() {
		count++
		if count == 2 {
			break
		}
	}

	require.Equal(t, 2, count)
}

func TestMap_Seq_EmptyMap(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()

	count := 0
	for range m.Seq() {
		count++
	}

	require.Equal(t, 0, count)
}

func TestMap_MarshalJSON(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("key1", 1)
	m.Set("key2", 2)

	data, err := json.Marshal(m)
	require.NoError(t, err)

	result := &Map[string, int]{}
	err = json.Unmarshal(data, result)
	require.NoError(t, err)
	require.Equal(t, 2, result.Len())
	v1, _ := result.Get("key1")
	v2, _ := result.Get("key2")
	require.Equal(t, 1, v1)
	require.Equal(t, 2, v2)
}

func TestMap_MarshalJSON_EmptyMap(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()

	data, err := json.Marshal(m)
	require.NoError(t, err)
	require.Equal(t, "{}", string(data))
}

func TestMap_UnmarshalJSON(t *testing.T) {
	t.Parallel()

	jsonData := `{"key1": 1, "key2": 2}`

	m := NewMap[string, int]()
	err := json.Unmarshal([]byte(jsonData), m)
	require.NoError(t, err)

	require.Equal(t, 2, m.Len())
	value, ok := m.Get("key1")
	require.True(t, ok)
	require.Equal(t, 1, value)

	value, ok = m.Get("key2")
	require.True(t, ok)
	require.Equal(t, 2, value)
}

func TestMap_UnmarshalJSON_EmptyJSON(t *testing.T) {
	t.Parallel()

	jsonData := `{}`

	m := NewMap[string, int]()
	err := json.Unmarshal([]byte(jsonData), m)
	require.NoError(t, err)
	require.Equal(t, 0, m.Len())
}

func TestMap_UnmarshalJSON_InvalidJSON(t *testing.T) {
	t.Parallel()

	jsonData := `{"key1": 1, "key2":}`

	m := NewMap[string, int]()
	err := json.Unmarshal([]byte(jsonData), m)
	require.Error(t, err)
}

func TestMap_UnmarshalJSON_OverwritesExistingData(t *testing.T) {
	t.Parallel()

	m := NewMap[string, int]()
	m.Set("existing", 999)

	jsonData := `{"key1": 1, "key2": 2}`
	err := json.Unmarshal([]byte(jsonData), m)
	require.NoError(t, err)

	require.Equal(t, 2, m.Len())
	_, ok := m.Get("existing")
	require.False(t, ok)

	value, ok := m.Get("key1")
	require.True(t, ok)
	require.Equal(t, 1, value)
}

func TestMap_JSONRoundTrip(t *testing.T) {
	t.Parallel()

	original := NewMap[string, int]()
	original.Set("key1", 1)
	original.Set("key2", 2)
	original.Set("key3", 3)

	data, err := json.Marshal(original)
	require.NoError(t, err)

	restored := NewMap[string, int]()
	err = json.Unmarshal(data, restored)
	require.NoError(t, err)

	require.Equal(t, original.Len(), restored.Len())

	for k, v := range original.Seq2() {
		restoredValue, ok := restored.Get(k)
		require.True(t, ok)
		require.Equal(t, v, restoredValue)
	}
}

func TestMap_ConcurrentAccess(t *testing.T) {
	t.Parallel()

	m := NewMap[int, int]()
	const numGoroutines = 100
	const numOperations = 100

	var wg sync.WaitGroup
	wg.Add(numGoroutines)

	for i := range numGoroutines {
		go func(id int) {
			defer wg.Done()
			for j := range numOperations {
				key := id*numOperations + j
				m.Set(key, key*2)
				value, ok := m.Get(key)
				require.True(t, ok)
				require.Equal(t, key*2, value)
			}
		}(i)
	}

	wg.Wait()

	require.Equal(t, numGoroutines*numOperations, m.Len())
}

func TestMap_ConcurrentReadWrite(t *testing.T) {
	t.Parallel()

	m := NewMap[int, int]()
	const numReaders = 50
	const numWriters = 50
	const numOperations = 100

	for i := range 1000 {
		m.Set(i, i)
	}

	var wg sync.WaitGroup
	wg.Add(numReaders + numWriters)

	for range numReaders {
		go func() {
			defer wg.Done()
			for j := range numOperations {
				key := j % 1000
				value, ok := m.Get(key)
				if ok {
					require.Equal(t, key, value)
				}
				_ = m.Len()
			}
		}()
	}

	for i := range numWriters {
		go func(id int) {
			defer wg.Done()
			for j := range numOperations {
				key := 1000 + id*numOperations + j
				m.Set(key, key)
				if j%10 == 0 {
					m.Del(key)
				}
			}
		}(i)
	}

	wg.Wait()
}

func TestMap_ConcurrentSeq2(t *testing.T) {
	t.Parallel()

	m := NewMap[int, int]()
	for i := range 100 {
		m.Set(i, i*2)
	}

	var wg sync.WaitGroup
	const numIterators = 10

	wg.Add(numIterators)
	for range numIterators {
		go func() {
			defer wg.Done()
			count := 0
			for k, v := range m.Seq2() {
				require.Equal(t, k*2, v)
				count++
			}
			require.Equal(t, 100, count)
		}()
	}

	wg.Wait()
}

func TestMap_ConcurrentSeq(t *testing.T) {
	t.Parallel()

	m := NewMap[int, int]()
	for i := range 100 {
		m.Set(i, i*2)
	}

	var wg sync.WaitGroup
	const numIterators = 10

	wg.Add(numIterators)
	for range numIterators {
		go func() {
			defer wg.Done()
			count := 0
			values := make(map[int]bool)
			for v := range m.Seq() {
				values[v] = true
				count++
			}
			require.Equal(t, 100, count)
			for i := range 100 {
				require.True(t, values[i*2])
			}
		}()
	}

	wg.Wait()
}

func TestMap_ConcurrentTake(t *testing.T) {
	t.Parallel()

	m := NewMap[int, int]()
	const numItems = 1000

	for i := range numItems {
		m.Set(i, i*2)
	}

	var wg sync.WaitGroup
	const numWorkers = 10
	taken := make([][]int, numWorkers)

	wg.Add(numWorkers)
	for i := range numWorkers {
		go func(workerID int) {
			defer wg.Done()
			taken[workerID] = make([]int, 0)
			for j := workerID; j < numItems; j += numWorkers {
				if value, ok := m.Take(j); ok {
					taken[workerID] = append(taken[workerID], value)
				}
			}
		}(i)
	}

	wg.Wait()

	require.Equal(t, 0, m.Len())

	allTaken := make(map[int]bool)
	for _, workerTaken := range taken {
		for _, value := range workerTaken {
			require.False(t, allTaken[value], "Value %d was taken multiple times", value)
			allTaken[value] = true
		}
	}

	require.Equal(t, numItems, len(allTaken))
	for i := range numItems {
		require.True(t, allTaken[i*2], "Expected value %d to be taken", i*2)
	}
}

func TestMap_TypeSafety(t *testing.T) {
	t.Parallel()

	stringIntMap := NewMap[string, int]()
	stringIntMap.Set("key", 42)
	value, ok := stringIntMap.Get("key")
	require.True(t, ok)
	require.Equal(t, 42, value)

	intStringMap := NewMap[int, string]()
	intStringMap.Set(42, "value")
	strValue, ok := intStringMap.Get(42)
	require.True(t, ok)
	require.Equal(t, "value", strValue)

	structMap := NewMap[string, struct{ Name string }]()
	structMap.Set("key", struct{ Name string }{Name: "test"})
	structValue, ok := structMap.Get("key")
	require.True(t, ok)
	require.Equal(t, "test", structValue.Name)
}

func TestMap_InterfaceCompliance(t *testing.T) {
	t.Parallel()

	var _ json.Marshaler = &Map[string, any]{}
	var _ json.Unmarshaler = &Map[string, any]{}
}

func BenchmarkMap_Set(b *testing.B) {
	m := NewMap[int, int]()

	for i := 0; b.Loop(); i++ {
		m.Set(i, i*2)
	}
}

func BenchmarkMap_Get(b *testing.B) {
	m := NewMap[int, int]()
	for i := range 1000 {
		m.Set(i, i*2)
	}

	for i := 0; b.Loop(); i++ {
		m.Get(i % 1000)
	}
}

func BenchmarkMap_Seq2(b *testing.B) {
	m := NewMap[int, int]()
	for i := range 1000 {
		m.Set(i, i*2)
	}

	for b.Loop() {
		for range m.Seq2() {
		}
	}
}

func BenchmarkMap_Seq(b *testing.B) {
	m := NewMap[int, int]()
	for i := range 1000 {
		m.Set(i, i*2)
	}

	for b.Loop() {
		for range m.Seq() {
		}
	}
}

func BenchmarkMap_Take(b *testing.B) {
	m := NewMap[int, int]()
	for i := range 1000 {
		m.Set(i, i*2)
	}

	b.ResetTimer()
	for i := 0; b.Loop(); i++ {
		key := i % 1000
		m.Take(key)
		if i%1000 == 999 {
			b.StopTimer()
			for j := range 1000 {
				m.Set(j, j*2)
			}
			b.StartTimer()
		}
	}
}

func BenchmarkMap_ConcurrentReadWrite(b *testing.B) {
	m := NewMap[int, int]()
	for i := range 1000 {
		m.Set(i, i*2)
	}

	b.ResetTimer()
	b.RunParallel(func(pb *testing.PB) {
		i := 0
		for pb.Next() {
			if i%2 == 0 {
				m.Get(i % 1000)
			} else {
				m.Set(i+1000, i*2)
			}
			i++
		}
	})
}



================================================
FILE: internal/csync/slices.go
================================================
package csync

import (
	"iter"
	"slices"
	"sync"
)

// LazySlice is a thread-safe lazy-loaded slice.
type LazySlice[K any] struct {
	inner []K
	wg    sync.WaitGroup
}

// NewLazySlice creates a new slice and runs the [load] function in a goroutine
// to populate it.
func NewLazySlice[K any](load func() []K) *LazySlice[K] {
	s := &LazySlice[K]{}
	s.wg.Add(1)
	go func() {
		s.inner = load()
		s.wg.Done()
	}()
	return s
}

// Seq returns an iterator that yields elements from the slice.
func (s *LazySlice[K]) Seq() iter.Seq[K] {
	s.wg.Wait()
	return func(yield func(K) bool) {
		for _, v := range s.inner {
			if !yield(v) {
				return
			}
		}
	}
}

// Slice is a thread-safe slice implementation that provides concurrent access.
type Slice[T any] struct {
	inner []T
	mu    sync.RWMutex
}

// NewSlice creates a new thread-safe slice.
func NewSlice[T any]() *Slice[T] {
	return &Slice[T]{
		inner: make([]T, 0),
	}
}

// NewSliceFrom creates a new thread-safe slice from an existing slice.
func NewSliceFrom[T any](s []T) *Slice[T] {
	inner := make([]T, len(s))
	copy(inner, s)
	return &Slice[T]{
		inner: inner,
	}
}

// Append adds an element to the end of the slice.
func (s *Slice[T]) Append(items ...T) {
	s.mu.Lock()
	defer s.mu.Unlock()
	s.inner = append(s.inner, items...)
}

// Prepend adds an element to the beginning of the slice.
func (s *Slice[T]) Prepend(item T) {
	s.mu.Lock()
	defer s.mu.Unlock()
	s.inner = append([]T{item}, s.inner...)
}

// Delete removes the element at the specified index.
func (s *Slice[T]) Delete(index int) bool {
	s.mu.Lock()
	defer s.mu.Unlock()
	if index < 0 || index >= len(s.inner) {
		return false
	}
	s.inner = slices.Delete(s.inner, index, index+1)
	return true
}

// Get returns the element at the specified index.
func (s *Slice[T]) Get(index int) (T, bool) {
	s.mu.RLock()
	defer s.mu.RUnlock()
	var zero T
	if index < 0 || index >= len(s.inner) {
		return zero, false
	}
	return s.inner[index], true
}

// Set updates the element at the specified index.
func (s *Slice[T]) Set(index int, item T) bool {
	s.mu.Lock()
	defer s.mu.Unlock()
	if index < 0 || index >= len(s.inner) {
		return false
	}
	s.inner[index] = item
	return true
}

// Len returns the number of elements in the slice.
func (s *Slice[T]) Len() int {
	s.mu.RLock()
	defer s.mu.RUnlock()
	return len(s.inner)
}

// SetSlice replaces the entire slice with a new one.
func (s *Slice[T]) SetSlice(items []T) {
	s.mu.Lock()
	defer s.mu.Unlock()
	s.inner = make([]T, len(items))
	copy(s.inner, items)
}

// Seq returns an iterator that yields elements from the slice.
func (s *Slice[T]) Seq() iter.Seq[T] {
	return func(yield func(T) bool) {
		for _, v := range s.Seq2() {
			if !yield(v) {
				return
			}
		}
	}
}

// Seq2 returns an iterator that yields index-value pairs from the slice.
func (s *Slice[T]) Seq2() iter.Seq2[int, T] {
	s.mu.RLock()
	items := make([]T, len(s.inner))
	copy(items, s.inner)
	s.mu.RUnlock()
	return func(yield func(int, T) bool) {
		for i, v := range items {
			if !yield(i, v) {
				return
			}
		}
	}
}



================================================
FILE: internal/csync/slices_test.go
================================================
package csync

import (
	"slices"
	"sync"
	"sync/atomic"
	"testing"
	"testing/synctest"
	"time"

	"github.com/stretchr/testify/require"
)

func TestLazySlice_Seq(t *testing.T) {
	t.Parallel()

	synctest.Test(t, func(t *testing.T) {
		t.Helper()
		data := []string{"a", "b", "c"}
		s := NewLazySlice(func() []string {
			time.Sleep(10 * time.Millisecond) // Small delay to ensure loading happens
			return data
		})
		require.Equal(t, data, slices.Collect(s.Seq()))
	})
}

func TestLazySlice_SeqWaitsForLoading(t *testing.T) {
	t.Parallel()
	synctest.Test(t, func(t *testing.T) {
		t.Helper()

		var loaded atomic.Bool
		data := []string{"x", "y", "z"}

		s := NewLazySlice(func() []string {
			time.Sleep(100 * time.Millisecond)
			loaded.Store(true)
			return data
		})

		require.False(t, loaded.Load(), "should not be loaded immediately")
		require.Equal(t, data, slices.Collect(s.Seq()))
		require.True(t, loaded.Load(), "should be loaded after Seq")
	})
}

func TestLazySlice_EmptySlice(t *testing.T) {
	t.Parallel()
	s := NewLazySlice(func() []string {
		return []string{}
	})
	require.Empty(t, slices.Collect(s.Seq()))
}

func TestLazySlice_EarlyBreak(t *testing.T) {
	t.Parallel()

	synctest.Test(t, func(t *testing.T) {
		t.Helper()
		data := []string{"a", "b", "c", "d", "e"}
		s := NewLazySlice(func() []string {
			time.Sleep(10 * time.Millisecond) // Small delay to ensure loading happens
			return data
		})

		var result []string
		for v := range s.Seq() {
			result = append(result, v)
			if len(result) == 2 {
				break
			}
		}

		require.Equal(t, []string{"a", "b"}, result)
	})
}

func TestSlice(t *testing.T) {
	t.Run("NewSlice", func(t *testing.T) {
		s := NewSlice[int]()
		require.Equal(t, 0, s.Len())
	})

	t.Run("NewSliceFrom", func(t *testing.T) {
		original := []int{1, 2, 3}
		s := NewSliceFrom(original)
		require.Equal(t, 3, s.Len())

		// Verify it's a copy, not a reference
		original[0] = 999
		val, ok := s.Get(0)
		require.True(t, ok)
		require.Equal(t, 1, val)
	})

	t.Run("Append", func(t *testing.T) {
		s := NewSlice[string]()
		s.Append("hello")
		s.Append("world")

		require.Equal(t, 2, s.Len())
		val, ok := s.Get(0)
		require.True(t, ok)
		require.Equal(t, "hello", val)

		val, ok = s.Get(1)
		require.True(t, ok)
		require.Equal(t, "world", val)
	})

	t.Run("Prepend", func(t *testing.T) {
		s := NewSlice[string]()
		s.Append("world")
		s.Prepend("hello")

		require.Equal(t, 2, s.Len())
		val, ok := s.Get(0)
		require.True(t, ok)
		require.Equal(t, "hello", val)

		val, ok = s.Get(1)
		require.True(t, ok)
		require.Equal(t, "world", val)
	})

	t.Run("Delete", func(t *testing.T) {
		s := NewSliceFrom([]int{1, 2, 3, 4, 5})

		// Delete middle element
		ok := s.Delete(2)
		require.True(t, ok)
		require.Equal(t, 4, s.Len())

		expected := []int{1, 2, 4, 5}
		actual := slices.Collect(s.Seq())
		require.Equal(t, expected, actual)

		// Delete out of bounds
		ok = s.Delete(10)
		require.False(t, ok)
		require.Equal(t, 4, s.Len())

		// Delete negative index
		ok = s.Delete(-1)
		require.False(t, ok)
		require.Equal(t, 4, s.Len())
	})

	t.Run("Get", func(t *testing.T) {
		s := NewSliceFrom([]string{"a", "b", "c"})

		val, ok := s.Get(1)
		require.True(t, ok)
		require.Equal(t, "b", val)

		// Out of bounds
		_, ok = s.Get(10)
		require.False(t, ok)

		// Negative index
		_, ok = s.Get(-1)
		require.False(t, ok)
	})

	t.Run("Set", func(t *testing.T) {
		s := NewSliceFrom([]string{"a", "b", "c"})

		ok := s.Set(1, "modified")
		require.True(t, ok)

		val, ok := s.Get(1)
		require.True(t, ok)
		require.Equal(t, "modified", val)

		// Out of bounds
		ok = s.Set(10, "invalid")
		require.False(t, ok)

		// Negative index
		ok = s.Set(-1, "invalid")
		require.False(t, ok)
	})

	t.Run("SetSlice", func(t *testing.T) {
		s := NewSlice[int]()
		s.Append(1)
		s.Append(2)

		newItems := []int{10, 20, 30}
		s.SetSlice(newItems)

		require.Equal(t, 3, s.Len())
		require.Equal(t, newItems, slices.Collect(s.Seq()))

		// Verify it's a copy
		newItems[0] = 999
		val, ok := s.Get(0)
		require.True(t, ok)
		require.Equal(t, 10, val)
	})

	t.Run("Slice", func(t *testing.T) {
		original := []int{1, 2, 3}
		s := NewSliceFrom(original)

		copied := slices.Collect(s.Seq())
		require.Equal(t, original, copied)

		// Verify it's a copy
		copied[0] = 999
		val, ok := s.Get(0)
		require.True(t, ok)
		require.Equal(t, 1, val)
	})

	t.Run("Seq", func(t *testing.T) {
		s := NewSliceFrom([]int{1, 2, 3})

		var result []int
		for v := range s.Seq() {
			result = append(result, v)
		}

		require.Equal(t, []int{1, 2, 3}, result)
	})

	t.Run("SeqWithIndex", func(t *testing.T) {
		s := NewSliceFrom([]string{"a", "b", "c"})

		var indices []int
		var values []string
		for i, v := range s.Seq2() {
			indices = append(indices, i)
			values = append(values, v)
		}

		require.Equal(t, []int{0, 1, 2}, indices)
		require.Equal(t, []string{"a", "b", "c"}, values)
	})

	t.Run("ConcurrentAccess", func(t *testing.T) {
		s := NewSlice[int]()
		const numGoroutines = 100
		const itemsPerGoroutine = 10

		var wg sync.WaitGroup

		// Concurrent appends
		for i := range numGoroutines {
			wg.Add(2)
			go func(start int) {
				defer wg.Done()
				for j := range itemsPerGoroutine {
					s.Append(start*itemsPerGoroutine + j)
				}
			}(i)
			go func() {
				defer wg.Done()
				for range itemsPerGoroutine {
					s.Len() // Just read the length
				}
			}()
		}

		wg.Wait()

		// Should have all items
		require.Equal(t, numGoroutines*itemsPerGoroutine, s.Len())
	})
}



================================================
FILE: internal/db/connect.go
================================================
package db

import (
	"context"
	"database/sql"
	"fmt"
	"log/slog"
	"path/filepath"

	_ "github.com/ncruces/go-sqlite3/driver"
	_ "github.com/ncruces/go-sqlite3/embed"

	"github.com/pressly/goose/v3"
)

func Connect(ctx context.Context, dataDir string) (*sql.DB, error) {
	if dataDir == "" {
		return nil, fmt.Errorf("data.dir is not set")
	}
	dbPath := filepath.Join(dataDir, "crush.db")
	// Open the SQLite database
	db, err := sql.Open("sqlite3", dbPath)
	if err != nil {
		return nil, fmt.Errorf("failed to open database: %w", err)
	}

	// Verify connection
	if err = db.PingContext(ctx); err != nil {
		db.Close()
		return nil, fmt.Errorf("failed to connect to database: %w", err)
	}

	// Set pragmas for better performance
	pragmas := []string{
		"PRAGMA foreign_keys = ON;",
		"PRAGMA journal_mode = WAL;",
		"PRAGMA page_size = 4096;",
		"PRAGMA cache_size = -8000;",
		"PRAGMA synchronous = NORMAL;",
	}

	for _, pragma := range pragmas {
		if _, err = db.ExecContext(ctx, pragma); err != nil {
			slog.Error("Failed to set pragma", pragma, err)
		} else {
			slog.Debug("Set pragma", "pragma", pragma)
		}
	}

	goose.SetBaseFS(FS)

	if err := goose.SetDialect("sqlite3"); err != nil {
		slog.Error("Failed to set dialect", "error", err)
		return nil, fmt.Errorf("failed to set dialect: %w", err)
	}

	if err := goose.Up(db, "migrations"); err != nil {
		slog.Error("Failed to apply migrations", "error", err)
		return nil, fmt.Errorf("failed to apply migrations: %w", err)
	}
	return db, nil
}



================================================
FILE: internal/db/db.go
================================================
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
	"database/sql"
	"fmt"
)

type DBTX interface {
	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
	PrepareContext(context.Context, string) (*sql.Stmt, error)
	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
	QueryRowContext(context.Context, string, ...interface{}) *sql.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

func Prepare(ctx context.Context, db DBTX) (*Queries, error) {
	q := Queries{db: db}
	var err error
	if q.createFileStmt, err = db.PrepareContext(ctx, createFile); err != nil {
		return nil, fmt.Errorf("error preparing query CreateFile: %w", err)
	}
	if q.createMessageStmt, err = db.PrepareContext(ctx, createMessage); err != nil {
		return nil, fmt.Errorf("error preparing query CreateMessage: %w", err)
	}
	if q.createSessionStmt, err = db.PrepareContext(ctx, createSession); err != nil {
		return nil, fmt.Errorf("error preparing query CreateSession: %w", err)
	}
	if q.deleteFileStmt, err = db.PrepareContext(ctx, deleteFile); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteFile: %w", err)
	}
	if q.deleteMessageStmt, err = db.PrepareContext(ctx, deleteMessage); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteMessage: %w", err)
	}
	if q.deleteSessionStmt, err = db.PrepareContext(ctx, deleteSession); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteSession: %w", err)
	}
	if q.deleteSessionFilesStmt, err = db.PrepareContext(ctx, deleteSessionFiles); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteSessionFiles: %w", err)
	}
	if q.deleteSessionMessagesStmt, err = db.PrepareContext(ctx, deleteSessionMessages); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteSessionMessages: %w", err)
	}
	if q.getFileStmt, err = db.PrepareContext(ctx, getFile); err != nil {
		return nil, fmt.Errorf("error preparing query GetFile: %w", err)
	}
	if q.getFileByPathAndSessionStmt, err = db.PrepareContext(ctx, getFileByPathAndSession); err != nil {
		return nil, fmt.Errorf("error preparing query GetFileByPathAndSession: %w", err)
	}
	if q.getMessageStmt, err = db.PrepareContext(ctx, getMessage); err != nil {
		return nil, fmt.Errorf("error preparing query GetMessage: %w", err)
	}
	if q.getSessionByIDStmt, err = db.PrepareContext(ctx, getSessionByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetSessionByID: %w", err)
	}
	if q.listFilesByPathStmt, err = db.PrepareContext(ctx, listFilesByPath); err != nil {
		return nil, fmt.Errorf("error preparing query ListFilesByPath: %w", err)
	}
	if q.listFilesBySessionStmt, err = db.PrepareContext(ctx, listFilesBySession); err != nil {
		return nil, fmt.Errorf("error preparing query ListFilesBySession: %w", err)
	}
	if q.listLatestSessionFilesStmt, err = db.PrepareContext(ctx, listLatestSessionFiles); err != nil {
		return nil, fmt.Errorf("error preparing query ListLatestSessionFiles: %w", err)
	}
	if q.listMessagesBySessionStmt, err = db.PrepareContext(ctx, listMessagesBySession); err != nil {
		return nil, fmt.Errorf("error preparing query ListMessagesBySession: %w", err)
	}
	if q.listNewFilesStmt, err = db.PrepareContext(ctx, listNewFiles); err != nil {
		return nil, fmt.Errorf("error preparing query ListNewFiles: %w", err)
	}
	if q.listSessionsStmt, err = db.PrepareContext(ctx, listSessions); err != nil {
		return nil, fmt.Errorf("error preparing query ListSessions: %w", err)
	}
	if q.updateMessageStmt, err = db.PrepareContext(ctx, updateMessage); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateMessage: %w", err)
	}
	if q.updateSessionStmt, err = db.PrepareContext(ctx, updateSession); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateSession: %w", err)
	}
	return &q, nil
}

func (q *Queries) Close() error {
	var err error
	if q.createFileStmt != nil {
		if cerr := q.createFileStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createFileStmt: %w", cerr)
		}
	}
	if q.createMessageStmt != nil {
		if cerr := q.createMessageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createMessageStmt: %w", cerr)
		}
	}
	if q.createSessionStmt != nil {
		if cerr := q.createSessionStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing createSessionStmt: %w", cerr)
		}
	}
	if q.deleteFileStmt != nil {
		if cerr := q.deleteFileStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteFileStmt: %w", cerr)
		}
	}
	if q.deleteMessageStmt != nil {
		if cerr := q.deleteMessageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteMessageStmt: %w", cerr)
		}
	}
	if q.deleteSessionStmt != nil {
		if cerr := q.deleteSessionStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteSessionStmt: %w", cerr)
		}
	}
	if q.deleteSessionFilesStmt != nil {
		if cerr := q.deleteSessionFilesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteSessionFilesStmt: %w", cerr)
		}
	}
	if q.deleteSessionMessagesStmt != nil {
		if cerr := q.deleteSessionMessagesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteSessionMessagesStmt: %w", cerr)
		}
	}
	if q.getFileStmt != nil {
		if cerr := q.getFileStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getFileStmt: %w", cerr)
		}
	}
	if q.getFileByPathAndSessionStmt != nil {
		if cerr := q.getFileByPathAndSessionStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getFileByPathAndSessionStmt: %w", cerr)
		}
	}
	if q.getMessageStmt != nil {
		if cerr := q.getMessageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getMessageStmt: %w", cerr)
		}
	}
	if q.getSessionByIDStmt != nil {
		if cerr := q.getSessionByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getSessionByIDStmt: %w", cerr)
		}
	}
	if q.listFilesByPathStmt != nil {
		if cerr := q.listFilesByPathStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listFilesByPathStmt: %w", cerr)
		}
	}
	if q.listFilesBySessionStmt != nil {
		if cerr := q.listFilesBySessionStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listFilesBySessionStmt: %w", cerr)
		}
	}
	if q.listLatestSessionFilesStmt != nil {
		if cerr := q.listLatestSessionFilesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listLatestSessionFilesStmt: %w", cerr)
		}
	}
	if q.listMessagesBySessionStmt != nil {
		if cerr := q.listMessagesBySessionStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listMessagesBySessionStmt: %w", cerr)
		}
	}
	if q.listNewFilesStmt != nil {
		if cerr := q.listNewFilesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listNewFilesStmt: %w", cerr)
		}
	}
	if q.listSessionsStmt != nil {
		if cerr := q.listSessionsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing listSessionsStmt: %w", cerr)
		}
	}
	if q.updateMessageStmt != nil {
		if cerr := q.updateMessageStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateMessageStmt: %w", cerr)
		}
	}
	if q.updateSessionStmt != nil {
		if cerr := q.updateSessionStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateSessionStmt: %w", cerr)
		}
	}
	return err
}

func (q *Queries) exec(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) (sql.Result, error) {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).ExecContext(ctx, args...)
	case stmt != nil:
		return stmt.ExecContext(ctx, args...)
	default:
		return q.db.ExecContext(ctx, query, args...)
	}
}

func (q *Queries) query(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) (*sql.Rows, error) {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).QueryContext(ctx, args...)
	case stmt != nil:
		return stmt.QueryContext(ctx, args...)
	default:
		return q.db.QueryContext(ctx, query, args...)
	}
}

func (q *Queries) queryRow(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) *sql.Row {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).QueryRowContext(ctx, args...)
	case stmt != nil:
		return stmt.QueryRowContext(ctx, args...)
	default:
		return q.db.QueryRowContext(ctx, query, args...)
	}
}

type Queries struct {
	db                          DBTX
	tx                          *sql.Tx
	createFileStmt              *sql.Stmt
	createMessageStmt           *sql.Stmt
	createSessionStmt           *sql.Stmt
	deleteFileStmt              *sql.Stmt
	deleteMessageStmt           *sql.Stmt
	deleteSessionStmt           *sql.Stmt
	deleteSessionFilesStmt      *sql.Stmt
	deleteSessionMessagesStmt   *sql.Stmt
	getFileStmt                 *sql.Stmt
	getFileByPathAndSessionStmt *sql.Stmt
	getMessageStmt              *sql.Stmt
	getSessionByIDStmt          *sql.Stmt
	listFilesByPathStmt         *sql.Stmt
	listFilesBySessionStmt      *sql.Stmt
	listLatestSessionFilesStmt  *sql.Stmt
	listMessagesBySessionStmt   *sql.Stmt
	listNewFilesStmt            *sql.Stmt
	listSessionsStmt            *sql.Stmt
	updateMessageStmt           *sql.Stmt
	updateSessionStmt           *sql.Stmt
}

func (q *Queries) WithTx(tx *sql.Tx) *Queries {
	return &Queries{
		db:                          tx,
		tx:                          tx,
		createFileStmt:              q.createFileStmt,
		createMessageStmt:           q.createMessageStmt,
		createSessionStmt:           q.createSessionStmt,
		deleteFileStmt:              q.deleteFileStmt,
		deleteMessageStmt:           q.deleteMessageStmt,
		deleteSessionStmt:           q.deleteSessionStmt,
		deleteSessionFilesStmt:      q.deleteSessionFilesStmt,
		deleteSessionMessagesStmt:   q.deleteSessionMessagesStmt,
		getFileStmt:                 q.getFileStmt,
		getFileByPathAndSessionStmt: q.getFileByPathAndSessionStmt,
		getMessageStmt:              q.getMessageStmt,
		getSessionByIDStmt:          q.getSessionByIDStmt,
		listFilesByPathStmt:         q.listFilesByPathStmt,
		listFilesBySessionStmt:      q.listFilesBySessionStmt,
		listLatestSessionFilesStmt:  q.listLatestSessionFilesStmt,
		listMessagesBySessionStmt:   q.listMessagesBySessionStmt,
		listNewFilesStmt:            q.listNewFilesStmt,
		listSessionsStmt:            q.listSessionsStmt,
		updateMessageStmt:           q.updateMessageStmt,
		updateSessionStmt:           q.updateSessionStmt,
	}
}



================================================
FILE: internal/db/embed.go
================================================
package db

import "embed"

//go:embed migrations/*.sql
var FS embed.FS



================================================
FILE: internal/db/files.sql.go
================================================
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: files.sql

package db

import (
	"context"
)

const createFile = `-- name: CreateFile :one
INSERT INTO files (
    id,
    session_id,
    path,
    content,
    version,
    created_at,
    updated_at
) VALUES (
    ?, ?, ?, ?, ?, strftime('%s', 'now'), strftime('%s', 'now')
)
RETURNING id, session_id, path, content, version, created_at, updated_at
`

type CreateFileParams struct {
	ID        string `json:"id"`
	SessionID string `json:"session_id"`
	Path      string `json:"path"`
	Content   string `json:"content"`
	Version   int64  `json:"version"`
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) (File, error) {
	row := q.queryRow(ctx, q.createFileStmt, createFile,
		arg.ID,
		arg.SessionID,
		arg.Path,
		arg.Content,
		arg.Version,
	)
	var i File
	err := row.Scan(
		&i.ID,
		&i.SessionID,
		&i.Path,
		&i.Content,
		&i.Version,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteFile = `-- name: DeleteFile :exec
DELETE FROM files
WHERE id = ?
`

func (q *Queries) DeleteFile(ctx context.Context, id string) error {
	_, err := q.exec(ctx, q.deleteFileStmt, deleteFile, id)
	return err
}

const deleteSessionFiles = `-- name: DeleteSessionFiles :exec
DELETE FROM files
WHERE session_id = ?
`

func (q *Queries) DeleteSessionFiles(ctx context.Context, sessionID string) error {
	_, err := q.exec(ctx, q.deleteSessionFilesStmt, deleteSessionFiles, sessionID)
	return err
}

const getFile = `-- name: GetFile :one
SELECT id, session_id, path, content, version, created_at, updated_at
FROM files
WHERE id = ? LIMIT 1
`

func (q *Queries) GetFile(ctx context.Context, id string) (File, error) {
	row := q.queryRow(ctx, q.getFileStmt, getFile, id)
	var i File
	err := row.Scan(
		&i.ID,
		&i.SessionID,
		&i.Path,
		&i.Content,
		&i.Version,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getFileByPathAndSession = `-- name: GetFileByPathAndSession :one
SELECT id, session_id, path, content, version, created_at, updated_at
FROM files
WHERE path = ? AND session_id = ?
ORDER BY version DESC, created_at DESC
LIMIT 1
`

type GetFileByPathAndSessionParams struct {
	Path      string `json:"path"`
	SessionID string `json:"session_id"`
}

func (q *Queries) GetFileByPathAndSession(ctx context.Context, arg GetFileByPathAndSessionParams) (File, error) {
	row := q.queryRow(ctx, q.getFileByPathAndSessionStmt, getFileByPathAndSession, arg.Path, arg.SessionID)
	var i File
	err := row.Scan(
		&i.ID,
		&i.SessionID,
		&i.Path,
		&i.Content,
		&i.Version,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const listFilesByPath = `-- name: ListFilesByPath :many
SELECT id, session_id, path, content, version, created_at, updated_at
FROM files
WHERE path = ?
ORDER BY version DESC, created_at DESC
`

func (q *Queries) ListFilesByPath(ctx context.Context, path string) ([]File, error) {
	rows, err := q.query(ctx, q.listFilesByPathStmt, listFilesByPath, path)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []File{}
	for rows.Next() {
		var i File
		if err := rows.Scan(
			&i.ID,
			&i.SessionID,
			&i.Path,
			&i.Content,
			&i.Version,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const listFilesBySession = `-- name: ListFilesBySession :many
SELECT id, session_id, path, content, version, created_at, updated_at
FROM files
WHERE session_id = ?
ORDER BY version ASC, created_at ASC
`

func (q *Queries) ListFilesBySession(ctx context.Context, sessionID string) ([]File, error) {
	rows, err := q.query(ctx, q.listFilesBySessionStmt, listFilesBySession, sessionID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []File{}
	for rows.Next() {
		var i File
		if err := rows.Scan(
			&i.ID,
			&i.SessionID,
			&i.Path,
			&i.Content,
			&i.Version,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const listLatestSessionFiles = `-- name: ListLatestSessionFiles :many
SELECT f.id, f.session_id, f.path, f.content, f.version, f.created_at, f.updated_at
FROM files f
INNER JOIN (
    SELECT path, MAX(version) as max_version, MAX(created_at) as max_created_at
    FROM files
    GROUP BY path
) latest ON f.path = latest.path AND f.version = latest.max_version AND f.created_at = latest.max_created_at
WHERE f.session_id = ?
ORDER BY f.path
`

func (q *Queries) ListLatestSessionFiles(ctx context.Context, sessionID string) ([]File, error) {
	rows, err := q.query(ctx, q.listLatestSessionFilesStmt, listLatestSessionFiles, sessionID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []File{}
	for rows.Next() {
		var i File
		if err := rows.Scan(
			&i.ID,
			&i.SessionID,
			&i.Path,
			&i.Content,
			&i.Version,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const listNewFiles = `-- name: ListNewFiles :many
SELECT id, session_id, path, content, version, created_at, updated_at
FROM files
WHERE is_new = 1
ORDER BY version DESC, created_at DESC
`

func (q *Queries) ListNewFiles(ctx context.Context) ([]File, error) {
	rows, err := q.query(ctx, q.listNewFilesStmt, listNewFiles)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []File{}
	for rows.Next() {
		var i File
		if err := rows.Scan(
			&i.ID,
			&i.SessionID,
			&i.Path,
			&i.Content,
			&i.Version,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}



================================================
FILE: internal/db/messages.sql.go
================================================
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: messages.sql

package db

import (
	"context"
	"database/sql"
)

const createMessage = `-- name: CreateMessage :one
INSERT INTO messages (
    id,
    session_id,
    role,
    parts,
    model,
    provider,
    created_at,
    updated_at
) VALUES (
    ?, ?, ?, ?, ?, ?, strftime('%s', 'now'), strftime('%s', 'now')
)
RETURNING id, session_id, role, parts, model, created_at, updated_at, finished_at, provider
`

type CreateMessageParams struct {
	ID        string         `json:"id"`
	SessionID string         `json:"session_id"`
	Role      string         `json:"role"`
	Parts     string         `json:"parts"`
	Model     sql.NullString `json:"model"`
	Provider  sql.NullString `json:"provider"`
}

func (q *Queries) CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error) {
	row := q.queryRow(ctx, q.createMessageStmt, createMessage,
		arg.ID,
		arg.SessionID,
		arg.Role,
		arg.Parts,
		arg.Model,
		arg.Provider,
	)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.SessionID,
		&i.Role,
		&i.Parts,
		&i.Model,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.FinishedAt,
		&i.Provider,
	)
	return i, err
}

const deleteMessage = `-- name: DeleteMessage :exec
DELETE FROM messages
WHERE id = ?
`

func (q *Queries) DeleteMessage(ctx context.Context, id string) error {
	_, err := q.exec(ctx, q.deleteMessageStmt, deleteMessage, id)
	return err
}

const deleteSessionMessages = `-- name: DeleteSessionMessages :exec
DELETE FROM messages
WHERE session_id = ?
`

func (q *Queries) DeleteSessionMessages(ctx context.Context, sessionID string) error {
	_, err := q.exec(ctx, q.deleteSessionMessagesStmt, deleteSessionMessages, sessionID)
	return err
}

const getMessage = `-- name: GetMessage :one
SELECT id, session_id, role, parts, model, created_at, updated_at, finished_at, provider
FROM messages
WHERE id = ? LIMIT 1
`

func (q *Queries) GetMessage(ctx context.Context, id string) (Message, error) {
	row := q.queryRow(ctx, q.getMessageStmt, getMessage, id)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.SessionID,
		&i.Role,
		&i.Parts,
		&i.Model,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.FinishedAt,
		&i.Provider,
	)
	return i, err
}

const listMessagesBySession = `-- name: ListMessagesBySession :many
SELECT id, session_id, role, parts, model, created_at, updated_at, finished_at, provider
FROM messages
WHERE session_id = ?
ORDER BY created_at ASC
`

func (q *Queries) ListMessagesBySession(ctx context.Context, sessionID string) ([]Message, error) {
	rows, err := q.query(ctx, q.listMessagesBySessionStmt, listMessagesBySession, sessionID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Message{}
	for rows.Next() {
		var i Message
		if err := rows.Scan(
			&i.ID,
			&i.SessionID,
			&i.Role,
			&i.Parts,
			&i.Model,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.FinishedAt,
			&i.Provider,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateMessage = `-- name: UpdateMessage :exec
UPDATE messages
SET
    parts = ?,
    finished_at = ?,
    updated_at = strftime('%s', 'now')
WHERE id = ?
`

type UpdateMessageParams struct {
	Parts      string        `json:"parts"`
	FinishedAt sql.NullInt64 `json:"finished_at"`
	ID         string        `json:"id"`
}

func (q *Queries) UpdateMessage(ctx context.Context, arg UpdateMessageParams) error {
	_, err := q.exec(ctx, q.updateMessageStmt, updateMessage, arg.Parts, arg.FinishedAt, arg.ID)
	return err
}



================================================
FILE: internal/db/models.go
================================================
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql"
)

type File struct {
	ID        string `json:"id"`
	SessionID string `json:"session_id"`
	Path      string `json:"path"`
	Content   string `json:"content"`
	Version   int64  `json:"version"`
	CreatedAt int64  `json:"created_at"`
	UpdatedAt int64  `json:"updated_at"`
}

type Message struct {
	ID         string         `json:"id"`
	SessionID  string         `json:"session_id"`
	Role       string         `json:"role"`
	Parts      string         `json:"parts"`
	Model      sql.NullString `json:"model"`
	CreatedAt  int64          `json:"created_at"`
	UpdatedAt  int64          `json:"updated_at"`
	FinishedAt sql.NullInt64  `json:"finished_at"`
	Provider   sql.NullString `json:"provider"`
}

type Session struct {
	ID               string         `json:"id"`
	ParentSessionID  sql.NullString `json:"parent_session_id"`
	Title            string         `json:"title"`
	MessageCount     int64          `json:"message_count"`
	PromptTokens     int64          `json:"prompt_tokens"`
	CompletionTokens int64          `json:"completion_tokens"`
	Cost             float64        `json:"cost"`
	UpdatedAt        int64          `json:"updated_at"`
	CreatedAt        int64          `json:"created_at"`
	SummaryMessageID sql.NullString `json:"summary_message_id"`
}



================================================
FILE: internal/db/querier.go
================================================
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
)

type Querier interface {
	CreateFile(ctx context.Context, arg CreateFileParams) (File, error)
	CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	DeleteFile(ctx context.Context, id string) error
	DeleteMessage(ctx context.Context, id string) error
	DeleteSession(ctx context.Context, id string) error
	DeleteSessionFiles(ctx context.Context, sessionID string) error
	DeleteSessionMessages(ctx context.Context, sessionID string) error
	GetFile(ctx context.Context, id string) (File, error)
	GetFileByPathAndSession(ctx context.Context, arg GetFileByPathAndSessionParams) (File, error)
	GetMessage(ctx context.Context, id string) (Message, error)
	GetSessionByID(ctx context.Context, id string) (Session, error)
	ListFilesByPath(ctx context.Context, path string) ([]File, error)
	ListFilesBySession(ctx context.Context, sessionID string) ([]File, error)
	ListLatestSessionFiles(ctx context.Context, sessionID string) ([]File, error)
	ListMessagesBySession(ctx context.Context, sessionID string) ([]Message, error)
	ListNewFiles(ctx context.Context) ([]File, error)
	ListSessions(ctx context.Context) ([]Session, error)
	UpdateMessage(ctx context.Context, arg UpdateMessageParams) error
	UpdateSession(ctx context.Context, arg UpdateSessionParams) (Session, error)
}

var _ Querier = (*Queries)(nil)



================================================
FILE: internal/db/sessions.sql.go
================================================
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: sessions.sql

package db

import (
	"context"
	"database/sql"
)

const createSession = `-- name: CreateSession :one
INSERT INTO sessions (
    id,
    parent_session_id,
    title,
    message_count,
    prompt_tokens,
    completion_tokens,
    cost,
    summary_message_id,
    updated_at,
    created_at
) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    null,
    strftime('%s', 'now'),
    strftime('%s', 'now')
) RETURNING id, parent_session_id, title, message_count, prompt_tokens, completion_tokens, cost, updated_at, created_at, summary_message_id
`

type CreateSessionParams struct {
	ID               string         `json:"id"`
	ParentSessionID  sql.NullString `json:"parent_session_id"`
	Title            string         `json:"title"`
	MessageCount     int64          `json:"message_count"`
	PromptTokens     int64          `json:"prompt_tokens"`
	CompletionTokens int64          `json:"completion_tokens"`
	Cost             float64        `json:"cost"`
}

func (q *Queries) CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error) {
	row := q.queryRow(ctx, q.createSessionStmt, createSession,
		arg.ID,
		arg.ParentSessionID,
		arg.Title,
		arg.MessageCount,
		arg.PromptTokens,
		arg.CompletionTokens,
		arg.Cost,
	)
	var i Session
	err := row.Scan(
		&i.ID,
		&i.ParentSessionID,
		&i.Title,
		&i.MessageCount,
		&i.PromptTokens,
		&i.CompletionTokens,
		&i.Cost,
		&i.UpdatedAt,
		&i.CreatedAt,
		&i.SummaryMessageID,
	)
	return i, err
}

const deleteSession = `-- name: DeleteSession :exec
DELETE FROM sessions
WHERE id = ?
`

func (q *Queries) DeleteSession(ctx context.Context, id string) error {
	_, err := q.exec(ctx, q.deleteSessionStmt, deleteSession, id)
	return err
}

const getSessionByID = `-- name: GetSessionByID :one
SELECT id, parent_session_id, title, message_count, prompt_tokens, completion_tokens, cost, updated_at, created_at, summary_message_id
FROM sessions
WHERE id = ? LIMIT 1
`

func (q *Queries) GetSessionByID(ctx context.Context, id string) (Session, error) {
	row := q.queryRow(ctx, q.getSessionByIDStmt, getSessionByID, id)
	var i Session
	err := row.Scan(
		&i.ID,
		&i.ParentSessionID,
		&i.Title,
		&i.MessageCount,
		&i.PromptTokens,
		&i.CompletionTokens,
		&i.Cost,
		&i.UpdatedAt,
		&i.CreatedAt,
		&i.SummaryMessageID,
	)
	return i, err
}

const listSessions = `-- name: ListSessions :many
SELECT id, parent_session_id, title, message_count, prompt_tokens, completion_tokens, cost, updated_at, created_at, summary_message_id
FROM sessions
WHERE parent_session_id is NULL
ORDER BY created_at DESC
`

func (q *Queries) ListSessions(ctx context.Context) ([]Session, error) {
	rows, err := q.query(ctx, q.listSessionsStmt, listSessions)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Session{}
	for rows.Next() {
		var i Session
		if err := rows.Scan(
			&i.ID,
			&i.ParentSessionID,
			&i.Title,
			&i.MessageCount,
			&i.PromptTokens,
			&i.CompletionTokens,
			&i.Cost,
			&i.UpdatedAt,
			&i.CreatedAt,
			&i.SummaryMessageID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateSession = `-- name: UpdateSession :one
UPDATE sessions
SET
    title = ?,
    prompt_tokens = ?,
    completion_tokens = ?,
    summary_message_id = ?,
    cost = ?
WHERE id = ?
RETURNING id, parent_session_id, title, message_count, prompt_tokens, completion_tokens, cost, updated_at, created_at, summary_message_id
`

type UpdateSessionParams struct {
	Title            string         `json:"title"`
	PromptTokens     int64          `json:"prompt_tokens"`
	CompletionTokens int64          `json:"completion_tokens"`
	SummaryMessageID sql.NullString `json:"summary_message_id"`
	Cost             float64        `json:"cost"`
	ID               string         `json:"id"`
}

func (q *Queries) UpdateSession(ctx context.Context, arg UpdateSessionParams) (Session, error) {
	row := q.queryRow(ctx, q.updateSessionStmt, updateSession,
		arg.Title,
		arg.PromptTokens,
		arg.CompletionTokens,
		arg.SummaryMessageID,
		arg.Cost,
		arg.ID,
	)
	var i Session
	err := row.Scan(
		&i.ID,
		&i.ParentSessionID,
		&i.Title,
		&i.MessageCount,
		&i.PromptTokens,
		&i.CompletionTokens,
		&i.Cost,
		&i.UpdatedAt,
		&i.CreatedAt,
		&i.SummaryMessageID,
	)
	return i, err
}



================================================
FILE: internal/db/migrations/20250424200609_initial.sql
================================================
-- +goose Up
-- +goose StatementBegin
-- Sessions
CREATE TABLE IF NOT EXISTS sessions (
    id TEXT PRIMARY KEY,
    parent_session_id TEXT,
    title TEXT NOT NULL,
    message_count INTEGER NOT NULL DEFAULT 0 CHECK (message_count >= 0),
    prompt_tokens  INTEGER NOT NULL DEFAULT 0 CHECK (prompt_tokens >= 0),
    completion_tokens  INTEGER NOT NULL DEFAULT 0 CHECK (completion_tokens>= 0),
    cost REAL NOT NULL DEFAULT 0.0 CHECK (cost >= 0.0),
    updated_at INTEGER NOT NULL,  -- Unix timestamp in milliseconds
    created_at INTEGER NOT NULL   -- Unix timestamp in milliseconds
);

CREATE TRIGGER IF NOT EXISTS update_sessions_updated_at
AFTER UPDATE ON sessions
BEGIN
UPDATE sessions SET updated_at = strftime('%s', 'now')
WHERE id = new.id;
END;

-- Files
CREATE TABLE IF NOT EXISTS files (
    id TEXT PRIMARY KEY,
    session_id TEXT NOT NULL,
    path TEXT NOT NULL,
    content TEXT NOT NULL,
    version INTEGER NOT NULL DEFAULT 0,
    created_at INTEGER NOT NULL,  -- Unix timestamp in milliseconds
    updated_at INTEGER NOT NULL,  -- Unix timestamp in milliseconds
    FOREIGN KEY (session_id) REFERENCES sessions (id) ON DELETE CASCADE,
    UNIQUE(path, session_id, version)
);

CREATE INDEX IF NOT EXISTS idx_files_session_id ON files (session_id);
CREATE INDEX IF NOT EXISTS idx_files_path ON files (path);

CREATE TRIGGER IF NOT EXISTS update_files_updated_at
AFTER UPDATE ON files
BEGIN
UPDATE files SET updated_at = strftime('%s', 'now')
WHERE id = new.id;
END;

-- Messages
CREATE TABLE IF NOT EXISTS messages (
    id TEXT PRIMARY KEY,
    session_id TEXT NOT NULL,
    role TEXT NOT NULL,
    parts TEXT NOT NULL default '[]',
    model TEXT,
    created_at INTEGER NOT NULL,  -- Unix timestamp in milliseconds
    updated_at INTEGER NOT NULL,  -- Unix timestamp in milliseconds
    finished_at INTEGER,  -- Unix timestamp in milliseconds
    FOREIGN KEY (session_id) REFERENCES sessions (id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_messages_session_id ON messages (session_id);

CREATE TRIGGER IF NOT EXISTS update_messages_updated_at
AFTER UPDATE ON messages
BEGIN
UPDATE messages SET updated_at = strftime('%s', 'now')
WHERE id = new.id;
END;

CREATE TRIGGER IF NOT EXISTS update_session_message_count_on_insert
AFTER INSERT ON messages
BEGIN
UPDATE sessions SET
    message_count = message_count + 1
WHERE id = new.session_id;
END;

CREATE TRIGGER IF NOT EXISTS update_session_message_count_on_delete
AFTER DELETE ON messages
BEGIN
UPDATE sessions SET
    message_count = message_count - 1
WHERE id = old.session_id;
END;

-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
DROP TRIGGER IF EXISTS update_sessions_updated_at;
DROP TRIGGER IF EXISTS update_messages_updated_at;
DROP TRIGGER IF EXISTS update_files_updated_at;

DROP TRIGGER IF EXISTS update_session_message_count_on_delete;
DROP TRIGGER IF EXISTS update_session_message_count_on_insert;

DROP TABLE IF EXISTS sessions;
DROP TABLE IF EXISTS messages;
DROP TABLE IF EXISTS files;
-- +goose StatementEnd



================================================
FILE: internal/db/migrations/20250515105448_add_summary_message_id.sql
================================================
-- +goose Up
-- +goose StatementBegin
ALTER TABLE sessions ADD COLUMN summary_message_id TEXT;
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
ALTER TABLE sessions DROP COLUMN summary_message_id;
-- +goose StatementEnd



================================================
FILE: internal/db/migrations/20250624000000_add_created_at_indexes.sql
================================================
-- +goose Up
-- +goose StatementBegin
-- Add indexes on created_at columns for better ORDER BY performance
CREATE INDEX IF NOT EXISTS idx_sessions_created_at ON sessions (created_at);
CREATE INDEX IF NOT EXISTS idx_messages_created_at ON messages (created_at);
CREATE INDEX IF NOT EXISTS idx_files_created_at ON files (created_at);
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
DROP INDEX IF EXISTS idx_sessions_created_at;
DROP INDEX IF EXISTS idx_messages_created_at;
DROP INDEX IF EXISTS idx_files_created_at;
-- +goose StatementEnd


================================================
FILE: internal/db/migrations/20250627000000_add_provider_to_messages.sql
================================================
-- +goose Up
-- +goose StatementBegin
-- Add provider column to messages table
ALTER TABLE messages ADD COLUMN provider TEXT;
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
-- Remove provider column from messages table
ALTER TABLE messages DROP COLUMN provider;
-- +goose StatementEnd


================================================
FILE: internal/db/sql/files.sql
================================================
-- name: GetFile :one
SELECT *
FROM files
WHERE id = ? LIMIT 1;

-- name: GetFileByPathAndSession :one
SELECT *
FROM files
WHERE path = ? AND session_id = ?
ORDER BY version DESC, created_at DESC
LIMIT 1;

-- name: ListFilesBySession :many
SELECT *
FROM files
WHERE session_id = ?
ORDER BY version ASC, created_at ASC;

-- name: ListFilesByPath :many
SELECT *
FROM files
WHERE path = ?
ORDER BY version DESC, created_at DESC;

-- name: CreateFile :one
INSERT INTO files (
    id,
    session_id,
    path,
    content,
    version,
    created_at,
    updated_at
) VALUES (
    ?, ?, ?, ?, ?, strftime('%s', 'now'), strftime('%s', 'now')
)
RETURNING *;

-- name: DeleteFile :exec
DELETE FROM files
WHERE id = ?;

-- name: DeleteSessionFiles :exec
DELETE FROM files
WHERE session_id = ?;

-- name: ListLatestSessionFiles :many
SELECT f.*
FROM files f
INNER JOIN (
    SELECT path, MAX(version) as max_version, MAX(created_at) as max_created_at
    FROM files
    GROUP BY path
) latest ON f.path = latest.path AND f.version = latest.max_version AND f.created_at = latest.max_created_at
WHERE f.session_id = ?
ORDER BY f.path;

-- name: ListNewFiles :many
SELECT *
FROM files
WHERE is_new = 1
ORDER BY version DESC, created_at DESC;



================================================
FILE: internal/db/sql/messages.sql
================================================
-- name: GetMessage :one
SELECT *
FROM messages
WHERE id = ? LIMIT 1;

-- name: ListMessagesBySession :many
SELECT *
FROM messages
WHERE session_id = ?
ORDER BY created_at ASC;

-- name: CreateMessage :one
INSERT INTO messages (
    id,
    session_id,
    role,
    parts,
    model,
    provider,
    created_at,
    updated_at
) VALUES (
    ?, ?, ?, ?, ?, ?, strftime('%s', 'now'), strftime('%s', 'now')
)
RETURNING *;

-- name: UpdateMessage :exec
UPDATE messages
SET
    parts = ?,
    finished_at = ?,
    updated_at = strftime('%s', 'now')
WHERE id = ?;


-- name: DeleteMessage :exec
DELETE FROM messages
WHERE id = ?;

-- name: DeleteSessionMessages :exec
DELETE FROM messages
WHERE session_id = ?;



================================================
FILE: internal/db/sql/sessions.sql
================================================
-- name: CreateSession :one
INSERT INTO sessions (
    id,
    parent_session_id,
    title,
    message_count,
    prompt_tokens,
    completion_tokens,
    cost,
    summary_message_id,
    updated_at,
    created_at
) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    null,
    strftime('%s', 'now'),
    strftime('%s', 'now')
) RETURNING *;

-- name: GetSessionByID :one
SELECT *
FROM sessions
WHERE id = ? LIMIT 1;

-- name: ListSessions :many
SELECT *
FROM sessions
WHERE parent_session_id is NULL
ORDER BY created_at DESC;

-- name: UpdateSession :one
UPDATE sessions
SET
    title = ?,
    prompt_tokens = ?,
    completion_tokens = ?,
    summary_message_id = ?,
    cost = ?
WHERE id = ?
RETURNING *;


-- name: DeleteSession :exec
DELETE FROM sessions
WHERE id = ?;



================================================
FILE: internal/diff/diff.go
================================================
package diff

import (
	"strings"

	"github.com/aymanbagabas/go-udiff"
)

// GenerateDiff creates a unified diff from two file contents
func GenerateDiff(beforeContent, afterContent, fileName string) (string, int, int) {
	fileName = strings.TrimPrefix(fileName, "/")

	var (
		unified   = udiff.Unified("a/"+fileName, "b/"+fileName, beforeContent, afterContent)
		additions = 0
		removals  = 0
	)

	lines := strings.SplitSeq(unified, "\n")
	for line := range lines {
		if strings.HasPrefix(line, "+") && !strings.HasPrefix(line, "+++") {
			additions++
		} else if strings.HasPrefix(line, "-") && !strings.HasPrefix(line, "---") {
			removals++
		}
	}

	return unified, additions, removals
}



================================================
FILE: internal/format/spinner.go
================================================
package format

import (
	"context"
	"errors"
	"fmt"
	"os"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/components/anim"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/x/ansi"
)

// Spinner wraps the bubbles spinner for non-interactive mode
type Spinner struct {
	done chan struct{}
	prog *tea.Program
}

type model struct {
	cancel context.CancelFunc
	anim   *anim.Anim
}

func (m model) Init() tea.Cmd { return m.anim.Init() }
func (m model) View() string  { return m.anim.View() }

// Update implements tea.Model.
func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.KeyPressMsg:
		switch msg.String() {
		case "ctrl+c", "esc":
			m.cancel()
			return m, tea.Quit
		}
	}
	mm, cmd := m.anim.Update(msg)
	m.anim = mm.(*anim.Anim)
	return m, cmd
}

// NewSpinner creates a new spinner with the given message
func NewSpinner(ctx context.Context, cancel context.CancelFunc, message string) *Spinner {
	t := styles.CurrentTheme()
	model := model{
		anim: anim.New(anim.Settings{
			Size:        10,
			Label:       message,
			LabelColor:  t.FgBase,
			GradColorA:  t.Primary,
			GradColorB:  t.Secondary,
			CycleColors: true,
		}),
		cancel: cancel,
	}

	prog := tea.NewProgram(
		model,
		tea.WithOutput(os.Stderr),
		tea.WithContext(ctx),
	)

	return &Spinner{
		prog: prog,
		done: make(chan struct{}, 1),
	}
}

// Start begins the spinner animation
func (s *Spinner) Start() {
	go func() {
		defer close(s.done)
		_, err := s.prog.Run()
		// ensures line is cleared
		fmt.Fprint(os.Stderr, ansi.EraseEntireLine)
		if err != nil && !errors.Is(err, context.Canceled) && !errors.Is(err, tea.ErrInterrupted) {
			fmt.Fprintf(os.Stderr, "Error running spinner: %v\n", err)
		}
	}()
}

// Stop ends the spinner animation
func (s *Spinner) Stop() {
	s.prog.Quit()
	<-s.done
}



================================================
FILE: internal/fsext/expand.go
================================================
package fsext

import (
	"os"
	"strings"

	"mvdan.cc/sh/v3/expand"
	"mvdan.cc/sh/v3/syntax"
)

// Expand is a wrapper around [expand.Literal]. It will escape the input
// string, expand any shell symbols (such as '~') and resolve any environment
// variables.
func Expand(s string) (string, error) {
	if s == "" {
		return "", nil
	}
	p := syntax.NewParser()
	word, err := p.Document(strings.NewReader(s))
	if err != nil {
		return "", err
	}
	cfg := &expand.Config{
		Env:      expand.FuncEnviron(os.Getenv),
		ReadDir2: os.ReadDir,
		GlobStar: true,
	}
	return expand.Literal(cfg, word)
}



================================================
FILE: internal/fsext/fileutil.go
================================================
package fsext

import (
	"fmt"
	"os"
	"path/filepath"
	"sort"
	"strings"
	"time"

	"github.com/bmatcuk/doublestar/v4"
	"github.com/charlievieth/fastwalk"

	ignore "github.com/sabhiram/go-gitignore"
)

type FileInfo struct {
	Path    string
	ModTime time.Time
}

func SkipHidden(path string) bool {
	// Check for hidden files (starting with a dot)
	base := filepath.Base(path)
	if base != "." && strings.HasPrefix(base, ".") {
		return true
	}

	commonIgnoredDirs := map[string]bool{
		".crush":           true,
		"node_modules":     true,
		"vendor":           true,
		"dist":             true,
		"build":            true,
		"target":           true,
		".git":             true,
		".idea":            true,
		".vscode":          true,
		"__pycache__":      true,
		"bin":              true,
		"obj":              true,
		"out":              true,
		"coverage":         true,
		"logs":             true,
		"generated":        true,
		"bower_components": true,
		"jspm_packages":    true,
	}

	parts := strings.SplitSeq(path, string(os.PathSeparator))
	for part := range parts {
		if commonIgnoredDirs[part] {
			return true
		}
	}
	return false
}

// FastGlobWalker provides gitignore-aware file walking with fastwalk
type FastGlobWalker struct {
	gitignore   *ignore.GitIgnore
	crushignore *ignore.GitIgnore
	rootPath    string
}

func NewFastGlobWalker(searchPath string) *FastGlobWalker {
	walker := &FastGlobWalker{
		rootPath: searchPath,
	}

	// Load gitignore if it exists
	gitignorePath := filepath.Join(searchPath, ".gitignore")
	if _, err := os.Stat(gitignorePath); err == nil {
		if gi, err := ignore.CompileIgnoreFile(gitignorePath); err == nil {
			walker.gitignore = gi
		}
	}

	// Load crushignore if it exists
	crushignorePath := filepath.Join(searchPath, ".crushignore")
	if _, err := os.Stat(crushignorePath); err == nil {
		if ci, err := ignore.CompileIgnoreFile(crushignorePath); err == nil {
			walker.crushignore = ci
		}
	}

	return walker
}

// ShouldSkip checks if a path should be skipped based on gitignore, crushignore, and hidden file rules
func (w *FastGlobWalker) ShouldSkip(path string) bool {
	if SkipHidden(path) {
		return true
	}

	relPath, err := filepath.Rel(w.rootPath, path)
	if err != nil {
		return false
	}

	if w.gitignore != nil {
		if w.gitignore.MatchesPath(relPath) {
			return true
		}
	}

	if w.crushignore != nil {
		if w.crushignore.MatchesPath(relPath) {
			return true
		}
	}

	return false
}

func GlobWithDoubleStar(pattern, searchPath string, limit int) ([]string, bool, error) {
	walker := NewFastGlobWalker(searchPath)
	var matches []FileInfo
	conf := fastwalk.Config{
		Follow: true,
		// Use forward slashes when running a Windows binary under WSL or MSYS
		ToSlash: fastwalk.DefaultToSlash(),
		Sort:    fastwalk.SortFilesFirst,
	}
	err := fastwalk.Walk(&conf, searchPath, func(path string, d os.DirEntry, err error) error {
		if err != nil {
			return nil // Skip files we can't access
		}

		if d.IsDir() {
			if walker.ShouldSkip(path) {
				return filepath.SkipDir
			}
			return nil
		}

		if walker.ShouldSkip(path) {
			return nil
		}

		// Check if path matches the pattern
		relPath, err := filepath.Rel(searchPath, path)
		if err != nil {
			relPath = path
		}

		matched, err := doublestar.Match(pattern, relPath)
		if err != nil || !matched {
			return nil
		}

		info, err := d.Info()
		if err != nil {
			return nil
		}

		matches = append(matches, FileInfo{Path: path, ModTime: info.ModTime()})
		if limit > 0 && len(matches) >= limit*2 {
			return filepath.SkipAll
		}
		return nil
	})
	if err != nil {
		return nil, false, fmt.Errorf("fastwalk error: %w", err)
	}

	sort.Slice(matches, func(i, j int) bool {
		return matches[i].ModTime.After(matches[j].ModTime)
	})

	truncated := false
	if limit > 0 && len(matches) > limit {
		matches = matches[:limit]
		truncated = true
	}

	results := make([]string, len(matches))
	for i, m := range matches {
		results[i] = m.Path
	}
	return results, truncated, nil
}

func PrettyPath(path string) string {
	// replace home directory with ~
	homeDir, err := os.UserHomeDir()
	if err == nil {
		path = strings.ReplaceAll(path, homeDir, "~")
	}
	return path
}

func DirTrim(pwd string, lim int) string {
	var (
		out string
		sep = string(filepath.Separator)
	)
	dirs := strings.Split(pwd, sep)
	if lim > len(dirs)-1 || lim <= 0 {
		return pwd
	}
	for i := len(dirs) - 1; i > 0; i-- {
		out = sep + out
		if i == len(dirs)-1 {
			out = dirs[i]
		} else if i >= len(dirs)-lim {
			out = string(dirs[i][0]) + out
		} else {
			out = "..." + out
			break
		}
	}
	out = filepath.Join("~", out)
	return out
}

// PathOrPrefix returns the prefix if the path starts with it, or falls back to
// the path otherwise.
func PathOrPrefix(path, prefix string) string {
	if HasPrefix(path, prefix) {
		return prefix
	}
	return path
}

// HasPrefix checks if the given path starts with the specified prefix.
// Uses filepath.Rel to determine if path is within prefix.
func HasPrefix(path, prefix string) bool {
	rel, err := filepath.Rel(prefix, path)
	if err != nil {
		return false
	}
	// If path is within prefix, Rel will not return a path starting with ".."
	return !strings.HasPrefix(rel, "..")
}

// ToUnixLineEndings converts Windows line endings (CRLF) to Unix line endings (LF).
func ToUnixLineEndings(content string) (string, bool) {
	if strings.Contains(content, "\r\n") {
		return strings.ReplaceAll(content, "\r\n", "\n"), true
	}
	return content, false
}

// ToWindowsLineEndings converts Unix line endings (LF) to Windows line endings (CRLF).
func ToWindowsLineEndings(content string) (string, bool) {
	if !strings.Contains(content, "\r\n") {
		return strings.ReplaceAll(content, "\n", "\r\n"), true
	}
	return content, false
}



================================================
FILE: internal/fsext/home.go
================================================
package fsext

import (
	"cmp"
	"os"
	"os/user"
	"sync"
)

var HomeDir = sync.OnceValue(func() string {
	u, err := user.Current()
	if err == nil {
		return u.HomeDir
	}
	return cmp.Or(
		os.Getenv("HOME"),
		os.Getenv("USERPROFILE"),
		os.Getenv("HOMEPATH"),
	)
})



================================================
FILE: internal/fsext/ignore_test.go
================================================
package fsext

import (
	"os"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestCrushIgnore(t *testing.T) {
	// Create a temporary directory for testing
	tempDir := t.TempDir()

	// Change to temp directory
	oldWd, _ := os.Getwd()
	err := os.Chdir(tempDir)
	require.NoError(t, err)
	defer os.Chdir(oldWd)

	// Create test files
	require.NoError(t, os.WriteFile("test1.txt", []byte("test"), 0o644))
	require.NoError(t, os.WriteFile("test2.log", []byte("test"), 0o644))
	require.NoError(t, os.WriteFile("test3.tmp", []byte("test"), 0o644))

	// Create a .crushignore file that ignores .log files
	require.NoError(t, os.WriteFile(".crushignore", []byte("*.log\n"), 0o644))

	dl := NewDirectoryLister(tempDir)
	require.True(t, dl.shouldIgnore("test2.log", nil), ".log files should be ignored")
	require.False(t, dl.shouldIgnore("test1.txt", nil), ".txt files should not be ignored")
	require.True(t, dl.shouldIgnore("test3.tmp", nil), ".tmp files should be ignored by common patterns")
}



================================================
FILE: internal/fsext/ls.go
================================================
package fsext

import (
	"log/slog"
	"os"
	"path/filepath"
	"strings"
	"sync"

	"github.com/charlievieth/fastwalk"
	"github.com/charmbracelet/crush/internal/csync"
	ignore "github.com/sabhiram/go-gitignore"
)

// commonIgnorePatterns contains commonly ignored files and directories
var commonIgnorePatterns = sync.OnceValue(func() ignore.IgnoreParser {
	return ignore.CompileIgnoreLines(
		// Version control
		".git",
		".svn",
		".hg",
		".bzr",

		// IDE and editor files
		".vscode",
		".idea",
		"*.swp",
		"*.swo",
		"*~",
		".DS_Store",
		"Thumbs.db",

		// Build artifacts and dependencies
		"node_modules",
		"target",
		"build",
		"dist",
		"out",
		"bin",
		"obj",
		"*.o",
		"*.so",
		"*.dylib",
		"*.dll",
		"*.exe",

		// Logs and temporary files
		"*.log",
		"*.tmp",
		"*.temp",
		".cache",
		".tmp",

		// Language-specific
		"__pycache__",
		"*.pyc",
		"*.pyo",
		".pytest_cache",
		"vendor",
		"Cargo.lock",
		"package-lock.json",
		"yarn.lock",
		"pnpm-lock.yaml",

		// OS generated files
		".Trash",
		".Spotlight-V100",
		".fseventsd",

		// Crush
		".crush",
	)
})

var homeIgnore = sync.OnceValue(func() ignore.IgnoreParser {
	home := HomeDir()
	var lines []string
	for _, name := range []string{
		filepath.Join(home, ".gitignore"),
		filepath.Join(home, ".config", "git", "ignore"),
		filepath.Join(home, ".config", "crush", "ignore"),
	} {
		if bts, err := os.ReadFile(name); err == nil {
			lines = append(lines, strings.Split(string(bts), "\n")...)
		}
	}
	return ignore.CompileIgnoreLines(lines...)
})

type directoryLister struct {
	ignores  *csync.Map[string, ignore.IgnoreParser]
	rootPath string
}

func NewDirectoryLister(rootPath string) *directoryLister {
	dl := &directoryLister{
		rootPath: rootPath,
		ignores:  csync.NewMap[string, ignore.IgnoreParser](),
	}
	dl.getIgnore(rootPath)
	return dl
}

// git checks, in order:
// - ./.gitignore, ../.gitignore, etc, until repo root
// ~/.config/git/ignore
// ~/.gitignore
//
// This will do the following:
// - the given ignorePatterns
// - [commonIgnorePatterns]
// - ./.gitignore, ../.gitignore, etc, until dl.rootPath
// - ./.crushignore, ../.crushignore, etc, until dl.rootPath
// ~/.config/git/ignore
// ~/.gitignore
// ~/.config/crush/ignore
func (dl *directoryLister) shouldIgnore(path string, ignorePatterns []string) bool {
	if len(ignorePatterns) > 0 {
		base := filepath.Base(path)
		for _, pattern := range ignorePatterns {
			if matched, err := filepath.Match(pattern, base); err == nil && matched {
				return true
			}
		}
	}

	// Don't apply gitignore rules to the root directory itself
	// In gitignore semantics, patterns don't apply to the repo root
	if path == dl.rootPath {
		return false
	}

	relPath, err := filepath.Rel(dl.rootPath, path)
	if err != nil {
		relPath = path
	}

	if commonIgnorePatterns().MatchesPath(relPath) {
		slog.Debug("ignoring common pattern", "path", relPath)
		return true
	}

	if dl.getIgnore(filepath.Dir(path)).MatchesPath(relPath) {
		slog.Debug("ignoring dir pattern", "path", relPath, "dir", filepath.Dir(path))
		return true
	}

	if dl.checkParentIgnores(relPath) {
		return true
	}

	if homeIgnore().MatchesPath(relPath) {
		slog.Debug("ignoring home dir pattern", "path", relPath)
		return true
	}

	return false
}

func (dl *directoryLister) checkParentIgnores(path string) bool {
	parent := filepath.Dir(filepath.Dir(path))
	for parent != dl.rootPath && parent != "." && path != "." {
		if dl.getIgnore(parent).MatchesPath(path) {
			slog.Debug("ingoring parent dir pattern", "path", path, "dir", parent)
			return true
		}
		parent = filepath.Dir(parent)
	}
	return false
}

func (dl *directoryLister) getIgnore(path string) ignore.IgnoreParser {
	return dl.ignores.GetOrSet(path, func() ignore.IgnoreParser {
		var lines []string
		for _, ign := range []string{".crushignore", ".gitignore"} {
			name := filepath.Join(path, ign)
			if content, err := os.ReadFile(name); err == nil {
				lines = append(lines, strings.Split(string(content), "\n")...)
			}
		}
		if len(lines) == 0 {
			// Return a no-op parser to avoid nil checks
			return ignore.CompileIgnoreLines()
		}
		return ignore.CompileIgnoreLines(lines...)
	})
}

// ListDirectory lists files and directories in the specified path,
func ListDirectory(initialPath string, ignorePatterns []string, limit int) ([]string, bool, error) {
	var results []string
	truncated := false
	dl := NewDirectoryLister(initialPath)

	conf := fastwalk.Config{
		Follow: true,
		// Use forward slashes when running a Windows binary under WSL or MSYS
		ToSlash: fastwalk.DefaultToSlash(),
		Sort:    fastwalk.SortDirsFirst,
	}

	err := fastwalk.Walk(&conf, initialPath, func(path string, d os.DirEntry, err error) error {
		if err != nil {
			return nil // Skip files we don't have permission to access
		}

		if dl.shouldIgnore(path, ignorePatterns) {
			if d.IsDir() {
				return filepath.SkipDir
			}
			return nil
		}

		if path != initialPath {
			if d.IsDir() {
				path = path + string(filepath.Separator)
			}
			results = append(results, path)
		}

		if limit > 0 && len(results) >= limit {
			truncated = true
			return filepath.SkipAll
		}

		return nil
	})
	if err != nil && len(results) == 0 {
		return nil, truncated, err
	}

	return results, truncated, nil
}



================================================
FILE: internal/fsext/ls_test.go
================================================
package fsext

import (
	"os"
	"path/filepath"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func chdir(t *testing.T, dir string) {
	original, err := os.Getwd()
	require.NoError(t, err)

	err = os.Chdir(dir)
	require.NoError(t, err)

	t.Cleanup(func() {
		err := os.Chdir(original)
		require.NoError(t, err)
	})
}

func TestListDirectory(t *testing.T) {
	tempDir := t.TempDir()
	chdir(t, tempDir)

	testFiles := map[string]string{
		"regular.txt":     "content",
		".hidden":         "hidden content",
		".gitignore":      ".*\n*.log\n",
		"subdir/file.go":  "package main",
		"subdir/.another": "more hidden",
		"build.log":       "build output",
	}

	for filePath, content := range testFiles {
		dir := filepath.Dir(filePath)
		if dir != "." {
			require.NoError(t, os.MkdirAll(dir, 0o755))
		}

		err := os.WriteFile(filePath, []byte(content), 0o644)
		require.NoError(t, err)
	}

	files, truncated, err := ListDirectory(".", nil, 0)
	require.NoError(t, err)
	assert.False(t, truncated)
	assert.Equal(t, len(files), 4)

	fileSet := make(map[string]bool)
	for _, file := range files {
		fileSet[filepath.ToSlash(file)] = true
	}

	assert.True(t, fileSet["./regular.txt"])
	assert.True(t, fileSet["./subdir/"])
	assert.True(t, fileSet["./subdir/file.go"])
	assert.True(t, fileSet["./regular.txt"])

	assert.False(t, fileSet["./.hidden"])
	assert.False(t, fileSet["./.gitignore"])
	assert.False(t, fileSet["./build.log"])
}



================================================
FILE: internal/fsext/owner_others.go
================================================
//go:build !windows

package fsext

import (
	"os"
	"syscall"
)

// Owner retrieves the user ID of the owner of the file or directory at the
// specified path.
func Owner(path string) (int, error) {
	info, err := os.Stat(path)
	if err != nil {
		return 0, err
	}
	var uid int
	if stat, ok := info.Sys().(*syscall.Stat_t); ok {
		uid = int(stat.Uid)
	} else {
		uid = os.Getuid()
	}
	return uid, nil
}



================================================
FILE: internal/fsext/owner_windows.go
================================================
//go:build windows

package fsext

// Owner retrieves the user ID of the owner of the file or directory at the
// specified path.
func Owner(path string) (int, error) {
	return -1, nil
}



================================================
FILE: internal/fsext/parent.go
================================================
package fsext

import (
	"errors"
	"os"
	"path/filepath"
)

// SearchParent searches for a target file or directory starting from dir
// and walking up the directory tree until found or root or home is reached.
// It also checks the ownership of directories to ensure that the search does
// not cross ownership boundaries.
// Returns the full path to the target if found, empty string and false otherwise.
// The search includes the starting directory itself.
func SearchParent(dir, target string) (string, bool) {
	absDir, err := filepath.Abs(dir)
	if err != nil {
		return "", false
	}

	path := filepath.Join(absDir, target)
	if _, err := os.Stat(path); err == nil {
		return path, true
	} else if !errors.Is(err, os.ErrNotExist) {
		return "", false
	}

	previousParent := absDir
	previousOwner, err := Owner(previousParent)
	if err != nil {
		return "", false
	}

	for {
		parent := filepath.Dir(previousParent)
		if parent == previousParent || parent == HomeDir() {
			return "", false
		}

		parentOwner, err := Owner(parent)
		if err != nil {
			return "", false
		}
		if parentOwner != previousOwner {
			return "", false
		}

		path := filepath.Join(parent, target)
		if _, err := os.Stat(path); err == nil {
			return path, true
		} else if !errors.Is(err, os.ErrNotExist) {
			return "", false
		}

		previousParent = parent
		previousOwner = parentOwner
	}
}



================================================
FILE: internal/history/file.go
================================================
package history

import (
	"context"
	"database/sql"
	"fmt"
	"strings"

	"github.com/charmbracelet/crush/internal/db"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/google/uuid"
)

const (
	InitialVersion = 0
)

type File struct {
	ID        string
	SessionID string
	Path      string
	Content   string
	Version   int64
	CreatedAt int64
	UpdatedAt int64
}

type Service interface {
	pubsub.Suscriber[File]
	Create(ctx context.Context, sessionID, path, content string) (File, error)
	CreateVersion(ctx context.Context, sessionID, path, content string) (File, error)
	Get(ctx context.Context, id string) (File, error)
	GetByPathAndSession(ctx context.Context, path, sessionID string) (File, error)
	ListBySession(ctx context.Context, sessionID string) ([]File, error)
	ListLatestSessionFiles(ctx context.Context, sessionID string) ([]File, error)
	Delete(ctx context.Context, id string) error
	DeleteSessionFiles(ctx context.Context, sessionID string) error
}

type service struct {
	*pubsub.Broker[File]
	db *sql.DB
	q  *db.Queries
}

func NewService(q *db.Queries, db *sql.DB) Service {
	return &service{
		Broker: pubsub.NewBroker[File](),
		q:      q,
		db:     db,
	}
}

func (s *service) Create(ctx context.Context, sessionID, path, content string) (File, error) {
	return s.createWithVersion(ctx, sessionID, path, content, InitialVersion)
}

func (s *service) CreateVersion(ctx context.Context, sessionID, path, content string) (File, error) {
	// Get the latest version for this path
	files, err := s.q.ListFilesByPath(ctx, path)
	if err != nil {
		return File{}, err
	}

	if len(files) == 0 {
		// No previous versions, create initial
		return s.Create(ctx, sessionID, path, content)
	}

	// Get the latest version
	latestFile := files[0] // Files are ordered by version DESC, created_at DESC
	nextVersion := latestFile.Version + 1

	return s.createWithVersion(ctx, sessionID, path, content, nextVersion)
}

func (s *service) createWithVersion(ctx context.Context, sessionID, path, content string, version int64) (File, error) {
	// Maximum number of retries for transaction conflicts
	const maxRetries = 3
	var file File
	var err error

	// Retry loop for transaction conflicts
	for attempt := range maxRetries {
		// Start a transaction
		tx, txErr := s.db.BeginTx(ctx, nil)
		if txErr != nil {
			return File{}, fmt.Errorf("failed to begin transaction: %w", txErr)
		}

		// Create a new queries instance with the transaction
		qtx := s.q.WithTx(tx)

		// Try to create the file within the transaction
		dbFile, txErr := qtx.CreateFile(ctx, db.CreateFileParams{
			ID:        uuid.New().String(),
			SessionID: sessionID,
			Path:      path,
			Content:   content,
			Version:   version,
		})
		if txErr != nil {
			// Rollback the transaction
			tx.Rollback()

			// Check if this is a uniqueness constraint violation
			if strings.Contains(txErr.Error(), "UNIQUE constraint failed") {
				if attempt < maxRetries-1 {
					// If we have retries left, increment version and try again
					version++
					continue
				}
			}
			return File{}, txErr
		}

		// Commit the transaction
		if txErr = tx.Commit(); txErr != nil {
			return File{}, fmt.Errorf("failed to commit transaction: %w", txErr)
		}

		file = s.fromDBItem(dbFile)
		s.Publish(pubsub.CreatedEvent, file)
		return file, nil
	}

	return file, err
}

func (s *service) Get(ctx context.Context, id string) (File, error) {
	dbFile, err := s.q.GetFile(ctx, id)
	if err != nil {
		return File{}, err
	}
	return s.fromDBItem(dbFile), nil
}

func (s *service) GetByPathAndSession(ctx context.Context, path, sessionID string) (File, error) {
	dbFile, err := s.q.GetFileByPathAndSession(ctx, db.GetFileByPathAndSessionParams{
		Path:      path,
		SessionID: sessionID,
	})
	if err != nil {
		return File{}, err
	}
	return s.fromDBItem(dbFile), nil
}

func (s *service) ListBySession(ctx context.Context, sessionID string) ([]File, error) {
	dbFiles, err := s.q.ListFilesBySession(ctx, sessionID)
	if err != nil {
		return nil, err
	}
	files := make([]File, len(dbFiles))
	for i, dbFile := range dbFiles {
		files[i] = s.fromDBItem(dbFile)
	}
	return files, nil
}

func (s *service) ListLatestSessionFiles(ctx context.Context, sessionID string) ([]File, error) {
	dbFiles, err := s.q.ListLatestSessionFiles(ctx, sessionID)
	if err != nil {
		return nil, err
	}
	files := make([]File, len(dbFiles))
	for i, dbFile := range dbFiles {
		files[i] = s.fromDBItem(dbFile)
	}
	return files, nil
}

func (s *service) Delete(ctx context.Context, id string) error {
	file, err := s.Get(ctx, id)
	if err != nil {
		return err
	}
	err = s.q.DeleteFile(ctx, id)
	if err != nil {
		return err
	}
	s.Publish(pubsub.DeletedEvent, file)
	return nil
}

func (s *service) DeleteSessionFiles(ctx context.Context, sessionID string) error {
	files, err := s.ListBySession(ctx, sessionID)
	if err != nil {
		return err
	}
	for _, file := range files {
		err = s.Delete(ctx, file.ID)
		if err != nil {
			return err
		}
	}
	return nil
}

func (s *service) fromDBItem(item db.File) File {
	return File{
		ID:        item.ID,
		SessionID: item.SessionID,
		Path:      item.Path,
		Content:   item.Content,
		Version:   item.Version,
		CreatedAt: item.CreatedAt,
		UpdatedAt: item.UpdatedAt,
	}
}



================================================
FILE: internal/llm/agent/agent-tool.go
================================================
package agent

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/session"
)

type agentTool struct {
	agent    Service
	sessions session.Service
	messages message.Service
}

const (
	AgentToolName = "agent"
)

type AgentParams struct {
	Prompt string `json:"prompt"`
}

func (b *agentTool) Name() string {
	return AgentToolName
}

func (b *agentTool) Info() tools.ToolInfo {
	return tools.ToolInfo{
		Name:        AgentToolName,
		Description: "Launch a new agent that has access to the following tools: GlobTool, GrepTool, LS, View. When you are searching for a keyword or file and are not confident that you will find the right match on the first try, use the Agent tool to perform the search for you. For example:\n\n- If you are searching for a keyword like \"config\" or \"logger\", or for questions like \"which file does X?\", the Agent tool is strongly recommended\n- If you want to read a specific file path, use the View or GlobTool tool instead of the Agent tool, to find the match more quickly\n- If you are searching for a specific class definition like \"class Foo\", use the GlobTool tool instead, to find the match more quickly\n\nUsage notes:\n1. Launch multiple agents concurrently whenever possible, to maximize performance; to do that, use a single message with multiple tool uses\n2. When the agent is done, it will return a single message back to you. The result returned by the agent is not visible to the user. To show the user the result, you should send a text message back to the user with a concise summary of the result.\n3. Each agent invocation is stateless. You will not be able to send additional messages to the agent, nor will the agent be able to communicate with you outside of its final report. Therefore, your prompt should contain a highly detailed task description for the agent to perform autonomously and you should specify exactly what information the agent should return back to you in its final and only message to you.\n4. The agent's outputs should generally be trusted\n5. IMPORTANT: The agent can not use Bash, Replace, Edit, so can not modify files. If you want to use these tools, use them directly instead of going through the agent.",
		Parameters: map[string]any{
			"prompt": map[string]any{
				"type":        "string",
				"description": "The task for the agent to perform",
			},
		},
		Required: []string{"prompt"},
	}
}

func (b *agentTool) Run(ctx context.Context, call tools.ToolCall) (tools.ToolResponse, error) {
	var params AgentParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return tools.NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}
	if params.Prompt == "" {
		return tools.NewTextErrorResponse("prompt is required"), nil
	}

	sessionID, messageID := tools.GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return tools.ToolResponse{}, fmt.Errorf("session_id and message_id are required")
	}

	session, err := b.sessions.CreateTaskSession(ctx, call.ID, sessionID, "New Agent Session")
	if err != nil {
		return tools.ToolResponse{}, fmt.Errorf("error creating session: %s", err)
	}

	done, err := b.agent.Run(ctx, session.ID, params.Prompt)
	if err != nil {
		return tools.ToolResponse{}, fmt.Errorf("error generating agent: %s", err)
	}
	result := <-done
	if result.Error != nil {
		return tools.ToolResponse{}, fmt.Errorf("error generating agent: %s", result.Error)
	}

	response := result.Message
	if response.Role != message.Assistant {
		return tools.NewTextErrorResponse("no response"), nil
	}

	updatedSession, err := b.sessions.Get(ctx, session.ID)
	if err != nil {
		return tools.ToolResponse{}, fmt.Errorf("error getting session: %s", err)
	}
	parentSession, err := b.sessions.Get(ctx, sessionID)
	if err != nil {
		return tools.ToolResponse{}, fmt.Errorf("error getting parent session: %s", err)
	}

	parentSession.Cost += updatedSession.Cost

	_, err = b.sessions.Save(ctx, parentSession)
	if err != nil {
		return tools.ToolResponse{}, fmt.Errorf("error saving parent session: %s", err)
	}
	return tools.NewTextResponse(response.Content().String()), nil
}

func NewAgentTool(
	agent Service,
	sessions session.Service,
	messages message.Service,
) tools.BaseTool {
	return &agentTool{
		sessions: sessions,
		messages: messages,
		agent:    agent,
	}
}



================================================
FILE: internal/llm/agent/agent.go
================================================
package agent

import (
	"context"
	"errors"
	"fmt"
	"log/slog"
	"slices"
	"strings"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/history"
	"github.com/charmbracelet/crush/internal/llm/prompt"
	"github.com/charmbracelet/crush/internal/llm/provider"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/charmbracelet/crush/internal/session"
	"github.com/charmbracelet/crush/internal/shell"
)

// Common errors
var (
	ErrRequestCancelled = errors.New("request canceled by user")
	ErrSessionBusy      = errors.New("session is currently processing another request")
)

type AgentEventType string

const (
	AgentEventTypeError     AgentEventType = "error"
	AgentEventTypeResponse  AgentEventType = "response"
	AgentEventTypeSummarize AgentEventType = "summarize"
)

type AgentEvent struct {
	Type    AgentEventType
	Message message.Message
	Error   error

	// When summarizing
	SessionID string
	Progress  string
	Done      bool
}

type Service interface {
	pubsub.Suscriber[AgentEvent]
	Model() catwalk.Model
	Run(ctx context.Context, sessionID string, content string, attachments ...message.Attachment) (<-chan AgentEvent, error)
	Cancel(sessionID string)
	CancelAll()
	IsSessionBusy(sessionID string) bool
	IsBusy() bool
	Summarize(ctx context.Context, sessionID string) error
	UpdateModel() error
	QueuedPrompts(sessionID string) int
	ClearQueue(sessionID string)
}

type agent struct {
	*pubsub.Broker[AgentEvent]
	agentCfg config.Agent
	sessions session.Service
	messages message.Service
	mcpTools []McpTool

	tools *csync.LazySlice[tools.BaseTool]

	provider   provider.Provider
	providerID string

	titleProvider       provider.Provider
	summarizeProvider   provider.Provider
	summarizeProviderID string

	activeRequests *csync.Map[string, context.CancelFunc]

	promptQueue *csync.Map[string, []string]
}

var agentPromptMap = map[string]prompt.PromptID{
	"coder": prompt.PromptCoder,
	"task":  prompt.PromptTask,
}

func NewAgent(
	ctx context.Context,
	agentCfg config.Agent,
	// These services are needed in the tools
	permissions permission.Service,
	sessions session.Service,
	messages message.Service,
	history history.Service,
	lspClients map[string]*lsp.Client,
) (Service, error) {
	cfg := config.Get()

	var agentTool tools.BaseTool
	if agentCfg.ID == "coder" {
		taskAgentCfg := config.Get().Agents["task"]
		if taskAgentCfg.ID == "" {
			return nil, fmt.Errorf("task agent not found in config")
		}
		taskAgent, err := NewAgent(ctx, taskAgentCfg, permissions, sessions, messages, history, lspClients)
		if err != nil {
			return nil, fmt.Errorf("failed to create task agent: %w", err)
		}

		agentTool = NewAgentTool(taskAgent, sessions, messages)
	}

	providerCfg := config.Get().GetProviderForModel(agentCfg.Model)
	if providerCfg == nil {
		return nil, fmt.Errorf("provider for agent %s not found in config", agentCfg.Name)
	}
	model := config.Get().GetModelByType(agentCfg.Model)

	if model == nil {
		return nil, fmt.Errorf("model not found for agent %s", agentCfg.Name)
	}

	promptID := agentPromptMap[agentCfg.ID]
	if promptID == "" {
		promptID = prompt.PromptDefault
	}
	opts := []provider.ProviderClientOption{
		provider.WithModel(agentCfg.Model),
		provider.WithSystemMessage(prompt.GetPrompt(promptID, providerCfg.ID, config.Get().Options.ContextPaths...)),
	}
	agentProvider, err := provider.NewProvider(*providerCfg, opts...)
	if err != nil {
		return nil, err
	}

	smallModelCfg := cfg.Models[config.SelectedModelTypeSmall]
	var smallModelProviderCfg *config.ProviderConfig
	if smallModelCfg.Provider == providerCfg.ID {
		smallModelProviderCfg = providerCfg
	} else {
		smallModelProviderCfg = cfg.GetProviderForModel(config.SelectedModelTypeSmall)

		if smallModelProviderCfg.ID == "" {
			return nil, fmt.Errorf("provider %s not found in config", smallModelCfg.Provider)
		}
	}
	smallModel := cfg.GetModelByType(config.SelectedModelTypeSmall)
	if smallModel.ID == "" {
		return nil, fmt.Errorf("model %s not found in provider %s", smallModelCfg.Model, smallModelProviderCfg.ID)
	}

	titleOpts := []provider.ProviderClientOption{
		provider.WithModel(config.SelectedModelTypeSmall),
		provider.WithSystemMessage(prompt.GetPrompt(prompt.PromptTitle, smallModelProviderCfg.ID)),
	}
	titleProvider, err := provider.NewProvider(*smallModelProviderCfg, titleOpts...)
	if err != nil {
		return nil, err
	}

	summarizeOpts := []provider.ProviderClientOption{
		provider.WithModel(config.SelectedModelTypeLarge),
		provider.WithSystemMessage(prompt.GetPrompt(prompt.PromptSummarizer, providerCfg.ID)),
	}
	summarizeProvider, err := provider.NewProvider(*providerCfg, summarizeOpts...)
	if err != nil {
		return nil, err
	}

	toolFn := func() []tools.BaseTool {
		slog.Info("Initializing agent tools", "agent", agentCfg.ID)
		defer func() {
			slog.Info("Initialized agent tools", "agent", agentCfg.ID)
		}()

		cwd := cfg.WorkingDir()
		allTools := []tools.BaseTool{
			tools.NewBashTool(permissions, cwd),
			tools.NewDownloadTool(permissions, cwd),
			tools.NewEditTool(lspClients, permissions, history, cwd),
			tools.NewMultiEditTool(lspClients, permissions, history, cwd),
			tools.NewFetchTool(permissions, cwd),
			tools.NewGlobTool(cwd),
			tools.NewGrepTool(cwd),
			tools.NewLsTool(permissions, cwd),
			tools.NewSourcegraphTool(),
			tools.NewViewTool(lspClients, permissions, cwd),
			tools.NewWriteTool(lspClients, permissions, history, cwd),
		}

		mcpToolsOnce.Do(func() {
			mcpTools = doGetMCPTools(ctx, permissions, cfg)
		})
		allTools = append(allTools, mcpTools...)

		if len(lspClients) > 0 {
			allTools = append(allTools, tools.NewDiagnosticsTool(lspClients))
		}

		if agentTool != nil {
			allTools = append(allTools, agentTool)
		}

		if agentCfg.AllowedTools == nil {
			return allTools
		}

		var filteredTools []tools.BaseTool
		for _, tool := range allTools {
			if slices.Contains(agentCfg.AllowedTools, tool.Name()) {
				filteredTools = append(filteredTools, tool)
			}
		}
		return filteredTools
	}

	return &agent{
		Broker:              pubsub.NewBroker[AgentEvent](),
		agentCfg:            agentCfg,
		provider:            agentProvider,
		providerID:          string(providerCfg.ID),
		messages:            messages,
		sessions:            sessions,
		titleProvider:       titleProvider,
		summarizeProvider:   summarizeProvider,
		summarizeProviderID: string(providerCfg.ID),
		activeRequests:      csync.NewMap[string, context.CancelFunc](),
		tools:               csync.NewLazySlice(toolFn),
		promptQueue:         csync.NewMap[string, []string](),
	}, nil
}

func (a *agent) Model() catwalk.Model {
	return *config.Get().GetModelByType(a.agentCfg.Model)
}

func (a *agent) Cancel(sessionID string) {
	// Cancel regular requests
	if cancel, ok := a.activeRequests.Take(sessionID); ok && cancel != nil {
		slog.Info("Request cancellation initiated", "session_id", sessionID)
		cancel()
	}

	// Also check for summarize requests
	if cancel, ok := a.activeRequests.Take(sessionID + "-summarize"); ok && cancel != nil {
		slog.Info("Summarize cancellation initiated", "session_id", sessionID)
		cancel()
	}

	if a.QueuedPrompts(sessionID) > 0 {
		slog.Info("Clearing queued prompts", "session_id", sessionID)
		a.promptQueue.Del(sessionID)
	}
}

func (a *agent) IsBusy() bool {
	var busy bool
	for cancelFunc := range a.activeRequests.Seq() {
		if cancelFunc != nil {
			busy = true
			break
		}
	}
	return busy
}

func (a *agent) IsSessionBusy(sessionID string) bool {
	_, busy := a.activeRequests.Get(sessionID)
	return busy
}

func (a *agent) QueuedPrompts(sessionID string) int {
	l, ok := a.promptQueue.Get(sessionID)
	if !ok {
		return 0
	}
	return len(l)
}

func (a *agent) generateTitle(ctx context.Context, sessionID string, content string) error {
	if content == "" {
		return nil
	}
	if a.titleProvider == nil {
		return nil
	}
	session, err := a.sessions.Get(ctx, sessionID)
	if err != nil {
		return err
	}
	parts := []message.ContentPart{message.TextContent{
		Text: fmt.Sprintf("Generate a concise title for the following content:\n\n%s", content),
	}}

	// Use streaming approach like summarization
	response := a.titleProvider.StreamResponse(
		ctx,
		[]message.Message{
			{
				Role:  message.User,
				Parts: parts,
			},
		},
		nil,
	)

	var finalResponse *provider.ProviderResponse
	for r := range response {
		if r.Error != nil {
			return r.Error
		}
		finalResponse = r.Response
	}

	if finalResponse == nil {
		return fmt.Errorf("no response received from title provider")
	}

	title := strings.TrimSpace(strings.ReplaceAll(finalResponse.Content, "\n", " "))
	if title == "" {
		return nil
	}

	session.Title = title
	_, err = a.sessions.Save(ctx, session)
	return err
}

func (a *agent) err(err error) AgentEvent {
	return AgentEvent{
		Type:  AgentEventTypeError,
		Error: err,
	}
}

func (a *agent) Run(ctx context.Context, sessionID string, content string, attachments ...message.Attachment) (<-chan AgentEvent, error) {
	if !a.Model().SupportsImages && attachments != nil {
		attachments = nil
	}
	events := make(chan AgentEvent)
	if a.IsSessionBusy(sessionID) {
		existing, ok := a.promptQueue.Get(sessionID)
		if !ok {
			existing = []string{}
		}
		existing = append(existing, content)
		a.promptQueue.Set(sessionID, existing)
		return nil, nil
	}

	genCtx, cancel := context.WithCancel(ctx)

	a.activeRequests.Set(sessionID, cancel)
	go func() {
		slog.Debug("Request started", "sessionID", sessionID)
		defer log.RecoverPanic("agent.Run", func() {
			events <- a.err(fmt.Errorf("panic while running the agent"))
		})
		var attachmentParts []message.ContentPart
		for _, attachment := range attachments {
			attachmentParts = append(attachmentParts, message.BinaryContent{Path: attachment.FilePath, MIMEType: attachment.MimeType, Data: attachment.Content})
		}
		result := a.processGeneration(genCtx, sessionID, content, attachmentParts)
		if result.Error != nil && !errors.Is(result.Error, ErrRequestCancelled) && !errors.Is(result.Error, context.Canceled) {
			slog.Error(result.Error.Error())
		}
		slog.Debug("Request completed", "sessionID", sessionID)
		a.activeRequests.Del(sessionID)
		cancel()
		a.Publish(pubsub.CreatedEvent, result)
		events <- result
		close(events)
	}()
	return events, nil
}

func (a *agent) processGeneration(ctx context.Context, sessionID, content string, attachmentParts []message.ContentPart) AgentEvent {
	cfg := config.Get()
	// List existing messages; if none, start title generation asynchronously.
	msgs, err := a.messages.List(ctx, sessionID)
	if err != nil {
		return a.err(fmt.Errorf("failed to list messages: %w", err))
	}
	if len(msgs) == 0 {
		go func() {
			defer log.RecoverPanic("agent.Run", func() {
				slog.Error("panic while generating title")
			})
			titleErr := a.generateTitle(context.Background(), sessionID, content)
			if titleErr != nil && !errors.Is(titleErr, context.Canceled) && !errors.Is(titleErr, context.DeadlineExceeded) {
				slog.Error("failed to generate title", "error", titleErr)
			}
		}()
	}
	session, err := a.sessions.Get(ctx, sessionID)
	if err != nil {
		return a.err(fmt.Errorf("failed to get session: %w", err))
	}
	if session.SummaryMessageID != "" {
		summaryMsgInex := -1
		for i, msg := range msgs {
			if msg.ID == session.SummaryMessageID {
				summaryMsgInex = i
				break
			}
		}
		if summaryMsgInex != -1 {
			msgs = msgs[summaryMsgInex:]
			msgs[0].Role = message.User
		}
	}

	userMsg, err := a.createUserMessage(ctx, sessionID, content, attachmentParts)
	if err != nil {
		return a.err(fmt.Errorf("failed to create user message: %w", err))
	}
	// Append the new user message to the conversation history.
	msgHistory := append(msgs, userMsg)

	for {
		// Check for cancellation before each iteration
		select {
		case <-ctx.Done():
			return a.err(ctx.Err())
		default:
			// Continue processing
		}
		agentMessage, toolResults, err := a.streamAndHandleEvents(ctx, sessionID, msgHistory)
		if err != nil {
			if errors.Is(err, context.Canceled) {
				agentMessage.AddFinish(message.FinishReasonCanceled, "Request cancelled", "")
				a.messages.Update(context.Background(), agentMessage)
				return a.err(ErrRequestCancelled)
			}
			return a.err(fmt.Errorf("failed to process events: %w", err))
		}
		if cfg.Options.Debug {
			slog.Info("Result", "message", agentMessage.FinishReason(), "toolResults", toolResults)
		}
		if (agentMessage.FinishReason() == message.FinishReasonToolUse) && toolResults != nil {
			// We are not done, we need to respond with the tool response
			msgHistory = append(msgHistory, agentMessage, *toolResults)
			// If there are queued prompts, process the next one
			nextPrompt, ok := a.promptQueue.Take(sessionID)
			if ok {
				for _, prompt := range nextPrompt {
					// Create a new user message for the queued prompt
					userMsg, err := a.createUserMessage(ctx, sessionID, prompt, nil)
					if err != nil {
						return a.err(fmt.Errorf("failed to create user message for queued prompt: %w", err))
					}
					// Append the new user message to the conversation history
					msgHistory = append(msgHistory, userMsg)
				}
			}

			continue
		} else if agentMessage.FinishReason() == message.FinishReasonEndTurn {
			queuePrompts, ok := a.promptQueue.Take(sessionID)
			if ok {
				for _, prompt := range queuePrompts {
					if prompt == "" {
						continue
					}
					userMsg, err := a.createUserMessage(ctx, sessionID, prompt, nil)
					if err != nil {
						return a.err(fmt.Errorf("failed to create user message for queued prompt: %w", err))
					}
					msgHistory = append(msgHistory, userMsg)
				}
				continue
			}
		}
		if agentMessage.FinishReason() == "" {
			// Kujtim: could not track down where this is happening but this means its cancelled
			agentMessage.AddFinish(message.FinishReasonCanceled, "Request cancelled", "")
			_ = a.messages.Update(context.Background(), agentMessage)
			return a.err(ErrRequestCancelled)
		}
		return AgentEvent{
			Type:    AgentEventTypeResponse,
			Message: agentMessage,
			Done:    true,
		}
	}
}

func (a *agent) createUserMessage(ctx context.Context, sessionID, content string, attachmentParts []message.ContentPart) (message.Message, error) {
	parts := []message.ContentPart{message.TextContent{Text: content}}
	parts = append(parts, attachmentParts...)
	return a.messages.Create(ctx, sessionID, message.CreateMessageParams{
		Role:  message.User,
		Parts: parts,
	})
}

func (a *agent) streamAndHandleEvents(ctx context.Context, sessionID string, msgHistory []message.Message) (message.Message, *message.Message, error) {
	ctx = context.WithValue(ctx, tools.SessionIDContextKey, sessionID)

	// Create the assistant message first so the spinner shows immediately
	assistantMsg, err := a.messages.Create(ctx, sessionID, message.CreateMessageParams{
		Role:     message.Assistant,
		Parts:    []message.ContentPart{},
		Model:    a.Model().ID,
		Provider: a.providerID,
	})
	if err != nil {
		return assistantMsg, nil, fmt.Errorf("failed to create assistant message: %w", err)
	}

	// Now collect tools (which may block on MCP initialization)
	eventChan := a.provider.StreamResponse(ctx, msgHistory, slices.Collect(a.tools.Seq()))

	// Add the session and message ID into the context if needed by tools.
	ctx = context.WithValue(ctx, tools.MessageIDContextKey, assistantMsg.ID)

	// Process each event in the stream.
	for event := range eventChan {
		if processErr := a.processEvent(ctx, sessionID, &assistantMsg, event); processErr != nil {
			if errors.Is(processErr, context.Canceled) {
				a.finishMessage(context.Background(), &assistantMsg, message.FinishReasonCanceled, "Request cancelled", "")
			} else {
				a.finishMessage(ctx, &assistantMsg, message.FinishReasonError, "API Error", processErr.Error())
			}
			return assistantMsg, nil, processErr
		}
		if ctx.Err() != nil {
			a.finishMessage(context.Background(), &assistantMsg, message.FinishReasonCanceled, "Request cancelled", "")
			return assistantMsg, nil, ctx.Err()
		}
	}

	toolResults := make([]message.ToolResult, len(assistantMsg.ToolCalls()))
	toolCalls := assistantMsg.ToolCalls()
	for i, toolCall := range toolCalls {
		select {
		case <-ctx.Done():
			a.finishMessage(context.Background(), &assistantMsg, message.FinishReasonCanceled, "Request cancelled", "")
			// Make all future tool calls cancelled
			for j := i; j < len(toolCalls); j++ {
				toolResults[j] = message.ToolResult{
					ToolCallID: toolCalls[j].ID,
					Content:    "Tool execution canceled by user",
					IsError:    true,
				}
			}
			goto out
		default:
			// Continue processing
			var tool tools.BaseTool
			for availableTool := range a.tools.Seq() {
				if availableTool.Info().Name == toolCall.Name {
					tool = availableTool
					break
				}
			}

			// Tool not found
			if tool == nil {
				toolResults[i] = message.ToolResult{
					ToolCallID: toolCall.ID,
					Content:    fmt.Sprintf("Tool not found: %s", toolCall.Name),
					IsError:    true,
				}
				continue
			}

			// Run tool in goroutine to allow cancellation
			type toolExecResult struct {
				response tools.ToolResponse
				err      error
			}
			resultChan := make(chan toolExecResult, 1)

			go func() {
				response, err := tool.Run(ctx, tools.ToolCall{
					ID:    toolCall.ID,
					Name:  toolCall.Name,
					Input: toolCall.Input,
				})
				resultChan <- toolExecResult{response: response, err: err}
			}()

			var toolResponse tools.ToolResponse
			var toolErr error

			select {
			case <-ctx.Done():
				a.finishMessage(context.Background(), &assistantMsg, message.FinishReasonCanceled, "Request cancelled", "")
				// Mark remaining tool calls as cancelled
				for j := i; j < len(toolCalls); j++ {
					toolResults[j] = message.ToolResult{
						ToolCallID: toolCalls[j].ID,
						Content:    "Tool execution canceled by user",
						IsError:    true,
					}
				}
				goto out
			case result := <-resultChan:
				toolResponse = result.response
				toolErr = result.err
			}

			if toolErr != nil {
				slog.Error("Tool execution error", "toolCall", toolCall.ID, "error", toolErr)
				if errors.Is(toolErr, permission.ErrorPermissionDenied) {
					toolResults[i] = message.ToolResult{
						ToolCallID: toolCall.ID,
						Content:    "Permission denied",
						IsError:    true,
					}
					for j := i + 1; j < len(toolCalls); j++ {
						toolResults[j] = message.ToolResult{
							ToolCallID: toolCalls[j].ID,
							Content:    "Tool execution canceled by user",
							IsError:    true,
						}
					}
					a.finishMessage(ctx, &assistantMsg, message.FinishReasonPermissionDenied, "Permission denied", "")
					break
				}
			}
			toolResults[i] = message.ToolResult{
				ToolCallID: toolCall.ID,
				Content:    toolResponse.Content,
				Metadata:   toolResponse.Metadata,
				IsError:    toolResponse.IsError,
			}
		}
	}
out:
	if len(toolResults) == 0 {
		return assistantMsg, nil, nil
	}
	parts := make([]message.ContentPart, 0)
	for _, tr := range toolResults {
		parts = append(parts, tr)
	}
	msg, err := a.messages.Create(context.Background(), assistantMsg.SessionID, message.CreateMessageParams{
		Role:     message.Tool,
		Parts:    parts,
		Provider: a.providerID,
	})
	if err != nil {
		return assistantMsg, nil, fmt.Errorf("failed to create cancelled tool message: %w", err)
	}

	return assistantMsg, &msg, err
}

func (a *agent) finishMessage(ctx context.Context, msg *message.Message, finishReason message.FinishReason, message, details string) {
	msg.AddFinish(finishReason, message, details)
	_ = a.messages.Update(ctx, *msg)
}

func (a *agent) processEvent(ctx context.Context, sessionID string, assistantMsg *message.Message, event provider.ProviderEvent) error {
	select {
	case <-ctx.Done():
		return ctx.Err()
	default:
		// Continue processing.
	}

	switch event.Type {
	case provider.EventThinkingDelta:
		assistantMsg.AppendReasoningContent(event.Thinking)
		return a.messages.Update(ctx, *assistantMsg)
	case provider.EventSignatureDelta:
		assistantMsg.AppendReasoningSignature(event.Signature)
		return a.messages.Update(ctx, *assistantMsg)
	case provider.EventContentDelta:
		assistantMsg.FinishThinking()
		assistantMsg.AppendContent(event.Content)
		return a.messages.Update(ctx, *assistantMsg)
	case provider.EventToolUseStart:
		assistantMsg.FinishThinking()
		slog.Info("Tool call started", "toolCall", event.ToolCall)
		assistantMsg.AddToolCall(*event.ToolCall)
		return a.messages.Update(ctx, *assistantMsg)
	case provider.EventToolUseDelta:
		assistantMsg.AppendToolCallInput(event.ToolCall.ID, event.ToolCall.Input)
		return a.messages.Update(ctx, *assistantMsg)
	case provider.EventToolUseStop:
		slog.Info("Finished tool call", "toolCall", event.ToolCall)
		assistantMsg.FinishToolCall(event.ToolCall.ID)
		return a.messages.Update(ctx, *assistantMsg)
	case provider.EventError:
		return event.Error
	case provider.EventComplete:
		assistantMsg.FinishThinking()
		assistantMsg.SetToolCalls(event.Response.ToolCalls)
		assistantMsg.AddFinish(event.Response.FinishReason, "", "")
		if err := a.messages.Update(ctx, *assistantMsg); err != nil {
			return fmt.Errorf("failed to update message: %w", err)
		}
		return a.TrackUsage(ctx, sessionID, a.Model(), event.Response.Usage)
	}

	return nil
}

func (a *agent) TrackUsage(ctx context.Context, sessionID string, model catwalk.Model, usage provider.TokenUsage) error {
	sess, err := a.sessions.Get(ctx, sessionID)
	if err != nil {
		return fmt.Errorf("failed to get session: %w", err)
	}

	cost := model.CostPer1MInCached/1e6*float64(usage.CacheCreationTokens) +
		model.CostPer1MOutCached/1e6*float64(usage.CacheReadTokens) +
		model.CostPer1MIn/1e6*float64(usage.InputTokens) +
		model.CostPer1MOut/1e6*float64(usage.OutputTokens)

	sess.Cost += cost
	sess.CompletionTokens = usage.OutputTokens + usage.CacheReadTokens
	sess.PromptTokens = usage.InputTokens + usage.CacheCreationTokens

	_, err = a.sessions.Save(ctx, sess)
	if err != nil {
		return fmt.Errorf("failed to save session: %w", err)
	}
	return nil
}

func (a *agent) Summarize(ctx context.Context, sessionID string) error {
	if a.summarizeProvider == nil {
		return fmt.Errorf("summarize provider not available")
	}

	// Check if session is busy
	if a.IsSessionBusy(sessionID) {
		return ErrSessionBusy
	}

	// Create a new context with cancellation
	summarizeCtx, cancel := context.WithCancel(ctx)

	// Store the cancel function in activeRequests to allow cancellation
	a.activeRequests.Set(sessionID+"-summarize", cancel)

	go func() {
		defer a.activeRequests.Del(sessionID + "-summarize")
		defer cancel()
		event := AgentEvent{
			Type:     AgentEventTypeSummarize,
			Progress: "Starting summarization...",
		}

		a.Publish(pubsub.CreatedEvent, event)
		// Get all messages from the session
		msgs, err := a.messages.List(summarizeCtx, sessionID)
		if err != nil {
			event = AgentEvent{
				Type:  AgentEventTypeError,
				Error: fmt.Errorf("failed to list messages: %w", err),
				Done:  true,
			}
			a.Publish(pubsub.CreatedEvent, event)
			return
		}
		summarizeCtx = context.WithValue(summarizeCtx, tools.SessionIDContextKey, sessionID)

		if len(msgs) == 0 {
			event = AgentEvent{
				Type:  AgentEventTypeError,
				Error: fmt.Errorf("no messages to summarize"),
				Done:  true,
			}
			a.Publish(pubsub.CreatedEvent, event)
			return
		}

		event = AgentEvent{
			Type:     AgentEventTypeSummarize,
			Progress: "Analyzing conversation...",
		}
		a.Publish(pubsub.CreatedEvent, event)

		// Add a system message to guide the summarization
		summarizePrompt := "Provide a detailed but concise summary of our conversation above. Focus on information that would be helpful for continuing the conversation, including what we did, what we're doing, which files we're working on, and what we're going to do next."

		// Create a new message with the summarize prompt
		promptMsg := message.Message{
			Role:  message.User,
			Parts: []message.ContentPart{message.TextContent{Text: summarizePrompt}},
		}

		// Append the prompt to the messages
		msgsWithPrompt := append(msgs, promptMsg)

		event = AgentEvent{
			Type:     AgentEventTypeSummarize,
			Progress: "Generating summary...",
		}

		a.Publish(pubsub.CreatedEvent, event)

		// Send the messages to the summarize provider
		response := a.summarizeProvider.StreamResponse(
			summarizeCtx,
			msgsWithPrompt,
			nil,
		)
		var finalResponse *provider.ProviderResponse
		for r := range response {
			if r.Error != nil {
				event = AgentEvent{
					Type:  AgentEventTypeError,
					Error: fmt.Errorf("failed to summarize: %w", err),
					Done:  true,
				}
				a.Publish(pubsub.CreatedEvent, event)
				return
			}
			finalResponse = r.Response
		}

		summary := strings.TrimSpace(finalResponse.Content)
		if summary == "" {
			event = AgentEvent{
				Type:  AgentEventTypeError,
				Error: fmt.Errorf("empty summary returned"),
				Done:  true,
			}
			a.Publish(pubsub.CreatedEvent, event)
			return
		}
		shell := shell.GetPersistentShell(config.Get().WorkingDir())
		summary += "\n\n**Current working directory of the persistent shell**\n\n" + shell.GetWorkingDir()
		event = AgentEvent{
			Type:     AgentEventTypeSummarize,
			Progress: "Creating new session...",
		}

		a.Publish(pubsub.CreatedEvent, event)
		oldSession, err := a.sessions.Get(summarizeCtx, sessionID)
		if err != nil {
			event = AgentEvent{
				Type:  AgentEventTypeError,
				Error: fmt.Errorf("failed to get session: %w", err),
				Done:  true,
			}

			a.Publish(pubsub.CreatedEvent, event)
			return
		}
		// Create a message in the new session with the summary
		msg, err := a.messages.Create(summarizeCtx, oldSession.ID, message.CreateMessageParams{
			Role: message.Assistant,
			Parts: []message.ContentPart{
				message.TextContent{Text: summary},
				message.Finish{
					Reason: message.FinishReasonEndTurn,
					Time:   time.Now().Unix(),
				},
			},
			Model:    a.summarizeProvider.Model().ID,
			Provider: a.summarizeProviderID,
		})
		if err != nil {
			event = AgentEvent{
				Type:  AgentEventTypeError,
				Error: fmt.Errorf("failed to create summary message: %w", err),
				Done:  true,
			}

			a.Publish(pubsub.CreatedEvent, event)
			return
		}
		oldSession.SummaryMessageID = msg.ID
		oldSession.CompletionTokens = finalResponse.Usage.OutputTokens
		oldSession.PromptTokens = 0
		model := a.summarizeProvider.Model()
		usage := finalResponse.Usage
		cost := model.CostPer1MInCached/1e6*float64(usage.CacheCreationTokens) +
			model.CostPer1MOutCached/1e6*float64(usage.CacheReadTokens) +
			model.CostPer1MIn/1e6*float64(usage.InputTokens) +
			model.CostPer1MOut/1e6*float64(usage.OutputTokens)
		oldSession.Cost += cost
		_, err = a.sessions.Save(summarizeCtx, oldSession)
		if err != nil {
			event = AgentEvent{
				Type:  AgentEventTypeError,
				Error: fmt.Errorf("failed to save session: %w", err),
				Done:  true,
			}
			a.Publish(pubsub.CreatedEvent, event)
		}

		event = AgentEvent{
			Type:      AgentEventTypeSummarize,
			SessionID: oldSession.ID,
			Progress:  "Summary complete",
			Done:      true,
		}
		a.Publish(pubsub.CreatedEvent, event)
		// Send final success event with the new session ID
	}()

	return nil
}

func (a *agent) ClearQueue(sessionID string) {
	if a.QueuedPrompts(sessionID) > 0 {
		slog.Info("Clearing queued prompts", "session_id", sessionID)
		a.promptQueue.Del(sessionID)
	}
}

func (a *agent) CancelAll() {
	if !a.IsBusy() {
		return
	}
	for key := range a.activeRequests.Seq2() {
		a.Cancel(key) // key is sessionID
	}

	timeout := time.After(5 * time.Second)
	for a.IsBusy() {
		select {
		case <-timeout:
			return
		default:
			time.Sleep(200 * time.Millisecond)
		}
	}
}

func (a *agent) UpdateModel() error {
	cfg := config.Get()

	// Get current provider configuration
	currentProviderCfg := cfg.GetProviderForModel(a.agentCfg.Model)
	if currentProviderCfg == nil || currentProviderCfg.ID == "" {
		return fmt.Errorf("provider for agent %s not found in config", a.agentCfg.Name)
	}

	// Check if provider has changed
	if string(currentProviderCfg.ID) != a.providerID {
		// Provider changed, need to recreate the main provider
		model := cfg.GetModelByType(a.agentCfg.Model)
		if model.ID == "" {
			return fmt.Errorf("model not found for agent %s", a.agentCfg.Name)
		}

		promptID := agentPromptMap[a.agentCfg.ID]
		if promptID == "" {
			promptID = prompt.PromptDefault
		}

		opts := []provider.ProviderClientOption{
			provider.WithModel(a.agentCfg.Model),
			provider.WithSystemMessage(prompt.GetPrompt(promptID, currentProviderCfg.ID, cfg.Options.ContextPaths...)),
		}

		newProvider, err := provider.NewProvider(*currentProviderCfg, opts...)
		if err != nil {
			return fmt.Errorf("failed to create new provider: %w", err)
		}

		// Update the provider and provider ID
		a.provider = newProvider
		a.providerID = string(currentProviderCfg.ID)
	}

	// Check if providers have changed for title (small) and summarize (large)
	smallModelCfg := cfg.Models[config.SelectedModelTypeSmall]
	var smallModelProviderCfg config.ProviderConfig
	for p := range cfg.Providers.Seq() {
		if p.ID == smallModelCfg.Provider {
			smallModelProviderCfg = p
			break
		}
	}
	if smallModelProviderCfg.ID == "" {
		return fmt.Errorf("provider %s not found in config", smallModelCfg.Provider)
	}

	largeModelCfg := cfg.Models[config.SelectedModelTypeLarge]
	var largeModelProviderCfg config.ProviderConfig
	for p := range cfg.Providers.Seq() {
		if p.ID == largeModelCfg.Provider {
			largeModelProviderCfg = p
			break
		}
	}
	if largeModelProviderCfg.ID == "" {
		return fmt.Errorf("provider %s not found in config", largeModelCfg.Provider)
	}

	// Recreate title provider
	titleOpts := []provider.ProviderClientOption{
		provider.WithModel(config.SelectedModelTypeSmall),
		provider.WithSystemMessage(prompt.GetPrompt(prompt.PromptTitle, smallModelProviderCfg.ID)),
		provider.WithMaxTokens(40),
	}
	newTitleProvider, err := provider.NewProvider(smallModelProviderCfg, titleOpts...)
	if err != nil {
		return fmt.Errorf("failed to create new title provider: %w", err)
	}
	a.titleProvider = newTitleProvider

	// Recreate summarize provider if provider changed (now large model)
	if string(largeModelProviderCfg.ID) != a.summarizeProviderID {
		largeModel := cfg.GetModelByType(config.SelectedModelTypeLarge)
		if largeModel == nil {
			return fmt.Errorf("model %s not found in provider %s", largeModelCfg.Model, largeModelProviderCfg.ID)
		}
		summarizeOpts := []provider.ProviderClientOption{
			provider.WithModel(config.SelectedModelTypeLarge),
			provider.WithSystemMessage(prompt.GetPrompt(prompt.PromptSummarizer, largeModelProviderCfg.ID)),
		}
		newSummarizeProvider, err := provider.NewProvider(largeModelProviderCfg, summarizeOpts...)
		if err != nil {
			return fmt.Errorf("failed to create new summarize provider: %w", err)
		}
		a.summarizeProvider = newSummarizeProvider
		a.summarizeProviderID = string(largeModelProviderCfg.ID)
	}

	return nil
}



================================================
FILE: internal/llm/agent/mcp-tools.go
================================================
package agent

import (
	"cmp"
	"context"
	"encoding/json"
	"fmt"
	"log/slog"
	"maps"
	"slices"
	"strings"
	"sync"
	"time"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/charmbracelet/crush/internal/version"
	"github.com/mark3labs/mcp-go/client"
	"github.com/mark3labs/mcp-go/client/transport"
	"github.com/mark3labs/mcp-go/mcp"
)

// MCPState represents the current state of an MCP client
type MCPState int

const (
	MCPStateDisabled MCPState = iota
	MCPStateStarting
	MCPStateConnected
	MCPStateError
)

func (s MCPState) String() string {
	switch s {
	case MCPStateDisabled:
		return "disabled"
	case MCPStateStarting:
		return "starting"
	case MCPStateConnected:
		return "connected"
	case MCPStateError:
		return "error"
	default:
		return "unknown"
	}
}

// MCPEventType represents the type of MCP event
type MCPEventType string

const (
	MCPEventStateChanged MCPEventType = "state_changed"
)

// MCPEvent represents an event in the MCP system
type MCPEvent struct {
	Type      MCPEventType
	Name      string
	State     MCPState
	Error     error
	ToolCount int
}

// MCPClientInfo holds information about an MCP client's state
type MCPClientInfo struct {
	Name        string
	State       MCPState
	Error       error
	Client      *client.Client
	ToolCount   int
	ConnectedAt time.Time
}

var (
	mcpToolsOnce sync.Once
	mcpTools     []tools.BaseTool
	mcpClients   = csync.NewMap[string, *client.Client]()
	mcpStates    = csync.NewMap[string, MCPClientInfo]()
	mcpBroker    = pubsub.NewBroker[MCPEvent]()
)

type McpTool struct {
	mcpName     string
	tool        mcp.Tool
	permissions permission.Service
	workingDir  string
}

func (b *McpTool) Name() string {
	return fmt.Sprintf("mcp_%s_%s", b.mcpName, b.tool.Name)
}

func (b *McpTool) Info() tools.ToolInfo {
	required := b.tool.InputSchema.Required
	if required == nil {
		required = make([]string, 0)
	}
	parameters := b.tool.InputSchema.Properties
	if parameters == nil {
		parameters = make(map[string]any)
	}
	return tools.ToolInfo{
		Name:        fmt.Sprintf("mcp_%s_%s", b.mcpName, b.tool.Name),
		Description: b.tool.Description,
		Parameters:  parameters,
		Required:    required,
	}
}

func runTool(ctx context.Context, name, toolName string, input string) (tools.ToolResponse, error) {
	var args map[string]any
	if err := json.Unmarshal([]byte(input), &args); err != nil {
		return tools.NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}

	c, err := getOrRenewClient(ctx, name)
	if err != nil {
		return tools.NewTextErrorResponse(err.Error()), nil
	}
	result, err := c.CallTool(ctx, mcp.CallToolRequest{
		Params: mcp.CallToolParams{
			Name:      toolName,
			Arguments: args,
		},
	})
	if err != nil {
		return tools.NewTextErrorResponse(err.Error()), nil
	}

	output := make([]string, 0, len(result.Content))
	for _, v := range result.Content {
		if v, ok := v.(mcp.TextContent); ok {
			output = append(output, v.Text)
		} else {
			output = append(output, fmt.Sprintf("%v", v))
		}
	}
	return tools.NewTextResponse(strings.Join(output, "\n")), nil
}

func getOrRenewClient(ctx context.Context, name string) (*client.Client, error) {
	c, ok := mcpClients.Get(name)
	if !ok {
		return nil, fmt.Errorf("mcp '%s' not available", name)
	}

	m := config.Get().MCP[name]
	state, _ := mcpStates.Get(name)

	pingCtx, cancel := context.WithTimeout(ctx, mcpTimeout(m))
	defer cancel()
	err := c.Ping(pingCtx)
	if err == nil {
		return c, nil
	}
	updateMCPState(name, MCPStateError, err, nil, state.ToolCount)

	c, err = createAndInitializeClient(ctx, name, m)
	if err != nil {
		return nil, err
	}

	updateMCPState(name, MCPStateConnected, nil, c, state.ToolCount)
	mcpClients.Set(name, c)
	return c, nil
}

func (b *McpTool) Run(ctx context.Context, params tools.ToolCall) (tools.ToolResponse, error) {
	sessionID, messageID := tools.GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return tools.ToolResponse{}, fmt.Errorf("session ID and message ID are required for creating a new file")
	}
	permissionDescription := fmt.Sprintf("execute %s with the following parameters: %s", b.Info().Name, params.Input)
	p := b.permissions.Request(
		permission.CreatePermissionRequest{
			SessionID:   sessionID,
			ToolCallID:  params.ID,
			Path:        b.workingDir,
			ToolName:    b.Info().Name,
			Action:      "execute",
			Description: permissionDescription,
			Params:      params.Input,
		},
	)
	if !p {
		return tools.ToolResponse{}, permission.ErrorPermissionDenied
	}

	return runTool(ctx, b.mcpName, b.tool.Name, params.Input)
}

func getTools(ctx context.Context, name string, permissions permission.Service, c *client.Client, workingDir string) []tools.BaseTool {
	result, err := c.ListTools(ctx, mcp.ListToolsRequest{})
	if err != nil {
		slog.Error("error listing tools", "error", err)
		updateMCPState(name, MCPStateError, err, nil, 0)
		c.Close()
		mcpClients.Del(name)
		return nil
	}
	mcpTools := make([]tools.BaseTool, 0, len(result.Tools))
	for _, tool := range result.Tools {
		mcpTools = append(mcpTools, &McpTool{
			mcpName:     name,
			tool:        tool,
			permissions: permissions,
			workingDir:  workingDir,
		})
	}
	return mcpTools
}

// SubscribeMCPEvents returns a channel for MCP events
func SubscribeMCPEvents(ctx context.Context) <-chan pubsub.Event[MCPEvent] {
	return mcpBroker.Subscribe(ctx)
}

// GetMCPStates returns the current state of all MCP clients
func GetMCPStates() map[string]MCPClientInfo {
	return maps.Collect(mcpStates.Seq2())
}

// GetMCPState returns the state of a specific MCP client
func GetMCPState(name string) (MCPClientInfo, bool) {
	return mcpStates.Get(name)
}

// updateMCPState updates the state of an MCP client and publishes an event
func updateMCPState(name string, state MCPState, err error, client *client.Client, toolCount int) {
	info := MCPClientInfo{
		Name:      name,
		State:     state,
		Error:     err,
		Client:    client,
		ToolCount: toolCount,
	}
	if state == MCPStateConnected {
		info.ConnectedAt = time.Now()
	}
	mcpStates.Set(name, info)

	// Publish state change event
	mcpBroker.Publish(pubsub.UpdatedEvent, MCPEvent{
		Type:      MCPEventStateChanged,
		Name:      name,
		State:     state,
		Error:     err,
		ToolCount: toolCount,
	})
}

// CloseMCPClients closes all MCP clients. This should be called during application shutdown.
func CloseMCPClients() {
	for c := range mcpClients.Seq() {
		_ = c.Close()
	}
	mcpBroker.Shutdown()
}

var mcpInitRequest = mcp.InitializeRequest{
	Params: mcp.InitializeParams{
		ProtocolVersion: mcp.LATEST_PROTOCOL_VERSION,
		ClientInfo: mcp.Implementation{
			Name:    "Crush",
			Version: version.Version,
		},
	},
}

func doGetMCPTools(ctx context.Context, permissions permission.Service, cfg *config.Config) []tools.BaseTool {
	var wg sync.WaitGroup
	result := csync.NewSlice[tools.BaseTool]()

	// Initialize states for all configured MCPs
	for name, m := range cfg.MCP {
		if m.Disabled {
			updateMCPState(name, MCPStateDisabled, nil, nil, 0)
			slog.Debug("skipping disabled mcp", "name", name)
			continue
		}

		// Set initial starting state
		updateMCPState(name, MCPStateStarting, nil, nil, 0)

		wg.Add(1)
		go func(name string, m config.MCPConfig) {
			defer func() {
				wg.Done()
				if r := recover(); r != nil {
					var err error
					switch v := r.(type) {
					case error:
						err = v
					case string:
						err = fmt.Errorf("panic: %s", v)
					default:
						err = fmt.Errorf("panic: %v", v)
					}
					updateMCPState(name, MCPStateError, err, nil, 0)
					slog.Error("panic in mcp client initialization", "error", err, "name", name)
				}
			}()

			ctx, cancel := context.WithTimeout(ctx, mcpTimeout(m))
			defer cancel()
			c, err := createAndInitializeClient(ctx, name, m)
			if err != nil {
				return
			}
			mcpClients.Set(name, c)

			tools := getTools(ctx, name, permissions, c, cfg.WorkingDir())
			updateMCPState(name, MCPStateConnected, nil, c, len(tools))
			result.Append(tools...)
		}(name, m)
	}
	wg.Wait()
	return slices.Collect(result.Seq())
}

func createAndInitializeClient(ctx context.Context, name string, m config.MCPConfig) (*client.Client, error) {
	c, err := createMcpClient(m)
	if err != nil {
		updateMCPState(name, MCPStateError, err, nil, 0)
		slog.Error("error creating mcp client", "error", err, "name", name)
		return nil, err
	}
	// Only call Start() for non-stdio clients, as stdio clients auto-start
	if m.Type != config.MCPStdio {
		if err := c.Start(ctx); err != nil {
			updateMCPState(name, MCPStateError, err, nil, 0)
			slog.Error("error starting mcp client", "error", err, "name", name)
			_ = c.Close()
			return nil, err
		}
	}
	if _, err := c.Initialize(ctx, mcpInitRequest); err != nil {
		updateMCPState(name, MCPStateError, err, nil, 0)
		slog.Error("error initializing mcp client", "error", err, "name", name)
		_ = c.Close()
		return nil, err
	}

	slog.Info("Initialized mcp client", "name", name)
	return c, nil
}

func createMcpClient(m config.MCPConfig) (*client.Client, error) {
	switch m.Type {
	case config.MCPStdio:
		if strings.TrimSpace(m.Command) == "" {
			return nil, fmt.Errorf("mcp stdio config requires a non-empty 'command' field")
		}
		return client.NewStdioMCPClientWithOptions(
			m.Command,
			m.ResolvedEnv(),
			m.Args,
			transport.WithCommandLogger(mcpLogger{}),
		)
	case config.MCPHttp:
		if strings.TrimSpace(m.URL) == "" {
			return nil, fmt.Errorf("mcp http config requires a non-empty 'url' field")
		}
		return client.NewStreamableHttpClient(
			m.URL,
			transport.WithHTTPHeaders(m.ResolvedHeaders()),
			transport.WithHTTPLogger(mcpLogger{}),
		)
	case config.MCPSse:
		if strings.TrimSpace(m.URL) == "" {
			return nil, fmt.Errorf("mcp sse config requires a non-empty 'url' field")
		}
		return client.NewSSEMCPClient(
			m.URL,
			client.WithHeaders(m.ResolvedHeaders()),
			transport.WithSSELogger(mcpLogger{}),
		)
	default:
		return nil, fmt.Errorf("unsupported mcp type: %s", m.Type)
	}
}

// for MCP's clients.
type mcpLogger struct{}

func (l mcpLogger) Errorf(format string, v ...any) { slog.Error(fmt.Sprintf(format, v...)) }
func (l mcpLogger) Infof(format string, v ...any)  { slog.Info(fmt.Sprintf(format, v...)) }

func mcpTimeout(m config.MCPConfig) time.Duration {
	return time.Duration(cmp.Or(m.Timeout, 15)) * time.Second
}



================================================
FILE: internal/llm/prompt/anthropic.md
================================================
You are Crush, an interactive CLI tool that helps users with software engineering tasks. Use the instructions below and the tools available to you to assist the user.

IMPORTANT: Before you begin work, think about what the code you're editing is supposed to do based on the filenames directory structure.

# Memory

If the current working directory contains a file called CRUSH.md, it will be automatically added to your context. This file serves multiple purposes:

1. Storing frequently used bash commands (build, test, lint, etc.) so you can use them without searching each time
2. Recording the user's code style preferences (naming conventions, preferred libraries, etc.)
3. Maintaining useful information about the codebase structure and organization

When you spend time searching for commands to typecheck, lint, build, or test, you should ask the user if it's okay to add those commands to CRUSH.md. Similarly, when learning about code style preferences or important codebase information, ask if it's okay to add that to CRUSH.md so you can remember it for next time.

# Tone and style

You should be concise, direct, and to the point. When you run a non-trivial bash command, you should explain what the command does and why you are running it, to make sure the user understands what you are doing (this is especially important when you are running a command that will make changes to the user's system).
Remember that your output will be displayed on a command line interface. Your responses can use Github-flavored markdown for formatting, and will be rendered in a monospace font using the CommonMark specification.
Output text to communicate with the user; all text you output outside of tool use is displayed to the user. Only use tools to complete tasks. Never use tools like Bash or code comments as means to communicate with the user during the session.
If you cannot or will not help the user with something, please do not say why or what it could lead to, since this comes across as preachy and annoying. Please offer helpful alternatives if possible, and otherwise keep your response to 1-2 sentences.
IMPORTANT: You should minimize output tokens as much as possible while maintaining helpfulness, quality, and accuracy. Only address the specific query or task at hand, avoiding tangential information unless absolutely critical for completing the request. If you can answer in 1-3 sentences or a short paragraph, please do.
IMPORTANT: You should NOT answer with unnecessary preamble or postamble (such as explaining your code or summarizing your action), unless the user asks you to.
IMPORTANT: Keep your responses short, since they will be displayed on a command line interface. You MUST answer concisely with fewer than 4 lines (not including tool use or code generation), unless user asks for detail. Answer the user's question directly, without elaboration, explanation, or details. One word answers are best. Avoid introductions, conclusions, and explanations. You MUST avoid text before/after your response, such as "The answer is <answer>.", "Here is the content of the file..." or "Based on the information provided, the answer is..." or "Here is what I will do next...". Here are some examples to demonstrate appropriate verbosity:
<example>
user: 2 + 2
assistant: 4
</example>

<example>
user: what is 2+2?
assistant: 4
</example>

<example>
user: is 11 a prime number?
assistant: true
</example>

<example>
user: what command should I run to list files in the current directory?
assistant: ls
</example>

<example>
user: what command should I run to watch files in the current directory?
assistant: [use the ls tool to list the files in the current directory, then read docs/commands in the relevant file to find out how to watch files]
npm run dev
</example>

<example>
user: How many golf balls fit inside a jetta?
assistant: 150000
</example>

<example>
user: what files are in the directory src/?
assistant: [runs ls and sees foo.c, bar.c, baz.c]
user: which file contains the implementation of foo?
assistant: src/foo.c
</example>

<example>
user: write tests for new feature
assistant: [uses grep and glob search tools to find where similar tests are defined, uses concurrent read file tool use blocks in one tool call to read relevant files at the same time, uses edit file tool to write new tests]
</example>

# Proactiveness

You are allowed to be proactive, but only when the user asks you to do something. You should strive to strike a balance between:

1. Doing the right thing when asked, including taking actions and follow-up actions
2. Not surprising the user with actions you take without asking
   For example, if the user asks you how to approach something, you should do your best to answer their question first, and not immediately jump into taking actions.
3. Do not add additional code explanation summary unless requested by the user. After working on a file, just stop, rather than providing an explanation of what you did.

# Following conventions

When making changes to files, first understand the file's code conventions. Mimic code style, use existing libraries and utilities, and follow existing patterns.

- NEVER assume that a given library is available, even if it is well known. Whenever you write code that uses a library or framework, first check that this codebase already uses the given library. For example, you might look at neighboring files, or check the package.json (or cargo.toml, and so on depending on the language).
- When you create a new component, first look at existing components to see how they're written; then consider framework choice, naming conventions, typing, and other conventions.
- When you edit a piece of code, first look at the code's surrounding context (especially its imports) to understand the code's choice of frameworks and libraries. Then consider how to make the given change in a way that is most idiomatic.
- Always follow security best practices. Never introduce code that exposes or logs secrets and keys. Never commit secrets or keys to the repository.

# Code style

- IMPORTANT: DO NOT ADD **_ANY_** COMMENTS unless asked

# Doing tasks

The user will primarily request you perform software engineering tasks. This includes solving bugs, adding new functionality, refactoring code, explaining code, and more. For these tasks the following steps are recommended:

1. Use the available search tools to understand the codebase and the user's query.
2. Implement the solution using all tools available to you
3. Verify the solution if possible with tests. NEVER assume specific test framework or test script. Check the README or search codebase to determine the testing approach.
4. VERY IMPORTANT: When you have completed a task, you MUST run the lint and typecheck commands (eg. npm run lint, npm run typecheck, ruff, etc.) if they were provided to you to ensure your code is correct. If you are unable to find the correct command, ask the user for the command to run and if they supply it, proactively suggest writing it to CRUSH.md so that you will know to run it next time.

NEVER commit changes unless the user explicitly asks you to. It is VERY IMPORTANT to only commit when explicitly asked, otherwise the user will feel that you are being too proactive.

# Tool usage policy

- When doing file search, prefer to use the Agent tool in order to reduce context usage.
- IMPORTANT: All tools are executed in parallel when multiple tool calls are sent in a single message. Only send multiple tool calls when they are safe to run in parallel (no dependencies between them).
- IMPORTANT: The user does not see the full output of the tool responses, so if you need the output of the tool for the response make sure to summarize it for the user.

VERY IMPORTANT NEVER use emojis in your responses.

You MUST answer concisely with fewer than 4 lines of text (not including tool use or code generation), unless user asks for detail.



================================================
FILE: internal/llm/prompt/coder.go
================================================
package prompt

import (
	_ "embed"
	"fmt"
	"os"
	"path/filepath"
	"runtime"
	"strconv"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/tools"
)

func CoderPrompt(p string, contextFiles ...string) string {
	var basePrompt string

	basePrompt = string(anthropicCoderPrompt)
	switch p {
	case string(catwalk.InferenceProviderOpenAI):
		// seems to behave better
		basePrompt = string(coderV2Prompt)
	case string(catwalk.InferenceProviderGemini):
		basePrompt = string(geminiCoderPrompt)
	}
	if ok, _ := strconv.ParseBool(os.Getenv("CRUSH_CODER_V2")); ok {
		basePrompt = string(coderV2Prompt)
	}
	envInfo := getEnvironmentInfo()

	basePrompt = fmt.Sprintf("%s\n\n%s\n%s", basePrompt, envInfo, lspInformation())

	contextContent := getContextFromPaths(config.Get().WorkingDir(), contextFiles)
	if contextContent != "" {
		return fmt.Sprintf("%s\n\n# Project-Specific Context\n Make sure to follow the instructions in the context below\n%s", basePrompt, contextContent)
	}
	return basePrompt
}

//go:embed anthropic.md
var anthropicCoderPrompt []byte

//go:embed gemini.md
var geminiCoderPrompt []byte

//go:embed openai.md
var openaiCoderPrompt []byte

//go:embed v2.md
var coderV2Prompt []byte

func getEnvironmentInfo() string {
	cwd := config.Get().WorkingDir()
	isGit := isGitRepo(cwd)
	platform := runtime.GOOS
	date := time.Now().Format("1/2/2006")
	output, _ := tools.ListDirectoryTree(cwd, nil)
	return fmt.Sprintf(`Here is useful information about the environment you are running in:
<env>
Working directory: %s
Is directory a git repo: %s
Platform: %s
Today's date: %s
</env>
<project>
%s
</project>
		`, cwd, boolToYesNo(isGit), platform, date, output)
}

func isGitRepo(dir string) bool {
	_, err := os.Stat(filepath.Join(dir, ".git"))
	return err == nil
}

func lspInformation() string {
	cfg := config.Get()
	hasLSP := false
	for _, v := range cfg.LSP {
		if !v.Disabled {
			hasLSP = true
			break
		}
	}
	if !hasLSP {
		return ""
	}
	return `# LSP Information
Tools that support it will also include useful diagnostics such as linting and typechecking.
- These diagnostics will be automatically enabled when you run the tool, and will be displayed in the output at the bottom within the <file_diagnostics></file_diagnostics> and <project_diagnostics></project_diagnostics> tags.
- Take necessary actions to fix the issues.
- You should ignore diagnostics of files that you did not change or are not related or caused by your changes unless the user explicitly asks you to fix them.
`
}

func boolToYesNo(b bool) string {
	if b {
		return "Yes"
	}
	return "No"
}



================================================
FILE: internal/llm/prompt/gemini.md
================================================
You are an interactive CLI agent specializing in software engineering tasks. Your primary goal is to help users safely and efficiently, adhering strictly to the following instructions and utilizing your available tools.

IMPORTANT: Before you begin work, think about what the code you're editing is supposed to do based on the filenames directory structure.

# Memory

If the current working directory contains a file called CRUSH.md, it will be automatically added to your context. This file serves multiple purposes:

1. Storing frequently used bash commands (build, test, lint, etc.) so you can use them without searching each time
2. Recording the user's code style preferences (naming conventions, preferred libraries, etc.)
3. Maintaining useful information about the codebase structure and organization

When you spend time searching for commands to typecheck, lint, build, or test, you should ask the user if it's okay to add those commands to CRUSH.md. Similarly, when learning about code style preferences or important codebase information, ask if it's okay to add that to CRUSH.md so you can remember it for next time.

# Core Mandates

- **Conventions:** Rigorously adhere to existing project conventions when reading or modifying code. Analyze surrounding code, tests, and configuration first.
- **Libraries/Frameworks:** NEVER assume a library/framework is available or appropriate. Verify its established usage within the project (check imports, configuration files like 'package.json', 'Cargo.toml', 'requirements.txt', 'build.gradle', etc., or observe neighboring files) before employing it.
- **Style & Structure:** Mimic the style (formatting, naming), structure, framework choices, typing, and architectural patterns of existing code in the project.
- **Idiomatic Changes:** When editing, understand the local context (imports, functions/classes) to ensure your changes integrate naturally and idiomatically.
- **Comments:** Add code comments sparingly. Focus on _why_ something is done, especially for complex logic, rather than _what_ is done. Only add high-value comments if necessary for clarity or if requested by the user. Do not edit comments that are separate from the code you are changing. _NEVER_ talk to the user or describe your changes through comments.
- **Proactiveness:** Fulfill the user's request thoroughly, including reasonable, directly implied follow-up actions.
- **Confirm Ambiguity/Expansion:** Do not take significant actions beyond the clear scope of the request without confirming with the user. If asked _how_ to do something, explain first, don't just do it.
- **Explaining Changes:** After completing a code modification or file operation _do not_ provide summaries unless asked.
- **Do Not revert changes:** Do not revert changes to the codebase unless asked to do so by the user. Only revert changes made by you if they have resulted in an error or if the user has explicitly asked you to revert the changes.

# Code style

- IMPORTANT: DO NOT ADD **_ANY_** COMMENTS unless asked

# Primary Workflows

## Software Engineering Tasks

When requested to perform tasks like fixing bugs, adding features, refactoring, or explaining code, follow this sequence:

1. **Understand:** Think about the user's request and the relevant codebase context. Use `grep` and `glob` search tools extensively (in parallel if independent) to understand file structures, existing code patterns, and conventions. Use `view` to understand context and validate any assumptions you may have.
2. **Plan:** Build a coherent and grounded (based on the understanding in step 1) plan for how you intend to resolve the user's task. Share an extremely concise yet clear plan with the user if it would help the user understand your thought process. As part of the plan, you should try to use a self-verification loop by writing unit tests if relevant to the task. Use output logs or debug statements as part of this self verification loop to arrive at a solution.
3. **Implement:** Use the available tools (e.g., `edit`, `write` `bash` ...) to act on the plan, strictly adhering to the project's established conventions (detailed under 'Core Mandates').
4. **Verify (Tests):** If applicable and feasible, verify the changes using the project's testing procedures. Identify the correct test commands and frameworks by examining 'README' files, build/package configuration (e.g., 'package.json'), or existing test execution patterns. NEVER assume standard test commands.
5. **Verify (Standards):** VERY IMPORTANT: After making code changes, execute the project-specific build, linting and type-checking commands (e.g., 'tsc', 'npm run lint', 'ruff check .') that you have identified for this project (or obtained from the user). This ensures code quality and adherence to standards. If unsure about these commands, you can ask the user if they'd like you to run them and if so how to.

NEVER commit changes unless the user explicitly asks you to. It is VERY IMPORTANT to only commit when explicitly asked, otherwise the user will feel that you are being too proactive.

# Operational Guidelines

## Tone and Style (CLI Interaction)

- **Concise & Direct:** Adopt a professional, direct, and concise tone suitable for a CLI environment.
- **Minimal Output:** Aim for fewer than 3 lines of text output (excluding tool use/code generation) per response whenever practical. Focus strictly on the user's query.
- **Clarity over Brevity (When Needed):** While conciseness is key, prioritize clarity for essential explanations or when seeking necessary clarification if a request is ambiguous.
- **No Chitchat:** Avoid conversational filler, preambles ("Okay, I will now..."), or postambles ("I have finished the changes..."). Get straight to the action or answer.
- **Formatting:** Use GitHub-flavored Markdown. Responses will be rendered in monospace.
- **Tools vs. Text:** Use tools for actions, text output _only_ for communication. Do not add explanatory comments within tool calls or code blocks unless specifically part of the required code/command itself.
- **Handling Inability:** If unable/unwilling to fulfill a request, state so briefly (1-2 sentences) without excessive justification. Offer alternatives if appropriate.

## Security and Safety Rules

- **Explain Critical Commands:** Before executing commands with `bash` that modify the file system, codebase, or system state, you _must_ provide a brief explanation of the command's purpose and potential impact. Prioritize user understanding and safety.
- **Security First:** Always apply security best practices. Never introduce code that exposes, logs, or commits secrets, API keys, or other sensitive information.

## Tool Usage

- **File Paths:** Always use absolute paths when referring to files with tools like `view` or `write`. Relative paths are not supported. You must provide an absolute path.
- **Parallelism:** IMPORTANT: All tools are executed in parallel when multiple tool calls are sent in a single message. Only send multiple tool calls when they are safe to run in parallel (no dependencies between them).
- **Command Execution:** Use the `bash` tool for running shell commands, remembering the safety rule to explain modifying commands first.
- **Background Processes:** Use background processes (via `&`) for commands that are unlikely to stop on their own, e.g. `node server.js &`. If unsure, ask the user.
- **Interactive Commands:** Try to avoid shell commands that are likely to require user interaction (e.g. `git rebase -i`). Use non-interactive versions of commands (e.g. `npm init -y` instead of `npm init`) when available, and otherwise remind the user that interactive shell commands are not supported and may cause hangs until canceled by the user.

# Examples (Illustrating Tone and Workflow)

<example>
user: 1 + 2
model: 3
</example>

<example>
user: is 13 a prime number?
model: true
</example>

<example>
user: list files here.
model: [tool_call: ls for path '.']
</example>

<example>
user: start the server implemented in server.js
model: [tool_call: bash for 'node server.js &' because it must run in the background]
</example>

<example>
user: Refactor the auth logic in src/auth.py to use the requests library instead of urllib.
model: Okay, I can refactor 'src/auth.py'.
First, I'll analyze the code and check for a test safety net before planning any changes.
[tool_call: glob for pattern 'tests/test_auth.py']
[tool_call: view for absolute_path '/path/to/tests/test_auth.py']
(After analysis)
Great, 'tests/test_auth.py' exists and covers the core authentication logic. With this safety net in place, I can safely plan the refactoring.
I'll also confirm 'requests' is a dependency.
[tool_call: view for absolute_path '/path/to/requirements.txt']
(After analysis)
Looks good, 'requests' is available.

Here's the plan:

1. Replace the 'urllib' calls with 'requests'.
2. Add proper 'try...except' error handling for the new network calls.
3. Remove the old 'urllib' import.
4. Run the project's linter and tests to verify the changes.

Should I proceed?
user: Yes
model:
[tool_call: edit to apply the refactoring to 'src/auth.py']
Refactoring complete. Running verification...
[tool_call: bash for 'ruff check src/auth.py && pytest']
(After verification passes)
All checks passed. This is a stable checkpoint.
</example>

<example>
user: Delete the temp directory.
model: I can run `rm -rf ./temp`. This will permanently delete the directory and all its contents.
</example>

<example>
user: Write tests for someFile.ts
model:
Okay, I can write those tests. First, I'll read `someFile.ts` to understand its functionality.
[tool_call: view for absolute_path '/path/to/someFile.ts' or use glob to find `someFile.ts` if its location is unknown]
Now I'll look for existing or related test files to understand current testing conventions and dependencies.
[tool_call: glob for pattern '**/*.test.ts' and '**/*.spec.ts']
(After reviewing existing tests and the file content)
[tool_call: write to create /path/to/someFile.test.ts with the test code]
I've written the tests. Now I'll run the project's test command to verify them.
[tool_call: bash for 'npm run test']
</example>

<example>
user: How do I update the user's profile information in this system?
model:
I'm not immediately sure how user profile information is updated. I'll search the codebase for terms like 'UserProfile', 'updateProfile', or 'editUser' to find relevant files or API endpoints.
[tool_call: grep for pattern 'UserProfile|updateProfile|editUser']
(After reviewing search results, assuming a relevant file like '/path/to/UserProfileService.java' was found)
Okay, `/path/to/UserProfileService.java` seems like the most relevant file. I'll read its content to understand how updates are handled.
[tool_call: view for absolute_path '/path/to/UserProfileService.java']
(After reading the file)
It appears the `updateUserProfile` method in `UserProfileService.java` is responsible for this. It expects a user ID and a `UserProfileDTO` object...
</example>

<example>
user: Where are all the 'app.config' files in this project? I need to check their settings.
model:
[tool_call: glob for pattern '**/app.config']
(Assuming glob returns a list of paths like ['/path/to/moduleA/app.config', '/path/to/moduleB/app.config'])
I found the following 'app.config' files:
- /path/to/moduleA/app.config
- /path/to/moduleB/app.config
To help you check their settings, I can read their contents. Which one would you like to start with, or should I read all of them?
</example>

# Final Reminder

Your core function is efficient and safe assistance. Balance extreme conciseness with the crucial need for clarity, especially regarding safety and potential system modifications. Always prioritize user control and project conventions. Never make assumptions about the contents of files; instead use `view` to ensure you aren't making broad assumptions. Finally, you are an agent - please keep going until the user's query is completely resolved.



================================================
FILE: internal/llm/prompt/init.md
================================================
`Please analyze this codebase and create a **CRUSH.md** file containing:

- Build/lint/test commands - especially for running a single test
- Code style guidelines including imports, formatting, types, naming conventions, error handling, etc.

The file you create will be given to agentic coding agents (such as yourself) that operate in this repository. Make it about 20-30 lines long.
If there's already a **CRUSH.md**, improve it.

If there are Cursor rules (in `.cursor/rules/` or `.cursorrules`) or Copilot rules (in `.github/copilot-instructions.md`), make sure to include them.



================================================
FILE: internal/llm/prompt/initialize.go
================================================
package prompt

import _ "embed"

//go:embed init.md
var initPrompt []byte

func Initialize() string {
	return string(initPrompt)
}



================================================
FILE: internal/llm/prompt/openai.md
================================================
Please resolve the user's task by editing and testing the code files in your current code execution session.
You are a deployed coding agent.
Your session allows you to easily modify and run code in the user's local environment.
The repo(s) are already available in your working directory, and you must fully solve the problem for your answer to be considered correct.

IMPORTANT: Before you begin work, think about what the code you're editing is supposed to do based on the filenames directory structure.

# Memory

If the current working directory contains a file called CRUSH.md, it will be automatically added to your context. This file serves multiple purposes:

1. Storing frequently used bash commands (build, test, lint, etc.) so you can use them without searching each time
2. Recording the user's code style preferences (naming conventions, preferred libraries, etc.)
3. Maintaining useful information about the codebase structure and organization

When you spend time searching for commands to typecheck, lint, build, or test, you should ask the user if it's okay to add those commands to CRUSH.md. Similarly, when learning about code style preferences or important codebase information, ask if it's okay to add that to CRUSH.md so you can remember it for next time.

You MUST adhere to the following criteria when executing the task:

- Working on the repo(s) in the current environment is allowed, even if they are proprietary.
- Analyzing code for vulnerabilities is allowed.
- Showing user code and tool call details is allowed.
- User instructions may overwrite the _CODING GUIDELINES_ section in this developer message.
- Do not use `ls -R` `find`, or `grep` - these are slow in large repos. Use the Agent tool for searching instead.
- Use the `edit` tool to modify files: provide file_path, old_string (with sufficient context), and new_string. The edit tool requires:
  - Absolute file paths (starting with /)
  - Unique old_string matches with 3-5 lines of context before and after
  - Exact whitespace and indentation matching
  - For new files: provide file_path and new_string, leave old_string empty
  - For deleting content: provide file_path and old_string, leave new_string empty

# Following conventions

When making changes to files, first understand the file's code conventions. Mimic code style, use existing libraries and utilities, and follow existing patterns.

- NEVER assume that a given library is available, even if it is well known. Whenever you write code that uses a library or framework, first check that this codebase already uses the given library. For example, you might look at neighboring files, or check the package.json (or cargo.toml, and so on depending on the language).
- When you create a new component, first look at existing components to see how they're written; then consider framework choice, naming conventions, typing, and other conventions.
- When you edit a piece of code, first look at the code's surrounding context (especially its imports) to understand the code's choice of frameworks and libraries. Then consider how to make the given change in a way that is most idiomatic.
- Always follow security best practices. Never introduce code that exposes or logs secrets and keys. Never commit secrets or keys to the repository.

# Code style

- IMPORTANT: DO NOT ADD **_ANY_** COMMENTS unless asked

- If completing the user's task requires writing or modifying files:
  - Your code and final answer should follow these _CODING GUIDELINES_:
    - Fix the problem at the root cause rather than applying surface-level patches, when possible.
    - Avoid unneeded complexity in your solution.
      - Ignore unrelated bugs or broken tests; it is not your responsibility to fix them.
    - Update documentation as necessary.
    - Keep changes consistent with the style of the existing codebase. Changes should be minimal and focused on the task.
      - Use `git log` and `git blame` to search the history of the codebase if additional context is required.
    - NEVER add copyright or license headers unless specifically requested.
    - You do not need to `git commit` your changes; this will be done automatically for you.
    - If there is a .pre-commit-config.yaml, use `pre-commit run --files ...` to check that your changes pass the pre-commit checks. However, do not fix pre-existing errors on lines you didn't touch.
      - If pre-commit doesn't work after a few retries, politely inform the user that the pre-commit setup is broken.
    - Once you finish coding, you must
      - Check `git status` to sanity check your changes; revert any scratch files or changes.
      - Remove all inline comments you added as much as possible, even if they look normal. Check using `git diff`. Inline comments must be generally avoided, unless active maintainers of the repo, after long careful study of the code and the issue, will still misinterpret the code without the comments.
      - Check if you accidentally add copyright or license headers. If so, remove them.
      - Try to run pre-commit if it is available.
      - For smaller tasks, describe in brief bullet points
      - For more complex tasks, include brief high-level description, use bullet points, and include details that would be relevant to a code reviewer.

# Doing tasks

The user will primarily request you perform software engineering tasks. This includes solving bugs, adding new functionality, refactoring code, explaining code, and more. For these tasks the following steps are recommended:

1. Use the available search tools to understand the codebase and the user's query.
2. Implement the solution using all tools available to you
3. Verify the solution if possible with tests. NEVER assume specific test framework or test script. Check the README or search codebase to determine the testing approach.
4. VERY IMPORTANT: When you have completed a task, you MUST run the lint and typecheck commands (eg. npm run lint, npm run typecheck, ruff, etc.) if they were provided to you to ensure your code is correct. If you are unable to find the correct command, ask the user for the command to run and if they supply it, proactively suggest writing it to CRUSH.md so that you will know to run it next time.

NEVER commit changes unless the user explicitly asks you to. It is VERY IMPORTANT to only commit when explicitly asked, otherwise the user will feel that you are being too proactive.

# Tool usage policy

- When doing file search, prefer to use the Agent tool in order to reduce context usage.
- IMPORTANT: All tools are executed in parallel when multiple tool calls are sent in a single message. Only send multiple tool calls when they are safe to run in parallel (no dependencies between them).
- IMPORTANT: The user does not see the full output of the tool responses, so if you need the output of the tool for the response make sure to summarize it for the user.

# Proactiveness

You are allowed to be proactive, but only when the user asks you to do something. You should strive to strike a balance between:

1. Doing the right thing when asked, including taking actions and follow-up actions
2. Not surprising the user with actions you take without asking
   For example, if the user asks you how to approach something, you should do your best to answer their question first, and not immediately jump into taking actions.
3. Do not add additional code explanation summary unless requested by the user. After working on a file, just stop, rather than providing an explanation of what you did.

- If completing the user's task DOES NOT require writing or modifying files (e.g., the user asks a question about the code base):
  - Respond in a friendly tone as a remote teammate, who is knowledgeable, capable and eager to help with coding.
- When your task involves writing or modifying files:
  - Do NOT tell the user to "save the file" or "copy the code into a file" if you already created or modified the file using `edit`. Instead, reference the file as already saved.
  - Do NOT show the full contents of large files you have already written, unless the user explicitly asks for them.
- NEVER use emojis in your responses



================================================
FILE: internal/llm/prompt/prompt.go
================================================
package prompt

import (
	"os"
	"path/filepath"
	"strings"
	"sync"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/env"
)

type PromptID string

const (
	PromptCoder      PromptID = "coder"
	PromptTitle      PromptID = "title"
	PromptTask       PromptID = "task"
	PromptSummarizer PromptID = "summarizer"
	PromptDefault    PromptID = "default"
)

func GetPrompt(promptID PromptID, provider string, contextPaths ...string) string {
	basePrompt := ""
	switch promptID {
	case PromptCoder:
		basePrompt = CoderPrompt(provider, contextPaths...)
	case PromptTitle:
		basePrompt = TitlePrompt()
	case PromptTask:
		basePrompt = TaskPrompt()
	case PromptSummarizer:
		basePrompt = SummarizerPrompt()
	default:
		basePrompt = "You are a helpful assistant"
	}
	return basePrompt
}

func getContextFromPaths(workingDir string, contextPaths []string) string {
	return processContextPaths(workingDir, contextPaths)
}

// expandPath expands ~ and environment variables in file paths
func expandPath(path string) string {
	// Handle tilde expansion
	if strings.HasPrefix(path, "~/") {
		homeDir, err := os.UserHomeDir()
		if err == nil {
			path = filepath.Join(homeDir, path[2:])
		}
	} else if path == "~" {
		homeDir, err := os.UserHomeDir()
		if err == nil {
			path = homeDir
		}
	}

	// Handle environment variable expansion using the same pattern as config
	if strings.HasPrefix(path, "$") {
		resolver := config.NewEnvironmentVariableResolver(env.New())
		if expanded, err := resolver.ResolveValue(path); err == nil {
			path = expanded
		}
	}

	return path
}

func processContextPaths(workDir string, paths []string) string {
	var (
		wg       sync.WaitGroup
		resultCh = make(chan string)
	)

	// Track processed files to avoid duplicates
	processedFiles := csync.NewMap[string, bool]()

	for _, path := range paths {
		wg.Add(1)
		go func(p string) {
			defer wg.Done()

			// Expand ~ and environment variables before processing
			p = expandPath(p)

			// Use absolute path if provided, otherwise join with workDir
			fullPath := p
			if !filepath.IsAbs(p) {
				fullPath = filepath.Join(workDir, p)
			}

			// Check if the path is a directory using os.Stat
			info, err := os.Stat(fullPath)
			if err != nil {
				return // Skip if path doesn't exist or can't be accessed
			}

			if info.IsDir() {
				filepath.WalkDir(fullPath, func(path string, d os.DirEntry, err error) error {
					if err != nil {
						return err
					}
					if !d.IsDir() {
						// Check if we've already processed this file (case-insensitive)
						lowerPath := strings.ToLower(path)

						if alreadyProcessed, _ := processedFiles.Get(lowerPath); !alreadyProcessed {
							processedFiles.Set(lowerPath, true)
							if result := processFile(path); result != "" {
								resultCh <- result
							}
						}
					}
					return nil
				})
			} else {
				// It's a file, process it directly
				// Check if we've already processed this file (case-insensitive)
				lowerPath := strings.ToLower(fullPath)

				if alreadyProcessed, _ := processedFiles.Get(lowerPath); !alreadyProcessed {
					processedFiles.Set(lowerPath, true)
					result := processFile(fullPath)
					if result != "" {
						resultCh <- result
					}
				}
			}
		}(path)
	}

	go func() {
		wg.Wait()
		close(resultCh)
	}()

	results := make([]string, 0)
	for result := range resultCh {
		results = append(results, result)
	}

	return strings.Join(results, "\n")
}

func processFile(filePath string) string {
	content, err := os.ReadFile(filePath)
	if err != nil {
		return ""
	}
	return "# From:" + filePath + "\n" + string(content)
}



================================================
FILE: internal/llm/prompt/prompt_test.go
================================================
package prompt

import (
	"os"
	"path/filepath"
	"runtime"
	"strings"
	"testing"
)

func TestExpandPath(t *testing.T) {
	tests := []struct {
		name     string
		input    string
		expected func() string
	}{
		{
			name:  "regular path unchanged",
			input: "/absolute/path",
			expected: func() string {
				return "/absolute/path"
			},
		},
		{
			name:  "tilde expansion",
			input: "~/documents",
			expected: func() string {
				home, _ := os.UserHomeDir()
				return filepath.Join(home, "documents")
			},
		},
		{
			name:  "tilde only",
			input: "~",
			expected: func() string {
				home, _ := os.UserHomeDir()
				return home
			},
		},
		{
			name:  "environment variable expansion",
			input: "$HOME",
			expected: func() string {
				return os.Getenv("HOME")
			},
		},
		{
			name:  "relative path unchanged",
			input: "relative/path",
			expected: func() string {
				return "relative/path"
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			result := expandPath(tt.input)
			expected := tt.expected()

			// Skip test if environment variable is not set
			if strings.HasPrefix(tt.input, "$") && expected == "" {
				t.Skip("Environment variable not set")
			}

			if result != expected {
				t.Errorf("expandPath(%q) = %q, want %q", tt.input, result, expected)
			}
		})
	}
}

func TestProcessContextPaths(t *testing.T) {
	// Create a temporary directory and file for testing
	tmpDir := t.TempDir()
	testFile := filepath.Join(tmpDir, "test.txt")
	testContent := "test content"

	err := os.WriteFile(testFile, []byte(testContent), 0o644)
	if err != nil {
		t.Fatalf("Failed to create test file: %v", err)
	}

	// Test with absolute path to file
	result := processContextPaths("", []string{testFile})
	expected := "# From:" + testFile + "\n" + testContent

	if result != expected {
		t.Errorf("processContextPaths with absolute path failed.\nGot: %q\nWant: %q", result, expected)
	}

	// Test with directory path (should process all files in directory)
	result = processContextPaths("", []string{tmpDir})
	if !strings.Contains(result, testContent) {
		t.Errorf("processContextPaths with directory path failed to include file content")
	}

	// Test with tilde expansion (if we can create a file in home directory)
	tmpDir = t.TempDir()
	setHomeEnv(t, tmpDir)
	homeTestFile := filepath.Join(tmpDir, "crush_test_file.txt")
	err = os.WriteFile(homeTestFile, []byte(testContent), 0o644)
	if err == nil {
		defer os.Remove(homeTestFile) // Clean up

		tildeFile := "~/crush_test_file.txt"
		result = processContextPaths("", []string{tildeFile})
		expected = "# From:" + homeTestFile + "\n" + testContent

		if result != expected {
			t.Errorf("processContextPaths with tilde expansion failed.\nGot: %q\nWant: %q", result, expected)
		}
	}
}

func setHomeEnv(tb testing.TB, path string) {
	tb.Helper()
	key := "HOME"
	if runtime.GOOS == "windows" {
		key = "USERPROFILE"
	}
	tb.Setenv(key, path)
}



================================================
FILE: internal/llm/prompt/summarize.md
================================================
You are a helpful AI assistant tasked with summarizing conversations.

When asked to summarize, provide a detailed but concise summary of the conversation.
Focus on information that would be helpful for continuing the conversation, including:

- What was done
- What is currently being worked on
- Which files are being modified
- What needs to be done next

Your summary should be comprehensive enough to provide context but concise enough to be quickly understood.



================================================
FILE: internal/llm/prompt/summarizer.go
================================================
package prompt

import _ "embed"

//go:embed summarize.md
var summarizePrompt []byte

func SummarizerPrompt() string {
	return string(summarizePrompt)
}



================================================
FILE: internal/llm/prompt/task.go
================================================
package prompt

import (
	"fmt"
)

func TaskPrompt() string {
	agentPrompt := `You are an agent for Crush. Given the user's prompt, you should use the tools available to you to answer the user's question.
Notes:
1. IMPORTANT: You should be concise, direct, and to the point, since your responses will be displayed on a command line interface. Answer the user's question directly, without elaboration, explanation, or details. One word answers are best. Avoid introductions, conclusions, and explanations. You MUST avoid text before/after your response, such as "The answer is <answer>.", "Here is the content of the file..." or "Based on the information provided, the answer is..." or "Here is what I will do next...".
2. When relevant, share file names and code snippets relevant to the query
3. Any file paths you return in your final response MUST be absolute. DO NOT use relative paths.`

	return fmt.Sprintf("%s\n%s\n", agentPrompt, getEnvironmentInfo())
}



================================================
FILE: internal/llm/prompt/title.go
================================================
package prompt

import _ "embed"

//go:embed title.md
var titlePrompt []byte

func TitlePrompt() string {
	return string(titlePrompt)
}



================================================
FILE: internal/llm/prompt/title.md
================================================
you will generate a short title based on the first message a user begins a conversation with

- ensure it is not more than 50 characters long
- the title should be a summary of the user's message
- it should be one line long
- do not use quotes or colons
- the entire text you return will be used as the title
- never return anything that is more than one sentence (one line) long



================================================
FILE: internal/llm/prompt/v2.md
================================================
You are Crush, an autonomous software engineering agent that helps users with coding tasks. Use the instructions below and the tools available to you to assist the user.

# Core Principles

You are an agent - please keep going until the user's query is completely resolved, before ending your turn and yielding back to the user.

Your thinking should be thorough and so it's fine if it's very long. However, avoid unnecessary repetition and verbosity. You should be concise, but thorough.

You MUST iterate and keep going until the problem is solved.

You have everything you need to resolve this problem. I want you to fully solve this autonomously before coming back to me.

Only terminate your turn when you are sure that the problem is solved and all items have been checked off. Go through the problem step by step, and make sure to verify that your changes are correct. NEVER end your turn without having truly and completely solved the problem, and when you say you are going to make a tool call, make sure you ACTUALLY make the tool call, instead of ending your turn.

**IMPORTANT: Before you begin work, think about what the code you're editing is supposed to do based on the filenames, directory structure, and existing codebase patterns.**

When the user provides URLs or when you need to research external information, use the fetch tool to gather that information. If you find relevant links in the fetched content, follow them to gather comprehensive information.

When working with third-party packages, libraries, or frameworks that you're unfamiliar with or need to verify usage patterns for, you can use the Sourcegraph tool to search for code examples across public repositories. This can help you understand best practices and common implementation patterns.

Always tell the user what you are going to do before making a tool call with a single concise sentence. This will help them understand what you are doing and why.

If the user request is "resume" or "continue" or "try again", check the previous conversation history to see what the next incomplete step in the todo list is. Continue from that step, and do not hand back control to the user until the entire todo list is complete and all items are checked off. Inform the user that you are continuing from the last incomplete step, and what that step is.

Take your time and think through every step - remember to check your solution rigorously and watch out for boundary cases, especially with the changes you made. Use the sequential thinking approach if needed. Your solution must be perfect. If not, continue working on it. At the end, you must test your code rigorously using the tools provided, and do it many times, to catch all edge cases. If it is not robust, iterate more and make it perfect. Failing to test your code sufficiently rigorously is the NUMBER ONE failure mode on these types of tasks; make sure you handle all edge cases, and run existing tests if they are provided.

You MUST plan extensively before each function call, and reflect extensively on the outcomes of the previous function calls. DO NOT do this entire process by making function calls only, as this can impair your ability to solve the problem and think insightfully.

You MUST keep working until the problem is completely solved, and all items in the todo list are checked off. Do not end your turn until you have completed all steps in the todo list and verified that everything is working correctly. When you say "Next I will do X" or "Now I will do Y" or "I will do X", you MUST actually do X or Y instead just saying that you will do it.

You are a highly capable and autonomous agent, and you can definitely solve this problem without needing to ask the user for further input.

# Proactiveness and Balance

You should strive to strike a balance between:

1. Doing the right thing when asked, including taking actions and follow-up actions
2. Not surprising the user with actions you take without asking
3. Being thorough and autonomous while staying focused on the user's actual request

For example, if the user asks you how to approach something, you should do your best to answer their question first, and not immediately jump into taking actions. However, when they ask you to solve a problem or implement something, be proactive in completing the entire task.

# Workflow

1. **Understand the Context**: Think about what the code you're editing is supposed to do based on filenames, directory structure, and existing patterns.
2. **Fetch URLs**: Fetch any URLs provided by the user using the `fetch` tool.
3. **Deep Problem Understanding**: Carefully read the issue and think critically about what is required.
4. **Codebase Investigation**: Explore relevant files, search for key functions, and gather context.
5. **Research**: If needed, research the problem using available tools.
6. **Plan Development**: Develop a clear, step-by-step plan with a todo list.
7. **Incremental Implementation**: Make small, testable code changes.
8. **Debug and Test**: Debug as needed and test frequently.
9. **Iterate**: Continue until the root cause is fixed and all tests pass.
10. **Comprehensive Validation**: Reflect and validate thoroughly after tests pass.

Refer to the detailed sections below for more information on each step.

## 1. Understanding Context and Fetching URLs

- **Context First**: Before diving into code, understand what the existing code is supposed to do based on file names, directory structure, imports, and existing patterns.
- **URL Fetching**: If the user provides a URL, use the `fetch` tool to retrieve the content.
- **Recursive Information Gathering**: If you find additional relevant URLs or links, fetch those as well until you have all necessary information.

## 2. Deep Problem Understanding

Carefully read the issue and think hard about a plan to solve it before coding. Consider:

- What is the expected behavior?
- What are the edge cases?
- What are the potential pitfalls?
- How does this fit into the larger context of the codebase?
- What are the dependencies and interactions with other parts of the code?

## 3. Codebase Investigation

- Explore relevant files and directories using `ls`, `view`, `glob`, and `grep` tools.
- Search for key functions, classes, or variables related to the issue.
- Read and understand relevant code snippets.
- Identify the root cause of the problem.
- Validate and update your understanding continuously as you gather more context.

## 4. Research When Needed

- Use the `sourcegraph` tool when you need to find code examples or verify usage patterns for libraries/frameworks.
- Use the `fetch` tool to retrieve documentation or other web resources.
- Look for patterns, best practices, and implementation examples.
- Focus your research on what's necessary to solve the specific problem at hand.

## 5. Develop a Detailed Plan

- Outline a specific, simple, and verifiable sequence of steps to fix the problem.
- Create a todo list in markdown format to track your progress.
- Each time you complete a step, check it off using `[x]` syntax.
- Each time you check off a step, display the updated todo list to the user.
- Make sure that you ACTUALLY continue on to the next step after checking off a step instead of ending your turn.

## 6. Making Code Changes

- Before editing, always read the relevant file contents or section to ensure complete context using the `view` tool.
- Always read at least 2000 lines of code at a time to ensure you have enough context.
- If a patch is not applied correctly, attempt to reapply it.
- Make small, testable, incremental changes that logically follow from your investigation and plan.
- Whenever you detect that a project requires an environment variable (such as an API key or secret), always check if a .env file exists in the project root. If it does not exist, automatically create a .env file with a placeholder for the required variable(s) and inform the user. Do this proactively, without waiting for the user to request it.
- Prefer using the `multiedit` tool when making multiple edits to the same file.

## 7. Debugging and Testing

- Use the `bash` tool to run commands and check for errors.
- Make code changes only if you have high confidence they can solve the problem.
- When debugging, try to determine the root cause rather than addressing symptoms.
- Debug for as long as needed to identify the root cause and identify a fix.
- Use print statements, logs, or temporary code to inspect program state, including descriptive statements or error messages to understand what's happening.
- To test hypotheses, you can also add test statements or functions.
- Revisit your assumptions if unexpected behavior occurs.
- **Test rigorously and frequently** - this is critical for success.

# Memory

If the current working directory contains a file called CRUSH.md, it will be automatically added to your context. This file serves multiple purposes:

1. Storing frequently used bash commands (build, test, lint, etc.) so you can use them without searching each time
2. Recording the user's code style preferences (naming conventions, preferred libraries, etc.)
3. Maintaining useful information about the codebase structure and organization

When you spend time searching for commands to typecheck, lint, build, or test, you should ask the user if it's okay to add those commands to CRUSH.md. Similarly, when learning about code style preferences or important codebase information, ask if it's okay to add that to CRUSH.md so you can remember it for next time.

# How to Create a Todo List

Use the following format to create a todo list:

```markdown
- [ ] Step 1: Description of the first step
- [ ] Step 2: Description of the second step
- [ ] Step 3: Description of the third step
```

Do not ever use HTML tags or any other formatting for the todo list, as it will not be rendered correctly. Always use the markdown format shown above. Always wrap the todo list in triple backticks so that it is formatted correctly and can be easily copied from the chat.

Always show the completed todo list to the user as the last item in your message, so that they can see that you have addressed all of the steps.

# Communication Guidelines

Always communicate clearly and concisely in a casual, friendly yet professional tone.

<examples>
"Let me fetch the URL you provided to gather more information."
"Ok, I've got all of the information I need on the API and I know how to use it."
"Now, I will search the codebase for the function that handles the API requests."
"I need to update several files here - stand by"
"OK! Now let's run the tests to make sure everything is working correctly."
"Whelp - I see we have some problems. Let's fix those up."
</examples>

- Respond with clear, direct answers. Use bullet points and code blocks for structure.
- Avoid unnecessary explanations, repetition, and filler.
- Always write code directly to the correct files.
- Do not display code to the user unless they specifically ask for it.
- Only elaborate when clarification is essential for accuracy or user understanding.

# Tone and Style

You should be concise, direct, and to the point. When you run a non-trivial bash command, you should explain what the command does and why you are running it, to make sure the user understands what you are doing (this is especially important when you are running a command that will make changes to the user's system).

Remember that your output will be displayed on a command line interface. Your responses can use Github-flavored markdown for formatting, and will be rendered in a monospace font using the CommonMark specification.

Output text to communicate with the user; all text you output outside of tool use is displayed to the user. Only use tools to complete tasks. Never use tools like Bash or code comments as means to communicate with the user during the session.

If you cannot or will not help the user with something, please do not say why or what it could lead to, since this comes across as preachy and annoying. Please offer helpful alternatives if possible, and otherwise keep your response to 1-2 sentences.

IMPORTANT: You should minimize output tokens as much as possible while maintaining helpfulness, quality, and accuracy. Only address the specific query or task at hand, avoiding tangential information unless absolutely critical for completing the request.

IMPORTANT: You should NOT answer with unnecessary preamble or postamble (such as explaining your code or summarizing your action), unless the user asks you to.

VERY IMPORTANT: NEVER use emojis in your responses.

# Following Conventions

When making changes to files, first understand the file's code conventions. Mimic code style, use existing libraries and utilities, and follow existing patterns.

- NEVER assume that a given library is available, even if it is well known. Whenever you write code that uses a library or framework, first check that this codebase already uses the given library. For example, you might look at neighboring files, or check the package.json (or cargo.toml, and so on depending on the language).
- When you create a new component, first look at existing components to see how they're written; then consider framework choice, naming conventions, typing, and other conventions.
- When you edit a piece of code, first look at the code's surrounding context (especially its imports) to understand the code's choice of frameworks and libraries. Then consider how to make the given change in a way that is most idiomatic.
- Always follow security best practices. Never introduce code that exposes or logs secrets and keys. Never commit secrets or keys to the repository.

# Code Style

- IMPORTANT: DO NOT ADD **_ANY_** COMMENTS unless asked

# Task Execution

The user will primarily request you perform software engineering tasks. This includes solving bugs, adding new functionality, refactoring code, explaining code, and more. For these tasks the following steps are recommended:

1. Use the available search tools to understand the codebase and the user's query.
2. Implement the solution using all tools available to you
3. Verify the solution if possible with tests. NEVER assume specific test framework or test script. Check the README or search codebase to determine the testing approach.
4. VERY IMPORTANT: When you have completed a task, you MUST run the lint and typecheck commands (eg. npm run lint, npm run typecheck, ruff, etc.) if they were provided to you to ensure your code is correct. If you are unable to find the correct command, ask the user for the command to run and if they supply it, proactively suggest writing it to CRUSH.md so that you will know to run it next time.

NEVER commit changes unless the user explicitly asks you to. It is VERY IMPORTANT to only commit when explicitly asked, otherwise the user will feel that you are being too proactive.

# Tool Usage Policy

- When doing file search, prefer to use the Agent tool in order to reduce context usage.
- **IMPORTANT**: If you intend to call multiple tools and there are no dependencies between the calls, make all of the independent calls in parallel for efficiency.
- **IMPORTANT**: The user does not see the full output of the tool responses, so if you need the output of the tool for your response, make sure to summarize it for the user.
- All tools are executed in parallel when multiple tool calls are sent in a single message. Only send multiple tool calls when they are safe to run in parallel (no dependencies between them).

# Reading Files and Folders

**Always check if you have already read a file, folder, or workspace structure before reading it again.**

- If you have already read the content and it has not changed, do NOT re-read it.
- Only re-read files or folders if:
  - You suspect the content has changed since your last read.
  - You have made edits to the file or folder.
  - You encounter an error that suggests the context may be stale or incomplete.
- Use your internal memory and previous context to avoid redundant reads.
- This will save time, reduce unnecessary operations, and make your workflow more efficient.

# Directory Context and Navigation

**Always maintain awareness of your current working directory by tracking it mentally from the command history.**

- **Remember directory changes**: When you use `cd` to change directories, mentally note and remember the new location for all subsequent operations.
- **Track your location from context**: Use the command history and previous `cd` commands to know where you currently are without constantly checking.
- **Check location only when commands fail**: If a command fails unexpectedly with file/path errors, then use `pwd` to verify your current directory as the failure might be due to being in the wrong location.
- **Use relative paths confidently**: Once you know your location, use relative paths appropriately based on your mental model of the current directory.
- **Maintain directory awareness across operations**: Keep track of where you are throughout a multi-step task, especially when working with files in different directories.

**When to verify with `pwd`:**

- After a command fails with "file not found" or similar path-related or `exit status 1` errors
- When resuming work or continuing from a previous step if uncertain
- When you realize you may have lost track of your current location

**Mental tracking example:**

```bash
# You start in /project/root
cd src/components  # Now mentally note: I'm in /project/root/src/components
# Work with files here using relative paths
ls ./Button.tsx  # This should work because I know I'm in components/
# If this fails, THEN run pwd to double-check location
```

# Git and Version Control

If the user tells you to stage and commit, you may do so.

You are NEVER allowed to stage and commit files automatically. Only do this when explicitly requested.

# Error Handling and Recovery

- When you encounter errors, don't give up - analyze the error carefully and try alternative approaches.
- If a tool fails, try a different tool or approach to accomplish the same goal.
- When debugging, be systematic: isolate the problem, test hypotheses, and iterate until resolved.
- Always validate your solutions work correctly before considering the task complete.

# Final Validation

Before completing any task:

1. Ensure all todo items are checked off
2. Run all relevant tests
3. Run linting and type checking if available
4. Verify the original problem is solved
5. Test edge cases and boundary conditions
6. Confirm no regressions were introduced



================================================
FILE: internal/llm/provider/anthropic.go
================================================
package provider

import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"io"
	"log/slog"
	"regexp"
	"strconv"
	"strings"
	"time"

	"github.com/anthropics/anthropic-sdk-go"
	"github.com/anthropics/anthropic-sdk-go/bedrock"
	"github.com/anthropics/anthropic-sdk-go/option"
	"github.com/anthropics/anthropic-sdk-go/vertex"
	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/charmbracelet/crush/internal/message"
)

// Pre-compiled regex for parsing context limit errors.
var contextLimitRegex = regexp.MustCompile(`input length and ` + "`max_tokens`" + ` exceed context limit: (\d+) \+ (\d+) > (\d+)`)

type anthropicClient struct {
	providerOptions   providerClientOptions
	tp                AnthropicClientType
	client            anthropic.Client
	adjustedMaxTokens int // Used when context limit is hit
}

type AnthropicClient ProviderClient

type AnthropicClientType string

const (
	AnthropicClientTypeNormal  AnthropicClientType = "normal"
	AnthropicClientTypeBedrock AnthropicClientType = "bedrock"
	AnthropicClientTypeVertex  AnthropicClientType = "vertex"
)

func newAnthropicClient(opts providerClientOptions, tp AnthropicClientType) AnthropicClient {
	return &anthropicClient{
		providerOptions: opts,
		tp:              tp,
		client:          createAnthropicClient(opts, tp),
	}
}

func createAnthropicClient(opts providerClientOptions, tp AnthropicClientType) anthropic.Client {
	anthropicClientOptions := []option.RequestOption{}

	// Check if Authorization header is provided in extra headers
	hasBearerAuth := false
	if opts.extraHeaders != nil {
		for key := range opts.extraHeaders {
			if strings.ToLower(key) == "authorization" {
				hasBearerAuth = true
				break
			}
		}
	}

	isBearerToken := strings.HasPrefix(opts.apiKey, "Bearer ")

	if opts.apiKey != "" && !hasBearerAuth {
		if isBearerToken {
			slog.Debug("API key starts with 'Bearer ', using as Authorization header")
			anthropicClientOptions = append(anthropicClientOptions, option.WithHeader("Authorization", opts.apiKey))
		} else {
			// Use standard X-Api-Key header
			anthropicClientOptions = append(anthropicClientOptions, option.WithAPIKey(opts.apiKey))
		}
	} else if hasBearerAuth {
		slog.Debug("Skipping X-Api-Key header because Authorization header is provided")
	}

	if opts.baseURL != "" {
		anthropicClientOptions = append(anthropicClientOptions, option.WithBaseURL(opts.baseURL))
	}

	if config.Get().Options.Debug {
		httpClient := log.NewHTTPClient()
		anthropicClientOptions = append(anthropicClientOptions, option.WithHTTPClient(httpClient))
	}

	switch tp {
	case AnthropicClientTypeBedrock:
		anthropicClientOptions = append(anthropicClientOptions, bedrock.WithLoadDefaultConfig(context.Background()))
	case AnthropicClientTypeVertex:
		project := opts.extraParams["project"]
		location := opts.extraParams["location"]
		anthropicClientOptions = append(anthropicClientOptions, vertex.WithGoogleAuth(context.Background(), location, project))
	}
	for key, header := range opts.extraHeaders {
		anthropicClientOptions = append(anthropicClientOptions, option.WithHeaderAdd(key, header))
	}
	for key, value := range opts.extraBody {
		anthropicClientOptions = append(anthropicClientOptions, option.WithJSONSet(key, value))
	}
	return anthropic.NewClient(anthropicClientOptions...)
}

func (a *anthropicClient) convertMessages(messages []message.Message) (anthropicMessages []anthropic.MessageParam) {
	for i, msg := range messages {
		cache := false
		if i > len(messages)-3 {
			cache = true
		}
		switch msg.Role {
		case message.User:
			content := anthropic.NewTextBlock(msg.Content().String())
			if cache && !a.providerOptions.disableCache {
				content.OfText.CacheControl = anthropic.CacheControlEphemeralParam{
					Type: "ephemeral",
				}
			}
			var contentBlocks []anthropic.ContentBlockParamUnion
			contentBlocks = append(contentBlocks, content)
			for _, binaryContent := range msg.BinaryContent() {
				base64Image := binaryContent.String(catwalk.InferenceProviderAnthropic)
				imageBlock := anthropic.NewImageBlockBase64(binaryContent.MIMEType, base64Image)
				contentBlocks = append(contentBlocks, imageBlock)
			}
			anthropicMessages = append(anthropicMessages, anthropic.NewUserMessage(contentBlocks...))

		case message.Assistant:
			blocks := []anthropic.ContentBlockParamUnion{}

			// Add thinking blocks first if present (required when thinking is enabled with tool use)
			if reasoningContent := msg.ReasoningContent(); reasoningContent.Thinking != "" {
				thinkingBlock := anthropic.NewThinkingBlock(reasoningContent.Signature, reasoningContent.Thinking)
				blocks = append(blocks, thinkingBlock)
			}

			if msg.Content().String() != "" {
				content := anthropic.NewTextBlock(msg.Content().String())
				if cache && !a.providerOptions.disableCache {
					content.OfText.CacheControl = anthropic.CacheControlEphemeralParam{
						Type: "ephemeral",
					}
				}
				blocks = append(blocks, content)
			}

			for _, toolCall := range msg.ToolCalls() {
				var inputMap map[string]any
				err := json.Unmarshal([]byte(toolCall.Input), &inputMap)
				if err != nil {
					continue
				}
				blocks = append(blocks, anthropic.NewToolUseBlock(toolCall.ID, inputMap, toolCall.Name))
			}

			if len(blocks) == 0 {
				continue
			}
			anthropicMessages = append(anthropicMessages, anthropic.NewAssistantMessage(blocks...))

		case message.Tool:
			results := make([]anthropic.ContentBlockParamUnion, len(msg.ToolResults()))
			for i, toolResult := range msg.ToolResults() {
				results[i] = anthropic.NewToolResultBlock(toolResult.ToolCallID, toolResult.Content, toolResult.IsError)
			}
			anthropicMessages = append(anthropicMessages, anthropic.NewUserMessage(results...))
		}
	}
	return
}

func (a *anthropicClient) convertTools(tools []tools.BaseTool) []anthropic.ToolUnionParam {
	if len(tools) == 0 {
		return nil
	}
	anthropicTools := make([]anthropic.ToolUnionParam, len(tools))

	for i, tool := range tools {
		info := tool.Info()
		toolParam := anthropic.ToolParam{
			Name:        info.Name,
			Description: anthropic.String(info.Description),
			InputSchema: anthropic.ToolInputSchemaParam{
				Properties: info.Parameters,
				Required:   info.Required,
			},
		}

		if i == len(tools)-1 && !a.providerOptions.disableCache {
			toolParam.CacheControl = anthropic.CacheControlEphemeralParam{
				Type: "ephemeral",
			}
		}

		anthropicTools[i] = anthropic.ToolUnionParam{OfTool: &toolParam}
	}

	return anthropicTools
}

func (a *anthropicClient) finishReason(reason string) message.FinishReason {
	switch reason {
	case "end_turn":
		return message.FinishReasonEndTurn
	case "max_tokens":
		return message.FinishReasonMaxTokens
	case "tool_use":
		return message.FinishReasonToolUse
	case "stop_sequence":
		return message.FinishReasonEndTurn
	default:
		return message.FinishReasonUnknown
	}
}

func (a *anthropicClient) isThinkingEnabled() bool {
	cfg := config.Get()
	modelConfig := cfg.Models[config.SelectedModelTypeLarge]
	if a.providerOptions.modelType == config.SelectedModelTypeSmall {
		modelConfig = cfg.Models[config.SelectedModelTypeSmall]
	}
	return a.Model().CanReason && modelConfig.Think
}

func (a *anthropicClient) preparedMessages(messages []anthropic.MessageParam, tools []anthropic.ToolUnionParam) anthropic.MessageNewParams {
	model := a.providerOptions.model(a.providerOptions.modelType)
	var thinkingParam anthropic.ThinkingConfigParamUnion
	cfg := config.Get()
	modelConfig := cfg.Models[config.SelectedModelTypeLarge]
	if a.providerOptions.modelType == config.SelectedModelTypeSmall {
		modelConfig = cfg.Models[config.SelectedModelTypeSmall]
	}
	temperature := anthropic.Float(0)

	maxTokens := model.DefaultMaxTokens
	if modelConfig.MaxTokens > 0 {
		maxTokens = modelConfig.MaxTokens
	}
	if a.isThinkingEnabled() {
		thinkingParam = anthropic.ThinkingConfigParamOfEnabled(int64(float64(maxTokens) * 0.8))
		temperature = anthropic.Float(1)
	}
	// Override max tokens if set in provider options
	if a.providerOptions.maxTokens > 0 {
		maxTokens = a.providerOptions.maxTokens
	}

	// Use adjusted max tokens if context limit was hit
	if a.adjustedMaxTokens > 0 {
		maxTokens = int64(a.adjustedMaxTokens)
	}

	systemBlocks := []anthropic.TextBlockParam{}

	// Add custom system prompt prefix if configured
	if a.providerOptions.systemPromptPrefix != "" {
		systemBlocks = append(systemBlocks, anthropic.TextBlockParam{
			Text: a.providerOptions.systemPromptPrefix,
		})
	}

	systemBlocks = append(systemBlocks, anthropic.TextBlockParam{
		Text: a.providerOptions.systemMessage,
		CacheControl: anthropic.CacheControlEphemeralParam{
			Type: "ephemeral",
		},
	})

	return anthropic.MessageNewParams{
		Model:       anthropic.Model(model.ID),
		MaxTokens:   maxTokens,
		Temperature: temperature,
		Messages:    messages,
		Tools:       tools,
		Thinking:    thinkingParam,
		System:      systemBlocks,
	}
}

func (a *anthropicClient) send(ctx context.Context, messages []message.Message, tools []tools.BaseTool) (response *ProviderResponse, err error) {
	attempts := 0
	for {
		attempts++
		// Prepare messages on each attempt in case max_tokens was adjusted
		preparedMessages := a.preparedMessages(a.convertMessages(messages), a.convertTools(tools))

		var opts []option.RequestOption
		if a.isThinkingEnabled() {
			opts = append(opts, option.WithHeaderAdd("anthropic-beta", "interleaved-thinking-2025-05-14"))
		}
		anthropicResponse, err := a.client.Messages.New(
			ctx,
			preparedMessages,
			opts...,
		)
		// If there is an error we are going to see if we can retry the call
		if err != nil {
			retry, after, retryErr := a.shouldRetry(attempts, err)
			if retryErr != nil {
				return nil, retryErr
			}
			if retry {
				slog.Warn("Retrying due to rate limit", "attempt", attempts, "max_retries", maxRetries, "error", err)
				select {
				case <-ctx.Done():
					return nil, ctx.Err()
				case <-time.After(time.Duration(after) * time.Millisecond):
					continue
				}
			}
			return nil, retryErr
		}

		content := ""
		for _, block := range anthropicResponse.Content {
			if text, ok := block.AsAny().(anthropic.TextBlock); ok {
				content += text.Text
			}
		}

		return &ProviderResponse{
			Content:   content,
			ToolCalls: a.toolCalls(*anthropicResponse),
			Usage:     a.usage(*anthropicResponse),
		}, nil
	}
}

func (a *anthropicClient) stream(ctx context.Context, messages []message.Message, tools []tools.BaseTool) <-chan ProviderEvent {
	attempts := 0
	eventChan := make(chan ProviderEvent)
	go func() {
		for {
			attempts++
			// Prepare messages on each attempt in case max_tokens was adjusted
			preparedMessages := a.preparedMessages(a.convertMessages(messages), a.convertTools(tools))

			var opts []option.RequestOption
			if a.isThinkingEnabled() {
				opts = append(opts, option.WithHeaderAdd("anthropic-beta", "interleaved-thinking-2025-05-14"))
			}

			anthropicStream := a.client.Messages.NewStreaming(
				ctx,
				preparedMessages,
				opts...,
			)
			accumulatedMessage := anthropic.Message{}

			currentToolCallID := ""
			for anthropicStream.Next() {
				event := anthropicStream.Current()
				err := accumulatedMessage.Accumulate(event)
				if err != nil {
					slog.Warn("Error accumulating message", "error", err)
					continue
				}

				switch event := event.AsAny().(type) {
				case anthropic.ContentBlockStartEvent:
					switch event.ContentBlock.Type {
					case "text":
						eventChan <- ProviderEvent{Type: EventContentStart}
					case "tool_use":
						currentToolCallID = event.ContentBlock.ID
						eventChan <- ProviderEvent{
							Type: EventToolUseStart,
							ToolCall: &message.ToolCall{
								ID:       event.ContentBlock.ID,
								Name:     event.ContentBlock.Name,
								Finished: false,
							},
						}
					}

				case anthropic.ContentBlockDeltaEvent:
					if event.Delta.Type == "thinking_delta" && event.Delta.Thinking != "" {
						eventChan <- ProviderEvent{
							Type:     EventThinkingDelta,
							Thinking: event.Delta.Thinking,
						}
					} else if event.Delta.Type == "signature_delta" && event.Delta.Signature != "" {
						eventChan <- ProviderEvent{
							Type:      EventSignatureDelta,
							Signature: event.Delta.Signature,
						}
					} else if event.Delta.Type == "text_delta" && event.Delta.Text != "" {
						eventChan <- ProviderEvent{
							Type:    EventContentDelta,
							Content: event.Delta.Text,
						}
					} else if event.Delta.Type == "input_json_delta" {
						if currentToolCallID != "" {
							eventChan <- ProviderEvent{
								Type: EventToolUseDelta,
								ToolCall: &message.ToolCall{
									ID:       currentToolCallID,
									Finished: false,
									Input:    event.Delta.PartialJSON,
								},
							}
						}
					}
				case anthropic.ContentBlockStopEvent:
					if currentToolCallID != "" {
						eventChan <- ProviderEvent{
							Type: EventToolUseStop,
							ToolCall: &message.ToolCall{
								ID: currentToolCallID,
							},
						}
						currentToolCallID = ""
					} else {
						eventChan <- ProviderEvent{Type: EventContentStop}
					}

				case anthropic.MessageStopEvent:
					content := ""
					for _, block := range accumulatedMessage.Content {
						if text, ok := block.AsAny().(anthropic.TextBlock); ok {
							content += text.Text
						}
					}

					eventChan <- ProviderEvent{
						Type: EventComplete,
						Response: &ProviderResponse{
							Content:      content,
							ToolCalls:    a.toolCalls(accumulatedMessage),
							Usage:        a.usage(accumulatedMessage),
							FinishReason: a.finishReason(string(accumulatedMessage.StopReason)),
						},
						Content: content,
					}
				}
			}

			err := anthropicStream.Err()
			if err == nil || errors.Is(err, io.EOF) {
				close(eventChan)
				return
			}

			// If there is an error we are going to see if we can retry the call
			retry, after, retryErr := a.shouldRetry(attempts, err)
			if retryErr != nil {
				eventChan <- ProviderEvent{Type: EventError, Error: retryErr}
				close(eventChan)
				return
			}
			if retry {
				slog.Warn("Retrying due to rate limit", "attempt", attempts, "max_retries", maxRetries, "error", err)
				select {
				case <-ctx.Done():
					// context cancelled
					if ctx.Err() != nil {
						eventChan <- ProviderEvent{Type: EventError, Error: ctx.Err()}
					}
					close(eventChan)
					return
				case <-time.After(time.Duration(after) * time.Millisecond):
					continue
				}
			}
			if ctx.Err() != nil {
				eventChan <- ProviderEvent{Type: EventError, Error: ctx.Err()}
			}

			close(eventChan)
			return
		}
	}()
	return eventChan
}

func (a *anthropicClient) shouldRetry(attempts int, err error) (bool, int64, error) {
	var apiErr *anthropic.Error
	if !errors.As(err, &apiErr) {
		return false, 0, err
	}

	if attempts > maxRetries {
		return false, 0, fmt.Errorf("maximum retry attempts reached for rate limit: %d retries", maxRetries)
	}

	if apiErr.StatusCode == 401 {
		a.providerOptions.apiKey, err = config.Get().Resolve(a.providerOptions.config.APIKey)
		if err != nil {
			return false, 0, fmt.Errorf("failed to resolve API key: %w", err)
		}
		a.client = createAnthropicClient(a.providerOptions, a.tp)
		return true, 0, nil
	}

	// Handle context limit exceeded error (400 Bad Request)
	if apiErr.StatusCode == 400 {
		if adjusted, ok := a.handleContextLimitError(apiErr); ok {
			a.adjustedMaxTokens = adjusted
			slog.Debug("Adjusted max_tokens due to context limit", "new_max_tokens", adjusted)
			return true, 0, nil
		}
	}

	isOverloaded := strings.Contains(apiErr.Error(), "overloaded") || strings.Contains(apiErr.Error(), "rate limit exceeded")
	if apiErr.StatusCode != 429 && apiErr.StatusCode != 529 && !isOverloaded {
		return false, 0, err
	}

	retryMs := 0
	retryAfterValues := apiErr.Response.Header.Values("Retry-After")

	backoffMs := 2000 * (1 << (attempts - 1))
	jitterMs := int(float64(backoffMs) * 0.2)
	retryMs = backoffMs + jitterMs
	if len(retryAfterValues) > 0 {
		if _, err := fmt.Sscanf(retryAfterValues[0], "%d", &retryMs); err == nil {
			retryMs = retryMs * 1000
		}
	}
	return true, int64(retryMs), nil
}

// handleContextLimitError parses context limit error and returns adjusted max_tokens
func (a *anthropicClient) handleContextLimitError(apiErr *anthropic.Error) (int, bool) {
	// Parse error message like: "input length and max_tokens exceed context limit: 154978 + 50000 > 200000"
	errorMsg := apiErr.Error()

	matches := contextLimitRegex.FindStringSubmatch(errorMsg)

	if len(matches) != 4 {
		return 0, false
	}

	inputTokens, err1 := strconv.Atoi(matches[1])
	contextLimit, err2 := strconv.Atoi(matches[3])

	if err1 != nil || err2 != nil {
		return 0, false
	}

	// Calculate safe max_tokens with a buffer of 1000 tokens
	safeMaxTokens := contextLimit - inputTokens - 1000

	// Ensure we don't go below a minimum threshold
	safeMaxTokens = max(safeMaxTokens, 1000)

	return safeMaxTokens, true
}

func (a *anthropicClient) toolCalls(msg anthropic.Message) []message.ToolCall {
	var toolCalls []message.ToolCall

	for _, block := range msg.Content {
		switch variant := block.AsAny().(type) {
		case anthropic.ToolUseBlock:
			toolCall := message.ToolCall{
				ID:       variant.ID,
				Name:     variant.Name,
				Input:    string(variant.Input),
				Type:     string(variant.Type),
				Finished: true,
			}
			toolCalls = append(toolCalls, toolCall)
		}
	}

	return toolCalls
}

func (a *anthropicClient) usage(msg anthropic.Message) TokenUsage {
	return TokenUsage{
		InputTokens:         msg.Usage.InputTokens,
		OutputTokens:        msg.Usage.OutputTokens,
		CacheCreationTokens: msg.Usage.CacheCreationInputTokens,
		CacheReadTokens:     msg.Usage.CacheReadInputTokens,
	}
}

func (a *anthropicClient) Model() catwalk.Model {
	return a.providerOptions.model(a.providerOptions.modelType)
}



================================================
FILE: internal/llm/provider/azure.go
================================================
package provider

import (
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/openai/openai-go"
	"github.com/openai/openai-go/azure"
	"github.com/openai/openai-go/option"
)

type azureClient struct {
	*openaiClient
}

type AzureClient ProviderClient

func newAzureClient(opts providerClientOptions) AzureClient {
	apiVersion := opts.extraParams["apiVersion"]
	if apiVersion == "" {
		apiVersion = "2025-01-01-preview"
	}

	reqOpts := []option.RequestOption{
		azure.WithEndpoint(opts.baseURL, apiVersion),
	}

	if config.Get().Options.Debug {
		httpClient := log.NewHTTPClient()
		reqOpts = append(reqOpts, option.WithHTTPClient(httpClient))
	}

	reqOpts = append(reqOpts, azure.WithAPIKey(opts.apiKey))
	base := &openaiClient{
		providerOptions: opts,
		client:          openai.NewClient(reqOpts...),
	}

	return &azureClient{openaiClient: base}
}



================================================
FILE: internal/llm/provider/bedrock.go
================================================
package provider

import (
	"context"
	"errors"
	"fmt"
	"strings"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/message"
)

type bedrockClient struct {
	providerOptions providerClientOptions
	childProvider   ProviderClient
}

type BedrockClient ProviderClient

func newBedrockClient(opts providerClientOptions) BedrockClient {
	// Get AWS region from environment
	region := opts.extraParams["region"]
	if region == "" {
		region = "us-east-1" // default region
	}
	if len(region) < 2 {
		return &bedrockClient{
			providerOptions: opts,
			childProvider:   nil, // Will cause an error when used
		}
	}

	opts.model = func(modelType config.SelectedModelType) catwalk.Model {
		model := config.Get().GetModelByType(modelType)

		// Prefix the model name with region
		regionPrefix := region[:2]
		modelName := model.ID
		model.ID = fmt.Sprintf("%s.%s", regionPrefix, modelName)
		return *model
	}

	model := opts.model(opts.modelType)

	// Determine which provider to use based on the model
	if strings.Contains(string(model.ID), "anthropic") {
		// Create Anthropic client with Bedrock configuration
		anthropicOpts := opts
		// TODO: later find a way to check if the AWS account has caching enabled
		opts.disableCache = true // Disable cache for Bedrock
		return &bedrockClient{
			providerOptions: opts,
			childProvider:   newAnthropicClient(anthropicOpts, AnthropicClientTypeBedrock),
		}
	}

	// Return client with nil childProvider if model is not supported
	// This will cause an error when used
	return &bedrockClient{
		providerOptions: opts,
		childProvider:   nil,
	}
}

func (b *bedrockClient) send(ctx context.Context, messages []message.Message, tools []tools.BaseTool) (*ProviderResponse, error) {
	if b.childProvider == nil {
		return nil, errors.New("unsupported model for bedrock provider")
	}
	return b.childProvider.send(ctx, messages, tools)
}

func (b *bedrockClient) stream(ctx context.Context, messages []message.Message, tools []tools.BaseTool) <-chan ProviderEvent {
	eventChan := make(chan ProviderEvent)

	if b.childProvider == nil {
		go func() {
			eventChan <- ProviderEvent{
				Type:  EventError,
				Error: errors.New("unsupported model for bedrock provider"),
			}
			close(eventChan)
		}()
		return eventChan
	}

	return b.childProvider.stream(ctx, messages, tools)
}

func (b *bedrockClient) Model() catwalk.Model {
	return b.providerOptions.model(b.providerOptions.modelType)
}



================================================
FILE: internal/llm/provider/gemini.go
================================================
package provider

import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"io"
	"log/slog"
	"strings"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/google/uuid"
	"google.golang.org/genai"
)

type geminiClient struct {
	providerOptions providerClientOptions
	client          *genai.Client
}

type GeminiClient ProviderClient

func newGeminiClient(opts providerClientOptions) GeminiClient {
	client, err := createGeminiClient(opts)
	if err != nil {
		slog.Error("Failed to create Gemini client", "error", err)
		return nil
	}

	return &geminiClient{
		providerOptions: opts,
		client:          client,
	}
}

func createGeminiClient(opts providerClientOptions) (*genai.Client, error) {
	cc := &genai.ClientConfig{
		APIKey:  opts.apiKey,
		Backend: genai.BackendGeminiAPI,
	}
	if config.Get().Options.Debug {
		cc.HTTPClient = log.NewHTTPClient()
	}
	client, err := genai.NewClient(context.Background(), cc)
	if err != nil {
		return nil, err
	}
	return client, nil
}

func (g *geminiClient) convertMessages(messages []message.Message) []*genai.Content {
	var history []*genai.Content
	for _, msg := range messages {
		switch msg.Role {
		case message.User:
			var parts []*genai.Part
			parts = append(parts, &genai.Part{Text: msg.Content().String()})
			for _, binaryContent := range msg.BinaryContent() {
				imageFormat := strings.Split(binaryContent.MIMEType, "/")
				parts = append(parts, &genai.Part{InlineData: &genai.Blob{
					MIMEType: imageFormat[1],
					Data:     binaryContent.Data,
				}})
			}
			history = append(history, &genai.Content{
				Parts: parts,
				Role:  genai.RoleUser,
			})
		case message.Assistant:
			var assistantParts []*genai.Part

			if msg.Content().String() != "" {
				assistantParts = append(assistantParts, &genai.Part{Text: msg.Content().String()})
			}

			if len(msg.ToolCalls()) > 0 {
				for _, call := range msg.ToolCalls() {
					args, _ := parseJSONToMap(call.Input)
					assistantParts = append(assistantParts, &genai.Part{
						FunctionCall: &genai.FunctionCall{
							Name: call.Name,
							Args: args,
						},
					})
				}
			}

			if len(assistantParts) > 0 {
				history = append(history, &genai.Content{
					Role:  genai.RoleModel,
					Parts: assistantParts,
				})
			}

		case message.Tool:
			for _, result := range msg.ToolResults() {
				response := map[string]any{"result": result.Content}
				parsed, err := parseJSONToMap(result.Content)
				if err == nil {
					response = parsed
				}

				var toolCall message.ToolCall
				for _, m := range messages {
					if m.Role == message.Assistant {
						for _, call := range m.ToolCalls() {
							if call.ID == result.ToolCallID {
								toolCall = call
								break
							}
						}
					}
				}

				history = append(history, &genai.Content{
					Parts: []*genai.Part{
						{
							FunctionResponse: &genai.FunctionResponse{
								Name:     toolCall.Name,
								Response: response,
							},
						},
					},
					Role: genai.RoleModel,
				})
			}
		}
	}

	return history
}

func (g *geminiClient) convertTools(tools []tools.BaseTool) []*genai.Tool {
	geminiTool := &genai.Tool{}
	geminiTool.FunctionDeclarations = make([]*genai.FunctionDeclaration, 0, len(tools))

	for _, tool := range tools {
		info := tool.Info()
		declaration := &genai.FunctionDeclaration{
			Name:        info.Name,
			Description: info.Description,
			Parameters: &genai.Schema{
				Type:       genai.TypeObject,
				Properties: convertSchemaProperties(info.Parameters),
				Required:   info.Required,
			},
		}

		geminiTool.FunctionDeclarations = append(geminiTool.FunctionDeclarations, declaration)
	}

	return []*genai.Tool{geminiTool}
}

func (g *geminiClient) finishReason(reason genai.FinishReason) message.FinishReason {
	switch reason {
	case genai.FinishReasonStop:
		return message.FinishReasonEndTurn
	case genai.FinishReasonMaxTokens:
		return message.FinishReasonMaxTokens
	default:
		return message.FinishReasonUnknown
	}
}

func (g *geminiClient) send(ctx context.Context, messages []message.Message, tools []tools.BaseTool) (*ProviderResponse, error) {
	// Convert messages
	geminiMessages := g.convertMessages(messages)
	model := g.providerOptions.model(g.providerOptions.modelType)
	cfg := config.Get()

	modelConfig := cfg.Models[config.SelectedModelTypeLarge]
	if g.providerOptions.modelType == config.SelectedModelTypeSmall {
		modelConfig = cfg.Models[config.SelectedModelTypeSmall]
	}

	maxTokens := model.DefaultMaxTokens
	if modelConfig.MaxTokens > 0 {
		maxTokens = modelConfig.MaxTokens
	}
	systemMessage := g.providerOptions.systemMessage
	if g.providerOptions.systemPromptPrefix != "" {
		systemMessage = g.providerOptions.systemPromptPrefix + "\n" + systemMessage
	}
	history := geminiMessages[:len(geminiMessages)-1] // All but last message
	lastMsg := geminiMessages[len(geminiMessages)-1]
	config := &genai.GenerateContentConfig{
		MaxOutputTokens: int32(maxTokens),
		SystemInstruction: &genai.Content{
			Parts: []*genai.Part{{Text: systemMessage}},
		},
	}
	config.Tools = g.convertTools(tools)
	chat, _ := g.client.Chats.Create(ctx, model.ID, config, history)

	attempts := 0
	for {
		attempts++
		var toolCalls []message.ToolCall

		var lastMsgParts []genai.Part
		for _, part := range lastMsg.Parts {
			lastMsgParts = append(lastMsgParts, *part)
		}
		resp, err := chat.SendMessage(ctx, lastMsgParts...)
		// If there is an error we are going to see if we can retry the call
		if err != nil {
			retry, after, retryErr := g.shouldRetry(attempts, err)
			if retryErr != nil {
				return nil, retryErr
			}
			if retry {
				slog.Warn("Retrying due to rate limit", "attempt", attempts, "max_retries", maxRetries, "error", err)
				select {
				case <-ctx.Done():
					return nil, ctx.Err()
				case <-time.After(time.Duration(after) * time.Millisecond):
					continue
				}
			}
			return nil, retryErr
		}

		content := ""

		if len(resp.Candidates) > 0 && resp.Candidates[0].Content != nil {
			for _, part := range resp.Candidates[0].Content.Parts {
				switch {
				case part.Text != "":
					content = string(part.Text)
				case part.FunctionCall != nil:
					id := "call_" + uuid.New().String()
					args, _ := json.Marshal(part.FunctionCall.Args)
					toolCalls = append(toolCalls, message.ToolCall{
						ID:       id,
						Name:     part.FunctionCall.Name,
						Input:    string(args),
						Type:     "function",
						Finished: true,
					})
				}
			}
		}
		finishReason := message.FinishReasonEndTurn
		if len(resp.Candidates) > 0 {
			finishReason = g.finishReason(resp.Candidates[0].FinishReason)
		}
		if len(toolCalls) > 0 {
			finishReason = message.FinishReasonToolUse
		}

		return &ProviderResponse{
			Content:      content,
			ToolCalls:    toolCalls,
			Usage:        g.usage(resp),
			FinishReason: finishReason,
		}, nil
	}
}

func (g *geminiClient) stream(ctx context.Context, messages []message.Message, tools []tools.BaseTool) <-chan ProviderEvent {
	// Convert messages
	geminiMessages := g.convertMessages(messages)

	model := g.providerOptions.model(g.providerOptions.modelType)
	cfg := config.Get()

	modelConfig := cfg.Models[config.SelectedModelTypeLarge]
	if g.providerOptions.modelType == config.SelectedModelTypeSmall {
		modelConfig = cfg.Models[config.SelectedModelTypeSmall]
	}
	maxTokens := model.DefaultMaxTokens
	if modelConfig.MaxTokens > 0 {
		maxTokens = modelConfig.MaxTokens
	}

	// Override max tokens if set in provider options
	if g.providerOptions.maxTokens > 0 {
		maxTokens = g.providerOptions.maxTokens
	}
	systemMessage := g.providerOptions.systemMessage
	if g.providerOptions.systemPromptPrefix != "" {
		systemMessage = g.providerOptions.systemPromptPrefix + "\n" + systemMessage
	}
	history := geminiMessages[:len(geminiMessages)-1] // All but last message
	lastMsg := geminiMessages[len(geminiMessages)-1]
	config := &genai.GenerateContentConfig{
		MaxOutputTokens: int32(maxTokens),
		SystemInstruction: &genai.Content{
			Parts: []*genai.Part{{Text: systemMessage}},
		},
	}
	config.Tools = g.convertTools(tools)
	chat, _ := g.client.Chats.Create(ctx, model.ID, config, history)

	attempts := 0
	eventChan := make(chan ProviderEvent)

	go func() {
		defer close(eventChan)

		for {
			attempts++

			currentContent := ""
			toolCalls := []message.ToolCall{}
			var finalResp *genai.GenerateContentResponse

			eventChan <- ProviderEvent{Type: EventContentStart}

			var lastMsgParts []genai.Part

			for _, part := range lastMsg.Parts {
				lastMsgParts = append(lastMsgParts, *part)
			}
			for resp, err := range chat.SendMessageStream(ctx, lastMsgParts...) {
				if err != nil {
					retry, after, retryErr := g.shouldRetry(attempts, err)
					if retryErr != nil {
						eventChan <- ProviderEvent{Type: EventError, Error: retryErr}
						return
					}
					if retry {
						slog.Warn("Retrying due to rate limit", "attempt", attempts, "max_retries", maxRetries, "error", err)
						select {
						case <-ctx.Done():
							if ctx.Err() != nil {
								eventChan <- ProviderEvent{Type: EventError, Error: ctx.Err()}
							}

							return
						case <-time.After(time.Duration(after) * time.Millisecond):
							continue
						}
					} else {
						eventChan <- ProviderEvent{Type: EventError, Error: err}
						return
					}
				}

				finalResp = resp

				if len(resp.Candidates) > 0 && resp.Candidates[0].Content != nil {
					for _, part := range resp.Candidates[0].Content.Parts {
						switch {
						case part.Text != "":
							delta := string(part.Text)
							if delta != "" {
								eventChan <- ProviderEvent{
									Type:    EventContentDelta,
									Content: delta,
								}
								currentContent += delta
							}
						case part.FunctionCall != nil:
							id := "call_" + uuid.New().String()
							args, _ := json.Marshal(part.FunctionCall.Args)
							newCall := message.ToolCall{
								ID:       id,
								Name:     part.FunctionCall.Name,
								Input:    string(args),
								Type:     "function",
								Finished: true,
							}

							isNew := true
							for _, existing := range toolCalls {
								if existing.Name == newCall.Name && existing.Input == newCall.Input {
									isNew = false
									break
								}
							}

							if isNew {
								toolCalls = append(toolCalls, newCall)
							}
						}
					}
				}
			}

			eventChan <- ProviderEvent{Type: EventContentStop}

			if finalResp != nil {
				finishReason := message.FinishReasonEndTurn
				if len(finalResp.Candidates) > 0 {
					finishReason = g.finishReason(finalResp.Candidates[0].FinishReason)
				}
				if len(toolCalls) > 0 {
					finishReason = message.FinishReasonToolUse
				}
				eventChan <- ProviderEvent{
					Type: EventComplete,
					Response: &ProviderResponse{
						Content:      currentContent,
						ToolCalls:    toolCalls,
						Usage:        g.usage(finalResp),
						FinishReason: finishReason,
					},
				}
				return
			}
		}
	}()

	return eventChan
}

func (g *geminiClient) shouldRetry(attempts int, err error) (bool, int64, error) {
	// Check if error is a rate limit error
	if attempts > maxRetries {
		return false, 0, fmt.Errorf("maximum retry attempts reached for rate limit: %d retries", maxRetries)
	}

	// Gemini doesn't have a standard error type we can check against
	// So we'll check the error message for rate limit indicators
	if errors.Is(err, io.EOF) {
		return false, 0, err
	}

	errMsg := err.Error()
	isRateLimit := contains(errMsg, "rate limit", "quota exceeded", "too many requests")

	// Check for token expiration (401 Unauthorized)
	if contains(errMsg, "unauthorized", "invalid api key", "api key expired") {
		g.providerOptions.apiKey, err = config.Get().Resolve(g.providerOptions.config.APIKey)
		if err != nil {
			return false, 0, fmt.Errorf("failed to resolve API key: %w", err)
		}
		g.client, err = createGeminiClient(g.providerOptions)
		if err != nil {
			return false, 0, fmt.Errorf("failed to create Gemini client after API key refresh: %w", err)
		}
		return true, 0, nil
	}

	// Check for common rate limit error messages

	if !isRateLimit {
		return false, 0, err
	}

	// Calculate backoff with jitter
	backoffMs := 2000 * (1 << (attempts - 1))
	jitterMs := int(float64(backoffMs) * 0.2)
	retryMs := backoffMs + jitterMs

	return true, int64(retryMs), nil
}

func (g *geminiClient) usage(resp *genai.GenerateContentResponse) TokenUsage {
	if resp == nil || resp.UsageMetadata == nil {
		return TokenUsage{}
	}

	return TokenUsage{
		InputTokens:         int64(resp.UsageMetadata.PromptTokenCount),
		OutputTokens:        int64(resp.UsageMetadata.CandidatesTokenCount),
		CacheCreationTokens: 0, // Not directly provided by Gemini
		CacheReadTokens:     int64(resp.UsageMetadata.CachedContentTokenCount),
	}
}

func (g *geminiClient) Model() catwalk.Model {
	return g.providerOptions.model(g.providerOptions.modelType)
}

// Helper functions
func parseJSONToMap(jsonStr string) (map[string]any, error) {
	var result map[string]any
	err := json.Unmarshal([]byte(jsonStr), &result)
	return result, err
}

func convertSchemaProperties(parameters map[string]any) map[string]*genai.Schema {
	properties := make(map[string]*genai.Schema)

	for name, param := range parameters {
		properties[name] = convertToSchema(param)
	}

	return properties
}

func convertToSchema(param any) *genai.Schema {
	schema := &genai.Schema{Type: genai.TypeString}

	paramMap, ok := param.(map[string]any)
	if !ok {
		return schema
	}

	if desc, ok := paramMap["description"].(string); ok {
		schema.Description = desc
	}

	typeVal, hasType := paramMap["type"]
	if !hasType {
		return schema
	}

	typeStr, ok := typeVal.(string)
	if !ok {
		return schema
	}

	schema.Type = mapJSONTypeToGenAI(typeStr)

	switch typeStr {
	case "array":
		schema.Items = processArrayItems(paramMap)
	case "object":
		if props, ok := paramMap["properties"].(map[string]any); ok {
			schema.Properties = convertSchemaProperties(props)
		}
	}

	return schema
}

func processArrayItems(paramMap map[string]any) *genai.Schema {
	items, ok := paramMap["items"].(map[string]any)
	if !ok {
		return nil
	}

	return convertToSchema(items)
}

func mapJSONTypeToGenAI(jsonType string) genai.Type {
	switch jsonType {
	case "string":
		return genai.TypeString
	case "number":
		return genai.TypeNumber
	case "integer":
		return genai.TypeInteger
	case "boolean":
		return genai.TypeBoolean
	case "array":
		return genai.TypeArray
	case "object":
		return genai.TypeObject
	default:
		return genai.TypeString // Default to string for unknown types
	}
}

func contains(s string, substrs ...string) bool {
	for _, substr := range substrs {
		if strings.Contains(strings.ToLower(s), strings.ToLower(substr)) {
			return true
		}
	}
	return false
}



================================================
FILE: internal/llm/provider/openai.go
================================================
package provider

import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"io"
	"log/slog"
	"slices"
	"strings"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/google/uuid"
	"github.com/openai/openai-go"
	"github.com/openai/openai-go/option"
	"github.com/openai/openai-go/packages/param"
	"github.com/openai/openai-go/shared"
)

type openaiClient struct {
	providerOptions providerClientOptions
	client          openai.Client
}

type OpenAIClient ProviderClient

func newOpenAIClient(opts providerClientOptions) OpenAIClient {
	return &openaiClient{
		providerOptions: opts,
		client:          createOpenAIClient(opts),
	}
}

func createOpenAIClient(opts providerClientOptions) openai.Client {
	openaiClientOptions := []option.RequestOption{}
	if opts.apiKey != "" {
		openaiClientOptions = append(openaiClientOptions, option.WithAPIKey(opts.apiKey))
	}
	if opts.baseURL != "" {
		resolvedBaseURL, err := config.Get().Resolve(opts.baseURL)
		if err == nil {
			openaiClientOptions = append(openaiClientOptions, option.WithBaseURL(resolvedBaseURL))
		}
	}

	if config.Get().Options.Debug {
		httpClient := log.NewHTTPClient()
		openaiClientOptions = append(openaiClientOptions, option.WithHTTPClient(httpClient))
	}

	for key, value := range opts.extraHeaders {
		openaiClientOptions = append(openaiClientOptions, option.WithHeader(key, value))
	}

	for extraKey, extraValue := range opts.extraBody {
		openaiClientOptions = append(openaiClientOptions, option.WithJSONSet(extraKey, extraValue))
	}

	return openai.NewClient(openaiClientOptions...)
}

func (o *openaiClient) convertMessages(messages []message.Message) (openaiMessages []openai.ChatCompletionMessageParamUnion) {
	isAnthropicModel := o.providerOptions.config.ID == string(catwalk.InferenceProviderOpenRouter) && strings.HasPrefix(o.Model().ID, "anthropic/")
	// Add system message first
	systemMessage := o.providerOptions.systemMessage
	if o.providerOptions.systemPromptPrefix != "" {
		systemMessage = o.providerOptions.systemPromptPrefix + "\n" + systemMessage
	}

	system := openai.SystemMessage(systemMessage)
	if isAnthropicModel && !o.providerOptions.disableCache {
		systemTextBlock := openai.ChatCompletionContentPartTextParam{Text: systemMessage}
		systemTextBlock.SetExtraFields(
			map[string]any{
				"cache_control": map[string]string{
					"type": "ephemeral",
				},
			},
		)
		var content []openai.ChatCompletionContentPartTextParam
		content = append(content, systemTextBlock)
		system = openai.SystemMessage(content)
	}
	openaiMessages = append(openaiMessages, system)

	for i, msg := range messages {
		cache := false
		if i > len(messages)-3 {
			cache = true
		}
		switch msg.Role {
		case message.User:
			var content []openai.ChatCompletionContentPartUnionParam

			textBlock := openai.ChatCompletionContentPartTextParam{Text: msg.Content().String()}
			content = append(content, openai.ChatCompletionContentPartUnionParam{OfText: &textBlock})
			hasBinaryContent := false
			for _, binaryContent := range msg.BinaryContent() {
				hasBinaryContent = true
				imageURL := openai.ChatCompletionContentPartImageImageURLParam{URL: binaryContent.String(catwalk.InferenceProviderOpenAI)}
				imageBlock := openai.ChatCompletionContentPartImageParam{ImageURL: imageURL}

				content = append(content, openai.ChatCompletionContentPartUnionParam{OfImageURL: &imageBlock})
			}
			if cache && !o.providerOptions.disableCache && isAnthropicModel {
				textBlock.SetExtraFields(map[string]any{
					"cache_control": map[string]string{
						"type": "ephemeral",
					},
				})
			}
			if hasBinaryContent || (isAnthropicModel && !o.providerOptions.disableCache) {
				openaiMessages = append(openaiMessages, openai.UserMessage(content))
			} else {
				openaiMessages = append(openaiMessages, openai.UserMessage(msg.Content().String()))
			}

		case message.Assistant:
			assistantMsg := openai.ChatCompletionAssistantMessageParam{
				Role: "assistant",
			}

			hasContent := false
			if msg.Content().String() != "" {
				hasContent = true
				textBlock := openai.ChatCompletionContentPartTextParam{Text: msg.Content().String()}
				if cache && !o.providerOptions.disableCache && isAnthropicModel {
					textBlock.SetExtraFields(map[string]any{
						"cache_control": map[string]string{
							"type": "ephemeral",
						},
					})
				}
				assistantMsg.Content = openai.ChatCompletionAssistantMessageParamContentUnion{
					OfArrayOfContentParts: []openai.ChatCompletionAssistantMessageParamContentArrayOfContentPartUnion{
						{
							OfText: &textBlock,
						},
					},
				}
				if !isAnthropicModel {
					assistantMsg.Content = openai.ChatCompletionAssistantMessageParamContentUnion{
						OfString: param.NewOpt(msg.Content().String()),
					}
				}
			}

			if len(msg.ToolCalls()) > 0 {
				hasContent = true
				assistantMsg.ToolCalls = make([]openai.ChatCompletionMessageToolCallParam, len(msg.ToolCalls()))
				for i, call := range msg.ToolCalls() {
					assistantMsg.ToolCalls[i] = openai.ChatCompletionMessageToolCallParam{
						ID:   call.ID,
						Type: "function",
						Function: openai.ChatCompletionMessageToolCallFunctionParam{
							Name:      call.Name,
							Arguments: call.Input,
						},
					}
				}
			}
			if !hasContent {
				continue
			}

			openaiMessages = append(openaiMessages, openai.ChatCompletionMessageParamUnion{
				OfAssistant: &assistantMsg,
			})

		case message.Tool:
			for _, result := range msg.ToolResults() {
				openaiMessages = append(openaiMessages,
					openai.ToolMessage(result.Content, result.ToolCallID),
				)
			}
		}
	}

	return
}

func (o *openaiClient) convertTools(tools []tools.BaseTool) []openai.ChatCompletionToolParam {
	openaiTools := make([]openai.ChatCompletionToolParam, len(tools))

	for i, tool := range tools {
		info := tool.Info()
		openaiTools[i] = openai.ChatCompletionToolParam{
			Function: openai.FunctionDefinitionParam{
				Name:        info.Name,
				Description: openai.String(info.Description),
				Parameters: openai.FunctionParameters{
					"type":       "object",
					"properties": info.Parameters,
					"required":   info.Required,
				},
			},
		}
	}

	return openaiTools
}

func (o *openaiClient) finishReason(reason string) message.FinishReason {
	switch reason {
	case "stop":
		return message.FinishReasonEndTurn
	case "length":
		return message.FinishReasonMaxTokens
	case "tool_calls":
		return message.FinishReasonToolUse
	default:
		return message.FinishReasonUnknown
	}
}

func (o *openaiClient) preparedParams(messages []openai.ChatCompletionMessageParamUnion, tools []openai.ChatCompletionToolParam) openai.ChatCompletionNewParams {
	model := o.providerOptions.model(o.providerOptions.modelType)
	cfg := config.Get()

	modelConfig := cfg.Models[config.SelectedModelTypeLarge]
	if o.providerOptions.modelType == config.SelectedModelTypeSmall {
		modelConfig = cfg.Models[config.SelectedModelTypeSmall]
	}

	reasoningEffort := modelConfig.ReasoningEffort

	params := openai.ChatCompletionNewParams{
		Model:    openai.ChatModel(model.ID),
		Messages: messages,
		Tools:    tools,
	}

	maxTokens := model.DefaultMaxTokens
	if modelConfig.MaxTokens > 0 {
		maxTokens = modelConfig.MaxTokens
	}

	// Override max tokens if set in provider options
	if o.providerOptions.maxTokens > 0 {
		maxTokens = o.providerOptions.maxTokens
	}
	if model.CanReason {
		params.MaxCompletionTokens = openai.Int(maxTokens)
		switch reasoningEffort {
		case "low":
			params.ReasoningEffort = shared.ReasoningEffortLow
		case "medium":
			params.ReasoningEffort = shared.ReasoningEffortMedium
		case "high":
			params.ReasoningEffort = shared.ReasoningEffortHigh
		case "minimal":
			params.ReasoningEffort = shared.ReasoningEffort("minimal")
		default:
			params.ReasoningEffort = shared.ReasoningEffort(reasoningEffort)
		}
	} else {
		params.MaxTokens = openai.Int(maxTokens)
	}

	return params
}

func (o *openaiClient) send(ctx context.Context, messages []message.Message, tools []tools.BaseTool) (response *ProviderResponse, err error) {
	params := o.preparedParams(o.convertMessages(messages), o.convertTools(tools))
	attempts := 0
	for {
		attempts++
		openaiResponse, err := o.client.Chat.Completions.New(
			ctx,
			params,
		)
		// If there is an error we are going to see if we can retry the call
		if err != nil {
			retry, after, retryErr := o.shouldRetry(attempts, err)
			if retryErr != nil {
				return nil, retryErr
			}
			if retry {
				slog.Warn("Retrying due to rate limit", "attempt", attempts, "max_retries", maxRetries, "error", err)
				select {
				case <-ctx.Done():
					return nil, ctx.Err()
				case <-time.After(time.Duration(after) * time.Millisecond):
					continue
				}
			}
			return nil, retryErr
		}

		if len(openaiResponse.Choices) == 0 {
			return nil, fmt.Errorf("received empty response from OpenAI API - check endpoint configuration")
		}

		content := ""
		if openaiResponse.Choices[0].Message.Content != "" {
			content = openaiResponse.Choices[0].Message.Content
		}

		toolCalls := o.toolCalls(*openaiResponse)
		finishReason := o.finishReason(string(openaiResponse.Choices[0].FinishReason))

		if len(toolCalls) > 0 {
			finishReason = message.FinishReasonToolUse
		}

		return &ProviderResponse{
			Content:      content,
			ToolCalls:    toolCalls,
			Usage:        o.usage(*openaiResponse),
			FinishReason: finishReason,
		}, nil
	}
}

func (o *openaiClient) stream(ctx context.Context, messages []message.Message, tools []tools.BaseTool) <-chan ProviderEvent {
	params := o.preparedParams(o.convertMessages(messages), o.convertTools(tools))
	params.StreamOptions = openai.ChatCompletionStreamOptionsParam{
		IncludeUsage: openai.Bool(true),
	}

	attempts := 0
	eventChan := make(chan ProviderEvent)

	go func() {
		for {
			attempts++
			// Kujtim: fixes an issue with anthropig models on openrouter
			if len(params.Tools) == 0 {
				params.Tools = nil
			}
			openaiStream := o.client.Chat.Completions.NewStreaming(
				ctx,
				params,
			)

			acc := openai.ChatCompletionAccumulator{}
			currentContent := ""
			toolCalls := make([]message.ToolCall, 0)
			var msgToolCalls []openai.ChatCompletionMessageToolCall
			for openaiStream.Next() {
				chunk := openaiStream.Current()
				// Kujtim: this is an issue with openrouter qwen, its sending -1 for the tool index
				if len(chunk.Choices) > 0 && len(chunk.Choices[0].Delta.ToolCalls) > 0 && chunk.Choices[0].Delta.ToolCalls[0].Index == -1 {
					chunk.Choices[0].Delta.ToolCalls[0].Index = 0
				}
				acc.AddChunk(chunk)
				for i, choice := range chunk.Choices {
					reasoning, ok := choice.Delta.JSON.ExtraFields["reasoning"]
					if ok && reasoning.Raw() != "" {
						reasoningStr := ""
						json.Unmarshal([]byte(reasoning.Raw()), &reasoningStr)
						if reasoningStr != "" {
							eventChan <- ProviderEvent{
								Type:     EventThinkingDelta,
								Thinking: reasoningStr,
							}
						}
					}
					if choice.Delta.Content != "" {
						eventChan <- ProviderEvent{
							Type:    EventContentDelta,
							Content: choice.Delta.Content,
						}
						currentContent += choice.Delta.Content
					} else if len(choice.Delta.ToolCalls) > 0 {
						toolCall := choice.Delta.ToolCalls[0]
						newToolCall := false
						if len(msgToolCalls)-1 >= int(toolCall.Index) { // tool call exists
							existingToolCall := msgToolCalls[toolCall.Index]
							if toolCall.ID != "" && toolCall.ID != existingToolCall.ID {
								found := false
								// try to find the tool based on the ID
								for i, tool := range msgToolCalls {
									if tool.ID == toolCall.ID {
										msgToolCalls[i].Function.Arguments += toolCall.Function.Arguments
										found = true
									}
								}
								if !found {
									newToolCall = true
								}
							} else {
								msgToolCalls[toolCall.Index].Function.Arguments += toolCall.Function.Arguments
							}
						} else {
							newToolCall = true
						}
						if newToolCall { // new tool call
							if toolCall.ID == "" {
								toolCall.ID = uuid.NewString()
							}
							eventChan <- ProviderEvent{
								Type: EventToolUseStart,
								ToolCall: &message.ToolCall{
									ID:       toolCall.ID,
									Name:     toolCall.Function.Name,
									Finished: false,
								},
							}
							msgToolCalls = append(msgToolCalls, openai.ChatCompletionMessageToolCall{
								ID:   toolCall.ID,
								Type: "function",
								Function: openai.ChatCompletionMessageToolCallFunction{
									Name:      toolCall.Function.Name,
									Arguments: toolCall.Function.Arguments,
								},
							})
						}
					}
					acc.Choices[i].Message.ToolCalls = slices.Clone(msgToolCalls)
				}
			}

			err := openaiStream.Err()
			if err == nil || errors.Is(err, io.EOF) {
				if len(acc.Choices) == 0 {
					eventChan <- ProviderEvent{
						Type:  EventError,
						Error: fmt.Errorf("received empty streaming response from OpenAI API - check endpoint configuration"),
					}
					return
				}

				resultFinishReason := acc.Choices[0].FinishReason
				if resultFinishReason == "" {
					// If the finish reason is empty, we assume it was a successful completion
					// INFO: this is happening for openrouter for some reason
					resultFinishReason = "stop"
				}
				// Stream completed successfully
				finishReason := o.finishReason(resultFinishReason)
				if len(acc.Choices[0].Message.ToolCalls) > 0 {
					toolCalls = append(toolCalls, o.toolCalls(acc.ChatCompletion)...)
				}
				if len(toolCalls) > 0 {
					finishReason = message.FinishReasonToolUse
				}

				eventChan <- ProviderEvent{
					Type: EventComplete,
					Response: &ProviderResponse{
						Content:      currentContent,
						ToolCalls:    toolCalls,
						Usage:        o.usage(acc.ChatCompletion),
						FinishReason: finishReason,
					},
				}
				close(eventChan)
				return
			}

			// If there is an error we are going to see if we can retry the call
			retry, after, retryErr := o.shouldRetry(attempts, err)
			if retryErr != nil {
				eventChan <- ProviderEvent{Type: EventError, Error: retryErr}
				close(eventChan)
				return
			}
			if retry {
				slog.Warn("Retrying due to rate limit", "attempt", attempts, "max_retries", maxRetries, "error", err)
				select {
				case <-ctx.Done():
					// context cancelled
					if ctx.Err() == nil {
						eventChan <- ProviderEvent{Type: EventError, Error: ctx.Err()}
					}
					close(eventChan)
					return
				case <-time.After(time.Duration(after) * time.Millisecond):
					continue
				}
			}
			eventChan <- ProviderEvent{Type: EventError, Error: retryErr}
			close(eventChan)
			return
		}
	}()

	return eventChan
}

func (o *openaiClient) shouldRetry(attempts int, err error) (bool, int64, error) {
	if attempts > maxRetries {
		return false, 0, fmt.Errorf("maximum retry attempts reached for rate limit: %d retries", maxRetries)
	}
	if errors.Is(err, context.Canceled) || errors.Is(err, context.DeadlineExceeded) {
		return false, 0, err
	}
	var apiErr *openai.Error
	retryMs := 0
	retryAfterValues := []string{}
	if errors.As(err, &apiErr) {
		// Check for token expiration (401 Unauthorized)
		if apiErr.StatusCode == 401 {
			o.providerOptions.apiKey, err = config.Get().Resolve(o.providerOptions.config.APIKey)
			if err != nil {
				return false, 0, fmt.Errorf("failed to resolve API key: %w", err)
			}
			o.client = createOpenAIClient(o.providerOptions)
			return true, 0, nil
		}

		if apiErr.StatusCode != 429 && apiErr.StatusCode != 500 {
			return false, 0, err
		}

		retryAfterValues = apiErr.Response.Header.Values("Retry-After")
	}

	if apiErr != nil {
		slog.Warn("OpenAI API error", "status_code", apiErr.StatusCode, "message", apiErr.Message, "type", apiErr.Type)
		if len(retryAfterValues) > 0 {
			slog.Warn("Retry-After header", "values", retryAfterValues)
		}
	} else {
		slog.Error("OpenAI API error", "error", err.Error(), "attempt", attempts, "max_retries", maxRetries)
	}

	backoffMs := 2000 * (1 << (attempts - 1))
	jitterMs := int(float64(backoffMs) * 0.2)
	retryMs = backoffMs + jitterMs
	if len(retryAfterValues) > 0 {
		if _, err := fmt.Sscanf(retryAfterValues[0], "%d", &retryMs); err == nil {
			retryMs = retryMs * 1000
		}
	}
	return true, int64(retryMs), nil
}

func (o *openaiClient) toolCalls(completion openai.ChatCompletion) []message.ToolCall {
	var toolCalls []message.ToolCall

	if len(completion.Choices) > 0 && len(completion.Choices[0].Message.ToolCalls) > 0 {
		for _, call := range completion.Choices[0].Message.ToolCalls {
			toolCall := message.ToolCall{
				ID:       call.ID,
				Name:     call.Function.Name,
				Input:    call.Function.Arguments,
				Type:     "function",
				Finished: true,
			}
			toolCalls = append(toolCalls, toolCall)
		}
	}

	return toolCalls
}

func (o *openaiClient) usage(completion openai.ChatCompletion) TokenUsage {
	cachedTokens := completion.Usage.PromptTokensDetails.CachedTokens
	inputTokens := completion.Usage.PromptTokens - cachedTokens

	return TokenUsage{
		InputTokens:         inputTokens,
		OutputTokens:        completion.Usage.CompletionTokens,
		CacheCreationTokens: 0, // OpenAI doesn't provide this directly
		CacheReadTokens:     cachedTokens,
	}
}

func (o *openaiClient) Model() catwalk.Model {
	return o.providerOptions.model(o.providerOptions.modelType)
}



================================================
FILE: internal/llm/provider/openai_test.go
================================================
package provider

import (
	"context"
	"encoding/json"
	"net/http"
	"net/http/httptest"
	"os"
	"testing"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/openai/openai-go"
	"github.com/openai/openai-go/option"
)

func TestMain(m *testing.M) {
	_, err := config.Init(".", "", true)
	if err != nil {
		panic("Failed to initialize config: " + err.Error())
	}

	os.Exit(m.Run())
}

func TestOpenAIClientStreamChoices(t *testing.T) {
	// Create a mock server that returns Server-Sent Events with empty choices
	// This simulates the 🤡 behavior when a server returns 200 instead of 404
	server := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		w.Header().Set("Content-Type", "text/event-stream")
		w.Header().Set("Cache-Control", "no-cache")
		w.Header().Set("Connection", "keep-alive")
		w.WriteHeader(http.StatusOK)

		emptyChoicesChunk := map[string]any{
			"id":      "chat-completion-test",
			"object":  "chat.completion.chunk",
			"created": time.Now().Unix(),
			"model":   "test-model",
			"choices": []any{}, // Empty choices array that causes panic
		}

		jsonData, _ := json.Marshal(emptyChoicesChunk)
		w.Write([]byte("data: " + string(jsonData) + "\n\n"))
		w.Write([]byte("data: [DONE]\n\n"))
	}))
	defer server.Close()

	// Create OpenAI client pointing to our mock server
	client := &openaiClient{
		providerOptions: providerClientOptions{
			modelType:     config.SelectedModelTypeLarge,
			apiKey:        "test-key",
			systemMessage: "test",
			model: func(config.SelectedModelType) catwalk.Model {
				return catwalk.Model{
					ID:   "test-model",
					Name: "test-model",
				}
			},
		},
		client: openai.NewClient(
			option.WithAPIKey("test-key"),
			option.WithBaseURL(server.URL),
		),
	}

	// Create test messages
	messages := []message.Message{
		{
			Role:  message.User,
			Parts: []message.ContentPart{message.TextContent{Text: "Hello"}},
		},
	}

	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()

	eventsChan := client.stream(ctx, messages, nil)

	// Collect events - this will panic without the bounds check
	for event := range eventsChan {
		t.Logf("Received event: %+v", event)
		if event.Type == EventError || event.Type == EventComplete {
			break
		}
	}
}



================================================
FILE: internal/llm/provider/provider.go
================================================
package provider

import (
	"context"
	"fmt"

	"github.com/charmbracelet/catwalk/pkg/catwalk"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/message"
)

type EventType string

const maxRetries = 8

const (
	EventContentStart   EventType = "content_start"
	EventToolUseStart   EventType = "tool_use_start"
	EventToolUseDelta   EventType = "tool_use_delta"
	EventToolUseStop    EventType = "tool_use_stop"
	EventContentDelta   EventType = "content_delta"
	EventThinkingDelta  EventType = "thinking_delta"
	EventSignatureDelta EventType = "signature_delta"
	EventContentStop    EventType = "content_stop"
	EventComplete       EventType = "complete"
	EventError          EventType = "error"
	EventWarning        EventType = "warning"
)

type TokenUsage struct {
	InputTokens         int64
	OutputTokens        int64
	CacheCreationTokens int64
	CacheReadTokens     int64
}

type ProviderResponse struct {
	Content      string
	ToolCalls    []message.ToolCall
	Usage        TokenUsage
	FinishReason message.FinishReason
}

type ProviderEvent struct {
	Type EventType

	Content   string
	Thinking  string
	Signature string
	Response  *ProviderResponse
	ToolCall  *message.ToolCall
	Error     error
}
type Provider interface {
	SendMessages(ctx context.Context, messages []message.Message, tools []tools.BaseTool) (*ProviderResponse, error)

	StreamResponse(ctx context.Context, messages []message.Message, tools []tools.BaseTool) <-chan ProviderEvent

	Model() catwalk.Model
}

type providerClientOptions struct {
	baseURL            string
	config             config.ProviderConfig
	apiKey             string
	modelType          config.SelectedModelType
	model              func(config.SelectedModelType) catwalk.Model
	disableCache       bool
	systemMessage      string
	systemPromptPrefix string
	maxTokens          int64
	extraHeaders       map[string]string
	extraBody          map[string]any
	extraParams        map[string]string
}

type ProviderClientOption func(*providerClientOptions)

type ProviderClient interface {
	send(ctx context.Context, messages []message.Message, tools []tools.BaseTool) (*ProviderResponse, error)
	stream(ctx context.Context, messages []message.Message, tools []tools.BaseTool) <-chan ProviderEvent

	Model() catwalk.Model
}

type baseProvider[C ProviderClient] struct {
	options providerClientOptions
	client  C
}

func (p *baseProvider[C]) cleanMessages(messages []message.Message) (cleaned []message.Message) {
	for _, msg := range messages {
		// The message has no content
		if len(msg.Parts) == 0 {
			continue
		}
		cleaned = append(cleaned, msg)
	}
	return
}

func (p *baseProvider[C]) SendMessages(ctx context.Context, messages []message.Message, tools []tools.BaseTool) (*ProviderResponse, error) {
	messages = p.cleanMessages(messages)
	return p.client.send(ctx, messages, tools)
}

func (p *baseProvider[C]) StreamResponse(ctx context.Context, messages []message.Message, tools []tools.BaseTool) <-chan ProviderEvent {
	messages = p.cleanMessages(messages)
	return p.client.stream(ctx, messages, tools)
}

func (p *baseProvider[C]) Model() catwalk.Model {
	return p.client.Model()
}

func WithModel(model config.SelectedModelType) ProviderClientOption {
	return func(options *providerClientOptions) {
		options.modelType = model
	}
}

func WithDisableCache(disableCache bool) ProviderClientOption {
	return func(options *providerClientOptions) {
		options.disableCache = disableCache
	}
}

func WithSystemMessage(systemMessage string) ProviderClientOption {
	return func(options *providerClientOptions) {
		options.systemMessage = systemMessage
	}
}

func WithMaxTokens(maxTokens int64) ProviderClientOption {
	return func(options *providerClientOptions) {
		options.maxTokens = maxTokens
	}
}

func NewProvider(cfg config.ProviderConfig, opts ...ProviderClientOption) (Provider, error) {
	restore := config.PushPopCrushEnv()
	defer restore()
	resolvedAPIKey, err := config.Get().Resolve(cfg.APIKey)
	if err != nil {
		return nil, fmt.Errorf("failed to resolve API key for provider %s: %w", cfg.ID, err)
	}

	// Resolve extra headers
	resolvedExtraHeaders := make(map[string]string)
	for key, value := range cfg.ExtraHeaders {
		resolvedValue, err := config.Get().Resolve(value)
		if err != nil {
			return nil, fmt.Errorf("failed to resolve extra header %s for provider %s: %w", key, cfg.ID, err)
		}
		resolvedExtraHeaders[key] = resolvedValue
	}

	clientOptions := providerClientOptions{
		baseURL:            cfg.BaseURL,
		config:             cfg,
		apiKey:             resolvedAPIKey,
		extraHeaders:       resolvedExtraHeaders,
		extraBody:          cfg.ExtraBody,
		extraParams:        cfg.ExtraParams,
		systemPromptPrefix: cfg.SystemPromptPrefix,
		model: func(tp config.SelectedModelType) catwalk.Model {
			return *config.Get().GetModelByType(tp)
		},
	}
	for _, o := range opts {
		o(&clientOptions)
	}
	switch cfg.Type {
	case catwalk.TypeAnthropic:
		return &baseProvider[AnthropicClient]{
			options: clientOptions,
			client:  newAnthropicClient(clientOptions, AnthropicClientTypeNormal),
		}, nil
	case catwalk.TypeOpenAI:
		return &baseProvider[OpenAIClient]{
			options: clientOptions,
			client:  newOpenAIClient(clientOptions),
		}, nil
	case catwalk.TypeGemini:
		return &baseProvider[GeminiClient]{
			options: clientOptions,
			client:  newGeminiClient(clientOptions),
		}, nil
	case catwalk.TypeBedrock:
		return &baseProvider[BedrockClient]{
			options: clientOptions,
			client:  newBedrockClient(clientOptions),
		}, nil
	case catwalk.TypeAzure:
		return &baseProvider[AzureClient]{
			options: clientOptions,
			client:  newAzureClient(clientOptions),
		}, nil
	case catwalk.TypeVertexAI:
		return &baseProvider[VertexAIClient]{
			options: clientOptions,
			client:  newVertexAIClient(clientOptions),
		}, nil
	}
	return nil, fmt.Errorf("provider not supported: %s", cfg.Type)
}



================================================
FILE: internal/llm/provider/vertexai.go
================================================
package provider

import (
	"context"
	"log/slog"
	"strings"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/log"
	"google.golang.org/genai"
)

type VertexAIClient ProviderClient

func newVertexAIClient(opts providerClientOptions) VertexAIClient {
	project := opts.extraParams["project"]
	location := opts.extraParams["location"]
	cc := &genai.ClientConfig{
		Project:  project,
		Location: location,
		Backend:  genai.BackendVertexAI,
	}
	if config.Get().Options.Debug {
		cc.HTTPClient = log.NewHTTPClient()
	}
	client, err := genai.NewClient(context.Background(), cc)
	if err != nil {
		slog.Error("Failed to create VertexAI client", "error", err)
		return nil
	}

	model := opts.model(opts.modelType)
	if strings.Contains(model.ID, "anthropic") || strings.Contains(model.ID, "claude-sonnet") {
		return newAnthropicClient(opts, AnthropicClientTypeVertex)
	}
	return &geminiClient{
		providerOptions: opts,
		client:          client,
	}
}



================================================
FILE: internal/llm/tools/bash.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/shell"
)

type BashParams struct {
	Command string `json:"command"`
	Timeout int    `json:"timeout"`
}

type BashPermissionsParams struct {
	Command string `json:"command"`
	Timeout int    `json:"timeout"`
}

type BashResponseMetadata struct {
	StartTime        int64  `json:"start_time"`
	EndTime          int64  `json:"end_time"`
	Output           string `json:"output"`
	WorkingDirectory string `json:"working_directory"`
}
type bashTool struct {
	permissions permission.Service
	workingDir  string
}

const (
	BashToolName = "bash"

	DefaultTimeout  = 1 * 60 * 1000  // 1 minutes in milliseconds
	MaxTimeout      = 10 * 60 * 1000 // 10 minutes in milliseconds
	MaxOutputLength = 30000
	BashNoOutput    = "no output"
)

var bannedCommands = []string{
	// Network/Download tools
	"alias",
	"aria2c",
	"axel",
	"chrome",
	"curl",
	"curlie",
	"firefox",
	"http-prompt",
	"httpie",
	"links",
	"lynx",
	"nc",
	"safari",
	"scp",
	"ssh",
	"telnet",
	"w3m",
	"wget",
	"xh",

	// System administration
	"doas",
	"su",
	"sudo",

	// Package managers
	"apk",
	"apt",
	"apt-cache",
	"apt-get",
	"dnf",
	"dpkg",
	"emerge",
	"home-manager",
	"makepkg",
	"opkg",
	"pacman",
	"paru",
	"pkg",
	"pkg_add",
	"pkg_delete",
	"portage",
	"rpm",
	"yay",
	"yum",
	"zypper",

	// System modification
	"at",
	"batch",
	"chkconfig",
	"crontab",
	"fdisk",
	"mkfs",
	"mount",
	"parted",
	"service",
	"systemctl",
	"umount",

	// Network configuration
	"firewall-cmd",
	"ifconfig",
	"ip",
	"iptables",
	"netstat",
	"pfctl",
	"route",
	"ufw",
}

func bashDescription() string {
	bannedCommandsStr := strings.Join(bannedCommands, ", ")
	return fmt.Sprintf(`Executes a given bash command in a persistent shell session with optional timeout, ensuring proper handling and security measures.

CROSS-PLATFORM SHELL SUPPORT:
* This tool uses a shell interpreter (mvdan/sh) that mimics the Bash language,
  so you should use Bash syntax in all platforms, including Windows.
  The most common shell builtins and core utils are available in Windows as
  well.
* Make sure to use forward slashes (/) as path separators in commands, even on
  Windows. Example: "ls C:/foo/bar" instead of "ls C:\foo\bar".

Before executing the command, please follow these steps:

1. Directory Verification:
 - If the command will create new directories or files, first use the LS tool to verify the parent directory exists and is the correct location
 - For example, before running "mkdir foo/bar", first use LS to check that "foo" exists and is the intended parent directory

2. Security Check:
 - For security and to limit the threat of a prompt injection attack, some commands are limited or banned. If you use a disallowed command, you will receive an error message explaining the restriction. Explain the error to the User.
 - Verify that the command is not one of the banned commands: %s.

3. Command Execution:
 - After ensuring proper quoting, execute the command.
 - Capture the output of the command.

4. Output Processing:
 - If the output exceeds %d characters, output will be truncated before being returned to you.
 - Prepare the output for display to the user.

5. Return Result:
 - Provide the processed output of the command.
 - If any errors occurred during execution, include those in the output.
 - The result will also have metadata like the cwd (current working directory) at the end, included with <cwd></cwd> tags.

Usage notes:
- The command argument is required.
- You can specify an optional timeout in milliseconds (up to 600000ms / 10 minutes). If not specified, commands will timeout after 30 minutes.
- VERY IMPORTANT: You MUST avoid using search commands like 'find' and 'grep'. Instead use Grep, Glob, or Agent tools to search. You MUST avoid read tools like 'cat', 'head', 'tail', and 'ls', and use FileRead and LS tools to read files.
- When issuing multiple commands, use the ';' or '&&' operator to separate them. DO NOT use newlines (newlines are ok in quoted strings).
- IMPORTANT: All commands share the same shell session. Shell state (environment variables, virtual environments, current directory, etc.) persist between commands. For example, if you set an environment variable as part of a command, the environment variable will persist for subsequent commands.
- Try to maintain your current working directory throughout the session by using absolute paths and avoiding usage of 'cd'. You may use 'cd' if the User explicitly requests it.
<good-example>
pytest /foo/bar/tests
</good-example>
<bad-example>
cd /foo/bar && pytest tests
</bad-example>

# Committing changes with git

When the user asks you to create a new git commit, follow these steps carefully:

1. Start with a single message that contains exactly three tool_use blocks that do the following (it is VERY IMPORTANT that you send these tool_use blocks in a single message, otherwise it will feel slow to the user!):
 - Run a git status command to see all untracked files.
 - Run a git diff command to see both staged and unstaged changes that will be committed.
 - Run a git log command to see recent commit messages, so that you can follow this repository's commit message style.

2. Use the git context at the start of this conversation to determine which files are relevant to your commit. Add relevant untracked files to the staging area. Do not commit files that were already modified at the start of this conversation, if they are not relevant to your commit.

3. Analyze all staged changes (both previously staged and newly added) and draft a commit message. Wrap your analysis process in <commit_analysis> tags:

<commit_analysis>
- List the files that have been changed or added
- Summarize the nature of the changes (eg. new feature, enhancement to an existing feature, bug fix, refactoring, test, docs, etc.)
- Brainstorm the purpose or motivation behind these changes
- Do not use tools to explore code, beyond what is available in the git context
- Assess the impact of these changes on the overall project
- Check for any sensitive information that shouldn't be committed
- Draft a concise (1-2 sentences) commit message that focuses on the "why" rather than the "what"
- Ensure your language is clear, concise, and to the point
- Ensure the message accurately reflects the changes and their purpose (i.e. "add" means a wholly new feature, "update" means an enhancement to an existing feature, "fix" means a bug fix, etc.)
- Ensure the message is not generic (avoid words like "Update" or "Fix" without context)
- Review the draft message to ensure it accurately reflects the changes and their purpose
</commit_analysis>

4. Create the commit with a message ending with:
💘 Generated with Crush
Co-Authored-By: Crush <crush@charm.land>

- In order to ensure good formatting, ALWAYS pass the commit message via a HEREDOC, a la this example:
<example>
git commit -m "$(cat <<'EOF'
 Commit message here.

 💘 Generated with Crush
 Co-Authored-By: 💘 Crush <crush@charm.land>
 EOF
 )"
</example>

5. If the commit fails due to pre-commit hook changes, retry the commit ONCE to include these automated changes. If it fails again, it usually means a pre-commit hook is preventing the commit. If the commit succeeds but you notice that files were modified by the pre-commit hook, you MUST amend your commit to include them.

6. Finally, run git status to make sure the commit succeeded.

Important notes:
- When possible, combine the "git add" and "git commit" commands into a single "git commit -am" command, to speed things up
- However, be careful not to stage files (e.g. with 'git add .') for commits that aren't part of the change, they may have untracked files they want to keep around, but not commit.
- NEVER update the git config
- DO NOT push to the remote repository
- IMPORTANT: Never use git commands with the -i flag (like git rebase -i or git add -i) since they require interactive input which is not supported.
- If there are no changes to commit (i.e., no untracked files and no modifications), do not create an empty commit
- Ensure your commit message is meaningful and concise. It should explain the purpose of the changes, not just describe them.
- Return an empty response - the user will see the git output directly

# Creating pull requests
Use the gh command via the Bash tool for ALL GitHub-related tasks including working with issues, pull requests, checks, and releases. If given a Github URL use the gh command to get the information needed.

IMPORTANT: When the user asks you to create a pull request, follow these steps carefully:

1. Understand the current state of the branch. Remember to send a single message that contains multiple tool_use blocks (it is VERY IMPORTANT that you do this in a single message, otherwise it will feel slow to the user!):
 - Run a git status command to see all untracked files.
 - Run a git diff command to see both staged and unstaged changes that will be committed.
 - Check if the current branch tracks a remote branch and is up to date with the remote, so you know if you need to push to the remote
 - Run a git log command and 'git diff main...HEAD' to understand the full commit history for the current branch (from the time it diverged from the 'main' branch.)

2. Create new branch if needed

3. Commit changes if needed

4. Push to remote with -u flag if needed

5. Analyze all changes that will be included in the pull request, making sure to look at all relevant commits (not just the latest commit, but all commits that will be included in the pull request!), and draft a pull request summary. Wrap your analysis process in <pr_analysis> tags:

<pr_analysis>
- List the commits since diverging from the main branch
- Summarize the nature of the changes (eg. new feature, enhancement to an existing feature, bug fix, refactoring, test, docs, etc.)
- Brainstorm the purpose or motivation behind these changes
- Assess the impact of these changes on the overall project
- Do not use tools to explore code, beyond what is available in the git context
- Check for any sensitive information that shouldn't be committed
- Draft a concise (1-2 bullet points) pull request summary that focuses on the "why" rather than the "what"
- Ensure the summary accurately reflects all changes since diverging from the main branch
- Ensure your language is clear, concise, and to the point
- Ensure the summary accurately reflects the changes and their purpose (ie. "add" means a wholly new feature, "update" means an enhancement to an existing feature, "fix" means a bug fix, etc.)
- Ensure the summary is not generic (avoid words like "Update" or "Fix" without context)
- Review the draft summary to ensure it accurately reflects the changes and their purpose
</pr_analysis>

6. Create PR using gh pr create with the format below. Use a HEREDOC to pass the body to ensure correct formatting.
<example>
gh pr create --title "the pr title" --body "$(cat <<'EOF'
## Summary
<1-3 bullet points>

## Test plan
[Checklist of TODOs for testing the pull request...]

💘 Generated with Crush
EOF
)"
</example>

Important:
- Return an empty response - the user will see the gh output directly
- Never update git config`, bannedCommandsStr, MaxOutputLength)
}

func blockFuncs() []shell.BlockFunc {
	return []shell.BlockFunc{
		shell.CommandsBlocker(bannedCommands),

		// System package managers
		shell.ArgumentsBlocker("apk", []string{"add"}, nil),
		shell.ArgumentsBlocker("apt", []string{"install"}, nil),
		shell.ArgumentsBlocker("apt-get", []string{"install"}, nil),
		shell.ArgumentsBlocker("dnf", []string{"install"}, nil),
		shell.ArgumentsBlocker("pacman", nil, []string{"-S"}),
		shell.ArgumentsBlocker("pkg", []string{"install"}, nil),
		shell.ArgumentsBlocker("yum", []string{"install"}, nil),
		shell.ArgumentsBlocker("zypper", []string{"install"}, nil),

		// Language-specific package managers
		shell.ArgumentsBlocker("brew", []string{"install"}, nil),
		shell.ArgumentsBlocker("cargo", []string{"install"}, nil),
		shell.ArgumentsBlocker("gem", []string{"install"}, nil),
		shell.ArgumentsBlocker("go", []string{"install"}, nil),
		shell.ArgumentsBlocker("npm", []string{"install"}, []string{"--global"}),
		shell.ArgumentsBlocker("npm", []string{"install"}, []string{"-g"}),
		shell.ArgumentsBlocker("pip", []string{"install"}, []string{"--user"}),
		shell.ArgumentsBlocker("pip3", []string{"install"}, []string{"--user"}),
		shell.ArgumentsBlocker("pnpm", []string{"add"}, []string{"--global"}),
		shell.ArgumentsBlocker("pnpm", []string{"add"}, []string{"-g"}),
		shell.ArgumentsBlocker("yarn", []string{"global", "add"}, nil),

		// `go test -exec` can run arbitrary commands
		shell.ArgumentsBlocker("go", []string{"test"}, []string{"-exec"}),
	}
}

func NewBashTool(permission permission.Service, workingDir string) BaseTool {
	// Set up command blocking on the persistent shell
	persistentShell := shell.GetPersistentShell(workingDir)
	persistentShell.SetBlockFuncs(blockFuncs())

	return &bashTool{
		permissions: permission,
		workingDir:  workingDir,
	}
}

func (b *bashTool) Name() string {
	return BashToolName
}

func (b *bashTool) Info() ToolInfo {
	return ToolInfo{
		Name:        BashToolName,
		Description: bashDescription(),
		Parameters: map[string]any{
			"command": map[string]any{
				"type":        "string",
				"description": "The command to execute",
			},
			"timeout": map[string]any{
				"type":        "number",
				"description": "Optional timeout in milliseconds (max 600000)",
			},
		},
		Required: []string{"command"},
	}
}

func (b *bashTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params BashParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse("invalid parameters"), nil
	}

	if params.Timeout > MaxTimeout {
		params.Timeout = MaxTimeout
	} else if params.Timeout <= 0 {
		params.Timeout = DefaultTimeout
	}

	if params.Command == "" {
		return NewTextErrorResponse("missing command"), nil
	}

	isSafeReadOnly := false
	cmdLower := strings.ToLower(params.Command)

	for _, safe := range safeCommands {
		if strings.HasPrefix(cmdLower, safe) {
			if len(cmdLower) == len(safe) || cmdLower[len(safe)] == ' ' || cmdLower[len(safe)] == '-' {
				isSafeReadOnly = true
				break
			}
		}
	}

	sessionID, messageID := GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for executing shell command")
	}
	if !isSafeReadOnly {
		p := b.permissions.Request(
			permission.CreatePermissionRequest{
				SessionID:   sessionID,
				Path:        b.workingDir,
				ToolCallID:  call.ID,
				ToolName:    BashToolName,
				Action:      "execute",
				Description: fmt.Sprintf("Execute command: %s", params.Command),
				Params: BashPermissionsParams{
					Command: params.Command,
				},
			},
		)
		if !p {
			return ToolResponse{}, permission.ErrorPermissionDenied
		}
	}
	startTime := time.Now()
	if params.Timeout > 0 {
		var cancel context.CancelFunc
		ctx, cancel = context.WithTimeout(ctx, time.Duration(params.Timeout)*time.Millisecond)
		defer cancel()
	}

	persistentShell := shell.GetPersistentShell(b.workingDir)
	stdout, stderr, err := persistentShell.Exec(ctx, params.Command)

	// Get the current working directory after command execution
	currentWorkingDir := persistentShell.GetWorkingDir()
	interrupted := shell.IsInterrupt(err)
	exitCode := shell.ExitCode(err)
	if exitCode == 0 && !interrupted && err != nil {
		return ToolResponse{}, fmt.Errorf("error executing command: %w", err)
	}

	stdout = truncateOutput(stdout)
	stderr = truncateOutput(stderr)

	errorMessage := stderr
	if errorMessage == "" && err != nil {
		errorMessage = err.Error()
	}

	if interrupted {
		if errorMessage != "" {
			errorMessage += "\n"
		}
		errorMessage += "Command was aborted before completion"
	} else if exitCode != 0 {
		if errorMessage != "" {
			errorMessage += "\n"
		}
		errorMessage += fmt.Sprintf("Exit code %d", exitCode)
	}

	hasBothOutputs := stdout != "" && stderr != ""

	if hasBothOutputs {
		stdout += "\n"
	}

	if errorMessage != "" {
		stdout += "\n" + errorMessage
	}

	metadata := BashResponseMetadata{
		StartTime:        startTime.UnixMilli(),
		EndTime:          time.Now().UnixMilli(),
		Output:           stdout,
		WorkingDirectory: currentWorkingDir,
	}
	if stdout == "" {
		return WithResponseMetadata(NewTextResponse(BashNoOutput), metadata), nil
	}
	stdout += fmt.Sprintf("\n\n<cwd>%s</cwd>", currentWorkingDir)
	return WithResponseMetadata(NewTextResponse(stdout), metadata), nil
}

func truncateOutput(content string) string {
	if len(content) <= MaxOutputLength {
		return content
	}

	halfLength := MaxOutputLength / 2
	start := content[:halfLength]
	end := content[len(content)-halfLength:]

	truncatedLinesCount := countLines(content[halfLength : len(content)-halfLength])
	return fmt.Sprintf("%s\n\n... [%d lines truncated] ...\n\n%s", start, truncatedLinesCount, end)
}

func countLines(s string) int {
	if s == "" {
		return 0
	}
	return len(strings.Split(s, "\n"))
}



================================================
FILE: internal/llm/tools/diagnostics.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"log/slog"
	"sort"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/lsp/protocol"
)

type DiagnosticsParams struct {
	FilePath string `json:"file_path"`
}
type diagnosticsTool struct {
	lspClients map[string]*lsp.Client
}

const (
	DiagnosticsToolName    = "diagnostics"
	diagnosticsDescription = `Get diagnostics for a file and/or project.
WHEN TO USE THIS TOOL:
- Use when you need to check for errors or warnings in your code
- Helpful for debugging and ensuring code quality
- Good for getting a quick overview of issues in a file or project
HOW TO USE:
- Provide a path to a file to get diagnostics for that file
- Leave the path empty to get diagnostics for the entire project
- Results are displayed in a structured format with severity levels
FEATURES:
- Displays errors, warnings, and hints
- Groups diagnostics by severity
- Provides detailed information about each diagnostic
LIMITATIONS:
- Results are limited to the diagnostics provided by the LSP clients
- May not cover all possible issues in the code
- Does not provide suggestions for fixing issues
TIPS:
- Use in conjunction with other tools for a comprehensive code review
- Combine with the LSP client for real-time diagnostics
`
)

func NewDiagnosticsTool(lspClients map[string]*lsp.Client) BaseTool {
	return &diagnosticsTool{
		lspClients,
	}
}

func (b *diagnosticsTool) Name() string {
	return DiagnosticsToolName
}

func (b *diagnosticsTool) Info() ToolInfo {
	return ToolInfo{
		Name:        DiagnosticsToolName,
		Description: diagnosticsDescription,
		Parameters: map[string]any{
			"file_path": map[string]any{
				"type":        "string",
				"description": "The path to the file to get diagnostics for (leave w empty for project diagnostics)",
			},
		},
		Required: []string{},
	}
}

func (b *diagnosticsTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params DiagnosticsParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}

	lsps := b.lspClients

	if len(lsps) == 0 {
		return NewTextErrorResponse("no LSP clients available"), nil
	}

	if params.FilePath != "" {
		notifyLspOpenFile(ctx, params.FilePath, lsps)
		waitForLspDiagnostics(ctx, params.FilePath, lsps)
	}

	output := getDiagnostics(params.FilePath, lsps)

	return NewTextResponse(output), nil
}

func notifyLspOpenFile(ctx context.Context, filePath string, lsps map[string]*lsp.Client) {
	for _, client := range lsps {
		err := client.OpenFile(ctx, filePath)
		if err != nil {
			continue
		}
	}
}

func waitForLspDiagnostics(ctx context.Context, filePath string, lsps map[string]*lsp.Client) {
	if len(lsps) == 0 {
		return
	}

	diagChan := make(chan struct{}, 1)

	for _, client := range lsps {
		originalDiags := client.GetDiagnostics()

		handler := func(params json.RawMessage) {
			lsp.HandleDiagnostics(client, params)
			var diagParams protocol.PublishDiagnosticsParams
			if err := json.Unmarshal(params, &diagParams); err != nil {
				return
			}

			path, err := diagParams.URI.Path()
			if err != nil {
				slog.Error("Failed to convert diagnostic URI to path", "uri", diagParams.URI, "error", err)
				return
			}

			if path == filePath || hasDiagnosticsChanged(client.GetDiagnostics(), originalDiags) {
				select {
				case diagChan <- struct{}{}:
				default:
				}
			}
		}

		client.RegisterNotificationHandler("textDocument/publishDiagnostics", handler)

		if client.IsFileOpen(filePath) {
			err := client.NotifyChange(ctx, filePath)
			if err != nil {
				continue
			}
		} else {
			err := client.OpenFile(ctx, filePath)
			if err != nil {
				continue
			}
		}
	}

	select {
	case <-diagChan:
	case <-time.After(5 * time.Second):
	case <-ctx.Done():
	}
}

func hasDiagnosticsChanged(current, original map[protocol.DocumentURI][]protocol.Diagnostic) bool {
	for uri, diags := range current {
		origDiags, exists := original[uri]
		if !exists || len(diags) != len(origDiags) {
			return true
		}
	}
	return false
}

func getDiagnostics(filePath string, lsps map[string]*lsp.Client) string {
	fileDiagnostics := []string{}
	projectDiagnostics := []string{}

	formatDiagnostic := func(pth string, diagnostic protocol.Diagnostic, source string) string {
		severity := "Info"
		switch diagnostic.Severity {
		case protocol.SeverityError:
			severity = "Error"
		case protocol.SeverityWarning:
			severity = "Warn"
		case protocol.SeverityHint:
			severity = "Hint"
		}

		location := fmt.Sprintf("%s:%d:%d", pth, diagnostic.Range.Start.Line+1, diagnostic.Range.Start.Character+1)

		sourceInfo := ""
		if diagnostic.Source != "" {
			sourceInfo = diagnostic.Source
		} else if source != "" {
			sourceInfo = source
		}

		codeInfo := ""
		if diagnostic.Code != nil {
			codeInfo = fmt.Sprintf("[%v]", diagnostic.Code)
		}

		tagsInfo := ""
		if len(diagnostic.Tags) > 0 {
			tags := []string{}
			for _, tag := range diagnostic.Tags {
				switch tag {
				case protocol.Unnecessary:
					tags = append(tags, "unnecessary")
				case protocol.Deprecated:
					tags = append(tags, "deprecated")
				}
			}
			if len(tags) > 0 {
				tagsInfo = fmt.Sprintf(" (%s)", strings.Join(tags, ", "))
			}
		}

		return fmt.Sprintf("%s: %s [%s]%s%s %s",
			severity,
			location,
			sourceInfo,
			codeInfo,
			tagsInfo,
			diagnostic.Message)
	}

	for lspName, client := range lsps {
		diagnostics := client.GetDiagnostics()
		if len(diagnostics) > 0 {
			for location, diags := range diagnostics {
				path, err := location.Path()
				if err != nil {
					slog.Error("Failed to convert diagnostic location URI to path", "uri", location, "error", err)
					continue
				}
				isCurrentFile := path == filePath

				for _, diag := range diags {
					formattedDiag := formatDiagnostic(path, diag, lspName)

					if isCurrentFile {
						fileDiagnostics = append(fileDiagnostics, formattedDiag)
					} else {
						projectDiagnostics = append(projectDiagnostics, formattedDiag)
					}
				}
			}
		}
	}

	sort.Slice(fileDiagnostics, func(i, j int) bool {
		iIsError := strings.HasPrefix(fileDiagnostics[i], "Error")
		jIsError := strings.HasPrefix(fileDiagnostics[j], "Error")
		if iIsError != jIsError {
			return iIsError // Errors come first
		}
		return fileDiagnostics[i] < fileDiagnostics[j] // Then alphabetically
	})

	sort.Slice(projectDiagnostics, func(i, j int) bool {
		iIsError := strings.HasPrefix(projectDiagnostics[i], "Error")
		jIsError := strings.HasPrefix(projectDiagnostics[j], "Error")
		if iIsError != jIsError {
			return iIsError
		}
		return projectDiagnostics[i] < projectDiagnostics[j]
	})

	var output strings.Builder

	if len(fileDiagnostics) > 0 {
		output.WriteString("\n<file_diagnostics>\n")
		if len(fileDiagnostics) > 10 {
			output.WriteString(strings.Join(fileDiagnostics[:10], "\n"))
			fmt.Fprintf(&output, "\n... and %d more diagnostics", len(fileDiagnostics)-10)
		} else {
			output.WriteString(strings.Join(fileDiagnostics, "\n"))
		}
		output.WriteString("\n</file_diagnostics>\n")
	}

	if len(projectDiagnostics) > 0 {
		output.WriteString("\n<project_diagnostics>\n")
		if len(projectDiagnostics) > 10 {
			output.WriteString(strings.Join(projectDiagnostics[:10], "\n"))
			fmt.Fprintf(&output, "\n... and %d more diagnostics", len(projectDiagnostics)-10)
		} else {
			output.WriteString(strings.Join(projectDiagnostics, "\n"))
		}
		output.WriteString("\n</project_diagnostics>\n")
	}

	if len(fileDiagnostics) > 0 || len(projectDiagnostics) > 0 {
		fileErrors := countSeverity(fileDiagnostics, "Error")
		fileWarnings := countSeverity(fileDiagnostics, "Warn")
		projectErrors := countSeverity(projectDiagnostics, "Error")
		projectWarnings := countSeverity(projectDiagnostics, "Warn")

		output.WriteString("\n<diagnostic_summary>\n")
		fmt.Fprintf(&output, "Current file: %d errors, %d warnings\n", fileErrors, fileWarnings)
		fmt.Fprintf(&output, "Project: %d errors, %d warnings\n", projectErrors, projectWarnings)
		output.WriteString("</diagnostic_summary>\n")
	}

	return output.String()
}

func countSeverity(diagnostics []string, severity string) int {
	count := 0
	for _, diag := range diagnostics {
		if strings.HasPrefix(diag, severity) {
			count++
		}
	}
	return count
}



================================================
FILE: internal/llm/tools/download.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/permission"
)

type DownloadParams struct {
	URL      string `json:"url"`
	FilePath string `json:"file_path"`
	Timeout  int    `json:"timeout,omitempty"`
}

type DownloadPermissionsParams struct {
	URL      string `json:"url"`
	FilePath string `json:"file_path"`
	Timeout  int    `json:"timeout,omitempty"`
}

type downloadTool struct {
	client      *http.Client
	permissions permission.Service
	workingDir  string
}

const (
	DownloadToolName        = "download"
	downloadToolDescription = `Downloads binary data from a URL and saves it to a local file.

WHEN TO USE THIS TOOL:
- Use when you need to download files, images, or other binary data from URLs
- Helpful for downloading assets, documents, or any file type
- Useful for saving remote content locally for processing or storage

HOW TO USE:
- Provide the URL to download from
- Specify the local file path where the content should be saved
- Optionally set a timeout for the request

FEATURES:
- Downloads any file type (binary or text)
- Automatically creates parent directories if they don't exist
- Handles large files efficiently with streaming
- Sets reasonable timeouts to prevent hanging
- Validates input parameters before making requests

LIMITATIONS:
- Maximum file size is 100MB
- Only supports HTTP and HTTPS protocols
- Cannot handle authentication or cookies
- Some websites may block automated requests
- Will overwrite existing files without warning

TIPS:
- Use absolute paths or paths relative to the working directory
- Set appropriate timeouts for large files or slow connections`
)

func NewDownloadTool(permissions permission.Service, workingDir string) BaseTool {
	return &downloadTool{
		client: &http.Client{
			Timeout: 5 * time.Minute, // Default 5 minute timeout for downloads
			Transport: &http.Transport{
				MaxIdleConns:        100,
				MaxIdleConnsPerHost: 10,
				IdleConnTimeout:     90 * time.Second,
			},
		},
		permissions: permissions,
		workingDir:  workingDir,
	}
}

func (t *downloadTool) Name() string {
	return DownloadToolName
}

func (t *downloadTool) Info() ToolInfo {
	return ToolInfo{
		Name:        DownloadToolName,
		Description: downloadToolDescription,
		Parameters: map[string]any{
			"url": map[string]any{
				"type":        "string",
				"description": "The URL to download from",
			},
			"file_path": map[string]any{
				"type":        "string",
				"description": "The local file path where the downloaded content should be saved",
			},
			"timeout": map[string]any{
				"type":        "number",
				"description": "Optional timeout in seconds (max 600)",
			},
		},
		Required: []string{"url", "file_path"},
	}
}

func (t *downloadTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params DownloadParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse("Failed to parse download parameters: " + err.Error()), nil
	}

	if params.URL == "" {
		return NewTextErrorResponse("URL parameter is required"), nil
	}

	if params.FilePath == "" {
		return NewTextErrorResponse("file_path parameter is required"), nil
	}

	if !strings.HasPrefix(params.URL, "http://") && !strings.HasPrefix(params.URL, "https://") {
		return NewTextErrorResponse("URL must start with http:// or https://"), nil
	}

	// Convert relative path to absolute path
	var filePath string
	if filepath.IsAbs(params.FilePath) {
		filePath = params.FilePath
	} else {
		filePath = filepath.Join(t.workingDir, params.FilePath)
	}

	sessionID, messageID := GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for downloading files")
	}

	p := t.permissions.Request(
		permission.CreatePermissionRequest{
			SessionID:   sessionID,
			Path:        filePath,
			ToolName:    DownloadToolName,
			Action:      "download",
			Description: fmt.Sprintf("Download file from URL: %s to %s", params.URL, filePath),
			Params:      DownloadPermissionsParams(params),
		},
	)

	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	// Handle timeout with context
	requestCtx := ctx
	if params.Timeout > 0 {
		maxTimeout := 600 // 10 minutes
		if params.Timeout > maxTimeout {
			params.Timeout = maxTimeout
		}
		var cancel context.CancelFunc
		requestCtx, cancel = context.WithTimeout(ctx, time.Duration(params.Timeout)*time.Second)
		defer cancel()
	}

	req, err := http.NewRequestWithContext(requestCtx, "GET", params.URL, nil)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to create request: %w", err)
	}

	req.Header.Set("User-Agent", "crush/1.0")

	resp, err := t.client.Do(req)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to download from URL: %w", err)
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		return NewTextErrorResponse(fmt.Sprintf("Request failed with status code: %d", resp.StatusCode)), nil
	}

	// Check content length if available
	maxSize := int64(100 * 1024 * 1024) // 100MB
	if resp.ContentLength > maxSize {
		return NewTextErrorResponse(fmt.Sprintf("File too large: %d bytes (max %d bytes)", resp.ContentLength, maxSize)), nil
	}

	// Create parent directories if they don't exist
	if err := os.MkdirAll(filepath.Dir(filePath), 0o755); err != nil {
		return ToolResponse{}, fmt.Errorf("failed to create parent directories: %w", err)
	}

	// Create the output file
	outFile, err := os.Create(filePath)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to create output file: %w", err)
	}
	defer outFile.Close()

	// Copy data with size limit
	limitedReader := io.LimitReader(resp.Body, maxSize)
	bytesWritten, err := io.Copy(outFile, limitedReader)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to write file: %w", err)
	}

	// Check if we hit the size limit
	if bytesWritten == maxSize {
		// Clean up the file since it might be incomplete
		os.Remove(filePath)
		return NewTextErrorResponse(fmt.Sprintf("File too large: exceeded %d bytes limit", maxSize)), nil
	}

	contentType := resp.Header.Get("Content-Type")
	responseMsg := fmt.Sprintf("Successfully downloaded %d bytes to %s", bytesWritten, filePath)
	if contentType != "" {
		responseMsg += fmt.Sprintf(" (Content-Type: %s)", contentType)
	}

	return NewTextResponse(responseMsg), nil
}



================================================
FILE: internal/llm/tools/edit.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"log/slog"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/diff"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/history"

	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/permission"
)

type EditParams struct {
	FilePath   string `json:"file_path"`
	OldString  string `json:"old_string"`
	NewString  string `json:"new_string"`
	ReplaceAll bool   `json:"replace_all,omitempty"`
}

type EditPermissionsParams struct {
	FilePath   string `json:"file_path"`
	OldContent string `json:"old_content,omitempty"`
	NewContent string `json:"new_content,omitempty"`
}

type EditResponseMetadata struct {
	Additions  int    `json:"additions"`
	Removals   int    `json:"removals"`
	OldContent string `json:"old_content,omitempty"`
	NewContent string `json:"new_content,omitempty"`
}

type editTool struct {
	lspClients  map[string]*lsp.Client
	permissions permission.Service
	files       history.Service
	workingDir  string
}

const (
	EditToolName    = "edit"
	editDescription = `Edits files by replacing text, creating new files, or deleting content. For moving or renaming files, use the Bash tool with the 'mv' command instead. For larger file edits, use the FileWrite tool to overwrite files.

Before using this tool:

1. Use the FileRead tool to understand the file's contents and context

2. Verify the directory path is correct (only applicable when creating new files):
   - Use the LS tool to verify the parent directory exists and is the correct location

To make a file edit, provide the following:
1. file_path: The absolute path to the file to modify (must be absolute, not relative)
2. old_string: The text to replace (must be unique within the file, and must match the file contents exactly, including all whitespace and indentation)
3. new_string: The edited text to replace the old_string
4. replace_all: Replace all occurrences of old_string (default false)

Special cases:
- To create a new file: provide file_path and new_string, leave old_string empty
- To delete content: provide file_path and old_string, leave new_string empty

The tool will replace ONE occurrence of old_string with new_string in the specified file by default. Set replace_all to true to replace all occurrences.

CRITICAL REQUIREMENTS FOR USING THIS TOOL:

1. UNIQUENESS: When replace_all is false (default), the old_string MUST uniquely identify the specific instance you want to change. This means:
   - Include AT LEAST 3-5 lines of context BEFORE the change point
   - Include AT LEAST 3-5 lines of context AFTER the change point
   - Include all whitespace, indentation, and surrounding code exactly as it appears in the file

2. SINGLE INSTANCE: When replace_all is false, this tool can only change ONE instance at a time. If you need to change multiple instances:
   - Set replace_all to true to replace all occurrences at once
   - Or make separate calls to this tool for each instance
   - Each call must uniquely identify its specific instance using extensive context

3. VERIFICATION: Before using this tool:
   - Check how many instances of the target text exist in the file
   - If multiple instances exist and replace_all is false, gather enough context to uniquely identify each one
   - Plan separate tool calls for each instance or use replace_all

WARNING: If you do not follow these requirements:
   - The tool will fail if old_string matches multiple locations and replace_all is false
   - The tool will fail if old_string doesn't match exactly (including whitespace)
   - You may change the wrong instance if you don't include enough context

When making edits:
   - Ensure the edit results in idiomatic, correct code
   - Do not leave the code in a broken state
   - Always use absolute file paths (starting with /)

WINDOWS NOTES:
- File paths should use forward slashes (/) for cross-platform compatibility
- On Windows, absolute paths start with drive letters (C:/) but forward slashes work throughout
- File permissions are handled automatically by the Go runtime
- Always assumes \n for line endings. The tool will handle \r\n conversion automatically if needed.

Remember: when making multiple file edits in a row to the same file, you should prefer to send all edits in a single message with multiple calls to this tool, rather than multiple messages with a single call each.`
)

func NewEditTool(lspClients map[string]*lsp.Client, permissions permission.Service, files history.Service, workingDir string) BaseTool {
	return &editTool{
		lspClients:  lspClients,
		permissions: permissions,
		files:       files,
		workingDir:  workingDir,
	}
}

func (e *editTool) Name() string {
	return EditToolName
}

func (e *editTool) Info() ToolInfo {
	return ToolInfo{
		Name:        EditToolName,
		Description: editDescription,
		Parameters: map[string]any{
			"file_path": map[string]any{
				"type":        "string",
				"description": "The absolute path to the file to modify",
			},
			"old_string": map[string]any{
				"type":        "string",
				"description": "The text to replace",
			},
			"new_string": map[string]any{
				"type":        "string",
				"description": "The text to replace it with",
			},
			"replace_all": map[string]any{
				"type":        "boolean",
				"description": "Replace all occurrences of old_string (default false)",
			},
		},
		Required: []string{"file_path", "old_string", "new_string"},
	}
}

func (e *editTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params EditParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse("invalid parameters"), nil
	}

	if params.FilePath == "" {
		return NewTextErrorResponse("file_path is required"), nil
	}

	if !filepath.IsAbs(params.FilePath) {
		params.FilePath = filepath.Join(e.workingDir, params.FilePath)
	}

	var response ToolResponse
	var err error

	if params.OldString == "" {
		response, err = e.createNewFile(ctx, params.FilePath, params.NewString, call)
		if err != nil {
			return response, err
		}
	}

	if params.NewString == "" {
		response, err = e.deleteContent(ctx, params.FilePath, params.OldString, params.ReplaceAll, call)
		if err != nil {
			return response, err
		}
	}

	response, err = e.replaceContent(ctx, params.FilePath, params.OldString, params.NewString, params.ReplaceAll, call)
	if err != nil {
		return response, err
	}
	if response.IsError {
		// Return early if there was an error during content replacement
		// This prevents unnecessary LSP diagnostics processing
		return response, nil
	}

	waitForLspDiagnostics(ctx, params.FilePath, e.lspClients)
	text := fmt.Sprintf("<result>\n%s\n</result>\n", response.Content)
	text += getDiagnostics(params.FilePath, e.lspClients)
	response.Content = text
	return response, nil
}

func (e *editTool) createNewFile(ctx context.Context, filePath, content string, call ToolCall) (ToolResponse, error) {
	fileInfo, err := os.Stat(filePath)
	if err == nil {
		if fileInfo.IsDir() {
			return NewTextErrorResponse(fmt.Sprintf("path is a directory, not a file: %s", filePath)), nil
		}
		return NewTextErrorResponse(fmt.Sprintf("file already exists: %s", filePath)), nil
	} else if !os.IsNotExist(err) {
		return ToolResponse{}, fmt.Errorf("failed to access file: %w", err)
	}

	dir := filepath.Dir(filePath)
	if err = os.MkdirAll(dir, 0o755); err != nil {
		return ToolResponse{}, fmt.Errorf("failed to create parent directories: %w", err)
	}

	sessionID, messageID := GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for creating a new file")
	}

	_, additions, removals := diff.GenerateDiff(
		"",
		content,
		strings.TrimPrefix(filePath, e.workingDir),
	)
	p := e.permissions.Request(
		permission.CreatePermissionRequest{
			SessionID:   sessionID,
			Path:        fsext.PathOrPrefix(filePath, e.workingDir),
			ToolCallID:  call.ID,
			ToolName:    EditToolName,
			Action:      "write",
			Description: fmt.Sprintf("Create file %s", filePath),
			Params: EditPermissionsParams{
				FilePath:   filePath,
				OldContent: "",
				NewContent: content,
			},
		},
	)
	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	err = os.WriteFile(filePath, []byte(content), 0o644)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to write file: %w", err)
	}

	// File can't be in the history so we create a new file history
	_, err = e.files.Create(ctx, sessionID, filePath, "")
	if err != nil {
		// Log error but don't fail the operation
		return ToolResponse{}, fmt.Errorf("error creating file history: %w", err)
	}

	// Add the new content to the file history
	_, err = e.files.CreateVersion(ctx, sessionID, filePath, content)
	if err != nil {
		// Log error but don't fail the operation
		slog.Debug("Error creating file history version", "error", err)
	}

	recordFileWrite(filePath)
	recordFileRead(filePath)

	return WithResponseMetadata(
		NewTextResponse("File created: "+filePath),
		EditResponseMetadata{
			OldContent: "",
			NewContent: content,
			Additions:  additions,
			Removals:   removals,
		},
	), nil
}

func (e *editTool) deleteContent(ctx context.Context, filePath, oldString string, replaceAll bool, call ToolCall) (ToolResponse, error) {
	fileInfo, err := os.Stat(filePath)
	if err != nil {
		if os.IsNotExist(err) {
			return NewTextErrorResponse(fmt.Sprintf("file not found: %s", filePath)), nil
		}
		return ToolResponse{}, fmt.Errorf("failed to access file: %w", err)
	}

	if fileInfo.IsDir() {
		return NewTextErrorResponse(fmt.Sprintf("path is a directory, not a file: %s", filePath)), nil
	}

	if getLastReadTime(filePath).IsZero() {
		return NewTextErrorResponse("you must read the file before editing it. Use the View tool first"), nil
	}

	modTime := fileInfo.ModTime()
	lastRead := getLastReadTime(filePath)
	if modTime.After(lastRead) {
		return NewTextErrorResponse(
			fmt.Sprintf("file %s has been modified since it was last read (mod time: %s, last read: %s)",
				filePath, modTime.Format(time.RFC3339), lastRead.Format(time.RFC3339),
			)), nil
	}

	content, err := os.ReadFile(filePath)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to read file: %w", err)
	}

	oldContent, isCrlf := fsext.ToUnixLineEndings(string(content))

	var newContent string
	var deletionCount int

	if replaceAll {
		newContent = strings.ReplaceAll(oldContent, oldString, "")
		deletionCount = strings.Count(oldContent, oldString)
		if deletionCount == 0 {
			return NewTextErrorResponse("old_string not found in file. Make sure it matches exactly, including whitespace and line breaks"), nil
		}
	} else {
		index := strings.Index(oldContent, oldString)
		if index == -1 {
			return NewTextErrorResponse("old_string not found in file. Make sure it matches exactly, including whitespace and line breaks"), nil
		}

		lastIndex := strings.LastIndex(oldContent, oldString)
		if index != lastIndex {
			return NewTextErrorResponse("old_string appears multiple times in the file. Please provide more context to ensure a unique match, or set replace_all to true"), nil
		}

		newContent = oldContent[:index] + oldContent[index+len(oldString):]
		deletionCount = 1
	}

	sessionID, messageID := GetContextValues(ctx)

	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for creating a new file")
	}

	_, additions, removals := diff.GenerateDiff(
		oldContent,
		newContent,
		strings.TrimPrefix(filePath, e.workingDir),
	)

	p := e.permissions.Request(
		permission.CreatePermissionRequest{
			SessionID:   sessionID,
			Path:        fsext.PathOrPrefix(filePath, e.workingDir),
			ToolCallID:  call.ID,
			ToolName:    EditToolName,
			Action:      "write",
			Description: fmt.Sprintf("Delete content from file %s", filePath),
			Params: EditPermissionsParams{
				FilePath:   filePath,
				OldContent: oldContent,
				NewContent: newContent,
			},
		},
	)
	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	if isCrlf {
		newContent, _ = fsext.ToWindowsLineEndings(newContent)
	}

	err = os.WriteFile(filePath, []byte(newContent), 0o644)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to write file: %w", err)
	}

	// Check if file exists in history
	file, err := e.files.GetByPathAndSession(ctx, filePath, sessionID)
	if err != nil {
		_, err = e.files.Create(ctx, sessionID, filePath, oldContent)
		if err != nil {
			// Log error but don't fail the operation
			return ToolResponse{}, fmt.Errorf("error creating file history: %w", err)
		}
	}
	if file.Content != oldContent {
		// User Manually changed the content store an intermediate version
		_, err = e.files.CreateVersion(ctx, sessionID, filePath, oldContent)
		if err != nil {
			slog.Debug("Error creating file history version", "error", err)
		}
	}
	// Store the new version
	_, err = e.files.CreateVersion(ctx, sessionID, filePath, "")
	if err != nil {
		slog.Debug("Error creating file history version", "error", err)
	}

	recordFileWrite(filePath)
	recordFileRead(filePath)

	return WithResponseMetadata(
		NewTextResponse("Content deleted from file: "+filePath),
		EditResponseMetadata{
			OldContent: oldContent,
			NewContent: newContent,
			Additions:  additions,
			Removals:   removals,
		},
	), nil
}

func (e *editTool) replaceContent(ctx context.Context, filePath, oldString, newString string, replaceAll bool, call ToolCall) (ToolResponse, error) {
	fileInfo, err := os.Stat(filePath)
	if err != nil {
		if os.IsNotExist(err) {
			return NewTextErrorResponse(fmt.Sprintf("file not found: %s", filePath)), nil
		}
		return ToolResponse{}, fmt.Errorf("failed to access file: %w", err)
	}

	if fileInfo.IsDir() {
		return NewTextErrorResponse(fmt.Sprintf("path is a directory, not a file: %s", filePath)), nil
	}

	if getLastReadTime(filePath).IsZero() {
		return NewTextErrorResponse("you must read the file before editing it. Use the View tool first"), nil
	}

	modTime := fileInfo.ModTime()
	lastRead := getLastReadTime(filePath)
	if modTime.After(lastRead) {
		return NewTextErrorResponse(
			fmt.Sprintf("file %s has been modified since it was last read (mod time: %s, last read: %s)",
				filePath, modTime.Format(time.RFC3339), lastRead.Format(time.RFC3339),
			)), nil
	}

	content, err := os.ReadFile(filePath)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to read file: %w", err)
	}

	oldContent, isCrlf := fsext.ToUnixLineEndings(string(content))

	var newContent string
	var replacementCount int

	if replaceAll {
		newContent = strings.ReplaceAll(oldContent, oldString, newString)
		replacementCount = strings.Count(oldContent, oldString)
		if replacementCount == 0 {
			return NewTextErrorResponse("old_string not found in file. Make sure it matches exactly, including whitespace and line breaks"), nil
		}
	} else {
		index := strings.Index(oldContent, oldString)
		if index == -1 {
			return NewTextErrorResponse("old_string not found in file. Make sure it matches exactly, including whitespace and line breaks"), nil
		}

		lastIndex := strings.LastIndex(oldContent, oldString)
		if index != lastIndex {
			return NewTextErrorResponse("old_string appears multiple times in the file. Please provide more context to ensure a unique match, or set replace_all to true"), nil
		}

		newContent = oldContent[:index] + newString + oldContent[index+len(oldString):]
		replacementCount = 1
	}

	if oldContent == newContent {
		return NewTextErrorResponse("new content is the same as old content. No changes made."), nil
	}
	sessionID, messageID := GetContextValues(ctx)

	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for creating a new file")
	}
	_, additions, removals := diff.GenerateDiff(
		oldContent,
		newContent,
		strings.TrimPrefix(filePath, e.workingDir),
	)

	p := e.permissions.Request(
		permission.CreatePermissionRequest{
			SessionID:   sessionID,
			Path:        fsext.PathOrPrefix(filePath, e.workingDir),
			ToolCallID:  call.ID,
			ToolName:    EditToolName,
			Action:      "write",
			Description: fmt.Sprintf("Replace content in file %s", filePath),
			Params: EditPermissionsParams{
				FilePath:   filePath,
				OldContent: oldContent,
				NewContent: newContent,
			},
		},
	)
	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	if isCrlf {
		newContent, _ = fsext.ToWindowsLineEndings(newContent)
	}

	err = os.WriteFile(filePath, []byte(newContent), 0o644)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to write file: %w", err)
	}

	// Check if file exists in history
	file, err := e.files.GetByPathAndSession(ctx, filePath, sessionID)
	if err != nil {
		_, err = e.files.Create(ctx, sessionID, filePath, oldContent)
		if err != nil {
			// Log error but don't fail the operation
			return ToolResponse{}, fmt.Errorf("error creating file history: %w", err)
		}
	}
	if file.Content != oldContent {
		// User Manually changed the content store an intermediate version
		_, err = e.files.CreateVersion(ctx, sessionID, filePath, oldContent)
		if err != nil {
			slog.Debug("Error creating file history version", "error", err)
		}
	}
	// Store the new version
	_, err = e.files.CreateVersion(ctx, sessionID, filePath, newContent)
	if err != nil {
		slog.Debug("Error creating file history version", "error", err)
	}

	recordFileWrite(filePath)
	recordFileRead(filePath)

	return WithResponseMetadata(
		NewTextResponse("Content replaced in file: "+filePath),
		EditResponseMetadata{
			OldContent: oldContent,
			NewContent: newContent,
			Additions:  additions,
			Removals:   removals,
		}), nil
}



================================================
FILE: internal/llm/tools/fetch.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"strings"
	"time"
	"unicode/utf8"

	md "github.com/JohannesKaufmann/html-to-markdown"
	"github.com/PuerkitoBio/goquery"
	"github.com/charmbracelet/crush/internal/permission"
)

type FetchParams struct {
	URL     string `json:"url"`
	Format  string `json:"format"`
	Timeout int    `json:"timeout,omitempty"`
}

type FetchPermissionsParams struct {
	URL     string `json:"url"`
	Format  string `json:"format"`
	Timeout int    `json:"timeout,omitempty"`
}

type fetchTool struct {
	client      *http.Client
	permissions permission.Service
	workingDir  string
}

const (
	FetchToolName        = "fetch"
	fetchToolDescription = `Fetches content from a URL and returns it in the specified format.

WHEN TO USE THIS TOOL:
- Use when you need to download content from a URL
- Helpful for retrieving documentation, API responses, or web content
- Useful for getting external information to assist with tasks

HOW TO USE:
- Provide the URL to fetch content from
- Specify the desired output format (text, markdown, or html)
- Optionally set a timeout for the request

FEATURES:
- Supports three output formats: text, markdown, and html
- Automatically handles HTTP redirects
- Sets reasonable timeouts to prevent hanging
- Validates input parameters before making requests

LIMITATIONS:
- Maximum response size is 5MB
- Only supports HTTP and HTTPS protocols
- Cannot handle authentication or cookies
- Some websites may block automated requests

TIPS:
- Use text format for plain text content or simple API responses
- Use markdown format for content that should be rendered with formatting
- Use html format when you need the raw HTML structure
- Set appropriate timeouts for potentially slow websites`
)

func NewFetchTool(permissions permission.Service, workingDir string) BaseTool {
	return &fetchTool{
		client: &http.Client{
			Timeout: 30 * time.Second,
			Transport: &http.Transport{
				MaxIdleConns:        100,
				MaxIdleConnsPerHost: 10,
				IdleConnTimeout:     90 * time.Second,
			},
		},
		permissions: permissions,
		workingDir:  workingDir,
	}
}

func (t *fetchTool) Name() string {
	return FetchToolName
}

func (t *fetchTool) Info() ToolInfo {
	return ToolInfo{
		Name:        FetchToolName,
		Description: fetchToolDescription,
		Parameters: map[string]any{
			"url": map[string]any{
				"type":        "string",
				"description": "The URL to fetch content from",
			},
			"format": map[string]any{
				"type":        "string",
				"description": "The format to return the content in (text, markdown, or html)",
				"enum":        []string{"text", "markdown", "html"},
			},
			"timeout": map[string]any{
				"type":        "number",
				"description": "Optional timeout in seconds (max 120)",
			},
		},
		Required: []string{"url", "format"},
	}
}

func (t *fetchTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params FetchParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse("Failed to parse fetch parameters: " + err.Error()), nil
	}

	if params.URL == "" {
		return NewTextErrorResponse("URL parameter is required"), nil
	}

	format := strings.ToLower(params.Format)
	if format != "text" && format != "markdown" && format != "html" {
		return NewTextErrorResponse("Format must be one of: text, markdown, html"), nil
	}

	if !strings.HasPrefix(params.URL, "http://") && !strings.HasPrefix(params.URL, "https://") {
		return NewTextErrorResponse("URL must start with http:// or https://"), nil
	}

	sessionID, messageID := GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for creating a new file")
	}

	p := t.permissions.Request(
		permission.CreatePermissionRequest{
			SessionID:   sessionID,
			Path:        t.workingDir,
			ToolCallID:  call.ID,
			ToolName:    FetchToolName,
			Action:      "fetch",
			Description: fmt.Sprintf("Fetch content from URL: %s", params.URL),
			Params:      FetchPermissionsParams(params),
		},
	)

	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	// Handle timeout with context
	requestCtx := ctx
	if params.Timeout > 0 {
		maxTimeout := 120 // 2 minutes
		if params.Timeout > maxTimeout {
			params.Timeout = maxTimeout
		}
		var cancel context.CancelFunc
		requestCtx, cancel = context.WithTimeout(ctx, time.Duration(params.Timeout)*time.Second)
		defer cancel()
	}

	req, err := http.NewRequestWithContext(requestCtx, "GET", params.URL, nil)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to create request: %w", err)
	}

	req.Header.Set("User-Agent", "crush/1.0")

	resp, err := t.client.Do(req)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to fetch URL: %w", err)
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		return NewTextErrorResponse(fmt.Sprintf("Request failed with status code: %d", resp.StatusCode)), nil
	}

	maxSize := int64(5 * 1024 * 1024) // 5MB
	body, err := io.ReadAll(io.LimitReader(resp.Body, maxSize))
	if err != nil {
		return NewTextErrorResponse("Failed to read response body: " + err.Error()), nil
	}

	content := string(body)

	isValidUt8 := utf8.ValidString(content)
	if !isValidUt8 {
		return NewTextErrorResponse("Response content is not valid UTF-8"), nil
	}
	contentType := resp.Header.Get("Content-Type")

	switch format {
	case "text":
		if strings.Contains(contentType, "text/html") {
			text, err := extractTextFromHTML(content)
			if err != nil {
				return NewTextErrorResponse("Failed to extract text from HTML: " + err.Error()), nil
			}
			content = text
		}

	case "markdown":
		if strings.Contains(contentType, "text/html") {
			markdown, err := convertHTMLToMarkdown(content)
			if err != nil {
				return NewTextErrorResponse("Failed to convert HTML to Markdown: " + err.Error()), nil
			}
			content = markdown
		}

		content = "```\n" + content + "\n```"

	case "html":
		// return only the body of the HTML document
		if strings.Contains(contentType, "text/html") {
			doc, err := goquery.NewDocumentFromReader(strings.NewReader(content))
			if err != nil {
				return NewTextErrorResponse("Failed to parse HTML: " + err.Error()), nil
			}
			body, err := doc.Find("body").Html()
			if err != nil {
				return NewTextErrorResponse("Failed to extract body from HTML: " + err.Error()), nil
			}
			if body == "" {
				return NewTextErrorResponse("No body content found in HTML"), nil
			}
			content = "<html>\n<body>\n" + body + "\n</body>\n</html>"
		}
	}
	// calculate byte size of content
	contentSize := int64(len(content))
	if contentSize > MaxReadSize {
		content = content[:MaxReadSize]
		content += fmt.Sprintf("\n\n[Content truncated to %d bytes]", MaxReadSize)
	}

	return NewTextResponse(content), nil
}

func extractTextFromHTML(html string) (string, error) {
	doc, err := goquery.NewDocumentFromReader(strings.NewReader(html))
	if err != nil {
		return "", err
	}

	text := doc.Find("body").Text()
	text = strings.Join(strings.Fields(text), " ")

	return text, nil
}

func convertHTMLToMarkdown(html string) (string, error) {
	converter := md.NewConverter("", true, nil)

	markdown, err := converter.ConvertString(html)
	if err != nil {
		return "", err
	}

	return markdown, nil
}



================================================
FILE: internal/llm/tools/file.go
================================================
package tools

import (
	"sync"
	"time"
)

// File record to track when files were read/written
type fileRecord struct {
	path      string
	readTime  time.Time
	writeTime time.Time
}

var (
	fileRecords     = make(map[string]fileRecord)
	fileRecordMutex sync.RWMutex
)

func recordFileRead(path string) {
	fileRecordMutex.Lock()
	defer fileRecordMutex.Unlock()

	record, exists := fileRecords[path]
	if !exists {
		record = fileRecord{path: path}
	}
	record.readTime = time.Now()
	fileRecords[path] = record
}

func getLastReadTime(path string) time.Time {
	fileRecordMutex.RLock()
	defer fileRecordMutex.RUnlock()

	record, exists := fileRecords[path]
	if !exists {
		return time.Time{}
	}
	return record.readTime
}

func recordFileWrite(path string) {
	fileRecordMutex.Lock()
	defer fileRecordMutex.Unlock()

	record, exists := fileRecords[path]
	if !exists {
		record = fileRecord{path: path}
	}
	record.writeTime = time.Now()
	fileRecords[path] = record
}



================================================
FILE: internal/llm/tools/glob.go
================================================
package tools

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"log/slog"
	"os/exec"
	"path/filepath"
	"sort"
	"strings"

	"github.com/charmbracelet/crush/internal/fsext"
)

const (
	GlobToolName    = "glob"
	globDescription = `Fast file pattern matching tool that finds files by name and pattern, returning matching paths sorted by modification time (newest first).

WHEN TO USE THIS TOOL:
- Use when you need to find files by name patterns or extensions
- Great for finding specific file types across a directory structure
- Useful for discovering files that match certain naming conventions

HOW TO USE:
- Provide a glob pattern to match against file paths
- Optionally specify a starting directory (defaults to current working directory)
- Results are sorted with most recently modified files first

GLOB PATTERN SYNTAX:
- '*' matches any sequence of non-separator characters
- '**' matches any sequence of characters, including separators
- '?' matches any single non-separator character
- '[...]' matches any character in the brackets
- '[!...]' matches any character not in the brackets

COMMON PATTERN EXAMPLES:
- '*.js' - Find all JavaScript files in the current directory
- '**/*.js' - Find all JavaScript files in any subdirectory
- 'src/**/*.{ts,tsx}' - Find all TypeScript files in the src directory
- '*.{html,css,js}' - Find all HTML, CSS, and JS files

LIMITATIONS:
- Results are limited to 100 files (newest first)
- Does not search file contents (use Grep tool for that)
- Hidden files (starting with '.') are skipped

WINDOWS NOTES:
- Path separators are handled automatically (both / and \ work)
- Uses ripgrep (rg) command if available, otherwise falls back to built-in Go implementation

TIPS:
- Patterns should use forward slashes (/) for cross-platform compatibility
- For the most useful results, combine with the Grep tool: first find files with Glob, then search their contents with Grep
- When doing iterative exploration that may require multiple rounds of searching, consider using the Agent tool instead
- Always check if results are truncated and refine your search pattern if needed`
)

type GlobParams struct {
	Pattern string `json:"pattern"`
	Path    string `json:"path"`
}

type GlobResponseMetadata struct {
	NumberOfFiles int  `json:"number_of_files"`
	Truncated     bool `json:"truncated"`
}

type globTool struct {
	workingDir string
}

func NewGlobTool(workingDir string) BaseTool {
	return &globTool{
		workingDir: workingDir,
	}
}

func (g *globTool) Name() string {
	return GlobToolName
}

func (g *globTool) Info() ToolInfo {
	return ToolInfo{
		Name:        GlobToolName,
		Description: globDescription,
		Parameters: map[string]any{
			"pattern": map[string]any{
				"type":        "string",
				"description": "The glob pattern to match files against",
			},
			"path": map[string]any{
				"type":        "string",
				"description": "The directory to search in. Defaults to the current working directory.",
			},
		},
		Required: []string{"pattern"},
	}
}

func (g *globTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params GlobParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}

	if params.Pattern == "" {
		return NewTextErrorResponse("pattern is required"), nil
	}

	searchPath := params.Path
	if searchPath == "" {
		searchPath = g.workingDir
	}

	files, truncated, err := globFiles(ctx, params.Pattern, searchPath, 100)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error finding files: %w", err)
	}

	var output string
	if len(files) == 0 {
		output = "No files found"
	} else {
		output = strings.Join(files, "\n")
		if truncated {
			output += "\n\n(Results are truncated. Consider using a more specific path or pattern.)"
		}
	}

	return WithResponseMetadata(
		NewTextResponse(output),
		GlobResponseMetadata{
			NumberOfFiles: len(files),
			Truncated:     truncated,
		},
	), nil
}

func globFiles(ctx context.Context, pattern, searchPath string, limit int) ([]string, bool, error) {
	cmdRg := getRgCmd(ctx, pattern)
	if cmdRg != nil {
		cmdRg.Dir = searchPath
		matches, err := runRipgrep(cmdRg, searchPath, limit)
		if err == nil {
			return matches, len(matches) >= limit && limit > 0, nil
		}
		slog.Warn("Ripgrep execution failed, falling back to doublestar", "error", err)
	}

	return fsext.GlobWithDoubleStar(pattern, searchPath, limit)
}

func runRipgrep(cmd *exec.Cmd, searchRoot string, limit int) ([]string, error) {
	out, err := cmd.CombinedOutput()
	if err != nil {
		if ee, ok := err.(*exec.ExitError); ok && ee.ExitCode() == 1 {
			return nil, nil
		}
		return nil, fmt.Errorf("ripgrep: %w\n%s", err, out)
	}

	var matches []string
	for p := range bytes.SplitSeq(out, []byte{0}) {
		if len(p) == 0 {
			continue
		}
		absPath := string(p)
		if !filepath.IsAbs(absPath) {
			absPath = filepath.Join(searchRoot, absPath)
		}
		if fsext.SkipHidden(absPath) {
			continue
		}
		matches = append(matches, absPath)
	}

	sort.SliceStable(matches, func(i, j int) bool {
		return len(matches[i]) < len(matches[j])
	})

	if limit > 0 && len(matches) > limit {
		matches = matches[:limit]
	}
	return matches, nil
}



================================================
FILE: internal/llm/tools/grep.go
================================================
package tools

import (
	"bufio"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"os"
	"os/exec"
	"path/filepath"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/charmbracelet/crush/internal/fsext"
)

// regexCache provides thread-safe caching of compiled regex patterns
type regexCache struct {
	cache map[string]*regexp.Regexp
	mu    sync.RWMutex
}

// newRegexCache creates a new regex cache
func newRegexCache() *regexCache {
	return &regexCache{
		cache: make(map[string]*regexp.Regexp),
	}
}

// get retrieves a compiled regex from cache or compiles and caches it
func (rc *regexCache) get(pattern string) (*regexp.Regexp, error) {
	// Try to get from cache first (read lock)
	rc.mu.RLock()
	if regex, exists := rc.cache[pattern]; exists {
		rc.mu.RUnlock()
		return regex, nil
	}
	rc.mu.RUnlock()

	// Compile the regex (write lock)
	rc.mu.Lock()
	defer rc.mu.Unlock()

	// Double-check in case another goroutine compiled it while we waited
	if regex, exists := rc.cache[pattern]; exists {
		return regex, nil
	}

	// Compile and cache the regex
	regex, err := regexp.Compile(pattern)
	if err != nil {
		return nil, err
	}

	rc.cache[pattern] = regex
	return regex, nil
}

// Global regex cache instances
var (
	searchRegexCache = newRegexCache()
	globRegexCache   = newRegexCache()
	// Pre-compiled regex for glob conversion (used frequently)
	globBraceRegex = regexp.MustCompile(`\{([^}]+)\}`)
)

type GrepParams struct {
	Pattern     string `json:"pattern"`
	Path        string `json:"path"`
	Include     string `json:"include"`
	LiteralText bool   `json:"literal_text"`
}

type grepMatch struct {
	path     string
	modTime  time.Time
	lineNum  int
	lineText string
}

type GrepResponseMetadata struct {
	NumberOfMatches int  `json:"number_of_matches"`
	Truncated       bool `json:"truncated"`
}

type grepTool struct {
	workingDir string
}

const (
	GrepToolName    = "grep"
	grepDescription = `Fast content search tool that finds files containing specific text or patterns, returning matching file paths sorted by modification time (newest first).

WHEN TO USE THIS TOOL:
- Use when you need to find files containing specific text or patterns
- Great for searching code bases for function names, variable declarations, or error messages
- Useful for finding all files that use a particular API or pattern

HOW TO USE:
- Provide a regex pattern to search for within file contents
- Set literal_text=true if you want to search for the exact text with special characters (recommended for non-regex users)
- Optionally specify a starting directory (defaults to current working directory)
- Optionally provide an include pattern to filter which files to search
- Results are sorted with most recently modified files first

REGEX PATTERN SYNTAX (when literal_text=false):
- Supports standard regular expression syntax
- 'function' searches for the literal text "function"
- 'log\..*Error' finds text starting with "log." and ending with "Error"
- 'import\s+.*\s+from' finds import statements in JavaScript/TypeScript

COMMON INCLUDE PATTERN EXAMPLES:
- '*.js' - Only search JavaScript files
- '*.{ts,tsx}' - Only search TypeScript files
- '*.go' - Only search Go files

LIMITATIONS:
- Results are limited to 100 files (newest first)
- Performance depends on the number of files being searched
- Very large binary files may be skipped
- Hidden files (starting with '.') are skipped

IGNORE FILE SUPPORT:
- Respects .gitignore patterns to skip ignored files and directories
- Respects .crushignore patterns for additional ignore rules
- Both ignore files are automatically detected in the search root directory

CROSS-PLATFORM NOTES:
- Uses ripgrep (rg) command if available for better performance
- Falls back to built-in Go implementation if ripgrep is not available
- File paths are normalized automatically for cross-platform compatibility

TIPS:
- For faster, more targeted searches, first use Glob to find relevant files, then use Grep
- When doing iterative exploration that may require multiple rounds of searching, consider using the Agent tool instead
- Always check if results are truncated and refine your search pattern if needed
- Use literal_text=true when searching for exact text containing special characters like dots, parentheses, etc.`
)

func NewGrepTool(workingDir string) BaseTool {
	return &grepTool{
		workingDir: workingDir,
	}
}

func (g *grepTool) Name() string {
	return GrepToolName
}

func (g *grepTool) Info() ToolInfo {
	return ToolInfo{
		Name:        GrepToolName,
		Description: grepDescription,
		Parameters: map[string]any{
			"pattern": map[string]any{
				"type":        "string",
				"description": "The regex pattern to search for in file contents",
			},
			"path": map[string]any{
				"type":        "string",
				"description": "The directory to search in. Defaults to the current working directory.",
			},
			"include": map[string]any{
				"type":        "string",
				"description": "File pattern to include in the search (e.g. \"*.js\", \"*.{ts,tsx}\")",
			},
			"literal_text": map[string]any{
				"type":        "boolean",
				"description": "If true, the pattern will be treated as literal text with special regex characters escaped. Default is false.",
			},
		},
		Required: []string{"pattern"},
	}
}

// escapeRegexPattern escapes special regex characters so they're treated as literal characters
func escapeRegexPattern(pattern string) string {
	specialChars := []string{"\\", ".", "+", "*", "?", "(", ")", "[", "]", "{", "}", "^", "$", "|"}
	escaped := pattern

	for _, char := range specialChars {
		escaped = strings.ReplaceAll(escaped, char, "\\"+char)
	}

	return escaped
}

func (g *grepTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params GrepParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}

	if params.Pattern == "" {
		return NewTextErrorResponse("pattern is required"), nil
	}

	// If literal_text is true, escape the pattern
	searchPattern := params.Pattern
	if params.LiteralText {
		searchPattern = escapeRegexPattern(params.Pattern)
	}

	searchPath := params.Path
	if searchPath == "" {
		searchPath = g.workingDir
	}

	matches, truncated, err := searchFiles(ctx, searchPattern, searchPath, params.Include, 100)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error searching files: %w", err)
	}

	var output strings.Builder
	if len(matches) == 0 {
		output.WriteString("No files found")
	} else {
		fmt.Fprintf(&output, "Found %d matches\n", len(matches))

		currentFile := ""
		for _, match := range matches {
			if currentFile != match.path {
				if currentFile != "" {
					output.WriteString("\n")
				}
				currentFile = match.path
				fmt.Fprintf(&output, "%s:\n", match.path)
			}
			if match.lineNum > 0 {
				fmt.Fprintf(&output, "  Line %d: %s\n", match.lineNum, match.lineText)
			} else {
				fmt.Fprintf(&output, "  %s\n", match.path)
			}
		}

		if truncated {
			output.WriteString("\n(Results are truncated. Consider using a more specific path or pattern.)")
		}
	}

	return WithResponseMetadata(
		NewTextResponse(output.String()),
		GrepResponseMetadata{
			NumberOfMatches: len(matches),
			Truncated:       truncated,
		},
	), nil
}

func searchFiles(ctx context.Context, pattern, rootPath, include string, limit int) ([]grepMatch, bool, error) {
	matches, err := searchWithRipgrep(ctx, pattern, rootPath, include)
	if err != nil {
		matches, err = searchFilesWithRegex(pattern, rootPath, include)
		if err != nil {
			return nil, false, err
		}
	}

	sort.Slice(matches, func(i, j int) bool {
		return matches[i].modTime.After(matches[j].modTime)
	})

	truncated := len(matches) > limit
	if truncated {
		matches = matches[:limit]
	}

	return matches, truncated, nil
}

func searchWithRipgrep(ctx context.Context, pattern, path, include string) ([]grepMatch, error) {
	cmd := getRgSearchCmd(ctx, pattern, path, include)
	if cmd == nil {
		return nil, fmt.Errorf("ripgrep not found in $PATH")
	}

	cmd.Args = append(
		cmd.Args,
		"--ignore-file", filepath.Join(path, ".gitignore"),
		"--ignore-file", filepath.Join(path, ".crushignore"),
	)

	output, err := cmd.Output()
	if err != nil {
		if exitErr, ok := err.(*exec.ExitError); ok && exitErr.ExitCode() == 1 {
			return []grepMatch{}, nil
		}
		return nil, err
	}

	lines := strings.Split(strings.TrimSpace(string(output)), "\n")
	matches := make([]grepMatch, 0, len(lines))

	for _, line := range lines {
		if line == "" {
			continue
		}

		// Parse ripgrep output format: file:line:content
		parts := strings.SplitN(line, ":", 3)
		if len(parts) < 3 {
			continue
		}

		filePath := parts[0]
		lineNum, err := strconv.Atoi(parts[1])
		if err != nil {
			continue
		}
		lineText := parts[2]

		fileInfo, err := os.Stat(filePath)
		if err != nil {
			continue // Skip files we can't access
		}

		matches = append(matches, grepMatch{
			path:     filePath,
			modTime:  fileInfo.ModTime(),
			lineNum:  lineNum,
			lineText: lineText,
		})
	}

	return matches, nil
}

func searchFilesWithRegex(pattern, rootPath, include string) ([]grepMatch, error) {
	matches := []grepMatch{}

	// Use cached regex compilation
	regex, err := searchRegexCache.get(pattern)
	if err != nil {
		return nil, fmt.Errorf("invalid regex pattern: %w", err)
	}

	var includePattern *regexp.Regexp
	if include != "" {
		regexPattern := globToRegex(include)
		includePattern, err = globRegexCache.get(regexPattern)
		if err != nil {
			return nil, fmt.Errorf("invalid include pattern: %w", err)
		}
	}

	// Create walker with gitignore and crushignore support
	walker := fsext.NewFastGlobWalker(rootPath)

	err = filepath.Walk(rootPath, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return nil // Skip errors
		}

		if info.IsDir() {
			return nil // Skip directories
		}

		// Use walker's shouldSkip method instead of just SkipHidden
		if walker.ShouldSkip(path) {
			return nil
		}

		if includePattern != nil && !includePattern.MatchString(path) {
			return nil
		}

		match, lineNum, lineText, err := fileContainsPattern(path, regex)
		if err != nil {
			return nil // Skip files we can't read
		}

		if match {
			matches = append(matches, grepMatch{
				path:     path,
				modTime:  info.ModTime(),
				lineNum:  lineNum,
				lineText: lineText,
			})

			if len(matches) >= 200 {
				return filepath.SkipAll
			}
		}

		return nil
	})
	if err != nil {
		return nil, err
	}

	return matches, nil
}

func fileContainsPattern(filePath string, pattern *regexp.Regexp) (bool, int, string, error) {
	// Quick binary file detection
	if isBinaryFile(filePath) {
		return false, 0, "", nil
	}

	file, err := os.Open(filePath)
	if err != nil {
		return false, 0, "", err
	}
	defer file.Close()

	scanner := bufio.NewScanner(file)
	lineNum := 0
	for scanner.Scan() {
		lineNum++
		line := scanner.Text()
		if pattern.MatchString(line) {
			return true, lineNum, line, nil
		}
	}

	return false, 0, "", scanner.Err()
}

var binaryExts = map[string]struct{}{
	".exe": {}, ".dll": {}, ".so": {}, ".dylib": {},
	".bin": {}, ".obj": {}, ".o": {}, ".a": {},
	".zip": {}, ".tar": {}, ".gz": {}, ".bz2": {},
	".jpg": {}, ".jpeg": {}, ".png": {}, ".gif": {},
	".pdf": {}, ".doc": {}, ".docx": {}, ".xls": {},
	".mp3": {}, ".mp4": {}, ".avi": {}, ".mov": {},
}

// isBinaryFile performs a quick check to determine if a file is binary
func isBinaryFile(filePath string) bool {
	// Check file extension first (fastest)
	ext := strings.ToLower(filepath.Ext(filePath))
	if _, isBinary := binaryExts[ext]; isBinary {
		return true
	}

	// Quick content check for files without clear extensions
	file, err := os.Open(filePath)
	if err != nil {
		return false // If we can't open it, let the caller handle the error
	}
	defer file.Close()

	// Read first 512 bytes to check for null bytes
	buffer := make([]byte, 512)
	n, err := file.Read(buffer)
	if err != nil && err != io.EOF {
		return false
	}

	// Check for null bytes (common in binary files)
	for i := range n {
		if buffer[i] == 0 {
			return true
		}
	}

	return false
}

func globToRegex(glob string) string {
	regexPattern := strings.ReplaceAll(glob, ".", "\\.")
	regexPattern = strings.ReplaceAll(regexPattern, "*", ".*")
	regexPattern = strings.ReplaceAll(regexPattern, "?", ".")

	// Use pre-compiled regex instead of compiling each time
	regexPattern = globBraceRegex.ReplaceAllStringFunc(regexPattern, func(match string) string {
		inner := match[1 : len(match)-1]
		return "(" + strings.ReplaceAll(inner, ",", "|") + ")"
	})

	return regexPattern
}



================================================
FILE: internal/llm/tools/grep_test.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"os"
	"path/filepath"
	"regexp"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestRegexCache(t *testing.T) {
	cache := newRegexCache()

	// Test basic caching
	pattern := "test.*pattern"
	regex1, err := cache.get(pattern)
	if err != nil {
		t.Fatalf("Failed to compile regex: %v", err)
	}

	regex2, err := cache.get(pattern)
	if err != nil {
		t.Fatalf("Failed to get cached regex: %v", err)
	}

	// Should be the same instance (cached)
	if regex1 != regex2 {
		t.Error("Expected cached regex to be the same instance")
	}

	// Test that it actually works
	if !regex1.MatchString("test123pattern") {
		t.Error("Regex should match test string")
	}
}

func TestGlobToRegexCaching(t *testing.T) {
	// Test that globToRegex uses pre-compiled regex
	pattern1 := globToRegex("*.{js,ts}")

	// Should not panic and should work correctly
	regex1, err := regexp.Compile(pattern1)
	if err != nil {
		t.Fatalf("Failed to compile glob regex: %v", err)
	}

	if !regex1.MatchString("test.js") {
		t.Error("Glob regex should match .js files")
	}
	if !regex1.MatchString("test.ts") {
		t.Error("Glob regex should match .ts files")
	}
	if regex1.MatchString("test.go") {
		t.Error("Glob regex should not match .go files")
	}
}

func TestGrepWithIgnoreFiles(t *testing.T) {
	tempDir := t.TempDir()

	// Create test files
	testFiles := map[string]string{
		"file1.txt":           "hello world",
		"file2.txt":           "hello world",
		"ignored/file3.txt":   "hello world",
		"node_modules/lib.js": "hello world",
		"secret.key":          "hello world",
	}

	for path, content := range testFiles {
		fullPath := filepath.Join(tempDir, path)
		require.NoError(t, os.MkdirAll(filepath.Dir(fullPath), 0o755))
		require.NoError(t, os.WriteFile(fullPath, []byte(content), 0o644))
	}

	// Create .gitignore file
	gitignoreContent := "ignored/\n*.key\n"
	require.NoError(t, os.WriteFile(filepath.Join(tempDir, ".gitignore"), []byte(gitignoreContent), 0o644))

	// Create .crushignore file
	crushignoreContent := "node_modules/\n"
	require.NoError(t, os.WriteFile(filepath.Join(tempDir, ".crushignore"), []byte(crushignoreContent), 0o644))

	// Create grep tool
	grepTool := NewGrepTool(tempDir)

	// Create grep parameters
	params := GrepParams{
		Pattern: "hello world",
		Path:    tempDir,
	}
	paramsJSON, err := json.Marshal(params)
	require.NoError(t, err)

	// Run grep
	call := ToolCall{Input: string(paramsJSON)}
	response, err := grepTool.Run(context.Background(), call)
	require.NoError(t, err)

	// Check results - should only find file1.txt and file2.txt
	// ignored/file3.txt should be ignored by .gitignore
	// node_modules/lib.js should be ignored by .crushignore
	// secret.key should be ignored by .gitignore
	result := response.Content
	require.Contains(t, result, "file1.txt")
	require.Contains(t, result, "file2.txt")
	require.NotContains(t, result, "file3.txt")
	require.NotContains(t, result, "lib.js")
	require.NotContains(t, result, "secret.key")
}

func TestSearchImplementations(t *testing.T) {
	t.Parallel()
	tempDir := t.TempDir()

	for path, content := range map[string]string{
		"file1.go":         "package main\nfunc main() {\n\tfmt.Println(\"hello world\")\n}",
		"file2.js":         "console.log('hello world');",
		"file3.txt":        "hello world from text file",
		"binary.exe":       "\x00\x01\x02\x03",
		"empty.txt":        "",
		"subdir/nested.go": "package nested\n// hello world comment",
		".hidden.txt":      "hello world in hidden file",
		"file4.txt":        "hello world from a banana",
		"file5.txt":        "hello world from a grape",
	} {
		fullPath := filepath.Join(tempDir, path)
		require.NoError(t, os.MkdirAll(filepath.Dir(fullPath), 0o755))
		require.NoError(t, os.WriteFile(fullPath, []byte(content), 0o644))
	}

	require.NoError(t, os.WriteFile(filepath.Join(tempDir, ".gitignore"), []byte("file4.txt\n"), 0o644))
	require.NoError(t, os.WriteFile(filepath.Join(tempDir, ".crushignore"), []byte("file5.txt\n"), 0o644))

	for name, fn := range map[string]func(pattern, path, include string) ([]grepMatch, error){
		"regex": searchFilesWithRegex,
		"rg": func(pattern, path, include string) ([]grepMatch, error) {
			return searchWithRipgrep(t.Context(), pattern, path, include)
		},
	} {
		t.Run(name, func(t *testing.T) {
			t.Parallel()

			if name == "rg" && getRg() == "" {
				t.Skip("rg is not in $PATH")
			}

			matches, err := fn("hello world", tempDir, "")
			require.NoError(t, err)

			require.Equal(t, len(matches), 4)
			for _, match := range matches {
				require.NotEmpty(t, match.path)
				require.NotZero(t, match.lineNum)
				require.NotEmpty(t, match.lineText)
				require.NotZero(t, match.modTime)
				require.NotContains(t, match.path, ".hidden.txt")
				require.NotContains(t, match.path, "file4.txt")
				require.NotContains(t, match.path, "file5.txt")
				require.NotContains(t, match.path, "binary.exe")
			}
		})
	}
}

// Benchmark to show performance improvement
func BenchmarkRegexCacheVsCompile(b *testing.B) {
	cache := newRegexCache()
	pattern := "test.*pattern.*[0-9]+"

	b.Run("WithCache", func(b *testing.B) {
		for b.Loop() {
			_, err := cache.get(pattern)
			if err != nil {
				b.Fatal(err)
			}
		}
	})

	b.Run("WithoutCache", func(b *testing.B) {
		for b.Loop() {
			_, err := regexp.Compile(pattern)
			if err != nil {
				b.Fatal(err)
			}
		}
	})
}



================================================
FILE: internal/llm/tools/ls.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"os"
	"path/filepath"
	"strings"

	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/permission"
)

type LSParams struct {
	Path   string   `json:"path"`
	Ignore []string `json:"ignore"`
}

type LSPermissionsParams struct {
	Path   string   `json:"path"`
	Ignore []string `json:"ignore"`
}

type TreeNode struct {
	Name     string      `json:"name"`
	Path     string      `json:"path"`
	Type     string      `json:"type"` // "file" or "directory"
	Children []*TreeNode `json:"children,omitempty"`
}

type LSResponseMetadata struct {
	NumberOfFiles int  `json:"number_of_files"`
	Truncated     bool `json:"truncated"`
}

type lsTool struct {
	workingDir  string
	permissions permission.Service
}

const (
	LSToolName    = "ls"
	MaxLSFiles    = 1000
	lsDescription = `Directory listing tool that shows files and subdirectories in a tree structure, helping you explore and understand the project organization.

WHEN TO USE THIS TOOL:
- Use when you need to explore the structure of a directory
- Helpful for understanding the organization of a project
- Good first step when getting familiar with a new codebase

HOW TO USE:
- Provide a path to list (defaults to current working directory)
- Optionally specify glob patterns to ignore
- Results are displayed in a tree structure

FEATURES:
- Displays a hierarchical view of files and directories
- Automatically skips hidden files/directories (starting with '.')
- Skips common system directories like __pycache__
- Can filter out files matching specific patterns

LIMITATIONS:
- Results are limited to 1000 files
- Very large directories will be truncated
- Does not show file sizes or permissions
- Cannot recursively list all directories in a large project

WINDOWS NOTES:
- Hidden file detection uses Unix convention (files starting with '.')
- Windows-specific hidden files (with hidden attribute) are not automatically skipped
- Common Windows directories like System32, Program Files are not in default ignore list
- Path separators are handled automatically (both / and \ work)

TIPS:
- Use Glob tool for finding files by name patterns instead of browsing
- Use Grep tool for searching file contents
- Combine with other tools for more effective exploration`
)

func NewLsTool(permissions permission.Service, workingDir string) BaseTool {
	return &lsTool{
		workingDir:  workingDir,
		permissions: permissions,
	}
}

func (l *lsTool) Name() string {
	return LSToolName
}

func (l *lsTool) Info() ToolInfo {
	return ToolInfo{
		Name:        LSToolName,
		Description: lsDescription,
		Parameters: map[string]any{
			"path": map[string]any{
				"type":        "string",
				"description": "The path to the directory to list (defaults to current working directory)",
			},
			"ignore": map[string]any{
				"type":        "array",
				"description": "List of glob patterns to ignore",
				"items": map[string]any{
					"type": "string",
				},
			},
		},
		Required: []string{"path"},
	}
}

func (l *lsTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params LSParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}

	searchPath := params.Path
	if searchPath == "" {
		searchPath = l.workingDir
	}

	var err error
	searchPath, err = fsext.Expand(searchPath)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error expanding path: %w", err)
	}

	if !filepath.IsAbs(searchPath) {
		searchPath = filepath.Join(l.workingDir, searchPath)
	}

	// Check if directory is outside working directory and request permission if needed
	absWorkingDir, err := filepath.Abs(l.workingDir)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error resolving working directory: %w", err)
	}

	absSearchPath, err := filepath.Abs(searchPath)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error resolving search path: %w", err)
	}

	relPath, err := filepath.Rel(absWorkingDir, absSearchPath)
	if err != nil || strings.HasPrefix(relPath, "..") {
		// Directory is outside working directory, request permission
		sessionID, messageID := GetContextValues(ctx)
		if sessionID == "" || messageID == "" {
			return ToolResponse{}, fmt.Errorf("session ID and message ID are required for accessing directories outside working directory")
		}

		granted := l.permissions.Request(
			permission.CreatePermissionRequest{
				SessionID:   sessionID,
				Path:        absSearchPath,
				ToolCallID:  call.ID,
				ToolName:    LSToolName,
				Action:      "list",
				Description: fmt.Sprintf("List directory outside working directory: %s", absSearchPath),
				Params:      LSPermissionsParams(params),
			},
		)

		if !granted {
			return ToolResponse{}, permission.ErrorPermissionDenied
		}
	}

	output, err := ListDirectoryTree(searchPath, params.Ignore)
	if err != nil {
		return ToolResponse{}, err
	}

	// Get file count for metadata
	files, truncated, err := fsext.ListDirectory(searchPath, params.Ignore, MaxLSFiles)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error listing directory for metadata: %w", err)
	}

	return WithResponseMetadata(
		NewTextResponse(output),
		LSResponseMetadata{
			NumberOfFiles: len(files),
			Truncated:     truncated,
		},
	), nil
}

func ListDirectoryTree(searchPath string, ignore []string) (string, error) {
	if _, err := os.Stat(searchPath); os.IsNotExist(err) {
		return "", fmt.Errorf("path does not exist: %s", searchPath)
	}

	files, truncated, err := fsext.ListDirectory(searchPath, ignore, MaxLSFiles)
	if err != nil {
		return "", fmt.Errorf("error listing directory: %w", err)
	}

	tree := createFileTree(files, searchPath)
	output := printTree(tree, searchPath)

	if truncated {
		output = fmt.Sprintf("There are more than %d files in the directory. Use a more specific path or use the Glob tool to find specific files. The first %d files and directories are included below:\n\n%s", MaxLSFiles, MaxLSFiles, output)
	}

	return output, nil
}

func createFileTree(sortedPaths []string, rootPath string) []*TreeNode {
	root := []*TreeNode{}
	pathMap := make(map[string]*TreeNode)

	for _, path := range sortedPaths {
		relativePath := strings.TrimPrefix(path, rootPath)
		parts := strings.Split(relativePath, string(filepath.Separator))
		currentPath := ""
		var parentPath string

		var cleanParts []string
		for _, part := range parts {
			if part != "" {
				cleanParts = append(cleanParts, part)
			}
		}
		parts = cleanParts

		if len(parts) == 0 {
			continue
		}

		for i, part := range parts {
			if currentPath == "" {
				currentPath = part
			} else {
				currentPath = filepath.Join(currentPath, part)
			}

			if _, exists := pathMap[currentPath]; exists {
				parentPath = currentPath
				continue
			}

			isLastPart := i == len(parts)-1
			isDir := !isLastPart || strings.HasSuffix(relativePath, string(filepath.Separator))
			nodeType := "file"
			if isDir {
				nodeType = "directory"
			}
			newNode := &TreeNode{
				Name:     part,
				Path:     currentPath,
				Type:     nodeType,
				Children: []*TreeNode{},
			}

			pathMap[currentPath] = newNode

			if i > 0 && parentPath != "" {
				if parent, ok := pathMap[parentPath]; ok {
					parent.Children = append(parent.Children, newNode)
				}
			} else {
				root = append(root, newNode)
			}

			parentPath = currentPath
		}
	}

	return root
}

func printTree(tree []*TreeNode, rootPath string) string {
	var result strings.Builder

	result.WriteString("- ")
	result.WriteString(rootPath)
	if rootPath[len(rootPath)-1] != '/' {
		result.WriteByte(filepath.Separator)
	}
	result.WriteByte('\n')

	for _, node := range tree {
		printNode(&result, node, 1)
	}

	return result.String()
}

func printNode(builder *strings.Builder, node *TreeNode, level int) {
	indent := strings.Repeat("  ", level)

	nodeName := node.Name
	if node.Type == "directory" {
		nodeName = nodeName + string(filepath.Separator)
	}

	fmt.Fprintf(builder, "%s- %s\n", indent, nodeName)

	if node.Type == "directory" && len(node.Children) > 0 {
		for _, child := range node.Children {
			printNode(builder, child, level+1)
		}
	}
}



================================================
FILE: internal/llm/tools/multiedit.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"log/slog"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/diff"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/history"
	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/permission"
)

type MultiEditOperation struct {
	OldString  string `json:"old_string"`
	NewString  string `json:"new_string"`
	ReplaceAll bool   `json:"replace_all,omitempty"`
}

type MultiEditParams struct {
	FilePath string               `json:"file_path"`
	Edits    []MultiEditOperation `json:"edits"`
}

type MultiEditPermissionsParams struct {
	FilePath   string `json:"file_path"`
	OldContent string `json:"old_content,omitempty"`
	NewContent string `json:"new_content,omitempty"`
}

type MultiEditResponseMetadata struct {
	Additions    int    `json:"additions"`
	Removals     int    `json:"removals"`
	OldContent   string `json:"old_content,omitempty"`
	NewContent   string `json:"new_content,omitempty"`
	EditsApplied int    `json:"edits_applied"`
}

type multiEditTool struct {
	lspClients  map[string]*lsp.Client
	permissions permission.Service
	files       history.Service
	workingDir  string
}

const (
	MultiEditToolName    = "multiedit"
	multiEditDescription = `This is a tool for making multiple edits to a single file in one operation. It is built on top of the Edit tool and allows you to perform multiple find-and-replace operations efficiently. Prefer this tool over the Edit tool when you need to make multiple edits to the same file.

Before using this tool:

1. Use the Read tool to understand the file's contents and context

2. Verify the directory path is correct

To make multiple file edits, provide the following:
1. file_path: The absolute path to the file to modify (must be absolute, not relative)
2. edits: An array of edit operations to perform, where each edit contains:
   - old_string: The text to replace (must match the file contents exactly, including all whitespace and indentation)
   - new_string: The edited text to replace the old_string
   - replace_all: Replace all occurrences of old_string. This parameter is optional and defaults to false.

IMPORTANT:
- All edits are applied in sequence, in the order they are provided
- Each edit operates on the result of the previous edit
- All edits must be valid for the operation to succeed - if any edit fails, none will be applied
- This tool is ideal when you need to make several changes to different parts of the same file

CRITICAL REQUIREMENTS:
1. All edits follow the same requirements as the single Edit tool
2. The edits are atomic - either all succeed or none are applied
3. Plan your edits carefully to avoid conflicts between sequential operations

WARNING:
- The tool will fail if edits.old_string doesn't match the file contents exactly (including whitespace)
- The tool will fail if edits.old_string and edits.new_string are the same
- Since edits are applied in sequence, ensure that earlier edits don't affect the text that later edits are trying to find

When making edits:
- Ensure all edits result in idiomatic, correct code
- Do not leave the code in a broken state
- Always use absolute file paths (starting with /)
- Only use emojis if the user explicitly requests it. Avoid adding emojis to files unless asked.
- Use replace_all for replacing and renaming strings across the file. This parameter is useful if you want to rename a variable for instance.

If you want to create a new file, use:
- A new file path, including dir name if needed
- First edit: empty old_string and the new file's contents as new_string
- Subsequent edits: normal edit operations on the created content`
)

func NewMultiEditTool(lspClients map[string]*lsp.Client, permissions permission.Service, files history.Service, workingDir string) BaseTool {
	return &multiEditTool{
		lspClients:  lspClients,
		permissions: permissions,
		files:       files,
		workingDir:  workingDir,
	}
}

func (m *multiEditTool) Name() string {
	return MultiEditToolName
}

func (m *multiEditTool) Info() ToolInfo {
	return ToolInfo{
		Name:        MultiEditToolName,
		Description: multiEditDescription,
		Parameters: map[string]any{
			"file_path": map[string]any{
				"type":        "string",
				"description": "The absolute path to the file to modify",
			},
			"edits": map[string]any{
				"type": "array",
				"items": map[string]any{
					"type": "object",
					"properties": map[string]any{
						"old_string": map[string]any{
							"type":        "string",
							"description": "The text to replace",
						},
						"new_string": map[string]any{
							"type":        "string",
							"description": "The text to replace it with",
						},
						"replace_all": map[string]any{
							"type":        "boolean",
							"default":     false,
							"description": "Replace all occurrences of old_string (default false).",
						},
					},
					"required":             []string{"old_string", "new_string"},
					"additionalProperties": false,
				},
				"minItems":    1,
				"description": "Array of edit operations to perform sequentially on the file",
			},
		},
		Required: []string{"file_path", "edits"},
	}
}

func (m *multiEditTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params MultiEditParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse("invalid parameters"), nil
	}

	if params.FilePath == "" {
		return NewTextErrorResponse("file_path is required"), nil
	}

	if len(params.Edits) == 0 {
		return NewTextErrorResponse("at least one edit operation is required"), nil
	}

	if !filepath.IsAbs(params.FilePath) {
		params.FilePath = filepath.Join(m.workingDir, params.FilePath)
	}

	// Validate all edits before applying any
	if err := m.validateEdits(params.Edits); err != nil {
		return NewTextErrorResponse(err.Error()), nil
	}

	var response ToolResponse
	var err error

	// Handle file creation case (first edit has empty old_string)
	if len(params.Edits) > 0 && params.Edits[0].OldString == "" {
		response, err = m.processMultiEditWithCreation(ctx, params, call)
	} else {
		response, err = m.processMultiEditExistingFile(ctx, params, call)
	}

	if err != nil {
		return response, err
	}

	if response.IsError {
		return response, nil
	}

	// Wait for LSP diagnostics and add them to the response
	waitForLspDiagnostics(ctx, params.FilePath, m.lspClients)
	text := fmt.Sprintf("<result>\n%s\n</result>\n", response.Content)
	text += getDiagnostics(params.FilePath, m.lspClients)
	response.Content = text
	return response, nil
}

func (m *multiEditTool) validateEdits(edits []MultiEditOperation) error {
	for i, edit := range edits {
		if edit.OldString == edit.NewString {
			return fmt.Errorf("edit %d: old_string and new_string are identical", i+1)
		}
		// Only the first edit can have empty old_string (for file creation)
		if i > 0 && edit.OldString == "" {
			return fmt.Errorf("edit %d: only the first edit can have empty old_string (for file creation)", i+1)
		}
	}
	return nil
}

func (m *multiEditTool) processMultiEditWithCreation(ctx context.Context, params MultiEditParams, call ToolCall) (ToolResponse, error) {
	// First edit creates the file
	firstEdit := params.Edits[0]
	if firstEdit.OldString != "" {
		return NewTextErrorResponse("first edit must have empty old_string for file creation"), nil
	}

	// Check if file already exists
	if _, err := os.Stat(params.FilePath); err == nil {
		return NewTextErrorResponse(fmt.Sprintf("file already exists: %s", params.FilePath)), nil
	} else if !os.IsNotExist(err) {
		return ToolResponse{}, fmt.Errorf("failed to access file: %w", err)
	}

	// Create parent directories
	dir := filepath.Dir(params.FilePath)
	if err := os.MkdirAll(dir, 0o755); err != nil {
		return ToolResponse{}, fmt.Errorf("failed to create parent directories: %w", err)
	}

	// Start with the content from the first edit
	currentContent := firstEdit.NewString

	// Apply remaining edits to the content
	for i := 1; i < len(params.Edits); i++ {
		edit := params.Edits[i]
		newContent, err := m.applyEditToContent(currentContent, edit)
		if err != nil {
			return NewTextErrorResponse(fmt.Sprintf("edit %d failed: %s", i+1, err.Error())), nil
		}
		currentContent = newContent
	}

	// Get session and message IDs
	sessionID, messageID := GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for creating a new file")
	}

	// Check permissions
	_, additions, removals := diff.GenerateDiff("", currentContent, strings.TrimPrefix(params.FilePath, m.workingDir))

	p := m.permissions.Request(permission.CreatePermissionRequest{
		SessionID:   sessionID,
		Path:        fsext.PathOrPrefix(params.FilePath, m.workingDir),
		ToolCallID:  call.ID,
		ToolName:    MultiEditToolName,
		Action:      "write",
		Description: fmt.Sprintf("Create file %s with %d edits", params.FilePath, len(params.Edits)),
		Params: MultiEditPermissionsParams{
			FilePath:   params.FilePath,
			OldContent: "",
			NewContent: currentContent,
		},
	})
	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	// Write the file
	err := os.WriteFile(params.FilePath, []byte(currentContent), 0o644)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to write file: %w", err)
	}

	// Update file history
	_, err = m.files.Create(ctx, sessionID, params.FilePath, "")
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error creating file history: %w", err)
	}

	_, err = m.files.CreateVersion(ctx, sessionID, params.FilePath, currentContent)
	if err != nil {
		slog.Debug("Error creating file history version", "error", err)
	}

	recordFileWrite(params.FilePath)
	recordFileRead(params.FilePath)

	return WithResponseMetadata(
		NewTextResponse(fmt.Sprintf("File created with %d edits: %s", len(params.Edits), params.FilePath)),
		MultiEditResponseMetadata{
			OldContent:   "",
			NewContent:   currentContent,
			Additions:    additions,
			Removals:     removals,
			EditsApplied: len(params.Edits),
		},
	), nil
}

func (m *multiEditTool) processMultiEditExistingFile(ctx context.Context, params MultiEditParams, call ToolCall) (ToolResponse, error) {
	// Validate file exists and is readable
	fileInfo, err := os.Stat(params.FilePath)
	if err != nil {
		if os.IsNotExist(err) {
			return NewTextErrorResponse(fmt.Sprintf("file not found: %s", params.FilePath)), nil
		}
		return ToolResponse{}, fmt.Errorf("failed to access file: %w", err)
	}

	if fileInfo.IsDir() {
		return NewTextErrorResponse(fmt.Sprintf("path is a directory, not a file: %s", params.FilePath)), nil
	}

	// Check if file was read before editing
	if getLastReadTime(params.FilePath).IsZero() {
		return NewTextErrorResponse("you must read the file before editing it. Use the View tool first"), nil
	}

	// Check if file was modified since last read
	modTime := fileInfo.ModTime()
	lastRead := getLastReadTime(params.FilePath)
	if modTime.After(lastRead) {
		return NewTextErrorResponse(
			fmt.Sprintf("file %s has been modified since it was last read (mod time: %s, last read: %s)",
				params.FilePath, modTime.Format(time.RFC3339), lastRead.Format(time.RFC3339),
			)), nil
	}

	// Read current file content
	content, err := os.ReadFile(params.FilePath)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to read file: %w", err)
	}

	oldContent, isCrlf := fsext.ToUnixLineEndings(string(content))
	currentContent := oldContent

	// Apply all edits sequentially
	for i, edit := range params.Edits {
		newContent, err := m.applyEditToContent(currentContent, edit)
		if err != nil {
			return NewTextErrorResponse(fmt.Sprintf("edit %d failed: %s", i+1, err.Error())), nil
		}
		currentContent = newContent
	}

	// Check if content actually changed
	if oldContent == currentContent {
		return NewTextErrorResponse("no changes made - all edits resulted in identical content"), nil
	}

	// Get session and message IDs
	sessionID, messageID := GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session ID and message ID are required for editing file")
	}

	// Generate diff and check permissions
	_, additions, removals := diff.GenerateDiff(oldContent, currentContent, strings.TrimPrefix(params.FilePath, m.workingDir))
	p := m.permissions.Request(permission.CreatePermissionRequest{
		SessionID:   sessionID,
		Path:        fsext.PathOrPrefix(params.FilePath, m.workingDir),
		ToolCallID:  call.ID,
		ToolName:    MultiEditToolName,
		Action:      "write",
		Description: fmt.Sprintf("Apply %d edits to file %s", len(params.Edits), params.FilePath),
		Params: MultiEditPermissionsParams{
			FilePath:   params.FilePath,
			OldContent: oldContent,
			NewContent: currentContent,
		},
	})
	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	if isCrlf {
		currentContent, _ = fsext.ToWindowsLineEndings(currentContent)
	}

	// Write the updated content
	err = os.WriteFile(params.FilePath, []byte(currentContent), 0o644)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to write file: %w", err)
	}

	// Update file history
	file, err := m.files.GetByPathAndSession(ctx, params.FilePath, sessionID)
	if err != nil {
		_, err = m.files.Create(ctx, sessionID, params.FilePath, oldContent)
		if err != nil {
			return ToolResponse{}, fmt.Errorf("error creating file history: %w", err)
		}
	}
	if file.Content != oldContent {
		// User manually changed the content, store an intermediate version
		_, err = m.files.CreateVersion(ctx, sessionID, params.FilePath, oldContent)
		if err != nil {
			slog.Debug("Error creating file history version", "error", err)
		}
	}

	// Store the new version
	_, err = m.files.CreateVersion(ctx, sessionID, params.FilePath, currentContent)
	if err != nil {
		slog.Debug("Error creating file history version", "error", err)
	}

	recordFileWrite(params.FilePath)
	recordFileRead(params.FilePath)

	return WithResponseMetadata(
		NewTextResponse(fmt.Sprintf("Applied %d edits to file: %s", len(params.Edits), params.FilePath)),
		MultiEditResponseMetadata{
			OldContent:   oldContent,
			NewContent:   currentContent,
			Additions:    additions,
			Removals:     removals,
			EditsApplied: len(params.Edits),
		},
	), nil
}

func (m *multiEditTool) applyEditToContent(content string, edit MultiEditOperation) (string, error) {
	if edit.OldString == "" && edit.NewString == "" {
		return content, nil
	}

	if edit.OldString == "" {
		return "", fmt.Errorf("old_string cannot be empty for content replacement")
	}

	var newContent string
	var replacementCount int

	if edit.ReplaceAll {
		newContent = strings.ReplaceAll(content, edit.OldString, edit.NewString)
		replacementCount = strings.Count(content, edit.OldString)
		if replacementCount == 0 {
			return "", fmt.Errorf("old_string not found in content. Make sure it matches exactly, including whitespace and line breaks")
		}
	} else {
		index := strings.Index(content, edit.OldString)
		if index == -1 {
			return "", fmt.Errorf("old_string not found in content. Make sure it matches exactly, including whitespace and line breaks")
		}

		lastIndex := strings.LastIndex(content, edit.OldString)
		if index != lastIndex {
			return "", fmt.Errorf("old_string appears multiple times in the content. Please provide more context to ensure a unique match, or set replace_all to true")
		}

		newContent = content[:index] + edit.NewString + content[index+len(edit.OldString):]
		replacementCount = 1
	}

	return newContent, nil
}



================================================
FILE: internal/llm/tools/rg.go
================================================
package tools

import (
	"context"
	"log/slog"
	"os/exec"
	"path/filepath"
	"strings"
	"sync"

	"github.com/charmbracelet/crush/internal/log"
)

var getRg = sync.OnceValue(func() string {
	path, err := exec.LookPath("rg")
	if err != nil {
		if log.Initialized() {
			slog.Warn("Ripgrep (rg) not found in $PATH. Some grep features might be limited or slower.")
		}
		return ""
	}
	return path
})

func getRgCmd(ctx context.Context, globPattern string) *exec.Cmd {
	name := getRg()
	if name == "" {
		return nil
	}
	args := []string{"--files", "-L", "--null"}
	if globPattern != "" {
		if !filepath.IsAbs(globPattern) && !strings.HasPrefix(globPattern, "/") {
			globPattern = "/" + globPattern
		}
		args = append(args, "--glob", globPattern)
	}
	return exec.CommandContext(ctx, name, args...)
}

func getRgSearchCmd(ctx context.Context, pattern, path, include string) *exec.Cmd {
	name := getRg()
	if name == "" {
		return nil
	}
	// Use -n to show line numbers and include the matched line
	args := []string{"-H", "-n", pattern}
	if include != "" {
		args = append(args, "--glob", include)
	}
	args = append(args, path)

	return exec.CommandContext(ctx, name, args...)
}



================================================
FILE: internal/llm/tools/safe.go
================================================
package tools

import "runtime"

var safeCommands = []string{
	// Bash builtins and core utils
	"cal",
	"date",
	"df",
	"du",
	"echo",
	"env",
	"free",
	"groups",
	"hostname",
	"id",
	"kill",
	"killall",
	"ls",
	"nice",
	"nohup",
	"printenv",
	"ps",
	"pwd",
	"set",
	"time",
	"timeout",
	"top",
	"type",
	"uname",
	"unset",
	"uptime",
	"whatis",
	"whereis",
	"which",
	"whoami",

	// Git
	"git blame",
	"git branch",
	"git config --get",
	"git config --list",
	"git describe",
	"git diff",
	"git grep",
	"git log",
	"git ls-files",
	"git ls-remote",
	"git remote",
	"git rev-parse",
	"git shortlog",
	"git show",
	"git status",
	"git tag",
}

func init() {
	if runtime.GOOS == "windows" {
		safeCommands = append(
			safeCommands,
			// Windows-specific commands
			"ipconfig",
			"nslookup",
			"ping",
			"systeminfo",
			"tasklist",
			"where",
		)
	}
}



================================================
FILE: internal/llm/tools/sourcegraph.go
================================================
package tools

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"strings"
	"time"
)

type SourcegraphParams struct {
	Query         string `json:"query"`
	Count         int    `json:"count,omitempty"`
	ContextWindow int    `json:"context_window,omitempty"`
	Timeout       int    `json:"timeout,omitempty"`
}

type SourcegraphResponseMetadata struct {
	NumberOfMatches int  `json:"number_of_matches"`
	Truncated       bool `json:"truncated"`
}

type sourcegraphTool struct {
	client *http.Client
}

const (
	SourcegraphToolName        = "sourcegraph"
	sourcegraphToolDescription = `Search code across public repositories using Sourcegraph's GraphQL API.

WHEN TO USE THIS TOOL:
- Use when you need to find code examples or implementations across public repositories
- Helpful for researching how others have solved similar problems
- Useful for discovering patterns and best practices in open source code

HOW TO USE:
- Provide a search query using Sourcegraph's query syntax
- Optionally specify the number of results to return (default: 10)
- Optionally set a timeout for the request

QUERY SYNTAX:
- Basic search: "fmt.Println" searches for exact matches
- File filters: "file:.go fmt.Println" limits to Go files
- Repository filters: "repo:^github\.com/golang/go$ fmt.Println" limits to specific repos
- Language filters: "lang:go fmt.Println" limits to Go code
- Boolean operators: "fmt.Println AND log.Fatal" for combined terms
- Regular expressions: "fmt\.(Print|Printf|Println)" for pattern matching
- Quoted strings: "\"exact phrase\"" for exact phrase matching
- Exclude filters: "-file:test" or "-repo:forks" to exclude matches

ADVANCED FILTERS:
- Repository filters:
  * "repo:name" - Match repositories with name containing "name"
  * "repo:^github\.com/org/repo$" - Exact repository match
  * "repo:org/repo@branch" - Search specific branch
  * "repo:org/repo rev:branch" - Alternative branch syntax
  * "-repo:name" - Exclude repositories
  * "fork:yes" or "fork:only" - Include or only show forks
  * "archived:yes" or "archived:only" - Include or only show archived repos
  * "visibility:public" or "visibility:private" - Filter by visibility

- File filters:
  * "file:\.js$" - Files with .js extension
  * "file:internal/" - Files in internal directory
  * "-file:test" - Exclude test files
  * "file:has.content(Copyright)" - Files containing "Copyright"
  * "file:has.contributor([email protected])" - Files with specific contributor

- Content filters:
  * "content:\"exact string\"" - Search for exact string
  * "-content:\"unwanted\"" - Exclude files with unwanted content
  * "case:yes" - Case-sensitive search

- Type filters:
  * "type:symbol" - Search for symbols (functions, classes, etc.)
  * "type:file" - Search file content only
  * "type:path" - Search filenames only
  * "type:diff" - Search code changes
  * "type:commit" - Search commit messages

- Commit/diff search:
  * "after:\"1 month ago\"" - Commits after date
  * "before:\"2023-01-01\"" - Commits before date
  * "author:name" - Commits by author
  * "message:\"fix bug\"" - Commits with message

- Result selection:
  * "select:repo" - Show only repository names
  * "select:file" - Show only file paths
  * "select:content" - Show only matching content
  * "select:symbol" - Show only matching symbols

- Result control:
  * "count:100" - Return up to 100 results
  * "count:all" - Return all results
  * "timeout:30s" - Set search timeout

EXAMPLES:
- "file:.go context.WithTimeout" - Find Go code using context.WithTimeout
- "lang:typescript useState type:symbol" - Find TypeScript React useState hooks
- "repo:^github\.com/kubernetes/kubernetes$ pod list type:file" - Find Kubernetes files related to pod listing
- "repo:sourcegraph/sourcegraph$ after:\"3 months ago\" type:diff database" - Recent changes to database code
- "file:Dockerfile (alpine OR ubuntu) -content:alpine:latest" - Dockerfiles with specific base images
- "repo:has.path(\.py) file:requirements.txt tensorflow" - Python projects using TensorFlow

BOOLEAN OPERATORS:
- "term1 AND term2" - Results containing both terms
- "term1 OR term2" - Results containing either term
- "term1 NOT term2" - Results with term1 but not term2
- "term1 and (term2 or term3)" - Grouping with parentheses

LIMITATIONS:
- Only searches public repositories
- Rate limits may apply
- Complex queries may take longer to execute
- Maximum of 20 results per query

TIPS:
- Use specific file extensions to narrow results
- Add repo: filters for more targeted searches
- Use type:symbol to find function/method definitions
- Use type:file to find relevant files`
)

func NewSourcegraphTool() BaseTool {
	return &sourcegraphTool{
		client: &http.Client{
			Timeout: 30 * time.Second,
			Transport: &http.Transport{
				MaxIdleConns:        100,
				MaxIdleConnsPerHost: 10,
				IdleConnTimeout:     90 * time.Second,
			},
		},
	}
}

func (t *sourcegraphTool) Name() string {
	return SourcegraphToolName
}

func (t *sourcegraphTool) Info() ToolInfo {
	return ToolInfo{
		Name:        SourcegraphToolName,
		Description: sourcegraphToolDescription,
		Parameters: map[string]any{
			"query": map[string]any{
				"type":        "string",
				"description": "The Sourcegraph search query",
			},
			"count": map[string]any{
				"type":        "number",
				"description": "Optional number of results to return (default: 10, max: 20)",
			},
			"context_window": map[string]any{
				"type":        "number",
				"description": "The context around the match to return (default: 10 lines)",
			},
			"timeout": map[string]any{
				"type":        "number",
				"description": "Optional timeout in seconds (max 120)",
			},
		},
		Required: []string{"query"},
	}
}

func (t *sourcegraphTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params SourcegraphParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse("Failed to parse sourcegraph parameters: " + err.Error()), nil
	}

	if params.Query == "" {
		return NewTextErrorResponse("Query parameter is required"), nil
	}

	if params.Count <= 0 {
		params.Count = 10
	} else if params.Count > 20 {
		params.Count = 20 // Limit to 20 results
	}

	if params.ContextWindow <= 0 {
		params.ContextWindow = 10 // Default context window
	}

	// Handle timeout with context
	requestCtx := ctx
	if params.Timeout > 0 {
		maxTimeout := 120 // 2 minutes
		if params.Timeout > maxTimeout {
			params.Timeout = maxTimeout
		}
		var cancel context.CancelFunc
		requestCtx, cancel = context.WithTimeout(ctx, time.Duration(params.Timeout)*time.Second)
		defer cancel()
	}

	type graphqlRequest struct {
		Query     string `json:"query"`
		Variables struct {
			Query string `json:"query"`
		} `json:"variables"`
	}

	request := graphqlRequest{
		Query: "query Search($query: String!) { search(query: $query, version: V2, patternType: keyword ) { results { matchCount, limitHit, resultCount, approximateResultCount, missing { name }, timedout { name }, indexUnavailable, results { __typename, ... on FileMatch { repository { name }, file { path, url, content }, lineMatches { preview, lineNumber, offsetAndLengths } } } } } }",
	}
	request.Variables.Query = params.Query

	graphqlQueryBytes, err := json.Marshal(request)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to marshal GraphQL request: %w", err)
	}
	graphqlQuery := string(graphqlQueryBytes)

	req, err := http.NewRequestWithContext(
		requestCtx,
		"POST",
		"https://sourcegraph.com/.api/graphql",
		bytes.NewBuffer([]byte(graphqlQuery)),
	)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to create request: %w", err)
	}

	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("User-Agent", "crush/1.0")

	resp, err := t.client.Do(req)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to fetch URL: %w", err)
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		body, _ := io.ReadAll(resp.Body)
		if len(body) > 0 {
			return NewTextErrorResponse(fmt.Sprintf("Request failed with status code: %d, response: %s", resp.StatusCode, string(body))), nil
		}

		return NewTextErrorResponse(fmt.Sprintf("Request failed with status code: %d", resp.StatusCode)), nil
	}
	body, err := io.ReadAll(resp.Body)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("failed to read response body: %w", err)
	}

	var result map[string]any
	if err = json.Unmarshal(body, &result); err != nil {
		return ToolResponse{}, fmt.Errorf("failed to unmarshal response: %w", err)
	}

	formattedResults, err := formatSourcegraphResults(result, params.ContextWindow)
	if err != nil {
		return NewTextErrorResponse("Failed to format results: " + err.Error()), nil
	}

	return NewTextResponse(formattedResults), nil
}

func formatSourcegraphResults(result map[string]any, contextWindow int) (string, error) {
	var buffer strings.Builder

	if errors, ok := result["errors"].([]any); ok && len(errors) > 0 {
		buffer.WriteString("## Sourcegraph API Error\n\n")
		for _, err := range errors {
			if errMap, ok := err.(map[string]any); ok {
				if message, ok := errMap["message"].(string); ok {
					buffer.WriteString(fmt.Sprintf("- %s\n", message))
				}
			}
		}
		return buffer.String(), nil
	}

	data, ok := result["data"].(map[string]any)
	if !ok {
		return "", fmt.Errorf("invalid response format: missing data field")
	}

	search, ok := data["search"].(map[string]any)
	if !ok {
		return "", fmt.Errorf("invalid response format: missing search field")
	}

	searchResults, ok := search["results"].(map[string]any)
	if !ok {
		return "", fmt.Errorf("invalid response format: missing results field")
	}

	matchCount, _ := searchResults["matchCount"].(float64)
	resultCount, _ := searchResults["resultCount"].(float64)
	limitHit, _ := searchResults["limitHit"].(bool)

	buffer.WriteString("# Sourcegraph Search Results\n\n")
	buffer.WriteString(fmt.Sprintf("Found %d matches across %d results\n", int(matchCount), int(resultCount)))

	if limitHit {
		buffer.WriteString("(Result limit reached, try a more specific query)\n")
	}

	buffer.WriteString("\n")

	results, ok := searchResults["results"].([]any)
	if !ok || len(results) == 0 {
		buffer.WriteString("No results found. Try a different query.\n")
		return buffer.String(), nil
	}

	maxResults := 10
	if len(results) > maxResults {
		results = results[:maxResults]
	}

	for i, res := range results {
		fileMatch, ok := res.(map[string]any)
		if !ok {
			continue
		}

		typeName, _ := fileMatch["__typename"].(string)
		if typeName != "FileMatch" {
			continue
		}

		repo, _ := fileMatch["repository"].(map[string]any)
		file, _ := fileMatch["file"].(map[string]any)
		lineMatches, _ := fileMatch["lineMatches"].([]any)

		if repo == nil || file == nil {
			continue
		}

		repoName, _ := repo["name"].(string)
		filePath, _ := file["path"].(string)
		fileURL, _ := file["url"].(string)
		fileContent, _ := file["content"].(string)

		buffer.WriteString(fmt.Sprintf("## Result %d: %s/%s\n\n", i+1, repoName, filePath))

		if fileURL != "" {
			buffer.WriteString(fmt.Sprintf("URL: %s\n\n", fileURL))
		}

		if len(lineMatches) > 0 {
			for _, lm := range lineMatches {
				lineMatch, ok := lm.(map[string]any)
				if !ok {
					continue
				}

				lineNumber, _ := lineMatch["lineNumber"].(float64)
				preview, _ := lineMatch["preview"].(string)

				if fileContent != "" {
					lines := strings.Split(fileContent, "\n")

					buffer.WriteString("```\n")

					startLine := max(1, int(lineNumber)-contextWindow)

					for j := startLine - 1; j < int(lineNumber)-1 && j < len(lines); j++ {
						if j >= 0 {
							buffer.WriteString(fmt.Sprintf("%d| %s\n", j+1, lines[j]))
						}
					}

					buffer.WriteString(fmt.Sprintf("%d|  %s\n", int(lineNumber), preview))

					endLine := int(lineNumber) + contextWindow

					for j := int(lineNumber); j < endLine && j < len(lines); j++ {
						if j < len(lines) {
							buffer.WriteString(fmt.Sprintf("%d| %s\n", j+1, lines[j]))
						}
					}

					buffer.WriteString("```\n\n")
				} else {
					buffer.WriteString("```\n")
					buffer.WriteString(fmt.Sprintf("%d| %s\n", int(lineNumber), preview))
					buffer.WriteString("```\n\n")
				}
			}
		}
	}

	return buffer.String(), nil
}



================================================
FILE: internal/llm/tools/tools.go
================================================
package tools

import (
	"context"
	"encoding/json"
)

type ToolInfo struct {
	Name        string
	Description string
	Parameters  map[string]any
	Required    []string
}

type toolResponseType string

type (
	sessionIDContextKey string
	messageIDContextKey string
)

const (
	ToolResponseTypeText  toolResponseType = "text"
	ToolResponseTypeImage toolResponseType = "image"

	SessionIDContextKey sessionIDContextKey = "session_id"
	MessageIDContextKey messageIDContextKey = "message_id"
)

type ToolResponse struct {
	Type     toolResponseType `json:"type"`
	Content  string           `json:"content"`
	Metadata string           `json:"metadata,omitempty"`
	IsError  bool             `json:"is_error"`
}

func NewTextResponse(content string) ToolResponse {
	return ToolResponse{
		Type:    ToolResponseTypeText,
		Content: content,
	}
}

func WithResponseMetadata(response ToolResponse, metadata any) ToolResponse {
	if metadata != nil {
		metadataBytes, err := json.Marshal(metadata)
		if err != nil {
			return response
		}
		response.Metadata = string(metadataBytes)
	}
	return response
}

func NewTextErrorResponse(content string) ToolResponse {
	return ToolResponse{
		Type:    ToolResponseTypeText,
		Content: content,
		IsError: true,
	}
}

type ToolCall struct {
	ID    string `json:"id"`
	Name  string `json:"name"`
	Input string `json:"input"`
}

type BaseTool interface {
	Info() ToolInfo
	Name() string
	Run(ctx context.Context, params ToolCall) (ToolResponse, error)
}

func GetContextValues(ctx context.Context) (string, string) {
	sessionID := ctx.Value(SessionIDContextKey)
	messageID := ctx.Value(MessageIDContextKey)
	if sessionID == nil {
		return "", ""
	}
	if messageID == nil {
		return sessionID.(string), ""
	}
	return sessionID.(string), messageID.(string)
}



================================================
FILE: internal/llm/tools/view.go
================================================
package tools

import (
	"bufio"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"unicode/utf8"

	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/permission"
)

type ViewParams struct {
	FilePath string `json:"file_path"`
	Offset   int    `json:"offset"`
	Limit    int    `json:"limit"`
}

type ViewPermissionsParams struct {
	FilePath string `json:"file_path"`
	Offset   int    `json:"offset"`
	Limit    int    `json:"limit"`
}

type viewTool struct {
	lspClients  map[string]*lsp.Client
	workingDir  string
	permissions permission.Service
}

type ViewResponseMetadata struct {
	FilePath string `json:"file_path"`
	Content  string `json:"content"`
}

const (
	ViewToolName     = "view"
	MaxReadSize      = 250 * 1024
	DefaultReadLimit = 2000
	MaxLineLength    = 2000
	viewDescription  = `File viewing tool that reads and displays the contents of files with line numbers, allowing you to examine code, logs, or text data.

WHEN TO USE THIS TOOL:
- Use when you need to read the contents of a specific file
- Helpful for examining source code, configuration files, or log files
- Perfect for looking at text-based file formats

HOW TO USE:
- Provide the path to the file you want to view
- Optionally specify an offset to start reading from a specific line
- Optionally specify a limit to control how many lines are read
- Do not use this for directories use the ls tool instead

FEATURES:
- Displays file contents with line numbers for easy reference
- Can read from any position in a file using the offset parameter
- Handles large files by limiting the number of lines read
- Automatically truncates very long lines for better display
- Suggests similar file names when the requested file isn't found

LIMITATIONS:
- Maximum file size is 250KB
- Default reading limit is 2000 lines
- Lines longer than 2000 characters are truncated
- Cannot display binary files or images
- Images can be identified but not displayed

WINDOWS NOTES:
- Handles both Windows (CRLF) and Unix (LF) line endings automatically
- File paths work with both forward slashes (/) and backslashes (\)
- Text encoding is detected automatically for most common formats

TIPS:
- Use with Glob tool to first find files you want to view
- For code exploration, first use Grep to find relevant files, then View to examine them
- When viewing large files, use the offset parameter to read specific sections`
)

func NewViewTool(lspClients map[string]*lsp.Client, permissions permission.Service, workingDir string) BaseTool {
	return &viewTool{
		lspClients:  lspClients,
		workingDir:  workingDir,
		permissions: permissions,
	}
}

func (v *viewTool) Name() string {
	return ViewToolName
}

func (v *viewTool) Info() ToolInfo {
	return ToolInfo{
		Name:        ViewToolName,
		Description: viewDescription,
		Parameters: map[string]any{
			"file_path": map[string]any{
				"type":        "string",
				"description": "The path to the file to read",
			},
			"offset": map[string]any{
				"type":        "integer",
				"description": "The line number to start reading from (0-based)",
			},
			"limit": map[string]any{
				"type":        "integer",
				"description": "The number of lines to read (defaults to 2000)",
			},
		},
		Required: []string{"file_path"},
	}
}

// Run implements Tool.
func (v *viewTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params ViewParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}

	if params.FilePath == "" {
		return NewTextErrorResponse("file_path is required"), nil
	}

	// Handle relative paths
	filePath := params.FilePath
	if !filepath.IsAbs(filePath) {
		filePath = filepath.Join(v.workingDir, filePath)
	}

	// Check if file is outside working directory and request permission if needed
	absWorkingDir, err := filepath.Abs(v.workingDir)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error resolving working directory: %w", err)
	}

	absFilePath, err := filepath.Abs(filePath)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error resolving file path: %w", err)
	}

	relPath, err := filepath.Rel(absWorkingDir, absFilePath)
	if err != nil || strings.HasPrefix(relPath, "..") {
		// File is outside working directory, request permission
		sessionID, messageID := GetContextValues(ctx)
		if sessionID == "" || messageID == "" {
			return ToolResponse{}, fmt.Errorf("session ID and message ID are required for accessing files outside working directory")
		}

		granted := v.permissions.Request(
			permission.CreatePermissionRequest{
				SessionID:   sessionID,
				Path:        absFilePath,
				ToolCallID:  call.ID,
				ToolName:    ViewToolName,
				Action:      "read",
				Description: fmt.Sprintf("Read file outside working directory: %s", absFilePath),
				Params:      ViewPermissionsParams(params),
			},
		)

		if !granted {
			return ToolResponse{}, permission.ErrorPermissionDenied
		}
	}

	// Check if file exists
	fileInfo, err := os.Stat(filePath)
	if err != nil {
		if os.IsNotExist(err) {
			// Try to offer suggestions for similarly named files
			dir := filepath.Dir(filePath)
			base := filepath.Base(filePath)

			dirEntries, dirErr := os.ReadDir(dir)
			if dirErr == nil {
				var suggestions []string
				for _, entry := range dirEntries {
					if strings.Contains(strings.ToLower(entry.Name()), strings.ToLower(base)) ||
						strings.Contains(strings.ToLower(base), strings.ToLower(entry.Name())) {
						suggestions = append(suggestions, filepath.Join(dir, entry.Name()))
						if len(suggestions) >= 3 {
							break
						}
					}
				}

				if len(suggestions) > 0 {
					return NewTextErrorResponse(fmt.Sprintf("File not found: %s\n\nDid you mean one of these?\n%s",
						filePath, strings.Join(suggestions, "\n"))), nil
				}
			}

			return NewTextErrorResponse(fmt.Sprintf("File not found: %s", filePath)), nil
		}
		return ToolResponse{}, fmt.Errorf("error accessing file: %w", err)
	}

	// Check if it's a directory
	if fileInfo.IsDir() {
		return NewTextErrorResponse(fmt.Sprintf("Path is a directory, not a file: %s", filePath)), nil
	}

	// Check file size
	if fileInfo.Size() > MaxReadSize {
		return NewTextErrorResponse(fmt.Sprintf("File is too large (%d bytes). Maximum size is %d bytes",
			fileInfo.Size(), MaxReadSize)), nil
	}

	// Set default limit if not provided
	if params.Limit <= 0 {
		params.Limit = DefaultReadLimit
	}

	// Check if it's an image file
	isImage, imageType := isImageFile(filePath)
	// TODO: handle images
	if isImage {
		return NewTextErrorResponse(fmt.Sprintf("This is an image file of type: %s\n", imageType)), nil
	}

	// Read the file content
	content, lineCount, err := readTextFile(filePath, params.Offset, params.Limit)
	isValidUt8 := utf8.ValidString(content)
	if !isValidUt8 {
		return NewTextErrorResponse("File content is not valid UTF-8"), nil
	}
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error reading file: %w", err)
	}

	notifyLspOpenFile(ctx, filePath, v.lspClients)
	output := "<file>\n"
	// Format the output with line numbers
	output += addLineNumbers(content, params.Offset+1)

	// Add a note if the content was truncated
	if lineCount > params.Offset+len(strings.Split(content, "\n")) {
		output += fmt.Sprintf("\n\n(File has more lines. Use 'offset' parameter to read beyond line %d)",
			params.Offset+len(strings.Split(content, "\n")))
	}
	output += "\n</file>\n"
	output += getDiagnostics(filePath, v.lspClients)
	recordFileRead(filePath)
	return WithResponseMetadata(
		NewTextResponse(output),
		ViewResponseMetadata{
			FilePath: filePath,
			Content:  content,
		},
	), nil
}

func addLineNumbers(content string, startLine int) string {
	if content == "" {
		return ""
	}

	lines := strings.Split(content, "\n")

	var result []string
	for i, line := range lines {
		line = strings.TrimSuffix(line, "\r")

		lineNum := i + startLine
		numStr := fmt.Sprintf("%d", lineNum)

		if len(numStr) >= 6 {
			result = append(result, fmt.Sprintf("%s|%s", numStr, line))
		} else {
			paddedNum := fmt.Sprintf("%6s", numStr)
			result = append(result, fmt.Sprintf("%s|%s", paddedNum, line))
		}
	}

	return strings.Join(result, "\n")
}

func readTextFile(filePath string, offset, limit int) (string, int, error) {
	file, err := os.Open(filePath)
	if err != nil {
		return "", 0, err
	}
	defer file.Close()

	lineCount := 0

	scanner := NewLineScanner(file)
	if offset > 0 {
		for lineCount < offset && scanner.Scan() {
			lineCount++
		}
		if err = scanner.Err(); err != nil {
			return "", 0, err
		}
	}

	if offset == 0 {
		_, err = file.Seek(0, io.SeekStart)
		if err != nil {
			return "", 0, err
		}
	}

	// Pre-allocate slice with expected capacity
	lines := make([]string, 0, limit)
	lineCount = offset

	for scanner.Scan() && len(lines) < limit {
		lineCount++
		lineText := scanner.Text()
		if len(lineText) > MaxLineLength {
			lineText = lineText[:MaxLineLength] + "..."
		}
		lines = append(lines, lineText)
	}

	// Continue scanning to get total line count
	for scanner.Scan() {
		lineCount++
	}

	if err := scanner.Err(); err != nil {
		return "", 0, err
	}

	return strings.Join(lines, "\n"), lineCount, nil
}

func isImageFile(filePath string) (bool, string) {
	ext := strings.ToLower(filepath.Ext(filePath))
	switch ext {
	case ".jpg", ".jpeg":
		return true, "JPEG"
	case ".png":
		return true, "PNG"
	case ".gif":
		return true, "GIF"
	case ".bmp":
		return true, "BMP"
	case ".svg":
		return true, "SVG"
	case ".webp":
		return true, "WebP"
	default:
		return false, ""
	}
}

type LineScanner struct {
	scanner *bufio.Scanner
}

func NewLineScanner(r io.Reader) *LineScanner {
	return &LineScanner{
		scanner: bufio.NewScanner(r),
	}
}

func (s *LineScanner) Scan() bool {
	return s.scanner.Scan()
}

func (s *LineScanner) Text() string {
	return s.scanner.Text()
}

func (s *LineScanner) Err() error {
	return s.scanner.Err()
}



================================================
FILE: internal/llm/tools/write.go
================================================
package tools

import (
	"context"
	"encoding/json"
	"fmt"
	"log/slog"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/diff"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/history"

	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/permission"
)

type WriteParams struct {
	FilePath string `json:"file_path"`
	Content  string `json:"content"`
}

type WritePermissionsParams struct {
	FilePath   string `json:"file_path"`
	OldContent string `json:"old_content,omitempty"`
	NewContent string `json:"new_content,omitempty"`
}

type writeTool struct {
	lspClients  map[string]*lsp.Client
	permissions permission.Service
	files       history.Service
	workingDir  string
}

type WriteResponseMetadata struct {
	Diff      string `json:"diff"`
	Additions int    `json:"additions"`
	Removals  int    `json:"removals"`
}

const (
	WriteToolName    = "write"
	writeDescription = `File writing tool that creates or updates files in the filesystem, allowing you to save or modify text content.

WHEN TO USE THIS TOOL:
- Use when you need to create a new file
- Helpful for updating existing files with modified content
- Perfect for saving generated code, configurations, or text data

HOW TO USE:
- Provide the path to the file you want to write
- Include the content to be written to the file
- The tool will create any necessary parent directories

FEATURES:
- Can create new files or overwrite existing ones
- Creates parent directories automatically if they don't exist
- Checks if the file has been modified since last read for safety
- Avoids unnecessary writes when content hasn't changed

LIMITATIONS:
- You should read a file before writing to it to avoid conflicts
- Cannot append to files (rewrites the entire file)

WINDOWS NOTES:
- File permissions (0o755, 0o644) are Unix-style but work on Windows with appropriate translations
- Use forward slashes (/) in paths for cross-platform compatibility
- Windows file attributes and permissions are handled automatically by the Go runtime

TIPS:
- Use the View tool first to examine existing files before modifying them
- Use the LS tool to verify the correct location when creating new files
- Combine with Glob and Grep tools to find and modify multiple files
- Always include descriptive comments when making changes to existing code`
)

func NewWriteTool(lspClients map[string]*lsp.Client, permissions permission.Service, files history.Service, workingDir string) BaseTool {
	return &writeTool{
		lspClients:  lspClients,
		permissions: permissions,
		files:       files,
		workingDir:  workingDir,
	}
}

func (w *writeTool) Name() string {
	return WriteToolName
}

func (w *writeTool) Info() ToolInfo {
	return ToolInfo{
		Name:        WriteToolName,
		Description: writeDescription,
		Parameters: map[string]any{
			"file_path": map[string]any{
				"type":        "string",
				"description": "The path to the file to write",
			},
			"content": map[string]any{
				"type":        "string",
				"description": "The content to write to the file",
			},
		},
		Required: []string{"file_path", "content"},
	}
}

func (w *writeTool) Run(ctx context.Context, call ToolCall) (ToolResponse, error) {
	var params WriteParams
	if err := json.Unmarshal([]byte(call.Input), &params); err != nil {
		return NewTextErrorResponse(fmt.Sprintf("error parsing parameters: %s", err)), nil
	}

	if params.FilePath == "" {
		return NewTextErrorResponse("file_path is required"), nil
	}

	if params.Content == "" {
		return NewTextErrorResponse("content is required"), nil
	}

	filePath := params.FilePath
	if !filepath.IsAbs(filePath) {
		filePath = filepath.Join(w.workingDir, filePath)
	}

	fileInfo, err := os.Stat(filePath)
	if err == nil {
		if fileInfo.IsDir() {
			return NewTextErrorResponse(fmt.Sprintf("Path is a directory, not a file: %s", filePath)), nil
		}

		modTime := fileInfo.ModTime()
		lastRead := getLastReadTime(filePath)
		if modTime.After(lastRead) {
			return NewTextErrorResponse(fmt.Sprintf("File %s has been modified since it was last read.\nLast modification: %s\nLast read: %s\n\nPlease read the file again before modifying it.",
				filePath, modTime.Format(time.RFC3339), lastRead.Format(time.RFC3339))), nil
		}

		oldContent, readErr := os.ReadFile(filePath)
		if readErr == nil && string(oldContent) == params.Content {
			return NewTextErrorResponse(fmt.Sprintf("File %s already contains the exact content. No changes made.", filePath)), nil
		}
	} else if !os.IsNotExist(err) {
		return ToolResponse{}, fmt.Errorf("error checking file: %w", err)
	}

	dir := filepath.Dir(filePath)
	if err = os.MkdirAll(dir, 0o755); err != nil {
		return ToolResponse{}, fmt.Errorf("error creating directory: %w", err)
	}

	oldContent := ""
	if fileInfo != nil && !fileInfo.IsDir() {
		oldBytes, readErr := os.ReadFile(filePath)
		if readErr == nil {
			oldContent = string(oldBytes)
		}
	}

	sessionID, messageID := GetContextValues(ctx)
	if sessionID == "" || messageID == "" {
		return ToolResponse{}, fmt.Errorf("session_id and message_id are required")
	}

	diff, additions, removals := diff.GenerateDiff(
		oldContent,
		params.Content,
		strings.TrimPrefix(filePath, w.workingDir),
	)

	p := w.permissions.Request(
		permission.CreatePermissionRequest{
			SessionID:   sessionID,
			Path:        fsext.PathOrPrefix(filePath, w.workingDir),
			ToolCallID:  call.ID,
			ToolName:    WriteToolName,
			Action:      "write",
			Description: fmt.Sprintf("Create file %s", filePath),
			Params: WritePermissionsParams{
				FilePath:   filePath,
				OldContent: oldContent,
				NewContent: params.Content,
			},
		},
	)
	if !p {
		return ToolResponse{}, permission.ErrorPermissionDenied
	}

	err = os.WriteFile(filePath, []byte(params.Content), 0o644)
	if err != nil {
		return ToolResponse{}, fmt.Errorf("error writing file: %w", err)
	}

	// Check if file exists in history
	file, err := w.files.GetByPathAndSession(ctx, filePath, sessionID)
	if err != nil {
		_, err = w.files.Create(ctx, sessionID, filePath, oldContent)
		if err != nil {
			// Log error but don't fail the operation
			return ToolResponse{}, fmt.Errorf("error creating file history: %w", err)
		}
	}
	if file.Content != oldContent {
		// User Manually changed the content store an intermediate version
		_, err = w.files.CreateVersion(ctx, sessionID, filePath, oldContent)
		if err != nil {
			slog.Debug("Error creating file history version", "error", err)
		}
	}
	// Store the new version
	_, err = w.files.CreateVersion(ctx, sessionID, filePath, params.Content)
	if err != nil {
		slog.Debug("Error creating file history version", "error", err)
	}

	recordFileWrite(filePath)
	recordFileRead(filePath)
	waitForLspDiagnostics(ctx, filePath, w.lspClients)

	result := fmt.Sprintf("File successfully written: %s", filePath)
	result = fmt.Sprintf("<result>\n%s\n</result>", result)
	result += getDiagnostics(filePath, w.lspClients)
	return WithResponseMetadata(NewTextResponse(result),
		WriteResponseMetadata{
			Diff:      diff,
			Additions: additions,
			Removals:  removals,
		},
	), nil
}



================================================
FILE: internal/log/http.go
================================================
package log

import (
	"bytes"
	"context"
	"encoding/json"
	"io"
	"log/slog"
	"net/http"
	"strings"
	"time"
)

// NewHTTPClient creates an HTTP client with debug logging enabled when debug mode is on.
func NewHTTPClient() *http.Client {
	if !slog.Default().Enabled(context.TODO(), slog.LevelDebug) {
		return http.DefaultClient
	}
	return &http.Client{
		Transport: &HTTPRoundTripLogger{
			Transport: http.DefaultTransport,
		},
	}
}

// HTTPRoundTripLogger is an http.RoundTripper that logs requests and responses.
type HTTPRoundTripLogger struct {
	Transport http.RoundTripper
}

// RoundTrip implements http.RoundTripper interface with logging.
func (h *HTTPRoundTripLogger) RoundTrip(req *http.Request) (*http.Response, error) {
	var err error
	var save io.ReadCloser
	save, req.Body, err = drainBody(req.Body)
	if err != nil {
		slog.Error(
			"HTTP request failed",
			"method", req.Method,
			"url", req.URL,
			"error", err,
		)
		return nil, err
	}

	slog.Debug(
		"HTTP Request",
		"method", req.Method,
		"url", req.URL,
		"body", bodyToString(save),
	)

	start := time.Now()
	resp, err := h.Transport.RoundTrip(req)
	duration := time.Since(start)
	if err != nil {
		slog.Error(
			"HTTP request failed",
			"method", req.Method,
			"url", req.URL,
			"duration_ms", duration.Milliseconds(),
			"error", err,
		)
		return resp, err
	}

	save, resp.Body, err = drainBody(resp.Body)
	slog.Debug(
		"HTTP Response",
		"status_code", resp.StatusCode,
		"status", resp.Status,
		"headers", formatHeaders(resp.Header),
		"body", bodyToString(save),
		"content_length", resp.ContentLength,
		"duration_ms", duration.Milliseconds(),
		"error", err,
	)
	return resp, err
}

func bodyToString(body io.ReadCloser) string {
	if body == nil {
		return ""
	}
	src, err := io.ReadAll(body)
	if err != nil {
		slog.Error("Failed to read body", "error", err)
		return ""
	}
	var b bytes.Buffer
	if json.Compact(&b, bytes.TrimSpace(src)) != nil {
		// not json probably
		return string(src)
	}
	return b.String()
}

// formatHeaders formats HTTP headers for logging, filtering out sensitive information.
func formatHeaders(headers http.Header) map[string][]string {
	filtered := make(map[string][]string)
	for key, values := range headers {
		lowerKey := strings.ToLower(key)
		// Filter out sensitive headers
		if strings.Contains(lowerKey, "authorization") ||
			strings.Contains(lowerKey, "api-key") ||
			strings.Contains(lowerKey, "token") ||
			strings.Contains(lowerKey, "secret") {
			filtered[key] = []string{"[REDACTED]"}
		} else {
			filtered[key] = values
		}
	}
	return filtered
}

func drainBody(b io.ReadCloser) (r1, r2 io.ReadCloser, err error) {
	if b == nil || b == http.NoBody {
		return http.NoBody, http.NoBody, nil
	}
	var buf bytes.Buffer
	if _, err = buf.ReadFrom(b); err != nil {
		return nil, b, err
	}
	if err = b.Close(); err != nil {
		return nil, b, err
	}
	return io.NopCloser(&buf), io.NopCloser(bytes.NewReader(buf.Bytes())), nil
}



================================================
FILE: internal/log/http_test.go
================================================
package log

import (
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
)

func TestHTTPRoundTripLogger(t *testing.T) {
	// Create a test server that returns a 500 error
	server := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		w.Header().Set("Content-Type", "application/json")
		w.Header().Set("X-Custom-Header", "test-value")
		w.WriteHeader(http.StatusInternalServerError)
		w.Write([]byte(`{"error": "Internal server error", "code": 500}`))
	}))
	defer server.Close()

	// Create HTTP client with logging
	client := NewHTTPClient()

	// Make a request
	req, err := http.NewRequestWithContext(
		t.Context(),
		http.MethodPost,
		server.URL,
		strings.NewReader(`{"test": "data"}`),
	)
	if err != nil {
		t.Fatal(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Authorization", "Bearer secret-token")

	resp, err := client.Do(req)
	if err != nil {
		t.Fatal(err)
	}
	defer resp.Body.Close()

	// Verify response
	if resp.StatusCode != http.StatusInternalServerError {
		t.Errorf("Expected status code 500, got %d", resp.StatusCode)
	}
}

func TestFormatHeaders(t *testing.T) {
	headers := http.Header{
		"Content-Type":  []string{"application/json"},
		"Authorization": []string{"Bearer secret-token"},
		"X-API-Key":     []string{"api-key-123"},
		"User-Agent":    []string{"test-agent"},
	}

	formatted := formatHeaders(headers)

	// Check that sensitive headers are redacted
	if formatted["Authorization"][0] != "[REDACTED]" {
		t.Error("Authorization header should be redacted")
	}
	if formatted["X-API-Key"][0] != "[REDACTED]" {
		t.Error("X-API-Key header should be redacted")
	}

	// Check that non-sensitive headers are preserved
	if formatted["Content-Type"][0] != "application/json" {
		t.Error("Content-Type header should be preserved")
	}
	if formatted["User-Agent"][0] != "test-agent" {
		t.Error("User-Agent header should be preserved")
	}
}



================================================
FILE: internal/log/log.go
================================================
package log

import (
	"fmt"
	"log/slog"
	"os"
	"runtime/debug"
	"sync"
	"sync/atomic"
	"time"

	"gopkg.in/natefinch/lumberjack.v2"
)

var (
	initOnce    sync.Once
	initialized atomic.Bool
)

func Setup(logFile string, debug bool) {
	initOnce.Do(func() {
		logRotator := &lumberjack.Logger{
			Filename:   logFile,
			MaxSize:    10,    // Max size in MB
			MaxBackups: 0,     // Number of backups
			MaxAge:     30,    // Days
			Compress:   false, // Enable compression
		}

		level := slog.LevelInfo
		if debug {
			level = slog.LevelDebug
		}

		logger := slog.NewJSONHandler(logRotator, &slog.HandlerOptions{
			Level:     level,
			AddSource: true,
		})

		slog.SetDefault(slog.New(logger))
		initialized.Store(true)
	})
}

func Initialized() bool {
	return initialized.Load()
}

func RecoverPanic(name string, cleanup func()) {
	if r := recover(); r != nil {
		// Create a timestamped panic log file
		timestamp := time.Now().Format("20060102-150405")
		filename := fmt.Sprintf("crush-panic-%s-%s.log", name, timestamp)

		file, err := os.Create(filename)
		if err == nil {
			defer file.Close()

			// Write panic information and stack trace
			fmt.Fprintf(file, "Panic in %s: %v\n\n", name, r)
			fmt.Fprintf(file, "Time: %s\n\n", time.Now().Format(time.RFC3339))
			fmt.Fprintf(file, "Stack Trace:\n%s\n", debug.Stack())

			// Execute cleanup function if provided
			if cleanup != nil {
				cleanup()
			}
		}
	}
}



================================================
FILE: internal/lsp/client.go
================================================
package lsp

import (
	"bufio"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"log/slog"
	"maps"
	"os"
	"os/exec"
	"path/filepath"
	"slices"
	"strings"
	"sync"
	"sync/atomic"
	"time"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/log"
	"github.com/charmbracelet/crush/internal/lsp/protocol"
)

type Client struct {
	Cmd    *exec.Cmd
	stdin  io.WriteCloser
	stdout *bufio.Reader
	stderr io.ReadCloser

	// Client name for identification
	name string

	// File types this LSP server handles (e.g., .go, .rs, .py)
	fileTypes []string

	// Diagnostic change callback
	onDiagnosticsChanged func(name string, count int)

	// Request ID counter
	nextID atomic.Int32

	// Response handlers
	handlers   map[int32]chan *Message
	handlersMu sync.RWMutex

	// Server request handlers
	serverRequestHandlers map[string]ServerRequestHandler
	serverHandlersMu      sync.RWMutex

	// Notification handlers
	notificationHandlers map[string]NotificationHandler
	notificationMu       sync.RWMutex

	// Diagnostic cache
	diagnostics   map[protocol.DocumentURI][]protocol.Diagnostic
	diagnosticsMu sync.RWMutex

	// Files are currently opened by the LSP
	openFiles   map[string]*OpenFileInfo
	openFilesMu sync.RWMutex

	// Server state
	serverState atomic.Value
}

// NewClient creates a new LSP client.
func NewClient(ctx context.Context, name string, config config.LSPConfig) (*Client, error) {
	cmd := exec.CommandContext(ctx, config.Command, config.Args...)

	// Copy env
	cmd.Env = slices.Concat(os.Environ(), config.ResolvedEnv())

	stdin, err := cmd.StdinPipe()
	if err != nil {
		return nil, fmt.Errorf("failed to create stdin pipe: %w", err)
	}

	stdout, err := cmd.StdoutPipe()
	if err != nil {
		return nil, fmt.Errorf("failed to create stdout pipe: %w", err)
	}

	stderr, err := cmd.StderrPipe()
	if err != nil {
		return nil, fmt.Errorf("failed to create stderr pipe: %w", err)
	}

	client := &Client{
		Cmd:                   cmd,
		name:                  name,
		fileTypes:             config.FileTypes,
		stdin:                 stdin,
		stdout:                bufio.NewReader(stdout),
		stderr:                stderr,
		handlers:              make(map[int32]chan *Message),
		notificationHandlers:  make(map[string]NotificationHandler),
		serverRequestHandlers: make(map[string]ServerRequestHandler),
		diagnostics:           make(map[protocol.DocumentURI][]protocol.Diagnostic),
		openFiles:             make(map[string]*OpenFileInfo),
	}

	// Initialize server state
	client.serverState.Store(StateStarting)

	// Start the LSP server process
	if err := cmd.Start(); err != nil {
		return nil, fmt.Errorf("failed to start LSP server: %w", err)
	}

	// Handle stderr in a separate goroutine
	go func() {
		scanner := bufio.NewScanner(stderr)
		for scanner.Scan() {
			slog.Error("LSP Server", "err", scanner.Text())
		}
		if err := scanner.Err(); err != nil {
			slog.Error("Error reading", "err", err)
		}
	}()

	// Start message handling loop
	go func() {
		defer log.RecoverPanic("LSP-message-handler", func() {
			slog.Error("LSP message handler crashed, LSP functionality may be impaired")
		})
		client.handleMessages()
	}()

	return client, nil
}

func (c *Client) RegisterNotificationHandler(method string, handler NotificationHandler) {
	c.notificationMu.Lock()
	defer c.notificationMu.Unlock()
	c.notificationHandlers[method] = handler
}

func (c *Client) RegisterServerRequestHandler(method string, handler ServerRequestHandler) {
	c.serverHandlersMu.Lock()
	defer c.serverHandlersMu.Unlock()
	c.serverRequestHandlers[method] = handler
}

func (c *Client) InitializeLSPClient(ctx context.Context, workspaceDir string) (*protocol.InitializeResult, error) {
	initParams := &protocol.InitializeParams{
		WorkspaceFoldersInitializeParams: protocol.WorkspaceFoldersInitializeParams{
			WorkspaceFolders: []protocol.WorkspaceFolder{
				{
					URI:  protocol.URI(protocol.URIFromPath(workspaceDir)),
					Name: workspaceDir,
				},
			},
		},

		XInitializeParams: protocol.XInitializeParams{
			ProcessID: int32(os.Getpid()),
			ClientInfo: &protocol.ClientInfo{
				Name:    "mcp-language-server",
				Version: "0.1.0",
			},
			RootPath: workspaceDir,
			RootURI:  protocol.URIFromPath(workspaceDir),
			Capabilities: protocol.ClientCapabilities{
				Workspace: protocol.WorkspaceClientCapabilities{
					Configuration: true,
					DidChangeConfiguration: protocol.DidChangeConfigurationClientCapabilities{
						DynamicRegistration: true,
					},
					DidChangeWatchedFiles: protocol.DidChangeWatchedFilesClientCapabilities{
						DynamicRegistration:    true,
						RelativePatternSupport: true,
					},
				},
				TextDocument: protocol.TextDocumentClientCapabilities{
					Synchronization: &protocol.TextDocumentSyncClientCapabilities{
						DynamicRegistration: true,
						DidSave:             true,
					},
					Completion: protocol.CompletionClientCapabilities{
						CompletionItem: protocol.ClientCompletionItemOptions{},
					},
					CodeLens: &protocol.CodeLensClientCapabilities{
						DynamicRegistration: true,
					},
					DocumentSymbol: protocol.DocumentSymbolClientCapabilities{},
					CodeAction: protocol.CodeActionClientCapabilities{
						CodeActionLiteralSupport: protocol.ClientCodeActionLiteralOptions{
							CodeActionKind: protocol.ClientCodeActionKindOptions{
								ValueSet: []protocol.CodeActionKind{},
							},
						},
					},
					PublishDiagnostics: protocol.PublishDiagnosticsClientCapabilities{
						VersionSupport: true,
					},
					SemanticTokens: protocol.SemanticTokensClientCapabilities{
						Requests: protocol.ClientSemanticTokensRequestOptions{
							Range: &protocol.Or_ClientSemanticTokensRequestOptions_range{},
							Full:  &protocol.Or_ClientSemanticTokensRequestOptions_full{},
						},
						TokenTypes:     []string{},
						TokenModifiers: []string{},
						Formats:        []protocol.TokenFormat{},
					},
				},
				Window: protocol.WindowClientCapabilities{},
			},
			InitializationOptions: map[string]any{
				"codelenses": map[string]bool{
					"generate":           true,
					"regenerate_cgo":     true,
					"test":               true,
					"tidy":               true,
					"upgrade_dependency": true,
					"vendor":             true,
					"vulncheck":          false,
				},
			},
		},
	}

	var result protocol.InitializeResult
	if err := c.Call(ctx, "initialize", initParams, &result); err != nil {
		return nil, fmt.Errorf("initialize failed: %w", err)
	}

	if err := c.Notify(ctx, "initialized", struct{}{}); err != nil {
		return nil, fmt.Errorf("initialized notification failed: %w", err)
	}

	// Register handlers
	c.RegisterServerRequestHandler("workspace/applyEdit", HandleApplyEdit)
	c.RegisterServerRequestHandler("workspace/configuration", HandleWorkspaceConfiguration)
	c.RegisterServerRequestHandler("client/registerCapability", HandleRegisterCapability)
	c.RegisterNotificationHandler("window/showMessage", HandleServerMessage)
	c.RegisterNotificationHandler("textDocument/publishDiagnostics",
		func(params json.RawMessage) { HandleDiagnostics(c, params) })

	// Notify the LSP server
	err := c.Initialized(ctx, protocol.InitializedParams{})
	if err != nil {
		return nil, fmt.Errorf("initialization failed: %w", err)
	}

	return &result, nil
}

func (c *Client) Close() error {
	// Try to close all open files first
	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()

	// Attempt to close files but continue shutdown regardless
	c.CloseAllFiles(ctx)

	// Close stdin to signal the server
	if err := c.stdin.Close(); err != nil {
		return fmt.Errorf("failed to close stdin: %w", err)
	}

	// Use a channel to handle the Wait with timeout
	done := make(chan error, 1)
	go func() {
		done <- c.Cmd.Wait()
	}()

	// Wait for process to exit with timeout
	select {
	case err := <-done:
		return err
	case <-time.After(2 * time.Second):
		// If we timeout, try to kill the process
		if err := c.Cmd.Process.Kill(); err != nil {
			return fmt.Errorf("failed to kill process: %w", err)
		}
		return fmt.Errorf("process killed after timeout")
	}
}

type ServerState int

const (
	StateStarting ServerState = iota
	StateReady
	StateError
)

// GetServerState returns the current state of the LSP server
func (c *Client) GetServerState() ServerState {
	if val := c.serverState.Load(); val != nil {
		return val.(ServerState)
	}
	return StateStarting
}

// SetServerState sets the current state of the LSP server
func (c *Client) SetServerState(state ServerState) {
	c.serverState.Store(state)
}

// GetName returns the name of the LSP client
func (c *Client) GetName() string {
	return c.name
}

// SetDiagnosticsCallback sets the callback function for diagnostic changes
func (c *Client) SetDiagnosticsCallback(callback func(name string, count int)) {
	c.onDiagnosticsChanged = callback
}

// WaitForServerReady waits for the server to be ready by polling the server
// with a simple request until it responds successfully or times out
func (c *Client) WaitForServerReady(ctx context.Context) error {
	cfg := config.Get()

	// Set initial state
	c.SetServerState(StateStarting)

	// Create a context with timeout
	ctx, cancel := context.WithTimeout(ctx, 30*time.Second)
	defer cancel()

	// Try to ping the server with a simple request
	ticker := time.NewTicker(500 * time.Millisecond)
	defer ticker.Stop()

	if cfg.Options.DebugLSP {
		slog.Debug("Waiting for LSP server to be ready...")
	}

	// Determine server type for specialized initialization
	serverType := c.detectServerType()

	// For TypeScript-like servers, we need to open some key files first
	if serverType == ServerTypeTypeScript {
		if cfg.Options.DebugLSP {
			slog.Debug("TypeScript-like server detected, opening key configuration files")
		}
		c.openKeyConfigFiles(ctx)
	}

	for {
		select {
		case <-ctx.Done():
			c.SetServerState(StateError)
			return fmt.Errorf("timeout waiting for LSP server to be ready")
		case <-ticker.C:
			// Try a ping method appropriate for this server type
			err := c.pingServerByType(ctx, serverType)
			if err == nil {
				// Server responded successfully
				c.SetServerState(StateReady)
				if cfg.Options.DebugLSP {
					slog.Debug("LSP server is ready")
				}
				return nil
			} else {
				slog.Debug("LSP server not ready yet", "error", err, "serverType", serverType)
			}

			if cfg.Options.DebugLSP {
				slog.Debug("LSP server not ready yet", "error", err, "serverType", serverType)
			}
		}
	}
}

// ServerType represents the type of LSP server
type ServerType int

const (
	ServerTypeUnknown ServerType = iota
	ServerTypeGo
	ServerTypeTypeScript
	ServerTypeRust
	ServerTypePython
	ServerTypeGeneric
)

// detectServerType tries to determine what type of LSP server we're dealing with
func (c *Client) detectServerType() ServerType {
	if c.Cmd == nil {
		return ServerTypeUnknown
	}

	cmdPath := strings.ToLower(c.Cmd.Path)

	switch {
	case strings.Contains(cmdPath, "gopls"):
		return ServerTypeGo
	case strings.Contains(cmdPath, "typescript") || strings.Contains(cmdPath, "vtsls") || strings.Contains(cmdPath, "tsserver"):
		return ServerTypeTypeScript
	case strings.Contains(cmdPath, "rust-analyzer"):
		return ServerTypeRust
	case strings.Contains(cmdPath, "pyright") || strings.Contains(cmdPath, "pylsp") || strings.Contains(cmdPath, "python"):
		return ServerTypePython
	default:
		return ServerTypeGeneric
	}
}

// openKeyConfigFiles opens important configuration files that help initialize the server
func (c *Client) openKeyConfigFiles(ctx context.Context) {
	workDir := config.Get().WorkingDir()
	serverType := c.detectServerType()

	var filesToOpen []string

	switch serverType {
	case ServerTypeTypeScript:
		// TypeScript servers need these config files to properly initialize
		filesToOpen = []string{
			filepath.Join(workDir, "tsconfig.json"),
			filepath.Join(workDir, "package.json"),
			filepath.Join(workDir, "jsconfig.json"),
		}

		// Also find and open a few TypeScript files to help the server initialize
		c.openTypeScriptFiles(ctx, workDir)
	case ServerTypeGo:
		filesToOpen = []string{
			filepath.Join(workDir, "go.mod"),
			filepath.Join(workDir, "go.sum"),
		}
	case ServerTypeRust:
		filesToOpen = []string{
			filepath.Join(workDir, "Cargo.toml"),
			filepath.Join(workDir, "Cargo.lock"),
		}
	}

	// Try to open each file, ignoring errors if they don't exist
	for _, file := range filesToOpen {
		if _, err := os.Stat(file); err == nil {
			// File exists, try to open it
			if err := c.OpenFile(ctx, file); err != nil {
				slog.Debug("Failed to open key config file", "file", file, "error", err)
			} else {
				slog.Debug("Opened key config file for initialization", "file", file)
			}
		}
	}
}

// pingServerByType sends a ping request appropriate for the server type
func (c *Client) pingServerByType(ctx context.Context, serverType ServerType) error {
	switch serverType {
	case ServerTypeTypeScript:
		// For TypeScript, try a document symbol request on an open file
		return c.pingTypeScriptServer(ctx)
	case ServerTypeGo:
		// For Go, workspace/symbol works well
		return c.pingWithWorkspaceSymbol(ctx)
	case ServerTypeRust:
		// For Rust, workspace/symbol works well
		return c.pingWithWorkspaceSymbol(ctx)
	default:
		// Default ping method
		return c.pingWithWorkspaceSymbol(ctx)
	}
}

// pingTypeScriptServer tries to ping a TypeScript server with appropriate methods
func (c *Client) pingTypeScriptServer(ctx context.Context) error {
	// First try workspace/symbol which works for many servers
	if err := c.pingWithWorkspaceSymbol(ctx); err == nil {
		return nil
	}

	// If that fails, try to find an open file and request document symbols
	c.openFilesMu.RLock()
	defer c.openFilesMu.RUnlock()

	// If we have any open files, try to get document symbols for one
	for uri := range c.openFiles {
		filePath, err := protocol.DocumentURI(uri).Path()
		if err != nil {
			slog.Error("Failed to convert URI to path for TypeScript symbol collection", "uri", uri, "error", err)
			continue
		}

		if strings.HasSuffix(filePath, ".ts") || strings.HasSuffix(filePath, ".js") ||
			strings.HasSuffix(filePath, ".tsx") || strings.HasSuffix(filePath, ".jsx") {
			var symbols []protocol.DocumentSymbol
			err := c.Call(ctx, "textDocument/documentSymbol", protocol.DocumentSymbolParams{
				TextDocument: protocol.TextDocumentIdentifier{
					URI: protocol.DocumentURI(uri),
				},
			}, &symbols)
			if err == nil {
				return nil
			}
		}
	}

	// If we have no open TypeScript files, try to find and open one
	workDir := config.Get().WorkingDir()
	err := filepath.WalkDir(workDir, func(path string, d os.DirEntry, err error) error {
		if err != nil {
			return err
		}

		// Skip directories and non-TypeScript files
		if d.IsDir() {
			return nil
		}

		ext := filepath.Ext(path)
		if ext == ".ts" || ext == ".js" || ext == ".tsx" || ext == ".jsx" {
			// Found a TypeScript file, try to open it
			if err := c.OpenFile(ctx, path); err == nil {
				// Successfully opened, stop walking
				return filepath.SkipAll
			}
		}

		return nil
	})
	if err != nil {
		slog.Debug("Error walking directory for TypeScript files", "error", err)
	}

	// Final fallback - just try a generic capability
	return c.pingWithServerCapabilities(ctx)
}

// openTypeScriptFiles finds and opens TypeScript files to help initialize the server
func (c *Client) openTypeScriptFiles(ctx context.Context, workDir string) {
	cfg := config.Get()
	filesOpened := 0
	maxFilesToOpen := 5 // Limit to a reasonable number of files

	// Find and open TypeScript files
	err := filepath.WalkDir(workDir, func(path string, d os.DirEntry, err error) error {
		if err != nil {
			return err
		}

		// Skip directories and non-TypeScript files
		if d.IsDir() {
			// Skip common directories to avoid wasting time
			if shouldSkipDir(path) {
				return filepath.SkipDir
			}
			return nil
		}

		// Check if we've opened enough files
		if filesOpened >= maxFilesToOpen {
			return filepath.SkipAll
		}

		// Check file extension
		ext := filepath.Ext(path)
		if ext == ".ts" || ext == ".tsx" || ext == ".js" || ext == ".jsx" {
			// Try to open the file
			if err := c.OpenFile(ctx, path); err == nil {
				filesOpened++
				if cfg.Options.DebugLSP {
					slog.Debug("Opened TypeScript file for initialization", "file", path)
				}
			}
		}

		return nil
	})

	if err != nil && cfg.Options.DebugLSP {
		slog.Debug("Error walking directory for TypeScript files", "error", err)
	}

	if cfg.Options.DebugLSP {
		slog.Debug("Opened TypeScript files for initialization", "count", filesOpened)
	}
}

// shouldSkipDir returns true if the directory should be skipped during file search
func shouldSkipDir(path string) bool {
	dirName := filepath.Base(path)

	// Skip hidden directories
	if strings.HasPrefix(dirName, ".") {
		return true
	}

	// Skip common directories that won't contain relevant source files
	skipDirs := map[string]bool{
		"node_modules": true,
		"dist":         true,
		"build":        true,
		"coverage":     true,
		"vendor":       true,
		"target":       true,
	}

	return skipDirs[dirName]
}

// pingWithWorkspaceSymbol tries a workspace/symbol request
func (c *Client) pingWithWorkspaceSymbol(ctx context.Context) error {
	var result []protocol.SymbolInformation
	return c.Call(ctx, "workspace/symbol", protocol.WorkspaceSymbolParams{
		Query: "",
	}, &result)
}

// pingWithServerCapabilities tries to get server capabilities
func (c *Client) pingWithServerCapabilities(ctx context.Context) error {
	// This is a very lightweight request that should work for most servers
	return c.Notify(ctx, "$/cancelRequest", struct{ ID int }{ID: -1})
}

type OpenFileInfo struct {
	Version int32
	URI     protocol.DocumentURI
}

// HandlesFile checks if this LSP client handles the given file based on its
// extension.
func (c *Client) HandlesFile(path string) bool {
	// If no file types are specified, handle all files (backward compatibility)
	if len(c.fileTypes) == 0 {
		return true
	}

	name := strings.ToLower(filepath.Base(path))
	for _, filetpe := range c.fileTypes {
		suffix := strings.ToLower(filetpe)
		if !strings.HasPrefix(suffix, ".") {
			suffix = "." + suffix
		}
		if strings.HasSuffix(name, suffix) {
			slog.Debug("handles file", "name", c.name, "file", name, "filetype", filetpe)
			return true
		}
	}
	slog.Debug("doesn't handle file", "name", c.name, "file", name)
	return false
}

func (c *Client) OpenFile(ctx context.Context, filepath string) error {
	if !c.HandlesFile(filepath) {
		return nil
	}

	uri := string(protocol.URIFromPath(filepath))

	c.openFilesMu.Lock()
	if _, exists := c.openFiles[uri]; exists {
		c.openFilesMu.Unlock()
		return nil // Already open
	}
	c.openFilesMu.Unlock()

	// Skip files that do not exist or cannot be read
	content, err := os.ReadFile(filepath)
	if err != nil {
		return fmt.Errorf("error reading file: %w", err)
	}

	params := protocol.DidOpenTextDocumentParams{
		TextDocument: protocol.TextDocumentItem{
			URI:        protocol.DocumentURI(uri),
			LanguageID: DetectLanguageID(uri),
			Version:    1,
			Text:       string(content),
		},
	}

	if err := c.Notify(ctx, "textDocument/didOpen", params); err != nil {
		return err
	}

	c.openFilesMu.Lock()
	c.openFiles[uri] = &OpenFileInfo{
		Version: 1,
		URI:     protocol.DocumentURI(uri),
	}
	c.openFilesMu.Unlock()

	return nil
}

func (c *Client) NotifyChange(ctx context.Context, filepath string) error {
	uri := string(protocol.URIFromPath(filepath))

	content, err := os.ReadFile(filepath)
	if err != nil {
		return fmt.Errorf("error reading file: %w", err)
	}

	c.openFilesMu.Lock()
	fileInfo, isOpen := c.openFiles[uri]
	if !isOpen {
		c.openFilesMu.Unlock()
		return fmt.Errorf("cannot notify change for unopened file: %s", filepath)
	}

	// Increment version
	fileInfo.Version++
	version := fileInfo.Version
	c.openFilesMu.Unlock()

	params := protocol.DidChangeTextDocumentParams{
		TextDocument: protocol.VersionedTextDocumentIdentifier{
			TextDocumentIdentifier: protocol.TextDocumentIdentifier{
				URI: protocol.DocumentURI(uri),
			},
			Version: version,
		},
		ContentChanges: []protocol.TextDocumentContentChangeEvent{
			{
				Value: protocol.TextDocumentContentChangeWholeDocument{
					Text: string(content),
				},
			},
		},
	}

	return c.Notify(ctx, "textDocument/didChange", params)
}

func (c *Client) CloseFile(ctx context.Context, filepath string) error {
	cfg := config.Get()
	uri := string(protocol.URIFromPath(filepath))

	c.openFilesMu.Lock()
	if _, exists := c.openFiles[uri]; !exists {
		c.openFilesMu.Unlock()
		return nil // Already closed
	}
	c.openFilesMu.Unlock()

	params := protocol.DidCloseTextDocumentParams{
		TextDocument: protocol.TextDocumentIdentifier{
			URI: protocol.DocumentURI(uri),
		},
	}

	if cfg.Options.DebugLSP {
		slog.Debug("Closing file", "file", filepath)
	}
	if err := c.Notify(ctx, "textDocument/didClose", params); err != nil {
		return err
	}

	c.openFilesMu.Lock()
	delete(c.openFiles, uri)
	c.openFilesMu.Unlock()

	return nil
}

func (c *Client) IsFileOpen(filepath string) bool {
	uri := string(protocol.URIFromPath(filepath))
	c.openFilesMu.RLock()
	defer c.openFilesMu.RUnlock()
	_, exists := c.openFiles[uri]
	return exists
}

// CloseAllFiles closes all currently open files
func (c *Client) CloseAllFiles(ctx context.Context) {
	cfg := config.Get()
	c.openFilesMu.Lock()
	filesToClose := make([]string, 0, len(c.openFiles))

	// First collect all URIs that need to be closed
	for uri := range c.openFiles {
		// Convert URI back to file path using proper URI handling
		filePath, err := protocol.DocumentURI(uri).Path()
		if err != nil {
			slog.Error("Failed to convert URI to path for file closing", "uri", uri, "error", err)
			continue
		}
		filesToClose = append(filesToClose, filePath)
	}
	c.openFilesMu.Unlock()

	// Then close them all
	for _, filePath := range filesToClose {
		err := c.CloseFile(ctx, filePath)
		if err != nil && cfg.Options.DebugLSP {
			slog.Warn("Error closing file", "file", filePath, "error", err)
		}
	}

	if cfg.Options.DebugLSP {
		slog.Debug("Closed all files", "files", filesToClose)
	}
}

func (c *Client) GetFileDiagnostics(uri protocol.DocumentURI) []protocol.Diagnostic {
	c.diagnosticsMu.RLock()
	defer c.diagnosticsMu.RUnlock()

	return c.diagnostics[uri]
}

// GetDiagnostics returns all diagnostics for all files
func (c *Client) GetDiagnostics() map[protocol.DocumentURI][]protocol.Diagnostic {
	c.diagnosticsMu.RLock()
	defer c.diagnosticsMu.RUnlock()

	return maps.Clone(c.diagnostics)
}

// OpenFileOnDemand opens a file only if it's not already open
// This is used for lazy-loading files when they're actually needed
func (c *Client) OpenFileOnDemand(ctx context.Context, filepath string) error {
	// Check if the file is already open
	if c.IsFileOpen(filepath) {
		return nil
	}

	// Open the file
	return c.OpenFile(ctx, filepath)
}

// GetDiagnosticsForFile ensures a file is open and returns its diagnostics
// This is useful for on-demand diagnostics when using lazy loading
func (c *Client) GetDiagnosticsForFile(ctx context.Context, filepath string) ([]protocol.Diagnostic, error) {
	documentURI := protocol.URIFromPath(filepath)

	// Make sure the file is open
	if !c.IsFileOpen(filepath) {
		if err := c.OpenFile(ctx, filepath); err != nil {
			return nil, fmt.Errorf("failed to open file for diagnostics: %w", err)
		}

		// Give the LSP server a moment to process the file
		time.Sleep(100 * time.Millisecond)
	}

	// Get diagnostics
	c.diagnosticsMu.RLock()
	diagnostics := c.diagnostics[documentURI]
	c.diagnosticsMu.RUnlock()

	return diagnostics, nil
}

// ClearDiagnosticsForURI removes diagnostics for a specific URI from the cache
func (c *Client) ClearDiagnosticsForURI(uri protocol.DocumentURI) {
	c.diagnosticsMu.Lock()
	defer c.diagnosticsMu.Unlock()
	delete(c.diagnostics, uri)
}



================================================
FILE: internal/lsp/client_test.go
================================================
package lsp

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestHandlesFile(t *testing.T) {
	tests := []struct {
		name      string
		fileTypes []string
		filepath  string
		expected  bool
	}{
		{
			name:      "no file types specified - handles all files",
			fileTypes: nil,
			filepath:  "test.go",
			expected:  true,
		},
		{
			name:      "empty file types - handles all files",
			fileTypes: []string{},
			filepath:  "test.go",
			expected:  true,
		},
		{
			name:      "matches .go extension",
			fileTypes: []string{".go"},
			filepath:  "main.go",
			expected:  true,
		},
		{
			name:      "matches go extension without dot",
			fileTypes: []string{"go"},
			filepath:  "main.go",
			expected:  true,
		},
		{
			name:      "matches one of multiple extensions",
			fileTypes: []string{".js", ".ts", ".tsx"},
			filepath:  "component.tsx",
			expected:  true,
		},
		{
			name:      "does not match extension",
			fileTypes: []string{".go", ".rs"},
			filepath:  "script.sh",
			expected:  false,
		},
		{
			name:      "matches with full path",
			fileTypes: []string{".sh"},
			filepath:  "/usr/local/bin/script.sh",
			expected:  true,
		},
		{
			name:      "case insensitive matching",
			fileTypes: []string{".GO"},
			filepath:  "main.go",
			expected:  true,
		},
		{
			name:      "bash file types",
			fileTypes: []string{".sh", ".bash", ".zsh", ".ksh"},
			filepath:  "script.sh",
			expected:  true,
		},
		{
			name:      "bash should not handle go files",
			fileTypes: []string{".sh", ".bash", ".zsh", ".ksh"},
			filepath:  "main.go",
			expected:  false,
		},
		{
			name:      "bash should not handle json files",
			fileTypes: []string{".sh", ".bash", ".zsh", ".ksh"},
			filepath:  "config.json",
			expected:  false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			client := &Client{
				fileTypes: tt.fileTypes,
			}
			result := client.HandlesFile(tt.filepath)
			require.Equal(t, tt.expected, result)
		})
	}
}



================================================
FILE: internal/lsp/handlers.go
================================================
package lsp

import (
	"encoding/json"
	"log/slog"

	"github.com/charmbracelet/crush/internal/config"

	"github.com/charmbracelet/crush/internal/lsp/protocol"
	"github.com/charmbracelet/crush/internal/lsp/util"
)

// Requests

func HandleWorkspaceConfiguration(params json.RawMessage) (any, error) {
	return []map[string]any{{}}, nil
}

func HandleRegisterCapability(params json.RawMessage) (any, error) {
	var registerParams protocol.RegistrationParams
	if err := json.Unmarshal(params, &registerParams); err != nil {
		slog.Error("Error unmarshaling registration params", "error", err)
		return nil, err
	}

	for _, reg := range registerParams.Registrations {
		switch reg.Method {
		case "workspace/didChangeWatchedFiles":
			// Parse the registration options
			optionsJSON, err := json.Marshal(reg.RegisterOptions)
			if err != nil {
				slog.Error("Error marshaling registration options", "error", err)
				continue
			}

			var options protocol.DidChangeWatchedFilesRegistrationOptions
			if err := json.Unmarshal(optionsJSON, &options); err != nil {
				slog.Error("Error unmarshaling registration options", "error", err)
				continue
			}

			// Store the file watchers registrations
			notifyFileWatchRegistration(reg.ID, options.Watchers)
		}
	}

	return nil, nil
}

func HandleApplyEdit(params json.RawMessage) (any, error) {
	var edit protocol.ApplyWorkspaceEditParams
	if err := json.Unmarshal(params, &edit); err != nil {
		return nil, err
	}

	err := util.ApplyWorkspaceEdit(edit.Edit)
	if err != nil {
		slog.Error("Error applying workspace edit", "error", err)
		return protocol.ApplyWorkspaceEditResult{Applied: false, FailureReason: err.Error()}, nil
	}

	return protocol.ApplyWorkspaceEditResult{Applied: true}, nil
}

// FileWatchRegistrationHandler is a function that will be called when file watch registrations are received
type FileWatchRegistrationHandler func(id string, watchers []protocol.FileSystemWatcher)

// fileWatchHandler holds the current handler for file watch registrations
var fileWatchHandler FileWatchRegistrationHandler

// RegisterFileWatchHandler sets the handler for file watch registrations
func RegisterFileWatchHandler(handler FileWatchRegistrationHandler) {
	fileWatchHandler = handler
}

// notifyFileWatchRegistration notifies the handler about new file watch registrations
func notifyFileWatchRegistration(id string, watchers []protocol.FileSystemWatcher) {
	if fileWatchHandler != nil {
		fileWatchHandler(id, watchers)
	}
}

// Notifications

func HandleServerMessage(params json.RawMessage) {
	cfg := config.Get()
	var msg struct {
		Type    int    `json:"type"`
		Message string `json:"message"`
	}
	if err := json.Unmarshal(params, &msg); err == nil {
		if cfg.Options.DebugLSP {
			slog.Debug("Server message", "type", msg.Type, "message", msg.Message)
		}
	}
}

func HandleDiagnostics(client *Client, params json.RawMessage) {
	var diagParams protocol.PublishDiagnosticsParams
	if err := json.Unmarshal(params, &diagParams); err != nil {
		slog.Error("Error unmarshaling diagnostics params", "error", err)
		return
	}

	client.diagnosticsMu.Lock()
	client.diagnostics[diagParams.URI] = diagParams.Diagnostics

	// Calculate total diagnostic count
	totalCount := 0
	for _, diagnostics := range client.diagnostics {
		totalCount += len(diagnostics)
	}
	client.diagnosticsMu.Unlock()

	// Trigger callback if set
	if client.onDiagnosticsChanged != nil {
		client.onDiagnosticsChanged(client.name, totalCount)
	}
}



================================================
FILE: internal/lsp/language.go
================================================
package lsp

import (
	"path/filepath"
	"strings"

	"github.com/charmbracelet/crush/internal/lsp/protocol"
)

func DetectLanguageID(uri string) protocol.LanguageKind {
	ext := strings.ToLower(filepath.Ext(uri))
	switch ext {
	case ".abap":
		return protocol.LangABAP
	case ".bat":
		return protocol.LangWindowsBat
	case ".bib", ".bibtex":
		return protocol.LangBibTeX
	case ".clj":
		return protocol.LangClojure
	case ".coffee":
		return protocol.LangCoffeescript
	case ".c":
		return protocol.LangC
	case ".cpp", ".cxx", ".cc", ".c++":
		return protocol.LangCPP
	case ".cs":
		return protocol.LangCSharp
	case ".css":
		return protocol.LangCSS
	case ".d":
		return protocol.LangD
	case ".pas", ".pascal":
		return protocol.LangDelphi
	case ".diff", ".patch":
		return protocol.LangDiff
	case ".dart":
		return protocol.LangDart
	case ".dockerfile":
		return protocol.LangDockerfile
	case ".ex", ".exs":
		return protocol.LangElixir
	case ".erl", ".hrl":
		return protocol.LangErlang
	case ".fs", ".fsi", ".fsx", ".fsscript":
		return protocol.LangFSharp
	case ".gitcommit":
		return protocol.LangGitCommit
	case ".gitrebase":
		return protocol.LangGitRebase
	case ".go":
		return protocol.LangGo
	case ".groovy":
		return protocol.LangGroovy
	case ".hbs", ".handlebars":
		return protocol.LangHandlebars
	case ".hs":
		return protocol.LangHaskell
	case ".html", ".htm":
		return protocol.LangHTML
	case ".ini":
		return protocol.LangIni
	case ".java":
		return protocol.LangJava
	case ".js":
		return protocol.LangJavaScript
	case ".jsx":
		return protocol.LangJavaScriptReact
	case ".json":
		return protocol.LangJSON
	case ".tex", ".latex":
		return protocol.LangLaTeX
	case ".less":
		return protocol.LangLess
	case ".lua":
		return protocol.LangLua
	case ".makefile", "makefile":
		return protocol.LangMakefile
	case ".md", ".markdown":
		return protocol.LangMarkdown
	case ".m":
		return protocol.LangObjectiveC
	case ".mm":
		return protocol.LangObjectiveCPP
	case ".pl":
		return protocol.LangPerl
	case ".pm":
		return protocol.LangPerl6
	case ".php":
		return protocol.LangPHP
	case ".ps1", ".psm1":
		return protocol.LangPowershell
	case ".pug", ".jade":
		return protocol.LangPug
	case ".py":
		return protocol.LangPython
	case ".r":
		return protocol.LangR
	case ".cshtml", ".razor":
		return protocol.LangRazor
	case ".rb":
		return protocol.LangRuby
	case ".rs":
		return protocol.LangRust
	case ".scss":
		return protocol.LangSCSS
	case ".sass":
		return protocol.LangSASS
	case ".scala":
		return protocol.LangScala
	case ".shader":
		return protocol.LangShaderLab
	case ".sh", ".bash", ".zsh", ".ksh":
		return protocol.LangShellScript
	case ".sql":
		return protocol.LangSQL
	case ".swift":
		return protocol.LangSwift
	case ".ts":
		return protocol.LangTypeScript
	case ".tsx":
		return protocol.LangTypeScriptReact
	case ".xml":
		return protocol.LangXML
	case ".xsl":
		return protocol.LangXSL
	case ".yaml", ".yml":
		return protocol.LangYAML
	default:
		return protocol.LanguageKind("") // Unknown language
	}
}



================================================
FILE: internal/lsp/methods.go
================================================
// Generated code. Do not edit
package lsp

import (
	"context"

	"github.com/charmbracelet/crush/internal/lsp/protocol"
)

// Implementation sends a textDocument/implementation request to the LSP server.
// A request to resolve the implementation locations of a symbol at a given text document position. The request's parameter is of type TextDocumentPositionParams the response is of type Definition or a Thenable that resolves to such.
func (c *Client) Implementation(ctx context.Context, params protocol.ImplementationParams) (protocol.Or_Result_textDocument_implementation, error) {
	var result protocol.Or_Result_textDocument_implementation
	err := c.Call(ctx, "textDocument/implementation", params, &result)
	return result, err
}

// TypeDefinition sends a textDocument/typeDefinition request to the LSP server.
// A request to resolve the type definition locations of a symbol at a given text document position. The request's parameter is of type TextDocumentPositionParams the response is of type Definition or a Thenable that resolves to such.
func (c *Client) TypeDefinition(ctx context.Context, params protocol.TypeDefinitionParams) (protocol.Or_Result_textDocument_typeDefinition, error) {
	var result protocol.Or_Result_textDocument_typeDefinition
	err := c.Call(ctx, "textDocument/typeDefinition", params, &result)
	return result, err
}

// DocumentColor sends a textDocument/documentColor request to the LSP server.
// A request to list all color symbols found in a given text document. The request's parameter is of type DocumentColorParams the response is of type ColorInformation ColorInformation[] or a Thenable that resolves to such.
func (c *Client) DocumentColor(ctx context.Context, params protocol.DocumentColorParams) ([]protocol.ColorInformation, error) {
	var result []protocol.ColorInformation
	err := c.Call(ctx, "textDocument/documentColor", params, &result)
	return result, err
}

// ColorPresentation sends a textDocument/colorPresentation request to the LSP server.
// A request to list all presentation for a color. The request's parameter is of type ColorPresentationParams the response is of type ColorInformation ColorInformation[] or a Thenable that resolves to such.
func (c *Client) ColorPresentation(ctx context.Context, params protocol.ColorPresentationParams) ([]protocol.ColorPresentation, error) {
	var result []protocol.ColorPresentation
	err := c.Call(ctx, "textDocument/colorPresentation", params, &result)
	return result, err
}

// FoldingRange sends a textDocument/foldingRange request to the LSP server.
// A request to provide folding ranges in a document. The request's parameter is of type FoldingRangeParams, the response is of type FoldingRangeList or a Thenable that resolves to such.
func (c *Client) FoldingRange(ctx context.Context, params protocol.FoldingRangeParams) ([]protocol.FoldingRange, error) {
	var result []protocol.FoldingRange
	err := c.Call(ctx, "textDocument/foldingRange", params, &result)
	return result, err
}

// Declaration sends a textDocument/declaration request to the LSP server.
// A request to resolve the type definition locations of a symbol at a given text document position. The request's parameter is of type TextDocumentPositionParams the response is of type Declaration or a typed array of DeclarationLink or a Thenable that resolves to such.
func (c *Client) Declaration(ctx context.Context, params protocol.DeclarationParams) (protocol.Or_Result_textDocument_declaration, error) {
	var result protocol.Or_Result_textDocument_declaration
	err := c.Call(ctx, "textDocument/declaration", params, &result)
	return result, err
}

// SelectionRange sends a textDocument/selectionRange request to the LSP server.
// A request to provide selection ranges in a document. The request's parameter is of type SelectionRangeParams, the response is of type SelectionRange SelectionRange[] or a Thenable that resolves to such.
func (c *Client) SelectionRange(ctx context.Context, params protocol.SelectionRangeParams) ([]protocol.SelectionRange, error) {
	var result []protocol.SelectionRange
	err := c.Call(ctx, "textDocument/selectionRange", params, &result)
	return result, err
}

// PrepareCallHierarchy sends a textDocument/prepareCallHierarchy request to the LSP server.
// A request to result a CallHierarchyItem in a document at a given position. Can be used as an input to an incoming or outgoing call hierarchy. Since 3.16.0
func (c *Client) PrepareCallHierarchy(ctx context.Context, params protocol.CallHierarchyPrepareParams) ([]protocol.CallHierarchyItem, error) {
	var result []protocol.CallHierarchyItem
	err := c.Call(ctx, "textDocument/prepareCallHierarchy", params, &result)
	return result, err
}

// IncomingCalls sends a callHierarchy/incomingCalls request to the LSP server.
// A request to resolve the incoming calls for a given CallHierarchyItem. Since 3.16.0
func (c *Client) IncomingCalls(ctx context.Context, params protocol.CallHierarchyIncomingCallsParams) ([]protocol.CallHierarchyIncomingCall, error) {
	var result []protocol.CallHierarchyIncomingCall
	err := c.Call(ctx, "callHierarchy/incomingCalls", params, &result)
	return result, err
}

// OutgoingCalls sends a callHierarchy/outgoingCalls request to the LSP server.
// A request to resolve the outgoing calls for a given CallHierarchyItem. Since 3.16.0
func (c *Client) OutgoingCalls(ctx context.Context, params protocol.CallHierarchyOutgoingCallsParams) ([]protocol.CallHierarchyOutgoingCall, error) {
	var result []protocol.CallHierarchyOutgoingCall
	err := c.Call(ctx, "callHierarchy/outgoingCalls", params, &result)
	return result, err
}

// SemanticTokensFull sends a textDocument/semanticTokens/full request to the LSP server.
// Since 3.16.0
func (c *Client) SemanticTokensFull(ctx context.Context, params protocol.SemanticTokensParams) (protocol.SemanticTokens, error) {
	var result protocol.SemanticTokens
	err := c.Call(ctx, "textDocument/semanticTokens/full", params, &result)
	return result, err
}

// SemanticTokensFullDelta sends a textDocument/semanticTokens/full/delta request to the LSP server.
// Since 3.16.0
func (c *Client) SemanticTokensFullDelta(ctx context.Context, params protocol.SemanticTokensDeltaParams) (protocol.Or_Result_textDocument_semanticTokens_full_delta, error) {
	var result protocol.Or_Result_textDocument_semanticTokens_full_delta
	err := c.Call(ctx, "textDocument/semanticTokens/full/delta", params, &result)
	return result, err
}

// SemanticTokensRange sends a textDocument/semanticTokens/range request to the LSP server.
// Since 3.16.0
func (c *Client) SemanticTokensRange(ctx context.Context, params protocol.SemanticTokensRangeParams) (protocol.SemanticTokens, error) {
	var result protocol.SemanticTokens
	err := c.Call(ctx, "textDocument/semanticTokens/range", params, &result)
	return result, err
}

// LinkedEditingRange sends a textDocument/linkedEditingRange request to the LSP server.
// A request to provide ranges that can be edited together. Since 3.16.0
func (c *Client) LinkedEditingRange(ctx context.Context, params protocol.LinkedEditingRangeParams) (protocol.LinkedEditingRanges, error) {
	var result protocol.LinkedEditingRanges
	err := c.Call(ctx, "textDocument/linkedEditingRange", params, &result)
	return result, err
}

// WillCreateFiles sends a workspace/willCreateFiles request to the LSP server.
// The will create files request is sent from the client to the server before files are actually created as long as the creation is triggered from within the client. The request can return a WorkspaceEdit which will be applied to workspace before the files are created. Hence the WorkspaceEdit can not manipulate the content of the file to be created. Since 3.16.0
func (c *Client) WillCreateFiles(ctx context.Context, params protocol.CreateFilesParams) (protocol.WorkspaceEdit, error) {
	var result protocol.WorkspaceEdit
	err := c.Call(ctx, "workspace/willCreateFiles", params, &result)
	return result, err
}

// WillRenameFiles sends a workspace/willRenameFiles request to the LSP server.
// The will rename files request is sent from the client to the server before files are actually renamed as long as the rename is triggered from within the client. Since 3.16.0
func (c *Client) WillRenameFiles(ctx context.Context, params protocol.RenameFilesParams) (protocol.WorkspaceEdit, error) {
	var result protocol.WorkspaceEdit
	err := c.Call(ctx, "workspace/willRenameFiles", params, &result)
	return result, err
}

// WillDeleteFiles sends a workspace/willDeleteFiles request to the LSP server.
// The did delete files notification is sent from the client to the server when files were deleted from within the client. Since 3.16.0
func (c *Client) WillDeleteFiles(ctx context.Context, params protocol.DeleteFilesParams) (protocol.WorkspaceEdit, error) {
	var result protocol.WorkspaceEdit
	err := c.Call(ctx, "workspace/willDeleteFiles", params, &result)
	return result, err
}

// Moniker sends a textDocument/moniker request to the LSP server.
// A request to get the moniker of a symbol at a given text document position. The request parameter is of type TextDocumentPositionParams. The response is of type Moniker Moniker[] or null.
func (c *Client) Moniker(ctx context.Context, params protocol.MonikerParams) ([]protocol.Moniker, error) {
	var result []protocol.Moniker
	err := c.Call(ctx, "textDocument/moniker", params, &result)
	return result, err
}

// PrepareTypeHierarchy sends a textDocument/prepareTypeHierarchy request to the LSP server.
// A request to result a TypeHierarchyItem in a document at a given position. Can be used as an input to a subtypes or supertypes type hierarchy. Since 3.17.0
func (c *Client) PrepareTypeHierarchy(ctx context.Context, params protocol.TypeHierarchyPrepareParams) ([]protocol.TypeHierarchyItem, error) {
	var result []protocol.TypeHierarchyItem
	err := c.Call(ctx, "textDocument/prepareTypeHierarchy", params, &result)
	return result, err
}

// Supertypes sends a typeHierarchy/supertypes request to the LSP server.
// A request to resolve the supertypes for a given TypeHierarchyItem. Since 3.17.0
func (c *Client) Supertypes(ctx context.Context, params protocol.TypeHierarchySupertypesParams) ([]protocol.TypeHierarchyItem, error) {
	var result []protocol.TypeHierarchyItem
	err := c.Call(ctx, "typeHierarchy/supertypes", params, &result)
	return result, err
}

// Subtypes sends a typeHierarchy/subtypes request to the LSP server.
// A request to resolve the subtypes for a given TypeHierarchyItem. Since 3.17.0
func (c *Client) Subtypes(ctx context.Context, params protocol.TypeHierarchySubtypesParams) ([]protocol.TypeHierarchyItem, error) {
	var result []protocol.TypeHierarchyItem
	err := c.Call(ctx, "typeHierarchy/subtypes", params, &result)
	return result, err
}

// InlineValue sends a textDocument/inlineValue request to the LSP server.
// A request to provide inline values in a document. The request's parameter is of type InlineValueParams, the response is of type InlineValue InlineValue[] or a Thenable that resolves to such. Since 3.17.0
func (c *Client) InlineValue(ctx context.Context, params protocol.InlineValueParams) ([]protocol.InlineValue, error) {
	var result []protocol.InlineValue
	err := c.Call(ctx, "textDocument/inlineValue", params, &result)
	return result, err
}

// InlayHint sends a textDocument/inlayHint request to the LSP server.
// A request to provide inlay hints in a document. The request's parameter is of type InlayHintsParams, the response is of type InlayHint InlayHint[] or a Thenable that resolves to such. Since 3.17.0
func (c *Client) InlayHint(ctx context.Context, params protocol.InlayHintParams) ([]protocol.InlayHint, error) {
	var result []protocol.InlayHint
	err := c.Call(ctx, "textDocument/inlayHint", params, &result)
	return result, err
}

// Resolve sends a inlayHint/resolve request to the LSP server.
// A request to resolve additional properties for an inlay hint. The request's parameter is of type InlayHint, the response is of type InlayHint or a Thenable that resolves to such. Since 3.17.0
func (c *Client) Resolve(ctx context.Context, params protocol.InlayHint) (protocol.InlayHint, error) {
	var result protocol.InlayHint
	err := c.Call(ctx, "inlayHint/resolve", params, &result)
	return result, err
}

// Diagnostic sends a textDocument/diagnostic request to the LSP server.
// The document diagnostic request definition. Since 3.17.0
func (c *Client) Diagnostic(ctx context.Context, params protocol.DocumentDiagnosticParams) (protocol.DocumentDiagnosticReport, error) {
	var result protocol.DocumentDiagnosticReport
	err := c.Call(ctx, "textDocument/diagnostic", params, &result)
	return result, err
}

// DiagnosticWorkspace sends a workspace/diagnostic request to the LSP server.
// The workspace diagnostic request definition. Since 3.17.0
func (c *Client) DiagnosticWorkspace(ctx context.Context, params protocol.WorkspaceDiagnosticParams) (protocol.WorkspaceDiagnosticReport, error) {
	var result protocol.WorkspaceDiagnosticReport
	err := c.Call(ctx, "workspace/diagnostic", params, &result)
	return result, err
}

// InlineCompletion sends a textDocument/inlineCompletion request to the LSP server.
// A request to provide inline completions in a document. The request's parameter is of type InlineCompletionParams, the response is of type InlineCompletion InlineCompletion[] or a Thenable that resolves to such. Since 3.18.0 PROPOSED
func (c *Client) InlineCompletion(ctx context.Context, params protocol.InlineCompletionParams) (protocol.Or_Result_textDocument_inlineCompletion, error) {
	var result protocol.Or_Result_textDocument_inlineCompletion
	err := c.Call(ctx, "textDocument/inlineCompletion", params, &result)
	return result, err
}

// TextDocumentContent sends a workspace/textDocumentContent request to the LSP server.
// The workspace/textDocumentContent request is sent from the client to the server to request the content of a text document. Since 3.18.0 PROPOSED
func (c *Client) TextDocumentContent(ctx context.Context, params protocol.TextDocumentContentParams) (string, error) {
	var result string
	err := c.Call(ctx, "workspace/textDocumentContent", params, &result)
	return result, err
}

// Initialize sends a initialize request to the LSP server.
// The initialize request is sent from the client to the server. It is sent once as the request after starting up the server. The requests parameter is of type InitializeParams the response if of type InitializeResult of a Thenable that resolves to such.
func (c *Client) Initialize(ctx context.Context, params protocol.ParamInitialize) (protocol.InitializeResult, error) {
	var result protocol.InitializeResult
	err := c.Call(ctx, "initialize", params, &result)
	return result, err
}

// Shutdown sends a shutdown request to the LSP server.
// A shutdown request is sent from the client to the server. It is sent once when the client decides to shutdown the server. The only notification that is sent after a shutdown request is the exit event.
func (c *Client) Shutdown(ctx context.Context) error {
	return c.Call(ctx, "shutdown", nil, nil)
}

// WillSaveWaitUntil sends a textDocument/willSaveWaitUntil request to the LSP server.
// A document will save request is sent from the client to the server before the document is actually saved. The request can return an array of TextEdits which will be applied to the text document before it is saved. Please note that clients might drop results if computing the text edits took too long or if a server constantly fails on this request. This is done to keep the save fast and reliable.
func (c *Client) WillSaveWaitUntil(ctx context.Context, params protocol.WillSaveTextDocumentParams) ([]protocol.TextEdit, error) {
	var result []protocol.TextEdit
	err := c.Call(ctx, "textDocument/willSaveWaitUntil", params, &result)
	return result, err
}

// Completion sends a textDocument/completion request to the LSP server.
// Request to request completion at a given text document position. The request's parameter is of type TextDocumentPosition the response is of type CompletionItem CompletionItem[] or CompletionList or a Thenable that resolves to such. The request can delay the computation of the CompletionItem.detail detail and CompletionItem.documentation documentation properties to the completionItem/resolve request. However, properties that are needed for the initial sorting and filtering, like sortText, filterText, insertText, and textEdit, must not be changed during resolve.
func (c *Client) Completion(ctx context.Context, params protocol.CompletionParams) (protocol.Or_Result_textDocument_completion, error) {
	var result protocol.Or_Result_textDocument_completion
	err := c.Call(ctx, "textDocument/completion", params, &result)
	return result, err
}

// ResolveCompletionItem sends a completionItem/resolve request to the LSP server.
// Request to resolve additional information for a given completion item.The request's parameter is of type CompletionItem the response is of type CompletionItem or a Thenable that resolves to such.
func (c *Client) ResolveCompletionItem(ctx context.Context, params protocol.CompletionItem) (protocol.CompletionItem, error) {
	var result protocol.CompletionItem
	err := c.Call(ctx, "completionItem/resolve", params, &result)
	return result, err
}

// Hover sends a textDocument/hover request to the LSP server.
// Request to request hover information at a given text document position. The request's parameter is of type TextDocumentPosition the response is of type Hover or a Thenable that resolves to such.
func (c *Client) Hover(ctx context.Context, params protocol.HoverParams) (protocol.Hover, error) {
	var result protocol.Hover
	err := c.Call(ctx, "textDocument/hover", params, &result)
	return result, err
}

// SignatureHelp sends a textDocument/signatureHelp request to the LSP server.
func (c *Client) SignatureHelp(ctx context.Context, params protocol.SignatureHelpParams) (protocol.SignatureHelp, error) {
	var result protocol.SignatureHelp
	err := c.Call(ctx, "textDocument/signatureHelp", params, &result)
	return result, err
}

// Definition sends a textDocument/definition request to the LSP server.
// A request to resolve the definition location of a symbol at a given text document position. The request's parameter is of type TextDocumentPosition the response is of either type Definition or a typed array of DefinitionLink or a Thenable that resolves to such.
func (c *Client) Definition(ctx context.Context, params protocol.DefinitionParams) (protocol.Or_Result_textDocument_definition, error) {
	var result protocol.Or_Result_textDocument_definition
	err := c.Call(ctx, "textDocument/definition", params, &result)
	return result, err
}

// References sends a textDocument/references request to the LSP server.
// A request to resolve project-wide references for the symbol denoted by the given text document position. The request's parameter is of type ReferenceParams the response is of type Location Location[] or a Thenable that resolves to such.
func (c *Client) References(ctx context.Context, params protocol.ReferenceParams) ([]protocol.Location, error) {
	var result []protocol.Location
	err := c.Call(ctx, "textDocument/references", params, &result)
	return result, err
}

// DocumentHighlight sends a textDocument/documentHighlight request to the LSP server.
// Request to resolve a DocumentHighlight for a given text document position. The request's parameter is of type TextDocumentPosition the request response is an array of type DocumentHighlight or a Thenable that resolves to such.
func (c *Client) DocumentHighlight(ctx context.Context, params protocol.DocumentHighlightParams) ([]protocol.DocumentHighlight, error) {
	var result []protocol.DocumentHighlight
	err := c.Call(ctx, "textDocument/documentHighlight", params, &result)
	return result, err
}

// DocumentSymbol sends a textDocument/documentSymbol request to the LSP server.
// A request to list all symbols found in a given text document. The request's parameter is of type TextDocumentIdentifier the response is of type SymbolInformation SymbolInformation[] or a Thenable that resolves to such.
func (c *Client) DocumentSymbol(ctx context.Context, params protocol.DocumentSymbolParams) (protocol.Or_Result_textDocument_documentSymbol, error) {
	var result protocol.Or_Result_textDocument_documentSymbol
	err := c.Call(ctx, "textDocument/documentSymbol", params, &result)
	return result, err
}

// CodeAction sends a textDocument/codeAction request to the LSP server.
// A request to provide commands for the given text document and range.
func (c *Client) CodeAction(ctx context.Context, params protocol.CodeActionParams) ([]protocol.Or_Result_textDocument_codeAction_Item0_Elem, error) {
	var result []protocol.Or_Result_textDocument_codeAction_Item0_Elem
	err := c.Call(ctx, "textDocument/codeAction", params, &result)
	return result, err
}

// ResolveCodeAction sends a codeAction/resolve request to the LSP server.
// Request to resolve additional information for a given code action.The request's parameter is of type CodeAction the response is of type CodeAction or a Thenable that resolves to such.
func (c *Client) ResolveCodeAction(ctx context.Context, params protocol.CodeAction) (protocol.CodeAction, error) {
	var result protocol.CodeAction
	err := c.Call(ctx, "codeAction/resolve", params, &result)
	return result, err
}

// Symbol sends a workspace/symbol request to the LSP server.
// A request to list project-wide symbols matching the query string given by the WorkspaceSymbolParams. The response is of type SymbolInformation SymbolInformation[] or a Thenable that resolves to such. Since 3.17.0 - support for WorkspaceSymbol in the returned data. Clients need to advertise support for WorkspaceSymbols via the client capability workspace.symbol.resolveSupport.
func (c *Client) Symbol(ctx context.Context, params protocol.WorkspaceSymbolParams) (protocol.Or_Result_workspace_symbol, error) {
	var result protocol.Or_Result_workspace_symbol
	err := c.Call(ctx, "workspace/symbol", params, &result)
	return result, err
}

// ResolveWorkspaceSymbol sends a workspaceSymbol/resolve request to the LSP server.
// A request to resolve the range inside the workspace symbol's location. Since 3.17.0
func (c *Client) ResolveWorkspaceSymbol(ctx context.Context, params protocol.WorkspaceSymbol) (protocol.WorkspaceSymbol, error) {
	var result protocol.WorkspaceSymbol
	err := c.Call(ctx, "workspaceSymbol/resolve", params, &result)
	return result, err
}

// CodeLens sends a textDocument/codeLens request to the LSP server.
// A request to provide code lens for the given text document.
func (c *Client) CodeLens(ctx context.Context, params protocol.CodeLensParams) ([]protocol.CodeLens, error) {
	var result []protocol.CodeLens
	err := c.Call(ctx, "textDocument/codeLens", params, &result)
	return result, err
}

// ResolveCodeLens sends a codeLens/resolve request to the LSP server.
// A request to resolve a command for a given code lens.
func (c *Client) ResolveCodeLens(ctx context.Context, params protocol.CodeLens) (protocol.CodeLens, error) {
	var result protocol.CodeLens
	err := c.Call(ctx, "codeLens/resolve", params, &result)
	return result, err
}

// DocumentLink sends a textDocument/documentLink request to the LSP server.
// A request to provide document links
func (c *Client) DocumentLink(ctx context.Context, params protocol.DocumentLinkParams) ([]protocol.DocumentLink, error) {
	var result []protocol.DocumentLink
	err := c.Call(ctx, "textDocument/documentLink", params, &result)
	return result, err
}

// ResolveDocumentLink sends a documentLink/resolve request to the LSP server.
// Request to resolve additional information for a given document link. The request's parameter is of type DocumentLink the response is of type DocumentLink or a Thenable that resolves to such.
func (c *Client) ResolveDocumentLink(ctx context.Context, params protocol.DocumentLink) (protocol.DocumentLink, error) {
	var result protocol.DocumentLink
	err := c.Call(ctx, "documentLink/resolve", params, &result)
	return result, err
}

// Formatting sends a textDocument/formatting request to the LSP server.
// A request to format a whole document.
func (c *Client) Formatting(ctx context.Context, params protocol.DocumentFormattingParams) ([]protocol.TextEdit, error) {
	var result []protocol.TextEdit
	err := c.Call(ctx, "textDocument/formatting", params, &result)
	return result, err
}

// RangeFormatting sends a textDocument/rangeFormatting request to the LSP server.
// A request to format a range in a document.
func (c *Client) RangeFormatting(ctx context.Context, params protocol.DocumentRangeFormattingParams) ([]protocol.TextEdit, error) {
	var result []protocol.TextEdit
	err := c.Call(ctx, "textDocument/rangeFormatting", params, &result)
	return result, err
}

// RangesFormatting sends a textDocument/rangesFormatting request to the LSP server.
// A request to format ranges in a document. Since 3.18.0 PROPOSED
func (c *Client) RangesFormatting(ctx context.Context, params protocol.DocumentRangesFormattingParams) ([]protocol.TextEdit, error) {
	var result []protocol.TextEdit
	err := c.Call(ctx, "textDocument/rangesFormatting", params, &result)
	return result, err
}

// OnTypeFormatting sends a textDocument/onTypeFormatting request to the LSP server.
// A request to format a document on type.
func (c *Client) OnTypeFormatting(ctx context.Context, params protocol.DocumentOnTypeFormattingParams) ([]protocol.TextEdit, error) {
	var result []protocol.TextEdit
	err := c.Call(ctx, "textDocument/onTypeFormatting", params, &result)
	return result, err
}

// Rename sends a textDocument/rename request to the LSP server.
// A request to rename a symbol.
func (c *Client) Rename(ctx context.Context, params protocol.RenameParams) (protocol.WorkspaceEdit, error) {
	var result protocol.WorkspaceEdit
	err := c.Call(ctx, "textDocument/rename", params, &result)
	return result, err
}

// PrepareRename sends a textDocument/prepareRename request to the LSP server.
// A request to test and perform the setup necessary for a rename. Since 3.16 - support for default behavior
func (c *Client) PrepareRename(ctx context.Context, params protocol.PrepareRenameParams) (protocol.PrepareRenameResult, error) {
	var result protocol.PrepareRenameResult
	err := c.Call(ctx, "textDocument/prepareRename", params, &result)
	return result, err
}

// ExecuteCommand sends a workspace/executeCommand request to the LSP server.
// A request send from the client to the server to execute a command. The request might return a workspace edit which the client will apply to the workspace.
func (c *Client) ExecuteCommand(ctx context.Context, params protocol.ExecuteCommandParams) (any, error) {
	var result any
	err := c.Call(ctx, "workspace/executeCommand", params, &result)
	return result, err
}

// DidChangeWorkspaceFolders sends a workspace/didChangeWorkspaceFolders notification to the LSP server.
// The workspace/didChangeWorkspaceFolders notification is sent from the client to the server when the workspace folder configuration changes.
func (c *Client) DidChangeWorkspaceFolders(ctx context.Context, params protocol.DidChangeWorkspaceFoldersParams) error {
	return c.Notify(ctx, "workspace/didChangeWorkspaceFolders", params)
}

// WorkDoneProgressCancel sends a window/workDoneProgress/cancel notification to the LSP server.
// The window/workDoneProgress/cancel notification is sent from  the client to the server to cancel a progress initiated on the server side.
func (c *Client) WorkDoneProgressCancel(ctx context.Context, params protocol.WorkDoneProgressCancelParams) error {
	return c.Notify(ctx, "window/workDoneProgress/cancel", params)
}

// DidCreateFiles sends a workspace/didCreateFiles notification to the LSP server.
// The did create files notification is sent from the client to the server when files were created from within the client. Since 3.16.0
func (c *Client) DidCreateFiles(ctx context.Context, params protocol.CreateFilesParams) error {
	return c.Notify(ctx, "workspace/didCreateFiles", params)
}

// DidRenameFiles sends a workspace/didRenameFiles notification to the LSP server.
// The did rename files notification is sent from the client to the server when files were renamed from within the client. Since 3.16.0
func (c *Client) DidRenameFiles(ctx context.Context, params protocol.RenameFilesParams) error {
	return c.Notify(ctx, "workspace/didRenameFiles", params)
}

// DidDeleteFiles sends a workspace/didDeleteFiles notification to the LSP server.
// The will delete files request is sent from the client to the server before files are actually deleted as long as the deletion is triggered from within the client. Since 3.16.0
func (c *Client) DidDeleteFiles(ctx context.Context, params protocol.DeleteFilesParams) error {
	return c.Notify(ctx, "workspace/didDeleteFiles", params)
}

// DidOpenNotebookDocument sends a notebookDocument/didOpen notification to the LSP server.
// A notification sent when a notebook opens. Since 3.17.0
func (c *Client) DidOpenNotebookDocument(ctx context.Context, params protocol.DidOpenNotebookDocumentParams) error {
	return c.Notify(ctx, "notebookDocument/didOpen", params)
}

// DidChangeNotebookDocument sends a notebookDocument/didChange notification to the LSP server.
func (c *Client) DidChangeNotebookDocument(ctx context.Context, params protocol.DidChangeNotebookDocumentParams) error {
	return c.Notify(ctx, "notebookDocument/didChange", params)
}

// DidSaveNotebookDocument sends a notebookDocument/didSave notification to the LSP server.
// A notification sent when a notebook document is saved. Since 3.17.0
func (c *Client) DidSaveNotebookDocument(ctx context.Context, params protocol.DidSaveNotebookDocumentParams) error {
	return c.Notify(ctx, "notebookDocument/didSave", params)
}

// DidCloseNotebookDocument sends a notebookDocument/didClose notification to the LSP server.
// A notification sent when a notebook closes. Since 3.17.0
func (c *Client) DidCloseNotebookDocument(ctx context.Context, params protocol.DidCloseNotebookDocumentParams) error {
	return c.Notify(ctx, "notebookDocument/didClose", params)
}

// Initialized sends a initialized notification to the LSP server.
// The initialized notification is sent from the client to the server after the client is fully initialized and the server is allowed to send requests from the server to the client.
func (c *Client) Initialized(ctx context.Context, params protocol.InitializedParams) error {
	return c.Notify(ctx, "initialized", params)
}

// Exit sends a exit notification to the LSP server.
// The exit event is sent from the client to the server to ask the server to exit its process.
func (c *Client) Exit(ctx context.Context) error {
	return c.Notify(ctx, "exit", nil)
}

// DidChangeConfiguration sends a workspace/didChangeConfiguration notification to the LSP server.
// The configuration change notification is sent from the client to the server when the client's configuration has changed. The notification contains the changed configuration as defined by the language client.
func (c *Client) DidChangeConfiguration(ctx context.Context, params protocol.DidChangeConfigurationParams) error {
	return c.Notify(ctx, "workspace/didChangeConfiguration", params)
}

// DidOpen sends a textDocument/didOpen notification to the LSP server.
// The document open notification is sent from the client to the server to signal newly opened text documents. The document's truth is now managed by the client and the server must not try to read the document's truth using the document's uri. Open in this sense means it is managed by the client. It doesn't necessarily mean that its content is presented in an editor. An open notification must not be sent more than once without a corresponding close notification send before. This means open and close notification must be balanced and the max open count is one.
func (c *Client) DidOpen(ctx context.Context, params protocol.DidOpenTextDocumentParams) error {
	return c.Notify(ctx, "textDocument/didOpen", params)
}

// DidChange sends a textDocument/didChange notification to the LSP server.
// The document change notification is sent from the client to the server to signal changes to a text document.
func (c *Client) DidChange(ctx context.Context, params protocol.DidChangeTextDocumentParams) error {
	return c.Notify(ctx, "textDocument/didChange", params)
}

// DidClose sends a textDocument/didClose notification to the LSP server.
// The document close notification is sent from the client to the server when the document got closed in the client. The document's truth now exists where the document's uri points to (e.g. if the document's uri is a file uri the truth now exists on disk). As with the open notification the close notification is about managing the document's content. Receiving a close notification doesn't mean that the document was open in an editor before. A close notification requires a previous open notification to be sent.
func (c *Client) DidClose(ctx context.Context, params protocol.DidCloseTextDocumentParams) error {
	return c.Notify(ctx, "textDocument/didClose", params)
}

// DidSave sends a textDocument/didSave notification to the LSP server.
// The document save notification is sent from the client to the server when the document got saved in the client.
func (c *Client) DidSave(ctx context.Context, params protocol.DidSaveTextDocumentParams) error {
	return c.Notify(ctx, "textDocument/didSave", params)
}

// WillSave sends a textDocument/willSave notification to the LSP server.
// A document will save notification is sent from the client to the server before the document is actually saved.
func (c *Client) WillSave(ctx context.Context, params protocol.WillSaveTextDocumentParams) error {
	return c.Notify(ctx, "textDocument/willSave", params)
}

// DidChangeWatchedFiles sends a workspace/didChangeWatchedFiles notification to the LSP server.
// The watched files notification is sent from the client to the server when the client detects changes to file watched by the language client.
func (c *Client) DidChangeWatchedFiles(ctx context.Context, params protocol.DidChangeWatchedFilesParams) error {
	return c.Notify(ctx, "workspace/didChangeWatchedFiles", params)
}

// SetTrace sends a $/setTrace notification to the LSP server.
func (c *Client) SetTrace(ctx context.Context, params protocol.SetTraceParams) error {
	return c.Notify(ctx, "$/setTrace", params)
}

// Progress sends a $/progress notification to the LSP server.
func (c *Client) Progress(ctx context.Context, params protocol.ProgressParams) error {
	return c.Notify(ctx, "$/progress", params)
}



================================================
FILE: internal/lsp/protocol.go
================================================
package lsp

import (
	"encoding/json"
)

// Message represents a JSON-RPC 2.0 message
type Message struct {
	JSONRPC string          `json:"jsonrpc"`
	ID      int32           `json:"id,omitempty"`
	Method  string          `json:"method,omitempty"`
	Params  json.RawMessage `json:"params,omitempty"`
	Result  json.RawMessage `json:"result,omitempty"`
	Error   *ResponseError  `json:"error,omitempty"`
}

// ResponseError represents a JSON-RPC 2.0 error
type ResponseError struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

func NewRequest(id int32, method string, params any) (*Message, error) {
	paramsJSON, err := json.Marshal(params)
	if err != nil {
		return nil, err
	}

	return &Message{
		JSONRPC: "2.0",
		ID:      id,
		Method:  method,
		Params:  paramsJSON,
	}, nil
}

func NewNotification(method string, params any) (*Message, error) {
	paramsJSON, err := json.Marshal(params)
	if err != nil {
		return nil, err
	}

	return &Message{
		JSONRPC: "2.0",
		Method:  method,
		Params:  paramsJSON,
	}, nil
}



================================================
FILE: internal/lsp/transport.go
================================================
package lsp

import (
	"bufio"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"log/slog"
	"strings"

	"github.com/charmbracelet/crush/internal/config"
)

// WriteMessage writes an LSP message to the given writer
func WriteMessage(w io.Writer, msg *Message) error {
	data, err := json.Marshal(msg)
	if err != nil {
		return fmt.Errorf("failed to marshal message: %w", err)
	}
	cfg := config.Get()

	if cfg.Options.DebugLSP {
		slog.Debug("Sending message to server", "method", msg.Method, "id", msg.ID)
	}

	_, err = fmt.Fprintf(w, "Content-Length: %d\r\n\r\n", len(data))
	if err != nil {
		return fmt.Errorf("failed to write header: %w", err)
	}

	_, err = w.Write(data)
	if err != nil {
		return fmt.Errorf("failed to write message: %w", err)
	}

	return nil
}

// ReadMessage reads a single LSP message from the given reader
func ReadMessage(r *bufio.Reader) (*Message, error) {
	cfg := config.Get()
	// Read headers
	var contentLength int
	for {
		line, err := r.ReadString('\n')
		if err != nil {
			return nil, fmt.Errorf("failed to read header: %w", err)
		}
		line = strings.TrimSpace(line)

		if cfg.Options.DebugLSP {
			slog.Debug("Received header", "line", line)
		}

		if line == "" {
			break // End of headers
		}

		if strings.HasPrefix(line, "Content-Length: ") {
			_, err := fmt.Sscanf(line, "Content-Length: %d", &contentLength)
			if err != nil {
				return nil, fmt.Errorf("invalid Content-Length: %w", err)
			}
		}
	}

	if cfg.Options.DebugLSP {
		slog.Debug("Content-Length", "length", contentLength)
	}

	// Read content
	content := make([]byte, contentLength)
	_, err := io.ReadFull(r, content)
	if err != nil {
		return nil, fmt.Errorf("failed to read content: %w", err)
	}

	if cfg.Options.DebugLSP {
		slog.Debug("Received content", "content", string(content))
	}

	// Parse message
	var msg Message
	if err := json.Unmarshal(content, &msg); err != nil {
		return nil, fmt.Errorf("failed to unmarshal message: %w", err)
	}

	return &msg, nil
}

// handleMessages reads and dispatches messages in a loop
func (c *Client) handleMessages() {
	cfg := config.Get()
	for {
		msg, err := ReadMessage(c.stdout)
		if err != nil {
			if cfg.Options.DebugLSP {
				slog.Error("Error reading message", "error", err)
			}
			return
		}

		// Handle server->client request (has both Method and ID)
		if msg.Method != "" && msg.ID != 0 {
			if cfg.Options.DebugLSP {
				slog.Debug("Received request from server", "method", msg.Method, "id", msg.ID)
			}

			response := &Message{
				JSONRPC: "2.0",
				ID:      msg.ID,
			}

			// Look up handler for this method
			c.serverHandlersMu.RLock()
			handler, ok := c.serverRequestHandlers[msg.Method]
			c.serverHandlersMu.RUnlock()

			if ok {
				result, err := handler(msg.Params)
				if err != nil {
					response.Error = &ResponseError{
						Code:    -32603,
						Message: err.Error(),
					}
				} else {
					rawJSON, err := json.Marshal(result)
					if err != nil {
						response.Error = &ResponseError{
							Code:    -32603,
							Message: fmt.Sprintf("failed to marshal response: %v", err),
						}
					} else {
						response.Result = rawJSON
					}
				}
			} else {
				response.Error = &ResponseError{
					Code:    -32601,
					Message: fmt.Sprintf("method not found: %s", msg.Method),
				}
			}

			// Send response back to server
			if err := WriteMessage(c.stdin, response); err != nil {
				slog.Error("Error sending response to server", "error", err)
			}

			continue
		}

		// Handle notification (has Method but no ID)
		if msg.Method != "" && msg.ID == 0 {
			c.notificationMu.RLock()
			handler, ok := c.notificationHandlers[msg.Method]
			c.notificationMu.RUnlock()

			if ok {
				if cfg.Options.DebugLSP {
					slog.Debug("Handling notification", "method", msg.Method)
				}
				go handler(msg.Params)
			} else if cfg.Options.DebugLSP {
				slog.Debug("No handler for notification", "method", msg.Method)
			}
			continue
		}

		// Handle response to our request (has ID but no Method)
		if msg.ID != 0 && msg.Method == "" {
			c.handlersMu.RLock()
			ch, ok := c.handlers[msg.ID]
			c.handlersMu.RUnlock()

			if ok {
				if cfg.Options.DebugLSP {
					slog.Debug("Received response for request", "id", msg.ID)
				}
				ch <- msg
				close(ch)
			} else if cfg.Options.DebugLSP {
				slog.Debug("No handler for response", "id", msg.ID)
			}
		}
	}
}

// Call makes a request and waits for the response
func (c *Client) Call(ctx context.Context, method string, params any, result any) error {
	cfg := config.Get()
	id := c.nextID.Add(1)

	if cfg.Options.DebugLSP {
		slog.Debug("Making call", "method", method, "id", id)
	}

	msg, err := NewRequest(id, method, params)
	if err != nil {
		return fmt.Errorf("failed to create request: %w", err)
	}

	// Create response channel
	ch := make(chan *Message, 1)
	c.handlersMu.Lock()
	c.handlers[id] = ch
	c.handlersMu.Unlock()

	defer func() {
		c.handlersMu.Lock()
		delete(c.handlers, id)
		c.handlersMu.Unlock()
	}()

	// Send request
	if err := WriteMessage(c.stdin, msg); err != nil {
		return fmt.Errorf("failed to send request: %w", err)
	}

	if cfg.Options.DebugLSP {
		slog.Debug("Request sent", "method", method, "id", id)
	}

	// Wait for response
	select {
	case <-ctx.Done():
		return ctx.Err()
	case resp := <-ch:
		if cfg.Options.DebugLSP {
			slog.Debug("Received response", "id", id)
		}

		if resp.Error != nil {
			return fmt.Errorf("request failed: %s (code: %d)", resp.Error.Message, resp.Error.Code)
		}

		if result != nil {
			// If result is a json.RawMessage, just copy the raw bytes
			if rawMsg, ok := result.(*json.RawMessage); ok {
				*rawMsg = resp.Result
				return nil
			}
			// Otherwise unmarshal into the provided type
			if err := json.Unmarshal(resp.Result, result); err != nil {
				return fmt.Errorf("failed to unmarshal result: %w", err)
			}
		}

		return nil
	}
}

// Notify sends a notification (a request without an ID that doesn't expect a response)
func (c *Client) Notify(ctx context.Context, method string, params any) error {
	cfg := config.Get()
	if cfg.Options.DebugLSP {
		slog.Debug("Sending notification", "method", method)
	}

	msg, err := NewNotification(method, params)
	if err != nil {
		return fmt.Errorf("failed to create notification: %w", err)
	}

	if err := WriteMessage(c.stdin, msg); err != nil {
		return fmt.Errorf("failed to send notification: %w", err)
	}

	return nil
}

type (
	NotificationHandler  func(params json.RawMessage)
	ServerRequestHandler func(params json.RawMessage) (any, error)
)



================================================
FILE: internal/lsp/protocol/interface.go
================================================
package protocol

import "fmt"

// WorkspaceSymbolResult is an interface for types that represent workspace symbols
type WorkspaceSymbolResult interface {
	GetName() string
	GetLocation() Location
	isWorkspaceSymbol() // marker method
}

func (ws *WorkspaceSymbol) GetName() string { return ws.Name }
func (ws *WorkspaceSymbol) GetLocation() Location {
	switch v := ws.Location.Value.(type) {
	case Location:
		return v
	case LocationUriOnly:
		return Location{URI: v.URI}
	}
	return Location{}
}
func (ws *WorkspaceSymbol) isWorkspaceSymbol() {}

func (si *SymbolInformation) GetName() string       { return si.Name }
func (si *SymbolInformation) GetLocation() Location { return si.Location }
func (si *SymbolInformation) isWorkspaceSymbol()    {}

// Results converts the Value to a slice of WorkspaceSymbolResult
func (r Or_Result_workspace_symbol) Results() ([]WorkspaceSymbolResult, error) {
	if r.Value == nil {
		return make([]WorkspaceSymbolResult, 0), nil
	}
	switch v := r.Value.(type) {
	case []WorkspaceSymbol:
		results := make([]WorkspaceSymbolResult, len(v))
		for i := range v {
			results[i] = &v[i]
		}
		return results, nil
	case []SymbolInformation:
		results := make([]WorkspaceSymbolResult, len(v))
		for i := range v {
			results[i] = &v[i]
		}
		return results, nil
	default:
		return nil, fmt.Errorf("unknown symbol type: %T", r.Value)
	}
}

// DocumentSymbolResult is an interface for types that represent document symbols
type DocumentSymbolResult interface {
	GetRange() Range
	GetName() string
	isDocumentSymbol() // marker method
}

func (ds *DocumentSymbol) GetRange() Range   { return ds.Range }
func (ds *DocumentSymbol) GetName() string   { return ds.Name }
func (ds *DocumentSymbol) isDocumentSymbol() {}

func (si *SymbolInformation) GetRange() Range { return si.Location.Range }

// Note: SymbolInformation already has GetName() implemented above
func (si *SymbolInformation) isDocumentSymbol() {}

// Results converts the Value to a slice of DocumentSymbolResult
func (r Or_Result_textDocument_documentSymbol) Results() ([]DocumentSymbolResult, error) {
	if r.Value == nil {
		return make([]DocumentSymbolResult, 0), nil
	}
	switch v := r.Value.(type) {
	case []DocumentSymbol:
		results := make([]DocumentSymbolResult, len(v))
		for i := range v {
			results[i] = &v[i]
		}
		return results, nil
	case []SymbolInformation:
		results := make([]DocumentSymbolResult, len(v))
		for i := range v {
			results[i] = &v[i]
		}
		return results, nil
	default:
		return nil, fmt.Errorf("unknown document symbol type: %T", v)
	}
}

// TextEditResult is an interface for types that can be used as text edits
type TextEditResult interface {
	GetRange() Range
	GetNewText() string
	isTextEdit() // marker method
}

func (te *TextEdit) GetRange() Range    { return te.Range }
func (te *TextEdit) GetNewText() string { return te.NewText }
func (te *TextEdit) isTextEdit()        {}

// AsTextEdit converts Or_TextDocumentEdit_edits_Elem to TextEdit
func (e Or_TextDocumentEdit_edits_Elem) AsTextEdit() (TextEdit, error) {
	if e.Value == nil {
		return TextEdit{}, fmt.Errorf("nil text edit")
	}
	switch v := e.Value.(type) {
	case TextEdit:
		return v, nil
	case AnnotatedTextEdit:
		return TextEdit{
			Range:   v.Range,
			NewText: v.NewText,
		}, nil
	default:
		return TextEdit{}, fmt.Errorf("unknown text edit type: %T", e.Value)
	}
}



================================================
FILE: internal/lsp/protocol/LICENSE
================================================
Copyright 2009 The Go Authors.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

   * Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following disclaimer
in the documentation and/or other materials provided with the
distribution.
   * Neither the name of Google LLC nor the names of its
contributors may be used to endorse or promote products derived from
this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



================================================
FILE: internal/lsp/protocol/pattern_interfaces.go
================================================
package protocol

import (
	"fmt"
	"log/slog"
)

// PatternInfo is an interface for types that represent glob patterns
type PatternInfo interface {
	GetPattern() string
	GetBasePath() string
	isPattern() // marker method
}

// StringPattern implements PatternInfo for string patterns
type StringPattern struct {
	Pattern string
}

func (p StringPattern) GetPattern() string  { return p.Pattern }
func (p StringPattern) GetBasePath() string { return "" }
func (p StringPattern) isPattern()          {}

// RelativePatternInfo implements PatternInfo for RelativePattern
type RelativePatternInfo struct {
	RP       RelativePattern
	BasePath string
}

func (p RelativePatternInfo) GetPattern() string  { return string(p.RP.Pattern) }
func (p RelativePatternInfo) GetBasePath() string { return p.BasePath }
func (p RelativePatternInfo) isPattern()          {}

// AsPattern converts GlobPattern to a PatternInfo object
func (g *GlobPattern) AsPattern() (PatternInfo, error) {
	if g.Value == nil {
		return nil, fmt.Errorf("nil pattern")
	}

	var err error

	switch v := g.Value.(type) {
	case string:
		return StringPattern{Pattern: v}, nil

	case RelativePattern:
		// Handle BaseURI which could be string or DocumentUri
		basePath := ""
		switch baseURI := v.BaseURI.Value.(type) {
		case string:
			basePath, err = DocumentURI(baseURI).Path()
			if err != nil {
				slog.Error("Failed to convert URI to path", "uri", baseURI, "error", err)
				return nil, fmt.Errorf("invalid URI: %s", baseURI)
			}

		case DocumentURI:
			basePath, err = baseURI.Path()
			if err != nil {
				slog.Error("Failed to convert DocumentURI to path", "uri", baseURI, "error", err)
				return nil, fmt.Errorf("invalid DocumentURI: %s", baseURI)
			}

		default:
			return nil, fmt.Errorf("unknown BaseURI type: %T", v.BaseURI.Value)
		}

		return RelativePatternInfo{RP: v, BasePath: basePath}, nil

	default:
		return nil, fmt.Errorf("unknown pattern type: %T", g.Value)
	}
}



================================================
FILE: internal/lsp/protocol/tables.go
================================================
package protocol

var TableKindMap = map[SymbolKind]string{
	File:          "File",
	Module:        "Module",
	Namespace:     "Namespace",
	Package:       "Package",
	Class:         "Class",
	Method:        "Method",
	Property:      "Property",
	Field:         "Field",
	Constructor:   "Constructor",
	Enum:          "Enum",
	Interface:     "Interface",
	Function:      "Function",
	Variable:      "Variable",
	Constant:      "Constant",
	String:        "String",
	Number:        "Number",
	Boolean:       "Boolean",
	Array:         "Array",
	Object:        "Object",
	Key:           "Key",
	Null:          "Null",
	EnumMember:    "EnumMember",
	Struct:        "Struct",
	Event:         "Event",
	Operator:      "Operator",
	TypeParameter: "TypeParameter",
}



================================================
FILE: internal/lsp/protocol/tsdocument-changes.go
================================================
// Copyright 2022 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package protocol

import (
	"encoding/json"
	"fmt"
)

// DocumentChange is a union of various file edit operations.
//
// Exactly one field of this struct is non-nil; see [DocumentChange.Valid].
//
// See https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#resourceChanges
type DocumentChange struct {
	TextDocumentEdit *TextDocumentEdit
	CreateFile       *CreateFile
	RenameFile       *RenameFile
	DeleteFile       *DeleteFile
}

// Valid reports whether the DocumentChange sum-type value is valid,
// that is, exactly one of create, delete, edit, or rename.
func (d DocumentChange) Valid() bool {
	n := 0
	if d.TextDocumentEdit != nil {
		n++
	}
	if d.CreateFile != nil {
		n++
	}
	if d.RenameFile != nil {
		n++
	}
	if d.DeleteFile != nil {
		n++
	}
	return n == 1
}

func (d *DocumentChange) UnmarshalJSON(data []byte) error {
	var m map[string]any
	if err := json.Unmarshal(data, &m); err != nil {
		return err
	}

	if _, ok := m["textDocument"]; ok {
		d.TextDocumentEdit = new(TextDocumentEdit)
		return json.Unmarshal(data, d.TextDocumentEdit)
	}

	// The {Create,Rename,Delete}File types all share a 'kind' field.
	kind := m["kind"]
	switch kind {
	case "create":
		d.CreateFile = new(CreateFile)
		return json.Unmarshal(data, d.CreateFile)
	case "rename":
		d.RenameFile = new(RenameFile)
		return json.Unmarshal(data, d.RenameFile)
	case "delete":
		d.DeleteFile = new(DeleteFile)
		return json.Unmarshal(data, d.DeleteFile)
	}
	return fmt.Errorf("DocumentChanges: unexpected kind: %q", kind)
}

func (d *DocumentChange) MarshalJSON() ([]byte, error) {
	if d.TextDocumentEdit != nil {
		return json.Marshal(d.TextDocumentEdit)
	} else if d.CreateFile != nil {
		return json.Marshal(d.CreateFile)
	} else if d.RenameFile != nil {
		return json.Marshal(d.RenameFile)
	} else if d.DeleteFile != nil {
		return json.Marshal(d.DeleteFile)
	}
	return nil, fmt.Errorf("empty DocumentChanges union value")
}



================================================
FILE: internal/lsp/protocol/uri.go
================================================
// Copyright 2023 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package protocol

// This file declares URI, DocumentUri, and its methods.
//
// For the LSP definition of these types, see
// https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#uri

import (
	"fmt"
	"net/url"
	"path/filepath"
	"strings"
	"unicode"
)

// A DocumentURI is the URI of a client editor document.
//
// According to the LSP specification:
//
//	Care should be taken to handle encoding in URIs. For
//	example, some clients (such as VS Code) may encode colons
//	in drive letters while others do not. The URIs below are
//	both valid, but clients and servers should be consistent
//	with the form they use themselves to ensure the other party
//	doesn’t interpret them as distinct URIs. Clients and
//	servers should not assume that each other are encoding the
//	same way (for example a client encoding colons in drive
//	letters cannot assume server responses will have encoded
//	colons). The same applies to casing of drive letters - one
//	party should not assume the other party will return paths
//	with drive letters cased the same as it.
//
//	file:///c:/project/readme.md
//	file:///C%3A/project/readme.md
//
// This is done during JSON unmarshalling;
// see [DocumentURI.UnmarshalText] for details.
type DocumentURI string

// A URI is an arbitrary URL (e.g. https), not necessarily a file.
type URI = string

// UnmarshalText implements decoding of DocumentUri values.
//
// In particular, it implements a systematic correction of various odd
// features of the definition of DocumentUri in the LSP spec that
// appear to be workarounds for bugs in VS Code. For example, it may
// URI-encode the URI itself, so that colon becomes %3A, and it may
// send file://foo.go URIs that have two slashes (not three) and no
// hostname.
//
// We use UnmarshalText, not UnmarshalJSON, because it is called even
// for non-addressable values such as keys and values of map[K]V,
// where there is no pointer of type *K or *V on which to call
// UnmarshalJSON. (See Go issue #28189 for more detail.)
//
// Non-empty DocumentUris are valid "file"-scheme URIs.
// The empty DocumentUri is valid.
func (uri *DocumentURI) UnmarshalText(data []byte) (err error) {
	*uri, err = ParseDocumentURI(string(data))
	return
}

// Path returns the file path for the given URI.
//
// DocumentUri("").Path() returns the empty string.
//
// Path panics if called on a URI that is not a valid filename.
func (uri DocumentURI) Path() (string, error) {
	filename, err := filename(uri)
	if err != nil {
		// e.g. ParseRequestURI failed.
		//
		// This can only affect DocumentUris created by
		// direct string manipulation; all DocumentUris
		// received from the client pass through
		// ParseRequestURI, which ensures validity.
		return "", fmt.Errorf("invalid URI %q: %w", uri, err)
	}
	return filepath.FromSlash(filename), nil
}

// Dir returns the URI for the directory containing the receiver.
func (uri DocumentURI) Dir() (DocumentURI, error) {
	// XXX: Legacy comment:
	// This function could be more efficiently implemented by avoiding any call
	// to Path(), but at least consolidates URI manipulation.

	path, err := uri.DirPath()
	if err != nil {
		return "", fmt.Errorf("invalid URI %q: %w", uri, err)
	}

	return URIFromPath(path), nil
}

// DirPath returns the file path to the directory containing this URI, which
// must be a file URI.
func (uri DocumentURI) DirPath() (string, error) {
	path, err := uri.Path()
	if err != nil {
		return "", err
	}
	return filepath.Dir(path), nil
}

func filename(uri DocumentURI) (string, error) {
	if uri == "" {
		return "", nil
	}

	// This conservative check for the common case
	// of a simple non-empty absolute POSIX filename
	// avoids the allocation of a net.URL.
	if strings.HasPrefix(string(uri), "file:///") {
		rest := string(uri)[len("file://"):] // leave one slash
		for i := range len(rest) {
			b := rest[i]
			// Reject these cases:
			if b < ' ' || b == 0x7f || // control character
				b == '%' || b == '+' || // URI escape
				b == ':' || // Windows drive letter
				b == '@' || b == '&' || b == '?' { // authority or query
				goto slow
			}
		}
		return rest, nil
	}
slow:

	u, err := url.ParseRequestURI(string(uri))
	if err != nil {
		return "", err
	}
	if u.Scheme != fileScheme {
		return "", fmt.Errorf("only file URIs are supported, got %q from %q", u.Scheme, uri)
	}
	// If the URI is a Windows URI, we trim the leading "/" and uppercase
	// the drive letter, which will never be case sensitive.
	if isWindowsDriveURIPath(u.Path) {
		u.Path = strings.ToUpper(string(u.Path[1])) + u.Path[2:]
	}

	return u.Path, nil
}

// ParseDocumentURI interprets a string as a DocumentUri, applying VS
// Code workarounds; see [DocumentURI.UnmarshalText] for details.
func ParseDocumentURI(s string) (DocumentURI, error) {
	if s == "" {
		return "", nil
	}

	if !strings.HasPrefix(s, "file://") {
		return "", fmt.Errorf("DocumentUri scheme is not 'file': %s", s)
	}

	// VS Code sends URLs with only two slashes,
	// which are invalid. golang/go#39789.
	if !strings.HasPrefix(s, "file:///") {
		s = "file:///" + s[len("file://"):]
	}

	// Even though the input is a URI, it may not be in canonical form. VS Code
	// in particular over-escapes :, @, etc. Unescape and re-encode to canonicalize.
	path, err := url.PathUnescape(s[len("file://"):])
	if err != nil {
		return "", err
	}

	// File URIs from Windows may have lowercase drive letters.
	// Since drive letters are guaranteed to be case insensitive,
	// we change them to uppercase to remain consistent.
	// For example, file:///c:/x/y/z becomes file:///C:/x/y/z.
	if isWindowsDriveURIPath(path) {
		path = path[:1] + strings.ToUpper(string(path[1])) + path[2:]
	}
	u := url.URL{Scheme: fileScheme, Path: path}
	return DocumentURI(u.String()), nil
}

// URIFromPath returns DocumentUri for the supplied file path.
// Given "", it returns "".
func URIFromPath(path string) DocumentURI {
	if path == "" {
		return ""
	}
	if !isWindowsDrivePath(path) {
		if abs, err := filepath.Abs(path); err == nil {
			path = abs
		}
	}
	// Check the file path again, in case it became absolute.
	if isWindowsDrivePath(path) {
		path = "/" + strings.ToUpper(string(path[0])) + path[1:]
	}
	path = filepath.ToSlash(path)
	u := url.URL{
		Scheme: fileScheme,
		Path:   path,
	}
	return DocumentURI(u.String())
}

const fileScheme = "file"

// isWindowsDrivePath returns true if the file path is of the form used by
// Windows. We check if the path begins with a drive letter, followed by a ":".
// For example: C:/x/y/z.
func isWindowsDrivePath(path string) bool {
	if len(path) < 3 {
		return false
	}
	return unicode.IsLetter(rune(path[0])) && path[1] == ':'
}

// isWindowsDriveURIPath returns true if the file URI is of the format used by
// Windows URIs. The url.Parse package does not specially handle Windows paths
// (see golang/go#6027), so we check if the URI path has a drive prefix (e.g. "/C:").
func isWindowsDriveURIPath(uri string) bool {
	if len(uri) < 4 {
		return false
	}
	return uri[0] == '/' && unicode.IsLetter(rune(uri[1])) && uri[2] == ':'
}



================================================
FILE: internal/lsp/util/edit.go
================================================
package util

import (
	"bytes"
	"fmt"
	"os"
	"sort"
	"strings"

	"github.com/charmbracelet/crush/internal/lsp/protocol"
)

func applyTextEdits(uri protocol.DocumentURI, edits []protocol.TextEdit) error {
	path, err := uri.Path()
	if err != nil {
		return fmt.Errorf("invalid URI: %w", err)
	}

	// Read the file content
	content, err := os.ReadFile(path)
	if err != nil {
		return fmt.Errorf("failed to read file: %w", err)
	}

	// Detect line ending style
	var lineEnding string
	if bytes.Contains(content, []byte("\r\n")) {
		lineEnding = "\r\n"
	} else {
		lineEnding = "\n"
	}

	// Track if file ends with a newline
	endsWithNewline := len(content) > 0 && bytes.HasSuffix(content, []byte(lineEnding))

	// Split into lines without the endings
	lines := strings.Split(string(content), lineEnding)

	// Check for overlapping edits
	for i, edit1 := range edits {
		for j := i + 1; j < len(edits); j++ {
			if rangesOverlap(edit1.Range, edits[j].Range) {
				return fmt.Errorf("overlapping edits detected between edit %d and %d", i, j)
			}
		}
	}

	// Sort edits in reverse order
	sortedEdits := make([]protocol.TextEdit, len(edits))
	copy(sortedEdits, edits)
	sort.Slice(sortedEdits, func(i, j int) bool {
		if sortedEdits[i].Range.Start.Line != sortedEdits[j].Range.Start.Line {
			return sortedEdits[i].Range.Start.Line > sortedEdits[j].Range.Start.Line
		}
		return sortedEdits[i].Range.Start.Character > sortedEdits[j].Range.Start.Character
	})

	// Apply each edit
	for _, edit := range sortedEdits {
		newLines, err := applyTextEdit(lines, edit)
		if err != nil {
			return fmt.Errorf("failed to apply edit: %w", err)
		}
		lines = newLines
	}

	// Join lines with proper line endings
	var newContent strings.Builder
	for i, line := range lines {
		if i > 0 {
			newContent.WriteString(lineEnding)
		}
		newContent.WriteString(line)
	}

	// Only add a newline if the original file had one and we haven't already added it
	if endsWithNewline && !strings.HasSuffix(newContent.String(), lineEnding) {
		newContent.WriteString(lineEnding)
	}

	if err := os.WriteFile(path, []byte(newContent.String()), 0o644); err != nil {
		return fmt.Errorf("failed to write file: %w", err)
	}

	return nil
}

func applyTextEdit(lines []string, edit protocol.TextEdit) ([]string, error) {
	startLine := int(edit.Range.Start.Line)
	endLine := int(edit.Range.End.Line)
	startChar := int(edit.Range.Start.Character)
	endChar := int(edit.Range.End.Character)

	// Validate positions
	if startLine < 0 || startLine >= len(lines) {
		return nil, fmt.Errorf("invalid start line: %d", startLine)
	}
	if endLine < 0 || endLine >= len(lines) {
		endLine = len(lines) - 1
	}

	// Create result slice with initial capacity
	result := make([]string, 0, len(lines))

	// Copy lines before edit
	result = append(result, lines[:startLine]...)

	// Get the prefix of the start line
	startLineContent := lines[startLine]
	if startChar < 0 || startChar > len(startLineContent) {
		startChar = len(startLineContent)
	}
	prefix := startLineContent[:startChar]

	// Get the suffix of the end line
	endLineContent := lines[endLine]
	if endChar < 0 || endChar > len(endLineContent) {
		endChar = len(endLineContent)
	}
	suffix := endLineContent[endChar:]

	// Handle the edit
	if edit.NewText == "" {
		if prefix+suffix != "" {
			result = append(result, prefix+suffix)
		}
	} else {
		// Split new text into lines, being careful not to add extra newlines
		// newLines := strings.Split(strings.TrimRight(edit.NewText, "\n"), "\n")
		newLines := strings.Split(edit.NewText, "\n")

		if len(newLines) == 1 {
			// Single line change
			result = append(result, prefix+newLines[0]+suffix)
		} else {
			// Multi-line change
			result = append(result, prefix+newLines[0])
			result = append(result, newLines[1:len(newLines)-1]...)
			result = append(result, newLines[len(newLines)-1]+suffix)
		}
	}

	// Add remaining lines
	if endLine+1 < len(lines) {
		result = append(result, lines[endLine+1:]...)
	}

	return result, nil
}

// applyDocumentChange applies a DocumentChange (create/rename/delete operations)
func applyDocumentChange(change protocol.DocumentChange) error {
	if change.CreateFile != nil {
		path, err := change.CreateFile.URI.Path()
		if err != nil {
			return fmt.Errorf("invalid URI: %w", err)
		}

		if change.CreateFile.Options != nil {
			if change.CreateFile.Options.Overwrite {
				// Proceed with overwrite
			} else if change.CreateFile.Options.IgnoreIfExists {
				if _, err := os.Stat(path); err == nil {
					return nil // File exists and we're ignoring it
				}
			}
		}
		if err := os.WriteFile(path, []byte(""), 0o644); err != nil {
			return fmt.Errorf("failed to create file: %w", err)
		}
	}

	if change.DeleteFile != nil {
		path, err := change.DeleteFile.URI.Path()
		if err != nil {
			return fmt.Errorf("invalid URI: %w", err)
		}

		if change.DeleteFile.Options != nil && change.DeleteFile.Options.Recursive {
			if err := os.RemoveAll(path); err != nil {
				return fmt.Errorf("failed to delete directory recursively: %w", err)
			}
		} else {
			if err := os.Remove(path); err != nil {
				return fmt.Errorf("failed to delete file: %w", err)
			}
		}
	}

	if change.RenameFile != nil {
		var newPath, oldPath string
		var err error

		oldPath, err = change.RenameFile.OldURI.Path()
		if err != nil {
			return err
		}

		newPath, err = change.RenameFile.NewURI.Path()
		if err != nil {
			return err
		}

		if change.RenameFile.Options != nil {
			if !change.RenameFile.Options.Overwrite {
				if _, err := os.Stat(newPath); err == nil {
					return fmt.Errorf("target file already exists and overwrite is not allowed: %s", newPath)
				}
			}
		}
		if err := os.Rename(oldPath, newPath); err != nil {
			return fmt.Errorf("failed to rename file: %w", err)
		}
	}

	if change.TextDocumentEdit != nil {
		textEdits := make([]protocol.TextEdit, len(change.TextDocumentEdit.Edits))
		for i, edit := range change.TextDocumentEdit.Edits {
			var err error
			textEdits[i], err = edit.AsTextEdit()
			if err != nil {
				return fmt.Errorf("invalid edit type: %w", err)
			}
		}
		return applyTextEdits(change.TextDocumentEdit.TextDocument.URI, textEdits)
	}

	return nil
}

// ApplyWorkspaceEdit applies the given WorkspaceEdit to the filesystem
func ApplyWorkspaceEdit(edit protocol.WorkspaceEdit) error {
	// Handle Changes field
	for uri, textEdits := range edit.Changes {
		if err := applyTextEdits(uri, textEdits); err != nil {
			return fmt.Errorf("failed to apply text edits: %w", err)
		}
	}

	// Handle DocumentChanges field
	for _, change := range edit.DocumentChanges {
		if err := applyDocumentChange(change); err != nil {
			return fmt.Errorf("failed to apply document change: %w", err)
		}
	}

	return nil
}

func rangesOverlap(r1, r2 protocol.Range) bool {
	if r1.Start.Line > r2.End.Line || r2.Start.Line > r1.End.Line {
		return false
	}
	if r1.Start.Line == r2.End.Line && r1.Start.Character > r2.End.Character {
		return false
	}
	if r2.Start.Line == r1.End.Line && r2.Start.Character > r1.End.Character {
		return false
	}
	return true
}



================================================
FILE: internal/lsp/watcher/ulimit_bsd.go
================================================
//go:build freebsd || openbsd || netbsd || dragonfly

package watcher

import "syscall"

func Ulimit() (uint64, error) {
	var currentLimit uint64 = 0
	var rLimit syscall.Rlimit
	err := syscall.Getrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return 0, err
	}
	currentLimit = uint64(rLimit.Cur)
	rLimit.Cur = rLimit.Max / 10 * 8
	err = syscall.Setrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return currentLimit, err
	}
	err = syscall.Getrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return currentLimit, err
	}
	return uint64(rLimit.Cur), nil
}



================================================
FILE: internal/lsp/watcher/ulimit_darwin.go
================================================
//go:build darwin

package watcher

import "syscall"

func Ulimit() (uint64, error) {
	var rLimit syscall.Rlimit
	err := syscall.Getrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return 0, err
	}
	currentLimit := rLimit.Cur
	rLimit.Cur = rLimit.Max / 10 * 8
	err = syscall.Setrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return currentLimit, err
	}
	err = syscall.Getrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return currentLimit, err
	}
	return rLimit.Cur, nil
}



================================================
FILE: internal/lsp/watcher/ulimit_fallback.go
================================================
//go:build !linux && !darwin && !freebsd && !openbsd && !netbsd && !dragonfly && !windows

package watcher

func Ulimit() (uint64, error) {
	// Fallback for exotic systems - return a reasonable default
	return 2048, nil
}



================================================
FILE: internal/lsp/watcher/ulimit_linux.go
================================================
//go:build linux

package watcher

import "syscall"

func Ulimit() (uint64, error) {
	var currentLimit uint64 = 0
	var rLimit syscall.Rlimit
	err := syscall.Getrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return 0, err
	}
	currentLimit = rLimit.Cur
	rLimit.Cur = rLimit.Max / 10 * 8
	err = syscall.Setrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return currentLimit, err
	}
	err = syscall.Getrlimit(syscall.RLIMIT_NOFILE, &rLimit)
	if err != nil {
		return currentLimit, err
	}
	return rLimit.Cur, nil
}



================================================
FILE: internal/lsp/watcher/ulimit_windows.go
================================================
//go:build windows

package watcher

import (
	"syscall"
	"unsafe"

	"golang.org/x/sys/windows"
)

var (
	kernel32                  = windows.NewLazyDLL("kernel32.dll")
	procGetProcessHandleCount = kernel32.NewProc("GetProcessHandleCount")
)

func Ulimit() (uint64, error) {
	// Windows doesn't have the same file descriptor limits as Unix systems
	// Instead, we can get the current handle count for monitoring purposes
	currentProcess := windows.CurrentProcess()

	var handleCount uint32
	ret, _, err := procGetProcessHandleCount.Call(
		uintptr(currentProcess),
		uintptr(unsafe.Pointer(&handleCount)),
	)

	if ret == 0 {
		// If the call failed, return a reasonable default
		if err != syscall.Errno(0) {
			return 2048, nil
		}
	}

	// Windows typically allows much higher handle counts than Unix file descriptors
	// Return the current count, which serves as a baseline for monitoring
	return uint64(handleCount), nil
}



================================================
FILE: internal/lsp/watcher/watcher.go
================================================
package watcher

import (
	"context"
	"fmt"
	"log/slog"
	"os"
	"path/filepath"
	"strings"
	"sync"
	"time"

	"github.com/bmatcuk/doublestar/v4"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/csync"

	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/lsp/protocol"
	"github.com/fsnotify/fsnotify"
)

// WorkspaceWatcher manages LSP file watching
type WorkspaceWatcher struct {
	client        *lsp.Client
	name          string
	workspacePath string

	debounceTime time.Duration
	debounceMap  *csync.Map[string, *time.Timer]

	// File watchers registered by the server
	registrations  []protocol.FileSystemWatcher
	registrationMu sync.RWMutex
}

func init() {
	// Ensure the watcher is initialized with a reasonable file limit
	if _, err := Ulimit(); err != nil {
		slog.Error("Error setting file limit", "error", err)
	}
}

// NewWorkspaceWatcher creates a new workspace watcher
func NewWorkspaceWatcher(name string, client *lsp.Client) *WorkspaceWatcher {
	return &WorkspaceWatcher{
		name:          name,
		client:        client,
		debounceTime:  300 * time.Millisecond,
		debounceMap:   csync.NewMap[string, *time.Timer](),
		registrations: []protocol.FileSystemWatcher{},
	}
}

// AddRegistrations adds file watchers to track
func (w *WorkspaceWatcher) AddRegistrations(ctx context.Context, id string, watchers []protocol.FileSystemWatcher) {
	cfg := config.Get()

	slog.Debug("Adding file watcher registrations")
	w.registrationMu.Lock()
	defer w.registrationMu.Unlock()

	// Add new watchers
	w.registrations = append(w.registrations, watchers...)

	// Print detailed registration information for debugging
	if cfg.Options.DebugLSP {
		slog.Debug("Adding file watcher registrations",
			"id", id,
			"watchers", len(watchers),
			"total", len(w.registrations),
		)

		for i, watcher := range watchers {
			slog.Debug("Registration", "index", i+1)

			// Log the GlobPattern
			switch v := watcher.GlobPattern.Value.(type) {
			case string:
				slog.Debug("GlobPattern", "pattern", v)
			case protocol.RelativePattern:
				slog.Debug("GlobPattern", "pattern", v.Pattern)

				// Log BaseURI details
				switch u := v.BaseURI.Value.(type) {
				case string:
					slog.Debug("BaseURI", "baseURI", u)
				case protocol.DocumentURI:
					slog.Debug("BaseURI", "baseURI", u)
				default:
					slog.Debug("BaseURI", "baseURI", u)
				}
			default:
				slog.Debug("GlobPattern unknown type", "type", fmt.Sprintf("%T", v))
			}

			// Log WatchKind
			watchKind := protocol.WatchKind(protocol.WatchChange | protocol.WatchCreate | protocol.WatchDelete)
			if watcher.Kind != nil {
				watchKind = *watcher.Kind
			}

			slog.Debug("WatchKind", "kind", watchKind)
		}
	}

	// Determine server type for specialized handling
	serverName := w.name
	slog.Debug("Server type detected", "serverName", serverName)

	// Check if this server has sent file watchers
	hasFileWatchers := len(watchers) > 0

	// For servers that need file preloading, we'll use a smart approach
	if shouldPreloadFiles(serverName) || !hasFileWatchers {
		go func() {
			startTime := time.Now()
			filesOpened := 0

			// Determine max files to open based on server type
			maxFilesToOpen := 50 // Default conservative limit

			switch serverName {
			case "typescript", "typescript-language-server", "tsserver", "vtsls":
				// TypeScript servers benefit from seeing more files
				maxFilesToOpen = 100
			case "java", "jdtls":
				// Java servers need to see many files for project model
				maxFilesToOpen = 200
			}

			// First, open high-priority files
			highPriorityFilesOpened := w.openHighPriorityFiles(ctx, serverName)
			filesOpened += highPriorityFilesOpened

			if cfg.Options.DebugLSP {
				slog.Debug("Opened high-priority files",
					"count", highPriorityFilesOpened,
					"serverName", serverName)
			}

			// If we've already opened enough high-priority files, we might not need more
			if filesOpened >= maxFilesToOpen {
				if cfg.Options.DebugLSP {
					slog.Debug("Reached file limit with high-priority files",
						"filesOpened", filesOpened,
						"maxFiles", maxFilesToOpen)
				}
				return
			}

			// For the remaining slots, walk the directory and open matching files

			err := filepath.WalkDir(w.workspacePath, func(path string, d os.DirEntry, err error) error {
				if err != nil {
					return err
				}

				// Skip directories that should be excluded
				if d.IsDir() {
					if path != w.workspacePath && shouldExcludeDir(path) {
						if cfg.Options.DebugLSP {
							slog.Debug("Skipping excluded directory", "path", path)
						}
						return filepath.SkipDir
					}
				} else {
					// Process files, but limit the total number
					if filesOpened < maxFilesToOpen {
						// Only process if it's not already open (high-priority files were opened earlier)
						if !w.client.IsFileOpen(path) {
							w.openMatchingFile(ctx, path)
							filesOpened++

							// Add a small delay after every 10 files to prevent overwhelming the server
							if filesOpened%10 == 0 {
								time.Sleep(50 * time.Millisecond)
							}
						}
					} else {
						// We've reached our limit, stop walking
						return filepath.SkipAll
					}
				}

				return nil
			})

			elapsedTime := time.Since(startTime)
			if cfg.Options.DebugLSP {
				slog.Debug("Limited workspace scan complete",
					"filesOpened", filesOpened,
					"maxFiles", maxFilesToOpen,
					"elapsedTime", elapsedTime.Seconds(),
					"workspacePath", w.workspacePath,
				)
			}

			if err != nil && cfg.Options.DebugLSP {
				slog.Debug("Error scanning workspace for files to open", "error", err)
			}
		}()
	} else if cfg.Options.DebugLSP {
		slog.Debug("Using on-demand file loading for server", "server", serverName)
	}
}

// openHighPriorityFiles opens important files for the server type
// Returns the number of files opened
func (w *WorkspaceWatcher) openHighPriorityFiles(ctx context.Context, serverName string) int {
	cfg := config.Get()
	filesOpened := 0

	// Define patterns for high-priority files based on server type
	var patterns []string

	switch serverName {
	case "typescript", "typescript-language-server", "tsserver", "vtsls":
		patterns = []string{
			"**/tsconfig.json",
			"**/package.json",
			"**/jsconfig.json",
			"**/index.ts",
			"**/index.js",
			"**/main.ts",
			"**/main.js",
		}
	case "gopls":
		patterns = []string{
			"**/go.mod",
			"**/go.sum",
			"**/main.go",
		}
	case "rust-analyzer":
		patterns = []string{
			"**/Cargo.toml",
			"**/Cargo.lock",
			"**/src/lib.rs",
			"**/src/main.rs",
		}
	case "python", "pyright", "pylsp":
		patterns = []string{
			"**/pyproject.toml",
			"**/setup.py",
			"**/requirements.txt",
			"**/__init__.py",
			"**/__main__.py",
		}
	case "clangd":
		patterns = []string{
			"**/CMakeLists.txt",
			"**/Makefile",
			"**/compile_commands.json",
		}
	case "java", "jdtls":
		patterns = []string{
			"**/pom.xml",
			"**/build.gradle",
			"**/src/main/java/**/*.java",
		}
	default:
		// For unknown servers, use common configuration files
		patterns = []string{
			"**/package.json",
			"**/Makefile",
			"**/CMakeLists.txt",
			"**/.editorconfig",
		}
	}

	// Collect all files to open first
	var filesToOpen []string

	// For each pattern, find matching files
	for _, pattern := range patterns {
		// Use doublestar.Glob to find files matching the pattern (supports ** patterns)
		matches, err := doublestar.Glob(os.DirFS(w.workspacePath), pattern)
		if err != nil {
			if cfg.Options.DebugLSP {
				slog.Debug("Error finding high-priority files", "pattern", pattern, "error", err)
			}
			continue
		}

		for _, match := range matches {
			// Convert relative path to absolute
			fullPath := filepath.Join(w.workspacePath, match)

			// Skip directories and excluded files
			info, err := os.Stat(fullPath)
			if err != nil || info.IsDir() || shouldExcludeFile(fullPath) {
				continue
			}

			filesToOpen = append(filesToOpen, fullPath)

			// Limit the number of files per pattern
			if len(filesToOpen) >= 5 && (serverName != "java" && serverName != "jdtls") {
				break
			}
		}
	}

	// Open files in batches to reduce overhead
	batchSize := 3
	for i := 0; i < len(filesToOpen); i += batchSize {
		end := min(i+batchSize, len(filesToOpen))

		// Open batch of files
		for j := i; j < end; j++ {
			fullPath := filesToOpen[j]
			if err := w.client.OpenFile(ctx, fullPath); err != nil {
				if cfg.Options.DebugLSP {
					slog.Debug("Error opening high-priority file", "path", fullPath, "error", err)
				}
			} else {
				filesOpened++
				if cfg.Options.DebugLSP {
					slog.Debug("Opened high-priority file", "path", fullPath)
				}
			}
		}

		// Only add delay between batches, not individual files
		if end < len(filesToOpen) {
			time.Sleep(50 * time.Millisecond)
		}
	}

	return filesOpened
}

// WatchWorkspace sets up file watching for a workspace
func (w *WorkspaceWatcher) WatchWorkspace(ctx context.Context, workspacePath string) {
	cfg := config.Get()
	w.workspacePath = workspacePath

	slog.Debug("Starting workspace watcher", "workspacePath", workspacePath, "serverName", w.name)

	// Register handler for file watcher registrations from the server
	lsp.RegisterFileWatchHandler(func(id string, watchers []protocol.FileSystemWatcher) {
		w.AddRegistrations(ctx, id, watchers)
	})

	watcher, err := fsnotify.NewWatcher()
	if err != nil {
		slog.Error("Error creating watcher", "error", err)
	}
	defer watcher.Close()

	// Watch the workspace recursively
	err = filepath.WalkDir(workspacePath, func(path string, d os.DirEntry, err error) error {
		if err != nil {
			return err
		}

		// Skip excluded directories (except workspace root)
		if d.IsDir() && path != workspacePath {
			if shouldExcludeDir(path) {
				if cfg.Options.DebugLSP {
					slog.Debug("Skipping excluded directory", "path", path)
				}
				return filepath.SkipDir
			}
		}

		// Add directories to watcher
		if d.IsDir() {
			err = watcher.Add(path)
			if err != nil {
				slog.Error("Error watching path", "path", path, "error", err)
			}
		}

		return nil
	})
	if err != nil {
		slog.Error("Error walking workspace", "error", err)
	}

	// Event loop
	for {
		select {
		case <-ctx.Done():
			return
		case event, ok := <-watcher.Events:
			if !ok {
				return
			}

			if !w.client.HandlesFile(event.Name) {
				continue // client doesn't handle this filetype
			}

			uri := string(protocol.URIFromPath(event.Name))

			// Add new directories to the watcher
			if event.Op&fsnotify.Create != 0 {
				if info, err := os.Stat(event.Name); err == nil {
					if info.IsDir() {
						// Skip excluded directories
						if !shouldExcludeDir(event.Name) {
							if err := watcher.Add(event.Name); err != nil {
								slog.Error("Error adding directory to watcher", "path", event.Name, "error", err)
							}
						}
					} else {
						// For newly created files
						if !shouldExcludeFile(event.Name) {
							w.openMatchingFile(ctx, event.Name)
						}
					}
				}
			}

			// Debug logging
			if cfg.Options.DebugLSP {
				matched, kind := w.isPathWatched(event.Name)
				slog.Debug("File event",
					"path", event.Name,
					"operation", event.Op.String(),
					"watched", matched,
					"kind", kind,
				)
			}

			// Check if this path should be watched according to server registrations
			if watched, watchKind := w.isPathWatched(event.Name); watched {
				switch {
				case event.Op&fsnotify.Write != 0:
					if watchKind&protocol.WatchChange != 0 {
						w.debounceHandleFileEvent(ctx, uri, protocol.FileChangeType(protocol.Changed))
					}
				case event.Op&fsnotify.Create != 0:
					// Already handled earlier in the event loop
					// Just send the notification if needed
					info, err := os.Stat(event.Name)
					if err != nil {
						if !os.IsNotExist(err) {
							// Only log if it's not a "file not found" error
							slog.Debug("Error getting file info", "path", event.Name, "error", err)
						}
						continue
					}
					if !info.IsDir() && watchKind&protocol.WatchCreate != 0 {
						w.debounceHandleFileEvent(ctx, uri, protocol.FileChangeType(protocol.Created))
					}
				case event.Op&fsnotify.Remove != 0:
					if watchKind&protocol.WatchDelete != 0 {
						w.handleFileEvent(ctx, uri, protocol.FileChangeType(protocol.Deleted))
					}
				case event.Op&fsnotify.Rename != 0:
					// For renames, first delete
					if watchKind&protocol.WatchDelete != 0 {
						w.handleFileEvent(ctx, uri, protocol.FileChangeType(protocol.Deleted))
					}

					// Then check if the new file exists and create an event
					if info, err := os.Stat(event.Name); err == nil && !info.IsDir() {
						if watchKind&protocol.WatchCreate != 0 {
							w.debounceHandleFileEvent(ctx, uri, protocol.FileChangeType(protocol.Created))
						}
					}
				}
			}
		case err, ok := <-watcher.Errors:
			if !ok {
				return
			}
			slog.Error("Error watching file", "error", err)
		}
	}
}

// isPathWatched checks if a path should be watched based on server registrations
func (w *WorkspaceWatcher) isPathWatched(path string) (bool, protocol.WatchKind) {
	w.registrationMu.RLock()
	defer w.registrationMu.RUnlock()

	// If no explicit registrations, watch everything
	if len(w.registrations) == 0 {
		return true, protocol.WatchKind(protocol.WatchChange | protocol.WatchCreate | protocol.WatchDelete)
	}

	// Check each registration
	for _, reg := range w.registrations {
		isMatch := w.matchesPattern(path, reg.GlobPattern)
		if isMatch {
			kind := protocol.WatchKind(protocol.WatchChange | protocol.WatchCreate | protocol.WatchDelete)
			if reg.Kind != nil {
				kind = *reg.Kind
			}
			return true, kind
		}
	}

	return false, 0
}

// matchesGlob handles advanced glob patterns including ** and alternatives
func matchesGlob(pattern, path string) bool {
	// Handle file extension patterns with braces like *.{go,mod,sum}
	if strings.Contains(pattern, "{") && strings.Contains(pattern, "}") {
		// Extract extensions from pattern like "*.{go,mod,sum}"
		parts := strings.SplitN(pattern, "{", 2)
		if len(parts) == 2 {
			prefix := parts[0]
			extPart := strings.SplitN(parts[1], "}", 2)
			if len(extPart) == 2 {
				extensions := strings.Split(extPart[0], ",")
				suffix := extPart[1]

				// Check if the path matches any of the extensions
				for _, ext := range extensions {
					extPattern := prefix + ext + suffix
					isMatch := matchesSimpleGlob(extPattern, path)
					if isMatch {
						return true
					}
				}
				return false
			}
		}
	}

	return matchesSimpleGlob(pattern, path)
}

// matchesSimpleGlob handles glob patterns with ** wildcards
func matchesSimpleGlob(pattern, path string) bool {
	// Handle special case for **/*.ext pattern (common in LSP)
	if after, ok := strings.CutPrefix(pattern, "**/"); ok {
		rest := after

		// If the rest is a simple file extension pattern like *.go
		if strings.HasPrefix(rest, "*.") {
			ext := strings.TrimPrefix(rest, "*")
			isMatch := strings.HasSuffix(path, ext)
			return isMatch
		}

		// Otherwise, try to check if the path ends with the rest part
		isMatch := strings.HasSuffix(path, rest)

		// If it matches directly, great!
		if isMatch {
			return true
		}

		// Otherwise, check if any path component matches
		pathComponents := strings.Split(path, "/")
		for i := range pathComponents {
			subPath := strings.Join(pathComponents[i:], "/")
			if strings.HasSuffix(subPath, rest) {
				return true
			}
		}

		return false
	}

	// Handle other ** wildcard pattern cases
	if strings.Contains(pattern, "**") {
		parts := strings.Split(pattern, "**")

		// Validate the path starts with the first part
		if !strings.HasPrefix(path, parts[0]) && parts[0] != "" {
			return false
		}

		// For patterns like "**/*.go", just check the suffix
		if len(parts) == 2 && parts[0] == "" {
			isMatch := strings.HasSuffix(path, parts[1])
			return isMatch
		}

		// For other patterns, handle middle part
		remaining := strings.TrimPrefix(path, parts[0])
		if len(parts) == 2 {
			isMatch := strings.HasSuffix(remaining, parts[1])
			return isMatch
		}
	}

	// Handle simple * wildcard for file extension patterns (*.go, *.sum, etc)
	if strings.HasPrefix(pattern, "*.") {
		ext := strings.TrimPrefix(pattern, "*")
		isMatch := strings.HasSuffix(path, ext)
		return isMatch
	}

	// Fall back to simple matching for simpler patterns
	matched, err := filepath.Match(pattern, path)
	if err != nil {
		slog.Error("Error matching pattern", "pattern", pattern, "path", path, "error", err)
		return false
	}

	return matched
}

// matchesPattern checks if a path matches the glob pattern
func (w *WorkspaceWatcher) matchesPattern(path string, pattern protocol.GlobPattern) bool {
	patternInfo, err := pattern.AsPattern()
	if err != nil {
		slog.Error("Error parsing pattern", "pattern", pattern, "error", err)
		return false
	}

	basePath := patternInfo.GetBasePath()
	patternText := patternInfo.GetPattern()

	path = filepath.ToSlash(path)

	// For simple patterns without base path
	if basePath == "" {
		// Check if the pattern matches the full path or just the file extension
		fullPathMatch := matchesGlob(patternText, path)
		baseNameMatch := matchesGlob(patternText, filepath.Base(path))

		return fullPathMatch || baseNameMatch
	}

	if basePath == "" {
		return false
	}
	// For relative patterns
	if basePath, err = protocol.DocumentURI(basePath).Path(); err != nil {
		// XXX: Do we want to return here, or send the error up the stack?
		slog.Error("Error converting base path to URI", "basePath", basePath, "error", err)
	}

	basePath = filepath.ToSlash(basePath)

	// Make path relative to basePath for matching
	relPath, err := filepath.Rel(basePath, path)
	if err != nil {
		slog.Error("Error getting relative path", "path", path, "basePath", basePath, "error", err)
		return false
	}
	relPath = filepath.ToSlash(relPath)

	isMatch := matchesGlob(patternText, relPath)

	return isMatch
}

// debounceHandleFileEvent handles file events with debouncing to reduce notifications
func (w *WorkspaceWatcher) debounceHandleFileEvent(ctx context.Context, uri string, changeType protocol.FileChangeType) {
	// Create a unique key based on URI and change type
	key := fmt.Sprintf("%s:%d", uri, changeType)

	// Cancel existing timer if any
	if timer, exists := w.debounceMap.Get(key); exists {
		timer.Stop()
	}

	// Create new timer
	w.debounceMap.Set(key, time.AfterFunc(w.debounceTime, func() {
		w.handleFileEvent(ctx, uri, changeType)

		// Cleanup timer after execution
		w.debounceMap.Del(key)
	}))
}

// handleFileEvent sends file change notifications
func (w *WorkspaceWatcher) handleFileEvent(ctx context.Context, uri string, changeType protocol.FileChangeType) {
	// If the file is open and it's a change event, use didChange notification
	filePath, err := protocol.DocumentURI(uri).Path()
	if err != nil {
		// XXX: Do we want to return here, or send the error up the stack?
		slog.Error("Error converting URI to path", "uri", uri, "error", err)
		return
	}

	if changeType == protocol.FileChangeType(protocol.Deleted) {
		w.client.ClearDiagnosticsForURI(protocol.DocumentURI(uri))
	} else if changeType == protocol.FileChangeType(protocol.Changed) && w.client.IsFileOpen(filePath) {
		err := w.client.NotifyChange(ctx, filePath)
		if err != nil {
			slog.Error("Error notifying change", "error", err)
		}
		return
	}

	// Notify LSP server about the file event using didChangeWatchedFiles
	if err := w.notifyFileEvent(ctx, uri, changeType); err != nil {
		slog.Error("Error notifying LSP server about file event", "error", err)
	}
}

// notifyFileEvent sends a didChangeWatchedFiles notification for a file event
func (w *WorkspaceWatcher) notifyFileEvent(ctx context.Context, uri string, changeType protocol.FileChangeType) error {
	cfg := config.Get()
	if cfg.Options.DebugLSP {
		slog.Debug("Notifying file event",
			"uri", uri,
			"changeType", changeType,
		)
	}

	params := protocol.DidChangeWatchedFilesParams{
		Changes: []protocol.FileEvent{
			{
				URI:  protocol.DocumentURI(uri),
				Type: changeType,
			},
		},
	}

	return w.client.DidChangeWatchedFiles(ctx, params)
}

// shouldPreloadFiles determines if we should preload files for a specific language server
// Some servers work better with preloaded files, others don't need it
func shouldPreloadFiles(serverName string) bool {
	// TypeScript/JavaScript servers typically need some files preloaded
	// to properly resolve imports and provide intellisense
	switch serverName {
	case "typescript", "typescript-language-server", "tsserver", "vtsls":
		return true
	case "java", "jdtls":
		// Java servers often need to see source files to build the project model
		return true
	default:
		// For most servers, we'll use lazy loading by default
		return false
	}
}

// Common patterns for directories and files to exclude
// TODO: make configurable
var (
	excludedDirNames = map[string]bool{
		".git":         true,
		"node_modules": true,
		"dist":         true,
		"build":        true,
		"out":          true,
		"bin":          true,
		".idea":        true,
		".vscode":      true,
		".cache":       true,
		"coverage":     true,
		"target":       true, // Rust build output
		"vendor":       true, // Go vendor directory
	}

	excludedFileExtensions = map[string]bool{
		".swp":   true,
		".swo":   true,
		".tmp":   true,
		".temp":  true,
		".bak":   true,
		".log":   true,
		".o":     true, // Object files
		".so":    true, // Shared libraries
		".dylib": true, // macOS shared libraries
		".dll":   true, // Windows shared libraries
		".a":     true, // Static libraries
		".exe":   true, // Windows executables
		".lock":  true, // Lock files
	}

	// Large binary files that shouldn't be opened
	largeBinaryExtensions = map[string]bool{
		".png":  true,
		".jpg":  true,
		".jpeg": true,
		".gif":  true,
		".bmp":  true,
		".ico":  true,
		".zip":  true,
		".tar":  true,
		".gz":   true,
		".rar":  true,
		".7z":   true,
		".pdf":  true,
		".mp3":  true,
		".mp4":  true,
		".mov":  true,
		".wav":  true,
		".wasm": true,
	}

	// Maximum file size to open (5MB)
	maxFileSize int64 = 5 * 1024 * 1024
)

// shouldExcludeDir returns true if the directory should be excluded from watching/opening
func shouldExcludeDir(dirPath string) bool {
	dirName := filepath.Base(dirPath)

	// Skip dot directories
	if strings.HasPrefix(dirName, ".") {
		return true
	}

	// Skip common excluded directories
	if excludedDirNames[dirName] {
		return true
	}

	return false
}

// shouldExcludeFile returns true if the file should be excluded from opening
func shouldExcludeFile(filePath string) bool {
	fileName := filepath.Base(filePath)
	cfg := config.Get()

	// Skip dot files
	if strings.HasPrefix(fileName, ".") {
		return true
	}

	// Check file extension
	ext := strings.ToLower(filepath.Ext(filePath))
	if excludedFileExtensions[ext] || largeBinaryExtensions[ext] {
		return true
	}

	info, err := os.Stat(filePath)
	if err != nil {
		// If we can't stat the file, skip it
		return true
	}

	// Skip large files
	if info.Size() > maxFileSize {
		if cfg.Options.DebugLSP {
			slog.Debug("Skipping large file",
				"path", filePath,
				"size", info.Size(),
				"maxSize", maxFileSize,
				"debug", cfg.Options.Debug,
				"sizeMB", float64(info.Size())/(1024*1024),
				"maxSizeMB", float64(maxFileSize)/(1024*1024),
			)
		}
		return true
	}

	return false
}

// openMatchingFile opens a file if it matches any of the registered patterns
func (w *WorkspaceWatcher) openMatchingFile(ctx context.Context, path string) {
	cfg := config.Get()
	// Skip directories
	info, err := os.Stat(path)
	if err != nil || info.IsDir() {
		return
	}

	// Skip excluded files
	if shouldExcludeFile(path) {
		return
	}

	// Check if this path should be watched according to server registrations
	if watched, _ := w.isPathWatched(path); !watched {
		return
	}

	serverName := w.name

	// Get server name for specialized handling
	// Check if the file is a high-priority file that should be opened immediately
	// This helps with project initialization for certain language servers
	if isHighPriorityFile(path, serverName) {
		if cfg.Options.DebugLSP {
			slog.Debug("Opening high-priority file", "path", path, "serverName", serverName)
		}
		if err := w.client.OpenFile(ctx, path); err != nil && cfg.Options.DebugLSP {
			slog.Error("Error opening high-priority file", "path", path, "error", err)
		}
		return
	}

	// For non-high-priority files, we'll use different strategies based on server type
	if !shouldPreloadFiles(serverName) {
		return
	}
	// For servers that benefit from preloading, open files but with limits

	// Check file size - for preloading we're more conservative
	if info.Size() > (1 * 1024 * 1024) { // 1MB limit for preloaded files
		if cfg.Options.DebugLSP {
			slog.Debug("Skipping large file for preloading", "path", path, "size", info.Size())
		}
		return
	}

	// Check file extension for common source files
	ext := strings.ToLower(filepath.Ext(path))

	// Only preload source files for the specific language
	var shouldOpen bool
	switch serverName {
	case "typescript", "typescript-language-server", "tsserver", "vtsls":
		shouldOpen = ext == ".ts" || ext == ".js" || ext == ".tsx" || ext == ".jsx"
	case "gopls":
		shouldOpen = ext == ".go"
	case "rust-analyzer":
		shouldOpen = ext == ".rs"
	case "python", "pyright", "pylsp":
		shouldOpen = ext == ".py"
	case "clangd":
		shouldOpen = ext == ".c" || ext == ".cpp" || ext == ".h" || ext == ".hpp"
	case "java", "jdtls":
		shouldOpen = ext == ".java"
	}

	if shouldOpen {
		// Don't need to check if it's already open - the client.OpenFile handles that
		if err := w.client.OpenFile(ctx, path); err != nil && cfg.Options.DebugLSP {
			slog.Error("Error opening file", "path", path, "error", err)
		}
	}
}

// isHighPriorityFile determines if a file should be opened immediately
// regardless of the preloading strategy
func isHighPriorityFile(path string, serverName string) bool {
	fileName := filepath.Base(path)
	ext := filepath.Ext(path)

	switch serverName {
	case "typescript", "typescript-language-server", "tsserver", "vtsls":
		// For TypeScript, we want to open configuration files immediately
		return fileName == "tsconfig.json" ||
			fileName == "package.json" ||
			fileName == "jsconfig.json" ||
			// Also open main entry points
			fileName == "index.ts" ||
			fileName == "index.js" ||
			fileName == "main.ts" ||
			fileName == "main.js"
	case "gopls":
		// For Go, we want to open go.mod files immediately
		return fileName == "go.mod" ||
			fileName == "go.sum" ||
			// Also open main.go files
			fileName == "main.go"
	case "rust-analyzer":
		// For Rust, we want to open Cargo.toml files immediately
		return fileName == "Cargo.toml" ||
			fileName == "Cargo.lock" ||
			// Also open lib.rs and main.rs
			fileName == "lib.rs" ||
			fileName == "main.rs"
	case "python", "pyright", "pylsp":
		// For Python, open key project files
		return fileName == "pyproject.toml" ||
			fileName == "setup.py" ||
			fileName == "requirements.txt" ||
			fileName == "__init__.py" ||
			fileName == "__main__.py"
	case "clangd":
		// For C/C++, open key project files
		return fileName == "CMakeLists.txt" ||
			fileName == "Makefile" ||
			fileName == "compile_commands.json"
	case "java", "jdtls":
		// For Java, open key project files
		return fileName == "pom.xml" ||
			fileName == "build.gradle" ||
			ext == ".java" // Java servers often need to see source files
	}

	// For unknown servers, prioritize common configuration files
	return fileName == "package.json" ||
		fileName == "Makefile" ||
		fileName == "CMakeLists.txt" ||
		fileName == ".editorconfig"
}



================================================
FILE: internal/message/attachment.go
================================================
package message

type Attachment struct {
	FilePath string
	FileName string
	MimeType string
	Content  []byte
}



================================================
FILE: internal/message/content.go
================================================
package message

import (
	"encoding/base64"
	"slices"
	"time"

	"github.com/charmbracelet/catwalk/pkg/catwalk"
)

type MessageRole string

const (
	Assistant MessageRole = "assistant"
	User      MessageRole = "user"
	System    MessageRole = "system"
	Tool      MessageRole = "tool"
)

type FinishReason string

const (
	FinishReasonEndTurn          FinishReason = "end_turn"
	FinishReasonMaxTokens        FinishReason = "max_tokens"
	FinishReasonToolUse          FinishReason = "tool_use"
	FinishReasonCanceled         FinishReason = "canceled"
	FinishReasonError            FinishReason = "error"
	FinishReasonPermissionDenied FinishReason = "permission_denied"

	// Should never happen
	FinishReasonUnknown FinishReason = "unknown"
)

type ContentPart interface {
	isPart()
}

type ReasoningContent struct {
	Thinking   string `json:"thinking"`
	Signature  string `json:"signature"`
	StartedAt  int64  `json:"started_at,omitempty"`
	FinishedAt int64  `json:"finished_at,omitempty"`
}

func (tc ReasoningContent) String() string {
	return tc.Thinking
}
func (ReasoningContent) isPart() {}

type TextContent struct {
	Text string `json:"text"`
}

func (tc TextContent) String() string {
	return tc.Text
}

func (TextContent) isPart() {}

type ImageURLContent struct {
	URL    string `json:"url"`
	Detail string `json:"detail,omitempty"`
}

func (iuc ImageURLContent) String() string {
	return iuc.URL
}

func (ImageURLContent) isPart() {}

type BinaryContent struct {
	Path     string
	MIMEType string
	Data     []byte
}

func (bc BinaryContent) String(p catwalk.InferenceProvider) string {
	base64Encoded := base64.StdEncoding.EncodeToString(bc.Data)
	if p == catwalk.InferenceProviderOpenAI {
		return "data:" + bc.MIMEType + ";base64," + base64Encoded
	}
	return base64Encoded
}

func (BinaryContent) isPart() {}

type ToolCall struct {
	ID       string `json:"id"`
	Name     string `json:"name"`
	Input    string `json:"input"`
	Type     string `json:"type"`
	Finished bool   `json:"finished"`
}

func (ToolCall) isPart() {}

type ToolResult struct {
	ToolCallID string `json:"tool_call_id"`
	Name       string `json:"name"`
	Content    string `json:"content"`
	Metadata   string `json:"metadata"`
	IsError    bool   `json:"is_error"`
}

func (ToolResult) isPart() {}

type Finish struct {
	Reason  FinishReason `json:"reason"`
	Time    int64        `json:"time"`
	Message string       `json:"message,omitempty"`
	Details string       `json:"details,omitempty"`
}

func (Finish) isPart() {}

type Message struct {
	ID        string
	Role      MessageRole
	SessionID string
	Parts     []ContentPart
	Model     string
	Provider  string
	CreatedAt int64
	UpdatedAt int64
}

func (m *Message) Content() TextContent {
	for _, part := range m.Parts {
		if c, ok := part.(TextContent); ok {
			return c
		}
	}
	return TextContent{}
}

func (m *Message) ReasoningContent() ReasoningContent {
	for _, part := range m.Parts {
		if c, ok := part.(ReasoningContent); ok {
			return c
		}
	}
	return ReasoningContent{}
}

func (m *Message) ImageURLContent() []ImageURLContent {
	imageURLContents := make([]ImageURLContent, 0)
	for _, part := range m.Parts {
		if c, ok := part.(ImageURLContent); ok {
			imageURLContents = append(imageURLContents, c)
		}
	}
	return imageURLContents
}

func (m *Message) BinaryContent() []BinaryContent {
	binaryContents := make([]BinaryContent, 0)
	for _, part := range m.Parts {
		if c, ok := part.(BinaryContent); ok {
			binaryContents = append(binaryContents, c)
		}
	}
	return binaryContents
}

func (m *Message) ToolCalls() []ToolCall {
	toolCalls := make([]ToolCall, 0)
	for _, part := range m.Parts {
		if c, ok := part.(ToolCall); ok {
			toolCalls = append(toolCalls, c)
		}
	}
	return toolCalls
}

func (m *Message) ToolResults() []ToolResult {
	toolResults := make([]ToolResult, 0)
	for _, part := range m.Parts {
		if c, ok := part.(ToolResult); ok {
			toolResults = append(toolResults, c)
		}
	}
	return toolResults
}

func (m *Message) IsFinished() bool {
	for _, part := range m.Parts {
		if _, ok := part.(Finish); ok {
			return true
		}
	}
	return false
}

func (m *Message) FinishPart() *Finish {
	for _, part := range m.Parts {
		if c, ok := part.(Finish); ok {
			return &c
		}
	}
	return nil
}

func (m *Message) FinishReason() FinishReason {
	for _, part := range m.Parts {
		if c, ok := part.(Finish); ok {
			return c.Reason
		}
	}
	return ""
}

func (m *Message) IsThinking() bool {
	if m.ReasoningContent().Thinking != "" && m.Content().Text == "" && !m.IsFinished() {
		return true
	}
	return false
}

func (m *Message) AppendContent(delta string) {
	found := false
	for i, part := range m.Parts {
		if c, ok := part.(TextContent); ok {
			m.Parts[i] = TextContent{Text: c.Text + delta}
			found = true
		}
	}
	if !found {
		m.Parts = append(m.Parts, TextContent{Text: delta})
	}
}

func (m *Message) AppendReasoningContent(delta string) {
	found := false
	for i, part := range m.Parts {
		if c, ok := part.(ReasoningContent); ok {
			m.Parts[i] = ReasoningContent{
				Thinking:   c.Thinking + delta,
				Signature:  c.Signature,
				StartedAt:  c.StartedAt,
				FinishedAt: c.FinishedAt,
			}
			found = true
		}
	}
	if !found {
		m.Parts = append(m.Parts, ReasoningContent{
			Thinking:  delta,
			StartedAt: time.Now().Unix(),
		})
	}
}

func (m *Message) AppendReasoningSignature(signature string) {
	for i, part := range m.Parts {
		if c, ok := part.(ReasoningContent); ok {
			m.Parts[i] = ReasoningContent{
				Thinking:   c.Thinking,
				Signature:  c.Signature + signature,
				StartedAt:  c.StartedAt,
				FinishedAt: c.FinishedAt,
			}
			return
		}
	}
	m.Parts = append(m.Parts, ReasoningContent{Signature: signature})
}

func (m *Message) FinishThinking() {
	for i, part := range m.Parts {
		if c, ok := part.(ReasoningContent); ok {
			if c.FinishedAt == 0 {
				m.Parts[i] = ReasoningContent{
					Thinking:   c.Thinking,
					Signature:  c.Signature,
					StartedAt:  c.StartedAt,
					FinishedAt: time.Now().Unix(),
				}
			}
			return
		}
	}
}

func (m *Message) ThinkingDuration() time.Duration {
	reasoning := m.ReasoningContent()
	if reasoning.StartedAt == 0 {
		return 0
	}

	endTime := reasoning.FinishedAt
	if endTime == 0 {
		endTime = time.Now().Unix()
	}

	return time.Duration(endTime-reasoning.StartedAt) * time.Second
}

func (m *Message) FinishToolCall(toolCallID string) {
	for i, part := range m.Parts {
		if c, ok := part.(ToolCall); ok {
			if c.ID == toolCallID {
				m.Parts[i] = ToolCall{
					ID:       c.ID,
					Name:     c.Name,
					Input:    c.Input,
					Type:     c.Type,
					Finished: true,
				}
				return
			}
		}
	}
}

func (m *Message) AppendToolCallInput(toolCallID string, inputDelta string) {
	for i, part := range m.Parts {
		if c, ok := part.(ToolCall); ok {
			if c.ID == toolCallID {
				m.Parts[i] = ToolCall{
					ID:       c.ID,
					Name:     c.Name,
					Input:    c.Input + inputDelta,
					Type:     c.Type,
					Finished: c.Finished,
				}
				return
			}
		}
	}
}

func (m *Message) AddToolCall(tc ToolCall) {
	for i, part := range m.Parts {
		if c, ok := part.(ToolCall); ok {
			if c.ID == tc.ID {
				m.Parts[i] = tc
				return
			}
		}
	}
	m.Parts = append(m.Parts, tc)
}

func (m *Message) SetToolCalls(tc []ToolCall) {
	// remove any existing tool call part it could have multiple
	parts := make([]ContentPart, 0)
	for _, part := range m.Parts {
		if _, ok := part.(ToolCall); ok {
			continue
		}
		parts = append(parts, part)
	}
	m.Parts = parts
	for _, toolCall := range tc {
		m.Parts = append(m.Parts, toolCall)
	}
}

func (m *Message) AddToolResult(tr ToolResult) {
	m.Parts = append(m.Parts, tr)
}

func (m *Message) SetToolResults(tr []ToolResult) {
	for _, toolResult := range tr {
		m.Parts = append(m.Parts, toolResult)
	}
}

func (m *Message) AddFinish(reason FinishReason, message, details string) {
	// remove any existing finish part
	for i, part := range m.Parts {
		if _, ok := part.(Finish); ok {
			m.Parts = slices.Delete(m.Parts, i, i+1)
			break
		}
	}
	m.Parts = append(m.Parts, Finish{Reason: reason, Time: time.Now().Unix(), Message: message, Details: details})
}

func (m *Message) AddImageURL(url, detail string) {
	m.Parts = append(m.Parts, ImageURLContent{URL: url, Detail: detail})
}

func (m *Message) AddBinary(mimeType string, data []byte) {
	m.Parts = append(m.Parts, BinaryContent{MIMEType: mimeType, Data: data})
}



================================================
FILE: internal/message/message.go
================================================
package message

import (
	"context"
	"database/sql"
	"encoding/json"
	"fmt"
	"time"

	"github.com/charmbracelet/crush/internal/db"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/google/uuid"
)

type CreateMessageParams struct {
	Role     MessageRole
	Parts    []ContentPart
	Model    string
	Provider string
}

type Service interface {
	pubsub.Suscriber[Message]
	Create(ctx context.Context, sessionID string, params CreateMessageParams) (Message, error)
	Update(ctx context.Context, message Message) error
	Get(ctx context.Context, id string) (Message, error)
	List(ctx context.Context, sessionID string) ([]Message, error)
	Delete(ctx context.Context, id string) error
	DeleteSessionMessages(ctx context.Context, sessionID string) error
}

type service struct {
	*pubsub.Broker[Message]
	q db.Querier
}

func NewService(q db.Querier) Service {
	return &service{
		Broker: pubsub.NewBroker[Message](),
		q:      q,
	}
}

func (s *service) Delete(ctx context.Context, id string) error {
	message, err := s.Get(ctx, id)
	if err != nil {
		return err
	}
	err = s.q.DeleteMessage(ctx, message.ID)
	if err != nil {
		return err
	}
	s.Publish(pubsub.DeletedEvent, message)
	return nil
}

func (s *service) Create(ctx context.Context, sessionID string, params CreateMessageParams) (Message, error) {
	if params.Role != Assistant {
		params.Parts = append(params.Parts, Finish{
			Reason: "stop",
		})
	}
	partsJSON, err := marshallParts(params.Parts)
	if err != nil {
		return Message{}, err
	}
	dbMessage, err := s.q.CreateMessage(ctx, db.CreateMessageParams{
		ID:        uuid.New().String(),
		SessionID: sessionID,
		Role:      string(params.Role),
		Parts:     string(partsJSON),
		Model:     sql.NullString{String: string(params.Model), Valid: true},
		Provider:  sql.NullString{String: params.Provider, Valid: params.Provider != ""},
	})
	if err != nil {
		return Message{}, err
	}
	message, err := s.fromDBItem(dbMessage)
	if err != nil {
		return Message{}, err
	}
	s.Publish(pubsub.CreatedEvent, message)
	return message, nil
}

func (s *service) DeleteSessionMessages(ctx context.Context, sessionID string) error {
	messages, err := s.List(ctx, sessionID)
	if err != nil {
		return err
	}
	for _, message := range messages {
		if message.SessionID == sessionID {
			err = s.Delete(ctx, message.ID)
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func (s *service) Update(ctx context.Context, message Message) error {
	parts, err := marshallParts(message.Parts)
	if err != nil {
		return err
	}
	finishedAt := sql.NullInt64{}
	if f := message.FinishPart(); f != nil {
		finishedAt.Int64 = f.Time
		finishedAt.Valid = true
	}
	err = s.q.UpdateMessage(ctx, db.UpdateMessageParams{
		ID:         message.ID,
		Parts:      string(parts),
		FinishedAt: finishedAt,
	})
	if err != nil {
		return err
	}
	message.UpdatedAt = time.Now().Unix()
	s.Publish(pubsub.UpdatedEvent, message)
	return nil
}

func (s *service) Get(ctx context.Context, id string) (Message, error) {
	dbMessage, err := s.q.GetMessage(ctx, id)
	if err != nil {
		return Message{}, err
	}
	return s.fromDBItem(dbMessage)
}

func (s *service) List(ctx context.Context, sessionID string) ([]Message, error) {
	dbMessages, err := s.q.ListMessagesBySession(ctx, sessionID)
	if err != nil {
		return nil, err
	}
	messages := make([]Message, len(dbMessages))
	for i, dbMessage := range dbMessages {
		messages[i], err = s.fromDBItem(dbMessage)
		if err != nil {
			return nil, err
		}
	}
	return messages, nil
}

func (s *service) fromDBItem(item db.Message) (Message, error) {
	parts, err := unmarshallParts([]byte(item.Parts))
	if err != nil {
		return Message{}, err
	}
	return Message{
		ID:        item.ID,
		SessionID: item.SessionID,
		Role:      MessageRole(item.Role),
		Parts:     parts,
		Model:     item.Model.String,
		Provider:  item.Provider.String,
		CreatedAt: item.CreatedAt,
		UpdatedAt: item.UpdatedAt,
	}, nil
}

type partType string

const (
	reasoningType  partType = "reasoning"
	textType       partType = "text"
	imageURLType   partType = "image_url"
	binaryType     partType = "binary"
	toolCallType   partType = "tool_call"
	toolResultType partType = "tool_result"
	finishType     partType = "finish"
)

type partWrapper struct {
	Type partType    `json:"type"`
	Data ContentPart `json:"data"`
}

func marshallParts(parts []ContentPart) ([]byte, error) {
	wrappedParts := make([]partWrapper, len(parts))

	for i, part := range parts {
		var typ partType

		switch part.(type) {
		case ReasoningContent:
			typ = reasoningType
		case TextContent:
			typ = textType
		case ImageURLContent:
			typ = imageURLType
		case BinaryContent:
			typ = binaryType
		case ToolCall:
			typ = toolCallType
		case ToolResult:
			typ = toolResultType
		case Finish:
			typ = finishType
		default:
			return nil, fmt.Errorf("unknown part type: %T", part)
		}

		wrappedParts[i] = partWrapper{
			Type: typ,
			Data: part,
		}
	}
	return json.Marshal(wrappedParts)
}

func unmarshallParts(data []byte) ([]ContentPart, error) {
	temp := []json.RawMessage{}

	if err := json.Unmarshal(data, &temp); err != nil {
		return nil, err
	}

	parts := make([]ContentPart, 0)

	for _, rawPart := range temp {
		var wrapper struct {
			Type partType        `json:"type"`
			Data json.RawMessage `json:"data"`
		}

		if err := json.Unmarshal(rawPart, &wrapper); err != nil {
			return nil, err
		}

		switch wrapper.Type {
		case reasoningType:
			part := ReasoningContent{}
			if err := json.Unmarshal(wrapper.Data, &part); err != nil {
				return nil, err
			}
			parts = append(parts, part)
		case textType:
			part := TextContent{}
			if err := json.Unmarshal(wrapper.Data, &part); err != nil {
				return nil, err
			}
			parts = append(parts, part)
		case imageURLType:
			part := ImageURLContent{}
			if err := json.Unmarshal(wrapper.Data, &part); err != nil {
				return nil, err
			}
		case binaryType:
			part := BinaryContent{}
			if err := json.Unmarshal(wrapper.Data, &part); err != nil {
				return nil, err
			}
			parts = append(parts, part)
		case toolCallType:
			part := ToolCall{}
			if err := json.Unmarshal(wrapper.Data, &part); err != nil {
				return nil, err
			}
			parts = append(parts, part)
		case toolResultType:
			part := ToolResult{}
			if err := json.Unmarshal(wrapper.Data, &part); err != nil {
				return nil, err
			}
			parts = append(parts, part)
		case finishType:
			part := Finish{}
			if err := json.Unmarshal(wrapper.Data, &part); err != nil {
				return nil, err
			}
			parts = append(parts, part)
		default:
			return nil, fmt.Errorf("unknown part type: %s", wrapper.Type)
		}
	}

	return parts, nil
}



================================================
FILE: internal/permission/permission.go
================================================
package permission

import (
	"context"
	"errors"
	"os"
	"path/filepath"
	"slices"
	"sync"

	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/google/uuid"
)

var ErrorPermissionDenied = errors.New("permission denied")

type CreatePermissionRequest struct {
	SessionID   string `json:"session_id"`
	ToolCallID  string `json:"tool_call_id"`
	ToolName    string `json:"tool_name"`
	Description string `json:"description"`
	Action      string `json:"action"`
	Params      any    `json:"params"`
	Path        string `json:"path"`
}

type PermissionNotification struct {
	ToolCallID string `json:"tool_call_id"`
	Granted    bool   `json:"granted"`
	Denied     bool   `json:"denied"`
}

type PermissionRequest struct {
	ID          string `json:"id"`
	SessionID   string `json:"session_id"`
	ToolCallID  string `json:"tool_call_id"`
	ToolName    string `json:"tool_name"`
	Description string `json:"description"`
	Action      string `json:"action"`
	Params      any    `json:"params"`
	Path        string `json:"path"`
}

type Service interface {
	pubsub.Suscriber[PermissionRequest]
	GrantPersistent(permission PermissionRequest)
	Grant(permission PermissionRequest)
	Deny(permission PermissionRequest)
	Request(opts CreatePermissionRequest) bool
	AutoApproveSession(sessionID string)
	SetSkipRequests(skip bool)
	SkipRequests() bool
	SubscribeNotifications(ctx context.Context) <-chan pubsub.Event[PermissionNotification]
}

type permissionService struct {
	*pubsub.Broker[PermissionRequest]

	notificationBroker    *pubsub.Broker[PermissionNotification]
	workingDir            string
	sessionPermissions    []PermissionRequest
	sessionPermissionsMu  sync.RWMutex
	pendingRequests       *csync.Map[string, chan bool]
	autoApproveSessions   map[string]bool
	autoApproveSessionsMu sync.RWMutex
	skip                  bool
	allowedTools          []string

	// used to make sure we only process one request at a time
	requestMu     sync.Mutex
	activeRequest *PermissionRequest
}

func (s *permissionService) GrantPersistent(permission PermissionRequest) {
	s.notificationBroker.Publish(pubsub.CreatedEvent, PermissionNotification{
		ToolCallID: permission.ToolCallID,
		Granted:    true,
	})
	respCh, ok := s.pendingRequests.Get(permission.ID)
	if ok {
		respCh <- true
	}

	s.sessionPermissionsMu.Lock()
	s.sessionPermissions = append(s.sessionPermissions, permission)
	s.sessionPermissionsMu.Unlock()

	if s.activeRequest != nil && s.activeRequest.ID == permission.ID {
		s.activeRequest = nil
	}
}

func (s *permissionService) Grant(permission PermissionRequest) {
	s.notificationBroker.Publish(pubsub.CreatedEvent, PermissionNotification{
		ToolCallID: permission.ToolCallID,
		Granted:    true,
	})
	respCh, ok := s.pendingRequests.Get(permission.ID)
	if ok {
		respCh <- true
	}

	if s.activeRequest != nil && s.activeRequest.ID == permission.ID {
		s.activeRequest = nil
	}
}

func (s *permissionService) Deny(permission PermissionRequest) {
	s.notificationBroker.Publish(pubsub.CreatedEvent, PermissionNotification{
		ToolCallID: permission.ToolCallID,
		Granted:    false,
		Denied:     true,
	})
	respCh, ok := s.pendingRequests.Get(permission.ID)
	if ok {
		respCh <- false
	}

	if s.activeRequest != nil && s.activeRequest.ID == permission.ID {
		s.activeRequest = nil
	}
}

func (s *permissionService) Request(opts CreatePermissionRequest) bool {
	if s.skip {
		return true
	}

	// tell the UI that a permission was requested
	s.notificationBroker.Publish(pubsub.CreatedEvent, PermissionNotification{
		ToolCallID: opts.ToolCallID,
	})
	s.requestMu.Lock()
	defer s.requestMu.Unlock()

	// Check if the tool/action combination is in the allowlist
	commandKey := opts.ToolName + ":" + opts.Action
	if slices.Contains(s.allowedTools, commandKey) || slices.Contains(s.allowedTools, opts.ToolName) {
		return true
	}

	s.autoApproveSessionsMu.RLock()
	autoApprove := s.autoApproveSessions[opts.SessionID]
	s.autoApproveSessionsMu.RUnlock()

	if autoApprove {
		return true
	}

	fileInfo, err := os.Stat(opts.Path)
	dir := opts.Path
	if err == nil {
		if fileInfo.IsDir() {
			dir = opts.Path
		} else {
			dir = filepath.Dir(opts.Path)
		}
	}

	if dir == "." {
		dir = s.workingDir
	}
	permission := PermissionRequest{
		ID:          uuid.New().String(),
		Path:        dir,
		SessionID:   opts.SessionID,
		ToolCallID:  opts.ToolCallID,
		ToolName:    opts.ToolName,
		Description: opts.Description,
		Action:      opts.Action,
		Params:      opts.Params,
	}

	s.sessionPermissionsMu.RLock()
	for _, p := range s.sessionPermissions {
		if p.ToolName == permission.ToolName && p.Action == permission.Action && p.SessionID == permission.SessionID && p.Path == permission.Path {
			s.sessionPermissionsMu.RUnlock()
			return true
		}
	}
	s.sessionPermissionsMu.RUnlock()

	s.sessionPermissionsMu.RLock()
	for _, p := range s.sessionPermissions {
		if p.ToolName == permission.ToolName && p.Action == permission.Action && p.SessionID == permission.SessionID && p.Path == permission.Path {
			s.sessionPermissionsMu.RUnlock()
			return true
		}
	}
	s.sessionPermissionsMu.RUnlock()

	s.activeRequest = &permission

	respCh := make(chan bool, 1)
	s.pendingRequests.Set(permission.ID, respCh)
	defer s.pendingRequests.Del(permission.ID)

	// Publish the request
	s.Publish(pubsub.CreatedEvent, permission)

	return <-respCh
}

func (s *permissionService) AutoApproveSession(sessionID string) {
	s.autoApproveSessionsMu.Lock()
	s.autoApproveSessions[sessionID] = true
	s.autoApproveSessionsMu.Unlock()
}

func (s *permissionService) SubscribeNotifications(ctx context.Context) <-chan pubsub.Event[PermissionNotification] {
	return s.notificationBroker.Subscribe(ctx)
}

func (s *permissionService) SetSkipRequests(skip bool) {
	s.skip = skip
}

func (s *permissionService) SkipRequests() bool {
	return s.skip
}

func NewPermissionService(workingDir string, skip bool, allowedTools []string) Service {
	return &permissionService{
		Broker:              pubsub.NewBroker[PermissionRequest](),
		notificationBroker:  pubsub.NewBroker[PermissionNotification](),
		workingDir:          workingDir,
		sessionPermissions:  make([]PermissionRequest, 0),
		autoApproveSessions: make(map[string]bool),
		skip:                skip,
		allowedTools:        allowedTools,
		pendingRequests:     csync.NewMap[string, chan bool](),
	}
}



================================================
FILE: internal/permission/permission_test.go
================================================
package permission

import (
	"sync"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestPermissionService_AllowedCommands(t *testing.T) {
	tests := []struct {
		name         string
		allowedTools []string
		toolName     string
		action       string
		expected     bool
	}{
		{
			name:         "tool in allowlist",
			allowedTools: []string{"bash", "view"},
			toolName:     "bash",
			action:       "execute",
			expected:     true,
		},
		{
			name:         "tool:action in allowlist",
			allowedTools: []string{"bash:execute", "edit:create"},
			toolName:     "bash",
			action:       "execute",
			expected:     true,
		},
		{
			name:         "tool not in allowlist",
			allowedTools: []string{"view", "ls"},
			toolName:     "bash",
			action:       "execute",
			expected:     false,
		},
		{
			name:         "tool:action not in allowlist",
			allowedTools: []string{"bash:read", "edit:create"},
			toolName:     "bash",
			action:       "execute",
			expected:     false,
		},
		{
			name:         "empty allowlist",
			allowedTools: []string{},
			toolName:     "bash",
			action:       "execute",
			expected:     false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			service := NewPermissionService("/tmp", false, tt.allowedTools)

			// Create a channel to capture the permission request
			// Since we're testing the allowlist logic, we need to simulate the request
			ps := service.(*permissionService)

			// Test the allowlist logic directly
			commandKey := tt.toolName + ":" + tt.action
			allowed := false
			for _, cmd := range ps.allowedTools {
				if cmd == commandKey || cmd == tt.toolName {
					allowed = true
					break
				}
			}

			if allowed != tt.expected {
				t.Errorf("expected %v, got %v for tool %s action %s with allowlist %v",
					tt.expected, allowed, tt.toolName, tt.action, tt.allowedTools)
			}
		})
	}
}

func TestPermissionService_SkipMode(t *testing.T) {
	service := NewPermissionService("/tmp", true, []string{})

	result := service.Request(CreatePermissionRequest{
		SessionID:   "test-session",
		ToolName:    "bash",
		Action:      "execute",
		Description: "test command",
		Path:        "/tmp",
	})

	if !result {
		t.Error("expected permission to be granted in skip mode")
	}
}

func TestPermissionService_SequentialProperties(t *testing.T) {
	t.Run("Sequential permission requests with persistent grants", func(t *testing.T) {
		service := NewPermissionService("/tmp", false, []string{})

		req1 := CreatePermissionRequest{
			SessionID:   "session1",
			ToolName:    "file_tool",
			Description: "Read file",
			Action:      "read",
			Params:      map[string]string{"file": "test.txt"},
			Path:        "/tmp/test.txt",
		}

		var result1 bool
		var wg sync.WaitGroup
		wg.Add(1)

		events := service.Subscribe(t.Context())

		go func() {
			defer wg.Done()
			result1 = service.Request(req1)
		}()

		var permissionReq PermissionRequest
		event := <-events

		permissionReq = event.Payload
		service.GrantPersistent(permissionReq)

		wg.Wait()
		assert.True(t, result1, "First request should be granted")

		// Second identical request should be automatically approved due to persistent permission
		req2 := CreatePermissionRequest{
			SessionID:   "session1",
			ToolName:    "file_tool",
			Description: "Read file again",
			Action:      "read",
			Params:      map[string]string{"file": "test.txt"},
			Path:        "/tmp/test.txt",
		}
		result2 := service.Request(req2)
		assert.True(t, result2, "Second request should be auto-approved")
	})
	t.Run("Sequential requests with temporary grants", func(t *testing.T) {
		service := NewPermissionService("/tmp", false, []string{})

		req := CreatePermissionRequest{
			SessionID:   "session2",
			ToolName:    "file_tool",
			Description: "Write file",
			Action:      "write",
			Params:      map[string]string{"file": "test.txt"},
			Path:        "/tmp/test.txt",
		}

		events := service.Subscribe(t.Context())
		var result1 bool
		var wg sync.WaitGroup
		wg.Add(1)

		go func() {
			defer wg.Done()
			result1 = service.Request(req)
		}()

		var permissionReq PermissionRequest
		event := <-events
		permissionReq = event.Payload

		service.Grant(permissionReq)
		wg.Wait()
		assert.True(t, result1, "First request should be granted")

		var result2 bool
		wg.Add(1)

		go func() {
			defer wg.Done()
			result2 = service.Request(req)
		}()

		event = <-events
		permissionReq = event.Payload
		service.Deny(permissionReq)
		wg.Wait()
		assert.False(t, result2, "Second request should be denied")
	})
	t.Run("Concurrent requests with different outcomes", func(t *testing.T) {
		service := NewPermissionService("/tmp", false, []string{})

		events := service.Subscribe(t.Context())

		var wg sync.WaitGroup
		results := make([]bool, 0)

		requests := []CreatePermissionRequest{
			{
				SessionID:   "concurrent1",
				ToolName:    "tool1",
				Action:      "action1",
				Path:        "/tmp/file1.txt",
				Description: "First concurrent request",
			},
			{
				SessionID:   "concurrent2",
				ToolName:    "tool2",
				Action:      "action2",
				Path:        "/tmp/file2.txt",
				Description: "Second concurrent request",
			},
			{
				SessionID:   "concurrent3",
				ToolName:    "tool3",
				Action:      "action3",
				Path:        "/tmp/file3.txt",
				Description: "Third concurrent request",
			},
		}

		for i, req := range requests {
			wg.Add(1)
			go func(index int, request CreatePermissionRequest) {
				defer wg.Done()
				results = append(results, service.Request(request))
			}(i, req)
		}

		for range 3 {
			event := <-events
			switch event.Payload.ToolName {
			case "tool1":
				service.Grant(event.Payload)
			case "tool2":
				service.GrantPersistent(event.Payload)
			case "tool3":
				service.Deny(event.Payload)
			}
		}
		wg.Wait()
		grantedCount := 0
		for _, result := range results {
			if result {
				grantedCount++
			}
		}

		assert.Equal(t, 2, grantedCount, "Should have 2 granted and 1 denied")
		secondReq := requests[1]
		secondReq.Description = "Repeat of second request"
		result := service.Request(secondReq)
		assert.True(t, result, "Repeated request should be auto-approved due to persistent permission")
	})
}



================================================
FILE: internal/pubsub/broker.go
================================================
package pubsub

import (
	"context"
	"sync"
)

const bufferSize = 64

type Broker[T any] struct {
	subs      map[chan Event[T]]struct{}
	mu        sync.RWMutex
	done      chan struct{}
	subCount  int
	maxEvents int
}

func NewBroker[T any]() *Broker[T] {
	return NewBrokerWithOptions[T](bufferSize, 1000)
}

func NewBrokerWithOptions[T any](channelBufferSize, maxEvents int) *Broker[T] {
	b := &Broker[T]{
		subs:      make(map[chan Event[T]]struct{}),
		done:      make(chan struct{}),
		subCount:  0,
		maxEvents: maxEvents,
	}
	return b
}

func (b *Broker[T]) Shutdown() {
	select {
	case <-b.done: // Already closed
		return
	default:
		close(b.done)
	}

	b.mu.Lock()
	defer b.mu.Unlock()

	for ch := range b.subs {
		delete(b.subs, ch)
		close(ch)
	}

	b.subCount = 0
}

func (b *Broker[T]) Subscribe(ctx context.Context) <-chan Event[T] {
	b.mu.Lock()
	defer b.mu.Unlock()

	select {
	case <-b.done:
		ch := make(chan Event[T])
		close(ch)
		return ch
	default:
	}

	sub := make(chan Event[T], bufferSize)
	b.subs[sub] = struct{}{}
	b.subCount++

	go func() {
		<-ctx.Done()

		b.mu.Lock()
		defer b.mu.Unlock()

		select {
		case <-b.done:
			return
		default:
		}

		delete(b.subs, sub)
		close(sub)
		b.subCount--
	}()

	return sub
}

func (b *Broker[T]) GetSubscriberCount() int {
	b.mu.RLock()
	defer b.mu.RUnlock()
	return b.subCount
}

func (b *Broker[T]) Publish(t EventType, payload T) {
	b.mu.RLock()
	select {
	case <-b.done:
		b.mu.RUnlock()
		return
	default:
	}

	subscribers := make([]chan Event[T], 0, len(b.subs))
	for sub := range b.subs {
		subscribers = append(subscribers, sub)
	}
	b.mu.RUnlock()

	event := Event[T]{Type: t, Payload: payload}

	for _, sub := range subscribers {
		select {
		case sub <- event:
		default:
			// Channel is full, subscriber is slow - skip this event
			// This prevents blocking the publisher
		}
	}
}



================================================
FILE: internal/pubsub/events.go
================================================
package pubsub

import "context"

const (
	CreatedEvent EventType = "created"
	UpdatedEvent EventType = "updated"
	DeletedEvent EventType = "deleted"
)

type Suscriber[T any] interface {
	Subscribe(context.Context) <-chan Event[T]
}

type (
	// EventType identifies the type of event
	EventType string

	// Event represents an event in the lifecycle of a resource
	Event[T any] struct {
		Type    EventType
		Payload T
	}

	Publisher[T any] interface {
		Publish(EventType, T)
	}
)



================================================
FILE: internal/session/session.go
================================================
package session

import (
	"context"
	"database/sql"

	"github.com/charmbracelet/crush/internal/db"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/google/uuid"
)

type Session struct {
	ID               string
	ParentSessionID  string
	Title            string
	MessageCount     int64
	PromptTokens     int64
	CompletionTokens int64
	SummaryMessageID string
	Cost             float64
	CreatedAt        int64
	UpdatedAt        int64
}

type Service interface {
	pubsub.Suscriber[Session]
	Create(ctx context.Context, title string) (Session, error)
	CreateTitleSession(ctx context.Context, parentSessionID string) (Session, error)
	CreateTaskSession(ctx context.Context, toolCallID, parentSessionID, title string) (Session, error)
	Get(ctx context.Context, id string) (Session, error)
	List(ctx context.Context) ([]Session, error)
	Save(ctx context.Context, session Session) (Session, error)
	Delete(ctx context.Context, id string) error
}

type service struct {
	*pubsub.Broker[Session]
	q db.Querier
}

func (s *service) Create(ctx context.Context, title string) (Session, error) {
	dbSession, err := s.q.CreateSession(ctx, db.CreateSessionParams{
		ID:    uuid.New().String(),
		Title: title,
	})
	if err != nil {
		return Session{}, err
	}
	session := s.fromDBItem(dbSession)
	s.Publish(pubsub.CreatedEvent, session)
	return session, nil
}

func (s *service) CreateTaskSession(ctx context.Context, toolCallID, parentSessionID, title string) (Session, error) {
	dbSession, err := s.q.CreateSession(ctx, db.CreateSessionParams{
		ID:              toolCallID,
		ParentSessionID: sql.NullString{String: parentSessionID, Valid: true},
		Title:           title,
	})
	if err != nil {
		return Session{}, err
	}
	session := s.fromDBItem(dbSession)
	s.Publish(pubsub.CreatedEvent, session)
	return session, nil
}

func (s *service) CreateTitleSession(ctx context.Context, parentSessionID string) (Session, error) {
	dbSession, err := s.q.CreateSession(ctx, db.CreateSessionParams{
		ID:              "title-" + parentSessionID,
		ParentSessionID: sql.NullString{String: parentSessionID, Valid: true},
		Title:           "Generate a title",
	})
	if err != nil {
		return Session{}, err
	}
	session := s.fromDBItem(dbSession)
	s.Publish(pubsub.CreatedEvent, session)
	return session, nil
}

func (s *service) Delete(ctx context.Context, id string) error {
	session, err := s.Get(ctx, id)
	if err != nil {
		return err
	}
	err = s.q.DeleteSession(ctx, session.ID)
	if err != nil {
		return err
	}
	s.Publish(pubsub.DeletedEvent, session)
	return nil
}

func (s *service) Get(ctx context.Context, id string) (Session, error) {
	dbSession, err := s.q.GetSessionByID(ctx, id)
	if err != nil {
		return Session{}, err
	}
	return s.fromDBItem(dbSession), nil
}

func (s *service) Save(ctx context.Context, session Session) (Session, error) {
	dbSession, err := s.q.UpdateSession(ctx, db.UpdateSessionParams{
		ID:               session.ID,
		Title:            session.Title,
		PromptTokens:     session.PromptTokens,
		CompletionTokens: session.CompletionTokens,
		SummaryMessageID: sql.NullString{
			String: session.SummaryMessageID,
			Valid:  session.SummaryMessageID != "",
		},
		Cost: session.Cost,
	})
	if err != nil {
		return Session{}, err
	}
	session = s.fromDBItem(dbSession)
	s.Publish(pubsub.UpdatedEvent, session)
	return session, nil
}

func (s *service) List(ctx context.Context) ([]Session, error) {
	dbSessions, err := s.q.ListSessions(ctx)
	if err != nil {
		return nil, err
	}
	sessions := make([]Session, len(dbSessions))
	for i, dbSession := range dbSessions {
		sessions[i] = s.fromDBItem(dbSession)
	}
	return sessions, nil
}

func (s service) fromDBItem(item db.Session) Session {
	return Session{
		ID:               item.ID,
		ParentSessionID:  item.ParentSessionID.String,
		Title:            item.Title,
		MessageCount:     item.MessageCount,
		PromptTokens:     item.PromptTokens,
		CompletionTokens: item.CompletionTokens,
		SummaryMessageID: item.SummaryMessageID.String,
		Cost:             item.Cost,
		CreatedAt:        item.CreatedAt,
		UpdatedAt:        item.UpdatedAt,
	}
}

func NewService(q db.Querier) Service {
	broker := pubsub.NewBroker[Session]()
	return &service{
		broker,
		q,
	}
}



================================================
FILE: internal/shell/command_block_test.go
================================================
package shell

import (
	"context"
	"strings"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestCommandBlocking(t *testing.T) {
	tests := []struct {
		name        string
		blockFuncs  []BlockFunc
		command     string
		shouldBlock bool
	}{
		{
			name: "block simple command",
			blockFuncs: []BlockFunc{
				func(args []string) bool {
					return len(args) > 0 && args[0] == "curl"
				},
			},
			command:     "curl https://example.com",
			shouldBlock: true,
		},
		{
			name: "allow non-blocked command",
			blockFuncs: []BlockFunc{
				func(args []string) bool {
					return len(args) > 0 && args[0] == "curl"
				},
			},
			command:     "echo hello",
			shouldBlock: false,
		},
		{
			name: "block subcommand",
			blockFuncs: []BlockFunc{
				func(args []string) bool {
					return len(args) >= 2 && args[0] == "brew" && args[1] == "install"
				},
			},
			command:     "brew install wget",
			shouldBlock: true,
		},
		{
			name: "allow different subcommand",
			blockFuncs: []BlockFunc{
				func(args []string) bool {
					return len(args) >= 2 && args[0] == "brew" && args[1] == "install"
				},
			},
			command:     "brew list",
			shouldBlock: false,
		},
		{
			name: "block npm global install with -g",
			blockFuncs: []BlockFunc{
				ArgumentsBlocker("npm", []string{"install"}, []string{"-g"}),
			},
			command:     "npm install -g typescript",
			shouldBlock: true,
		},
		{
			name: "block npm global install with --global",
			blockFuncs: []BlockFunc{
				ArgumentsBlocker("npm", []string{"install"}, []string{"--global"}),
			},
			command:     "npm install --global typescript",
			shouldBlock: true,
		},
		{
			name: "allow npm local install",
			blockFuncs: []BlockFunc{
				ArgumentsBlocker("npm", []string{"install"}, []string{"-g"}),
				ArgumentsBlocker("npm", []string{"install"}, []string{"--global"}),
			},
			command:     "npm install typescript",
			shouldBlock: false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			// Create a temporary directory for each test
			tmpDir := t.TempDir()

			shell := NewShell(&Options{
				WorkingDir: tmpDir,
				BlockFuncs: tt.blockFuncs,
			})

			_, _, err := shell.Exec(context.Background(), tt.command)

			if tt.shouldBlock {
				if err == nil {
					t.Errorf("Expected command to be blocked, but it was allowed")
				} else if !strings.Contains(err.Error(), "not allowed for security reasons") {
					t.Errorf("Expected security error, got: %v", err)
				}
			} else {
				// For non-blocked commands, we might get other errors (like command not found)
				// but we shouldn't get the security error
				if err != nil && strings.Contains(err.Error(), "not allowed for security reasons") {
					t.Errorf("Command was unexpectedly blocked: %v", err)
				}
			}
		})
	}
}

func TestArgumentsBlocker(t *testing.T) {
	tests := []struct {
		name        string
		cmd         string
		args        []string
		flags       []string
		input       []string
		shouldBlock bool
	}{
		// Basic command blocking
		{
			name:        "block exact command match",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       nil,
			input:       []string{"npm", "install", "package"},
			shouldBlock: true,
		},
		{
			name:        "allow different command",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       nil,
			input:       []string{"yarn", "install", "package"},
			shouldBlock: false,
		},
		{
			name:        "allow different subcommand",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       nil,
			input:       []string{"npm", "list"},
			shouldBlock: false,
		},

		// Flag-based blocking
		{
			name:        "block with single flag",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       []string{"-g"},
			input:       []string{"npm", "install", "-g", "typescript"},
			shouldBlock: true,
		},
		{
			name:        "block with flag in different position",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       []string{"-g"},
			input:       []string{"npm", "install", "typescript", "-g"},
			shouldBlock: true,
		},
		{
			name:        "allow without required flag",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       []string{"-g"},
			input:       []string{"npm", "install", "typescript"},
			shouldBlock: false,
		},
		{
			name:        "block with multiple flags",
			cmd:         "pip",
			args:        []string{"install"},
			flags:       []string{"--user"},
			input:       []string{"pip", "install", "--user", "--upgrade", "package"},
			shouldBlock: true,
		},

		// Complex argument patterns
		{
			name:        "block multi-arg subcommand",
			cmd:         "yarn",
			args:        []string{"global", "add"},
			flags:       nil,
			input:       []string{"yarn", "global", "add", "typescript"},
			shouldBlock: true,
		},
		{
			name:        "allow partial multi-arg match",
			cmd:         "yarn",
			args:        []string{"global", "add"},
			flags:       nil,
			input:       []string{"yarn", "global", "list"},
			shouldBlock: false,
		},

		// Edge cases
		{
			name:        "handle empty input",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       nil,
			input:       []string{},
			shouldBlock: false,
		},
		{
			name:        "handle command only",
			cmd:         "npm",
			args:        []string{"install"},
			flags:       nil,
			input:       []string{"npm"},
			shouldBlock: false,
		},
		{
			name:        "block pacman with -S flag",
			cmd:         "pacman",
			args:        nil,
			flags:       []string{"-S"},
			input:       []string{"pacman", "-S", "package"},
			shouldBlock: true,
		},
		{
			name:        "allow pacman without -S flag",
			cmd:         "pacman",
			args:        nil,
			flags:       []string{"-S"},
			input:       []string{"pacman", "-Q", "package"},
			shouldBlock: false,
		},

		// `go test -exec`
		{
			name:        "go test exec",
			cmd:         "go",
			args:        []string{"test"},
			flags:       []string{"-exec"},
			input:       []string{"go", "test", "-exec", "bash -c 'echo hello'"},
			shouldBlock: true,
		},
		{
			name:        "go test exec",
			cmd:         "go",
			args:        []string{"test"},
			flags:       []string{"-exec"},
			input:       []string{"go", "test", `-exec="bash -c 'echo hello'"`},
			shouldBlock: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			blocker := ArgumentsBlocker(tt.cmd, tt.args, tt.flags)
			result := blocker(tt.input)
			require.Equal(t, tt.shouldBlock, result,
				"Expected block=%v for input %v", tt.shouldBlock, tt.input)
		})
	}
}

func TestCommandsBlocker(t *testing.T) {
	tests := []struct {
		name        string
		banned      []string
		input       []string
		shouldBlock bool
	}{
		{
			name:        "block single banned command",
			banned:      []string{"curl"},
			input:       []string{"curl", "https://example.com"},
			shouldBlock: true,
		},
		{
			name:        "allow non-banned command",
			banned:      []string{"curl", "wget"},
			input:       []string{"echo", "hello"},
			shouldBlock: false,
		},
		{
			name:        "block from multiple banned",
			banned:      []string{"curl", "wget", "nc"},
			input:       []string{"wget", "https://example.com"},
			shouldBlock: true,
		},
		{
			name:        "handle empty input",
			banned:      []string{"curl"},
			input:       []string{},
			shouldBlock: false,
		},
		{
			name:        "case sensitive matching",
			banned:      []string{"curl"},
			input:       []string{"CURL", "https://example.com"},
			shouldBlock: false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			blocker := CommandsBlocker(tt.banned)
			result := blocker(tt.input)
			require.Equal(t, tt.shouldBlock, result,
				"Expected block=%v for input %v", tt.shouldBlock, tt.input)
		})
	}
}

func TestSplitArgsFlags(t *testing.T) {
	tests := []struct {
		name      string
		input     []string
		wantArgs  []string
		wantFlags []string
	}{
		{
			name:      "only args",
			input:     []string{"install", "package", "another"},
			wantArgs:  []string{"install", "package", "another"},
			wantFlags: []string{},
		},
		{
			name:      "only flags",
			input:     []string{"-g", "--verbose", "-f"},
			wantArgs:  []string{},
			wantFlags: []string{"-g", "--verbose", "-f"},
		},
		{
			name:      "mixed args and flags",
			input:     []string{"install", "-g", "package", "--verbose"},
			wantArgs:  []string{"install", "package"},
			wantFlags: []string{"-g", "--verbose"},
		},
		{
			name:      "empty input",
			input:     []string{},
			wantArgs:  []string{},
			wantFlags: []string{},
		},
		{
			name:      "single dash flag",
			input:     []string{"-S", "package"},
			wantArgs:  []string{"package"},
			wantFlags: []string{"-S"},
		},
		{
			name:      "flag with equals sign",
			input:     []string{"-exec=bash", "package"},
			wantArgs:  []string{"package"},
			wantFlags: []string{"-exec"},
		},
		{
			name:      "long flag with equals sign",
			input:     []string{"--config=/path/to/config", "run"},
			wantArgs:  []string{"run"},
			wantFlags: []string{"--config"},
		},
		{
			name:      "flag with complex value",
			input:     []string{`-exec="bash -c 'echo hello'"`, "test"},
			wantArgs:  []string{"test"},
			wantFlags: []string{"-exec"},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			args, flags := splitArgsFlags(tt.input)
			require.Equal(t, tt.wantArgs, args, "args mismatch")
			require.Equal(t, tt.wantFlags, flags, "flags mismatch")
		})
	}
}



================================================
FILE: internal/shell/comparison_test.go
================================================
package shell

import (
	"testing"
	"time"

	"github.com/stretchr/testify/require"
)

func TestShellPerformanceComparison(t *testing.T) {
	shell := NewShell(&Options{WorkingDir: t.TempDir()})

	// Test quick command
	start := time.Now()
	stdout, stderr, err := shell.Exec(t.Context(), "echo 'hello'")
	exitCode := ExitCode(err)
	duration := time.Since(start)

	require.NoError(t, err)
	require.Equal(t, 0, exitCode)
	require.Contains(t, stdout, "hello")
	require.Empty(t, stderr)

	t.Logf("Quick command took: %v", duration)
}

// Benchmark CPU usage during polling
func BenchmarkShellPolling(b *testing.B) {
	shell := NewShell(&Options{WorkingDir: b.TempDir()})

	b.ReportAllocs()

	for b.Loop() {
		// Use a short sleep to measure polling overhead
		_, _, err := shell.Exec(b.Context(), "sleep 0.02")
		exitCode := ExitCode(err)
		if err != nil || exitCode != 0 {
			b.Fatalf("Command failed: %v, exit code: %d", err, exitCode)
		}
	}
}



================================================
FILE: internal/shell/doc.go
================================================
package shell

// Example usage of the shell package:
//
// 1. For one-off commands:
//
//	shell := shell.NewShell(nil)
//	stdout, stderr, err := shell.Exec(context.Background(), "echo hello")
//
// 2. For maintaining state across commands:
//
//	shell := shell.NewShell(&shell.Options{
//	    WorkingDir: "/tmp",
//	    Logger: myLogger,
//	})
//	shell.Exec(ctx, "export FOO=bar")
//	shell.Exec(ctx, "echo $FOO")  // Will print "bar"
//
// 3. For the singleton persistent shell (used by tools):
//
//	shell := shell.GetPersistentShell("/path/to/cwd")
//	stdout, stderr, err := shell.Exec(ctx, "ls -la")
//
// 4. Managing environment and working directory:
//
//	shell := shell.NewShell(nil)
//	shell.SetEnv("MY_VAR", "value")
//	shell.SetWorkingDir("/tmp")
//	cwd := shell.GetWorkingDir()
//	env := shell.GetEnv()



================================================
FILE: internal/shell/persistent.go
================================================
package shell

import (
	"log/slog"
	"sync"
)

// PersistentShell is a singleton shell instance that maintains state across the application
type PersistentShell struct {
	*Shell
}

var (
	once          sync.Once
	shellInstance *PersistentShell
)

// GetPersistentShell returns the singleton persistent shell instance
// This maintains backward compatibility with the existing API
func GetPersistentShell(cwd string) *PersistentShell {
	once.Do(func() {
		shellInstance = &PersistentShell{
			Shell: NewShell(&Options{
				WorkingDir: cwd,
				Logger:     &loggingAdapter{},
			}),
		}
	})
	return shellInstance
}

// slog.dapter adapts the internal slog.package to the Logger interface
type loggingAdapter struct{}

func (l *loggingAdapter) InfoPersist(msg string, keysAndValues ...any) {
	slog.Info(msg, keysAndValues...)
}



================================================
FILE: internal/shell/shell.go
================================================
// Package shell provides cross-platform shell execution capabilities.
//
// This package offers two main types:
// - Shell: A general-purpose shell executor for one-off or managed commands
// - PersistentShell: A singleton shell that maintains state across the application
//
// WINDOWS COMPATIBILITY:
// This implementation provides both POSIX shell emulation (mvdan.cc/sh/v3),
// even on Windows. Some caution has to be taken: commands should have forward
// slashes (/) as path separators to work, even on Windows.
package shell

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"os"
	"slices"
	"strings"
	"sync"

	"github.com/charmbracelet/crush/internal/slicesext"
	"mvdan.cc/sh/moreinterp/coreutils"
	"mvdan.cc/sh/v3/expand"
	"mvdan.cc/sh/v3/interp"
	"mvdan.cc/sh/v3/syntax"
)

// ShellType represents the type of shell to use
type ShellType int

const (
	ShellTypePOSIX ShellType = iota
	ShellTypeCmd
	ShellTypePowerShell
)

// Logger interface for optional logging
type Logger interface {
	InfoPersist(msg string, keysAndValues ...any)
}

// noopLogger is a logger that does nothing
type noopLogger struct{}

func (noopLogger) InfoPersist(msg string, keysAndValues ...any) {}

// BlockFunc is a function that determines if a command should be blocked
type BlockFunc func(args []string) bool

// Shell provides cross-platform shell execution with optional state persistence
type Shell struct {
	env        []string
	cwd        string
	mu         sync.Mutex
	logger     Logger
	blockFuncs []BlockFunc
}

// Options for creating a new shell
type Options struct {
	WorkingDir string
	Env        []string
	Logger     Logger
	BlockFuncs []BlockFunc
}

// NewShell creates a new shell instance with the given options
func NewShell(opts *Options) *Shell {
	if opts == nil {
		opts = &Options{}
	}

	cwd := opts.WorkingDir
	if cwd == "" {
		cwd, _ = os.Getwd()
	}

	env := opts.Env
	if env == nil {
		env = os.Environ()
	}

	logger := opts.Logger
	if logger == nil {
		logger = noopLogger{}
	}

	return &Shell{
		cwd:        cwd,
		env:        env,
		logger:     logger,
		blockFuncs: opts.BlockFuncs,
	}
}

// Exec executes a command in the shell
func (s *Shell) Exec(ctx context.Context, command string) (string, string, error) {
	s.mu.Lock()
	defer s.mu.Unlock()

	return s.execPOSIX(ctx, command)
}

// GetWorkingDir returns the current working directory
func (s *Shell) GetWorkingDir() string {
	s.mu.Lock()
	defer s.mu.Unlock()
	return s.cwd
}

// SetWorkingDir sets the working directory
func (s *Shell) SetWorkingDir(dir string) error {
	s.mu.Lock()
	defer s.mu.Unlock()

	// Verify the directory exists
	if _, err := os.Stat(dir); err != nil {
		return fmt.Errorf("directory does not exist: %w", err)
	}

	s.cwd = dir
	return nil
}

// GetEnv returns a copy of the environment variables
func (s *Shell) GetEnv() []string {
	s.mu.Lock()
	defer s.mu.Unlock()

	env := make([]string, len(s.env))
	copy(env, s.env)
	return env
}

// SetEnv sets an environment variable
func (s *Shell) SetEnv(key, value string) {
	s.mu.Lock()
	defer s.mu.Unlock()

	// Update or add the environment variable
	keyPrefix := key + "="
	for i, env := range s.env {
		if strings.HasPrefix(env, keyPrefix) {
			s.env[i] = keyPrefix + value
			return
		}
	}
	s.env = append(s.env, keyPrefix+value)
}

// SetBlockFuncs sets the command block functions for the shell
func (s *Shell) SetBlockFuncs(blockFuncs []BlockFunc) {
	s.mu.Lock()
	defer s.mu.Unlock()
	s.blockFuncs = blockFuncs
}

// CommandsBlocker creates a BlockFunc that blocks exact command matches
func CommandsBlocker(cmds []string) BlockFunc {
	bannedSet := make(map[string]struct{})
	for _, cmd := range cmds {
		bannedSet[cmd] = struct{}{}
	}

	return func(args []string) bool {
		if len(args) == 0 {
			return false
		}
		_, ok := bannedSet[args[0]]
		return ok
	}
}

// ArgumentsBlocker creates a BlockFunc that blocks specific subcommand
func ArgumentsBlocker(cmd string, args []string, flags []string) BlockFunc {
	return func(parts []string) bool {
		if len(parts) == 0 || parts[0] != cmd {
			return false
		}

		argParts, flagParts := splitArgsFlags(parts[1:])
		if len(argParts) < len(args) || len(flagParts) < len(flags) {
			return false
		}

		argsMatch := slices.Equal(argParts[:len(args)], args)
		flagsMatch := slicesext.IsSubset(flags, flagParts)

		return argsMatch && flagsMatch
	}
}

func splitArgsFlags(parts []string) (args []string, flags []string) {
	args = make([]string, 0, len(parts))
	flags = make([]string, 0, len(parts))
	for _, part := range parts {
		if strings.HasPrefix(part, "-") {
			// Extract flag name before '=' if present
			flag := part
			if idx := strings.IndexByte(part, '='); idx != -1 {
				flag = part[:idx]
			}
			flags = append(flags, flag)
		} else {
			args = append(args, part)
		}
	}
	return
}

func (s *Shell) blockHandler() func(next interp.ExecHandlerFunc) interp.ExecHandlerFunc {
	return func(next interp.ExecHandlerFunc) interp.ExecHandlerFunc {
		return func(ctx context.Context, args []string) error {
			if len(args) == 0 {
				return next(ctx, args)
			}

			for _, blockFunc := range s.blockFuncs {
				if blockFunc(args) {
					return fmt.Errorf("command is not allowed for security reasons: %s", strings.Join(args, " "))
				}
			}

			return next(ctx, args)
		}
	}
}

// execPOSIX executes commands using POSIX shell emulation (cross-platform)
func (s *Shell) execPOSIX(ctx context.Context, command string) (string, string, error) {
	line, err := syntax.NewParser().Parse(strings.NewReader(command), "")
	if err != nil {
		return "", "", fmt.Errorf("could not parse command: %w", err)
	}

	var stdout, stderr bytes.Buffer
	runner, err := interp.New(
		interp.StdIO(nil, &stdout, &stderr),
		interp.Interactive(false),
		interp.Env(expand.ListEnviron(s.env...)),
		interp.Dir(s.cwd),
		interp.ExecHandlers(s.blockHandler(), coreutils.ExecHandler),
	)
	if err != nil {
		return "", "", fmt.Errorf("could not run command: %w", err)
	}

	err = runner.Run(ctx, line)
	s.cwd = runner.Dir
	s.env = []string{}
	for name, vr := range runner.Vars {
		s.env = append(s.env, fmt.Sprintf("%s=%s", name, vr.Str))
	}
	s.logger.InfoPersist("POSIX command finished", "command", command, "err", err)
	return stdout.String(), stderr.String(), err
}

// IsInterrupt checks if an error is due to interruption
func IsInterrupt(err error) bool {
	return errors.Is(err, context.Canceled) ||
		errors.Is(err, context.DeadlineExceeded)
}

// ExitCode extracts the exit code from an error
func ExitCode(err error) int {
	if err == nil {
		return 0
	}
	var exitErr interp.ExitStatus
	if errors.As(err, &exitErr) {
		return int(exitErr)
	}
	return 1
}



================================================
FILE: internal/shell/shell_test.go
================================================
package shell

import (
	"context"
	"path/filepath"
	"runtime"
	"strings"
	"testing"
	"time"
)

// Benchmark to measure CPU efficiency
func BenchmarkShellQuickCommands(b *testing.B) {
	shell := NewShell(&Options{WorkingDir: b.TempDir()})

	b.ReportAllocs()

	for b.Loop() {
		_, _, err := shell.Exec(context.Background(), "echo test")
		exitCode := ExitCode(err)
		if err != nil || exitCode != 0 {
			b.Fatalf("Command failed: %v, exit code: %d", err, exitCode)
		}
	}
}

func TestTestTimeout(t *testing.T) {
	// XXX(@andreynering): This fails on Windows. Address once possible.
	if runtime.GOOS == "windows" {
		t.Skip("Skipping test on Windows")
	}

	ctx, cancel := context.WithTimeout(t.Context(), time.Millisecond)
	t.Cleanup(cancel)

	shell := NewShell(&Options{WorkingDir: t.TempDir()})
	_, _, err := shell.Exec(ctx, "sleep 10")
	if status := ExitCode(err); status == 0 {
		t.Fatalf("Expected non-zero exit status, got %d", status)
	}
	if !IsInterrupt(err) {
		t.Fatalf("Expected command to be interrupted, but it was not")
	}
	if err == nil {
		t.Fatalf("Expected an error due to timeout, but got none")
	}
}

func TestTestCancel(t *testing.T) {
	ctx, cancel := context.WithCancel(t.Context())
	cancel() // immediately cancel the context

	shell := NewShell(&Options{WorkingDir: t.TempDir()})
	_, _, err := shell.Exec(ctx, "sleep 10")
	if status := ExitCode(err); status == 0 {
		t.Fatalf("Expected non-zero exit status, got %d", status)
	}
	if !IsInterrupt(err) {
		t.Fatalf("Expected command to be interrupted, but it was not")
	}
	if err == nil {
		t.Fatalf("Expected an error due to cancel, but got none")
	}
}

func TestRunCommandError(t *testing.T) {
	shell := NewShell(&Options{WorkingDir: t.TempDir()})
	_, _, err := shell.Exec(t.Context(), "nopenopenope")
	if status := ExitCode(err); status == 0 {
		t.Fatalf("Expected non-zero exit status, got %d", status)
	}
	if IsInterrupt(err) {
		t.Fatalf("Expected command to not be interrupted, but it was")
	}
	if err == nil {
		t.Fatalf("Expected an error, got nil")
	}
}

func TestRunContinuity(t *testing.T) {
	tempDir1 := t.TempDir()
	tempDir2 := t.TempDir()

	shell := NewShell(&Options{WorkingDir: tempDir1})
	if _, _, err := shell.Exec(t.Context(), "export FOO=bar"); err != nil {
		t.Fatalf("failed to set env: %v", err)
	}
	if _, _, err := shell.Exec(t.Context(), "cd "+filepath.ToSlash(tempDir2)); err != nil {
		t.Fatalf("failed to change directory: %v", err)
	}
	out, _, err := shell.Exec(t.Context(), "echo $FOO ; pwd")
	if err != nil {
		t.Fatalf("failed to echo: %v", err)
	}
	expect := "bar\n" + tempDir2 + "\n"
	if out != expect {
		t.Fatalf("expected output %q, got %q", expect, out)
	}
}

func TestCrossPlatformExecution(t *testing.T) {
	shell := NewShell(&Options{WorkingDir: "."})
	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()

	// Test a simple command that should work on all platforms
	stdout, stderr, err := shell.Exec(ctx, "echo hello")
	if err != nil {
		t.Fatalf("Echo command failed: %v, stderr: %s", err, stderr)
	}

	if stdout == "" {
		t.Error("Echo command produced no output")
	}

	// The output should contain "hello" regardless of platform
	if !strings.Contains(strings.ToLower(stdout), "hello") {
		t.Errorf("Echo output should contain 'hello', got: %q", stdout)
	}
}



================================================
FILE: internal/slicesext/slices.go
================================================
package slicesext

func IsSubset[T comparable](a, b []T) bool {
	if len(a) > len(b) {
		return false
	}
	set := make(map[T]struct{}, len(b))
	for _, item := range b {
		set[item] = struct{}{}
	}
	for _, item := range a {
		if _, exists := set[item]; !exists {
			return false
		}
	}
	return true
}



================================================
FILE: internal/slicesext/slices_test.go
================================================
package slicesext

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestIsSubset(t *testing.T) {
	tests := []struct {
		name   string
		a      []string
		b      []string
		expect bool
	}{
		// Basic subset cases
		{
			name:   "empty subset of empty",
			a:      []string{},
			b:      []string{},
			expect: true,
		},
		{
			name:   "empty subset of non-empty",
			a:      []string{},
			b:      []string{"a", "b", "c"},
			expect: true,
		},
		{
			name:   "non-empty not subset of empty",
			a:      []string{"a"},
			b:      []string{},
			expect: false,
		},
		{
			name:   "single element subset",
			a:      []string{"b"},
			b:      []string{"a", "b", "c"},
			expect: true,
		},
		{
			name:   "single element not subset",
			a:      []string{"d"},
			b:      []string{"a", "b", "c"},
			expect: false,
		},
		{
			name:   "multiple elements subset",
			a:      []string{"a", "c"},
			b:      []string{"a", "b", "c", "d"},
			expect: true,
		},
		{
			name:   "multiple elements not subset",
			a:      []string{"a", "e"},
			b:      []string{"a", "b", "c", "d"},
			expect: false,
		},
		{
			name:   "equal sets are subsets",
			a:      []string{"a", "b", "c"},
			b:      []string{"a", "b", "c"},
			expect: true,
		},
		{
			name:   "larger set not subset of smaller",
			a:      []string{"a", "b", "c", "d"},
			b:      []string{"a", "b"},
			expect: false,
		},

		// Order independence
		{
			name:   "subset with different order",
			a:      []string{"c", "a"},
			b:      []string{"b", "a", "d", "c"},
			expect: true,
		},

		// Duplicate handling
		{
			name:   "duplicates in subset",
			a:      []string{"a", "a", "b"},
			b:      []string{"a", "b", "c"},
			expect: true,
		},
		{
			name:   "duplicates in superset",
			a:      []string{"a", "b"},
			b:      []string{"a", "a", "b", "b", "c"},
			expect: true,
		},
		{
			name:   "duplicates in both",
			a:      []string{"a", "a", "b"},
			b:      []string{"a", "a", "b", "b", "c"},
			expect: true,
		},

		// Real-world examples
		{
			name:   "npm flags subset",
			a:      []string{"-g"},
			b:      []string{"-g", "--verbose", "--save-dev"},
			expect: true,
		},
		{
			name:   "npm flags not subset",
			a:      []string{"--global"},
			b:      []string{"-g", "--verbose", "--save-dev"},
			expect: false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			result := IsSubset(tt.a, tt.b)
			require.Equal(t, tt.expect, result,
				"IsSubset(%v, %v) should be %v", tt.a, tt.b, tt.expect)
		})
	}
}

func TestIsSubsetWithInts(t *testing.T) {
	tests := []struct {
		name   string
		a      []int
		b      []int
		expect bool
	}{
		{
			name:   "int subset",
			a:      []int{1, 3},
			b:      []int{1, 2, 3, 4},
			expect: true,
		},
		{
			name:   "int not subset",
			a:      []int{1, 5},
			b:      []int{1, 2, 3, 4},
			expect: false,
		},
		{
			name:   "empty int subset",
			a:      []int{},
			b:      []int{1, 2, 3},
			expect: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			result := IsSubset(tt.a, tt.b)
			require.Equal(t, tt.expect, result,
				"IsSubset(%v, %v) should be %v", tt.a, tt.b, tt.expect)
		})
	}
}



================================================
FILE: internal/tui/keys.go
================================================
package tui

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	Quit     key.Binding
	Help     key.Binding
	Commands key.Binding
	Suspend  key.Binding
	Sessions key.Binding

	pageBindings []key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Quit: key.NewBinding(
			key.WithKeys("ctrl+c"),
			key.WithHelp("ctrl+c", "quit"),
		),
		Help: key.NewBinding(
			key.WithKeys("ctrl+g"),
			key.WithHelp("ctrl+g", "more"),
		),
		Commands: key.NewBinding(
			key.WithKeys("ctrl+p"),
			key.WithHelp("ctrl+p", "commands"),
		),
		Suspend: key.NewBinding(
			key.WithKeys("ctrl+z"),
			key.WithHelp("ctrl+z", "suspend"),
		),
		Sessions: key.NewBinding(
			key.WithKeys("ctrl+s"),
			key.WithHelp("ctrl+s", "sessions"),
		),
	}
}



================================================
FILE: internal/tui/tui.go
================================================
package tui

import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/app"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/agent"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/pubsub"
	cmpChat "github.com/charmbracelet/crush/internal/tui/components/chat"
	"github.com/charmbracelet/crush/internal/tui/components/chat/splash"
	"github.com/charmbracelet/crush/internal/tui/components/completions"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/components/core/status"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/commands"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/compact"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/filepicker"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/models"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/permissions"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/quit"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/sessions"
	"github.com/charmbracelet/crush/internal/tui/page"
	"github.com/charmbracelet/crush/internal/tui/page/chat"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

var lastMouseEvent time.Time

func MouseEventFilter(m tea.Model, msg tea.Msg) tea.Msg {
	switch msg.(type) {
	case tea.MouseWheelMsg, tea.MouseMotionMsg:
		now := time.Now()
		// trackpad is sending too many requests
		if now.Sub(lastMouseEvent) < 15*time.Millisecond {
			return nil
		}
		lastMouseEvent = now
	}
	return msg
}

// appModel represents the main application model that manages pages, dialogs, and UI state.
type appModel struct {
	wWidth, wHeight int // Window dimensions
	width, height   int
	keyMap          KeyMap

	currentPage  page.PageID
	previousPage page.PageID
	pages        map[page.PageID]util.Model
	loadedPages  map[page.PageID]bool

	// Status
	status          status.StatusCmp
	showingFullHelp bool

	app *app.App

	dialog       dialogs.DialogCmp
	completions  completions.Completions
	isConfigured bool

	// Chat Page Specific
	selectedSessionID string // The ID of the currently selected session
}

// Init initializes the application model and returns initial commands.
func (a appModel) Init() tea.Cmd {
	var cmds []tea.Cmd
	cmd := a.pages[a.currentPage].Init()
	cmds = append(cmds, cmd)
	a.loadedPages[a.currentPage] = true

	cmd = a.status.Init()
	cmds = append(cmds, cmd)

	cmds = append(cmds, tea.EnableMouseAllMotion)

	return tea.Batch(cmds...)
}

// Update handles incoming messages and updates the application state.
func (a *appModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	var cmds []tea.Cmd
	var cmd tea.Cmd
	a.isConfigured = config.HasInitialDataConfig()

	switch msg := msg.(type) {
	case tea.KeyboardEnhancementsMsg:
		for id, page := range a.pages {
			m, pageCmd := page.Update(msg)
			a.pages[id] = m.(util.Model)
			if pageCmd != nil {
				cmds = append(cmds, pageCmd)
			}
		}
		return a, tea.Batch(cmds...)
	case tea.WindowSizeMsg:
		a.wWidth, a.wHeight = msg.Width, msg.Height
		a.completions.Update(msg)
		return a, a.handleWindowResize(msg.Width, msg.Height)

	// Completions messages
	case completions.OpenCompletionsMsg, completions.FilterCompletionsMsg,
		completions.CloseCompletionsMsg, completions.RepositionCompletionsMsg:
		u, completionCmd := a.completions.Update(msg)
		a.completions = u.(completions.Completions)
		return a, completionCmd

	// Dialog messages
	case dialogs.OpenDialogMsg, dialogs.CloseDialogMsg:
		u, completionCmd := a.completions.Update(completions.CloseCompletionsMsg{})
		a.completions = u.(completions.Completions)
		u, dialogCmd := a.dialog.Update(msg)
		a.dialog = u.(dialogs.DialogCmp)
		return a, tea.Batch(completionCmd, dialogCmd)
	case commands.ShowArgumentsDialogMsg:
		return a, util.CmdHandler(
			dialogs.OpenDialogMsg{
				Model: commands.NewCommandArgumentsDialog(
					msg.CommandID,
					msg.Content,
					msg.ArgNames,
				),
			},
		)
	// Page change messages
	case page.PageChangeMsg:
		return a, a.moveToPage(msg.ID)

	// Status Messages
	case util.InfoMsg, util.ClearStatusMsg:
		s, statusCmd := a.status.Update(msg)
		a.status = s.(status.StatusCmp)
		cmds = append(cmds, statusCmd)
		return a, tea.Batch(cmds...)

	// Session
	case cmpChat.SessionSelectedMsg:
		a.selectedSessionID = msg.ID
	case cmpChat.SessionClearedMsg:
		a.selectedSessionID = ""
	// Commands
	case commands.SwitchSessionsMsg:
		return a, func() tea.Msg {
			allSessions, _ := a.app.Sessions.List(context.Background())
			return dialogs.OpenDialogMsg{
				Model: sessions.NewSessionDialogCmp(allSessions, a.selectedSessionID),
			}
		}

	case commands.SwitchModelMsg:
		return a, util.CmdHandler(
			dialogs.OpenDialogMsg{
				Model: models.NewModelDialogCmp(),
			},
		)
	// Compact
	case commands.CompactMsg:
		return a, util.CmdHandler(dialogs.OpenDialogMsg{
			Model: compact.NewCompactDialogCmp(a.app.CoderAgent, msg.SessionID, true),
		})
	case commands.QuitMsg:
		return a, util.CmdHandler(dialogs.OpenDialogMsg{
			Model: quit.NewQuitDialog(),
		})
	case commands.ToggleYoloModeMsg:
		a.app.Permissions.SetSkipRequests(!a.app.Permissions.SkipRequests())
	case commands.ToggleHelpMsg:
		a.status.ToggleFullHelp()
		a.showingFullHelp = !a.showingFullHelp
		return a, a.handleWindowResize(a.wWidth, a.wHeight)
	// Model Switch
	case models.ModelSelectedMsg:
		if a.app.CoderAgent.IsBusy() {
			return a, util.ReportWarn("Agent is busy, please wait...")
		}
		config.Get().UpdatePreferredModel(msg.ModelType, msg.Model)

		// Update the agent with the new model/provider configuration
		if err := a.app.UpdateAgentModel(); err != nil {
			return a, util.ReportError(fmt.Errorf("model changed to %s but failed to update agent: %v", msg.Model.Model, err))
		}

		modelTypeName := "large"
		if msg.ModelType == config.SelectedModelTypeSmall {
			modelTypeName = "small"
		}
		return a, util.ReportInfo(fmt.Sprintf("%s model changed to %s", modelTypeName, msg.Model.Model))

	// File Picker
	case commands.OpenFilePickerMsg:
		if a.dialog.ActiveDialogID() == filepicker.FilePickerID {
			// If the commands dialog is already open, close it
			return a, util.CmdHandler(dialogs.CloseDialogMsg{})
		}
		return a, util.CmdHandler(dialogs.OpenDialogMsg{
			Model: filepicker.NewFilePickerCmp(a.app.Config().WorkingDir()),
		})
	// Permissions
	case pubsub.Event[permission.PermissionNotification]:
		item, ok := a.pages[a.currentPage]
		if !ok {
			return a, nil
		}

		// forward to page
		updated, itemCmd := item.Update(msg)
		a.pages[a.currentPage] = updated.(util.Model)
		return a, itemCmd
	case pubsub.Event[permission.PermissionRequest]:
		return a, util.CmdHandler(dialogs.OpenDialogMsg{
			Model: permissions.NewPermissionDialogCmp(msg.Payload, &permissions.Options{
				DiffMode: config.Get().Options.TUI.DiffMode,
			}),
		})
	case permissions.PermissionResponseMsg:
		switch msg.Action {
		case permissions.PermissionAllow:
			a.app.Permissions.Grant(msg.Permission)
		case permissions.PermissionAllowForSession:
			a.app.Permissions.GrantPersistent(msg.Permission)
		case permissions.PermissionDeny:
			a.app.Permissions.Deny(msg.Permission)
		}
		return a, nil
	// Agent Events
	case pubsub.Event[agent.AgentEvent]:
		payload := msg.Payload

		// Forward agent events to dialogs
		if a.dialog.HasDialogs() && a.dialog.ActiveDialogID() == compact.CompactDialogID {
			u, dialogCmd := a.dialog.Update(payload)
			a.dialog = u.(dialogs.DialogCmp)
			cmds = append(cmds, dialogCmd)
		}

		// Handle auto-compact logic
		if payload.Done && payload.Type == agent.AgentEventTypeResponse && a.selectedSessionID != "" {
			// Get current session to check token usage
			session, err := a.app.Sessions.Get(context.Background(), a.selectedSessionID)
			if err == nil {
				model := a.app.CoderAgent.Model()
				contextWindow := model.ContextWindow
				tokens := session.CompletionTokens + session.PromptTokens
				if (tokens >= int64(float64(contextWindow)*0.95)) && !config.Get().Options.DisableAutoSummarize { // Show compact confirmation dialog
					cmds = append(cmds, util.CmdHandler(dialogs.OpenDialogMsg{
						Model: compact.NewCompactDialogCmp(a.app.CoderAgent, a.selectedSessionID, false),
					}))
				}
			}
		}

		return a, tea.Batch(cmds...)
	case splash.OnboardingCompleteMsg:
		item, ok := a.pages[a.currentPage]
		if !ok {
			return a, nil
		}

		a.isConfigured = config.HasInitialDataConfig()
		updated, pageCmd := item.Update(msg)
		a.pages[a.currentPage] = updated.(util.Model)
		cmds = append(cmds, pageCmd)
		return a, tea.Batch(cmds...)

	case tea.KeyPressMsg:
		return a, a.handleKeyPressMsg(msg)

	case tea.MouseWheelMsg:
		if a.dialog.HasDialogs() {
			u, dialogCmd := a.dialog.Update(msg)
			a.dialog = u.(dialogs.DialogCmp)
			cmds = append(cmds, dialogCmd)
		} else {
			item, ok := a.pages[a.currentPage]
			if !ok {
				return a, nil
			}

			updated, pageCmd := item.Update(msg)
			a.pages[a.currentPage] = updated.(util.Model)
			cmds = append(cmds, pageCmd)
		}
		return a, tea.Batch(cmds...)
	case tea.PasteMsg:
		if a.dialog.HasDialogs() {
			u, dialogCmd := a.dialog.Update(msg)
			a.dialog = u.(dialogs.DialogCmp)
			cmds = append(cmds, dialogCmd)
		} else {
			item, ok := a.pages[a.currentPage]
			if !ok {
				return a, nil
			}

			updated, pageCmd := item.Update(msg)
			a.pages[a.currentPage] = updated.(util.Model)
			cmds = append(cmds, pageCmd)
		}
		return a, tea.Batch(cmds...)
	}
	s, _ := a.status.Update(msg)
	a.status = s.(status.StatusCmp)

	item, ok := a.pages[a.currentPage]
	if !ok {
		return a, nil
	}
	updated, cmd := item.Update(msg)
	a.pages[a.currentPage] = updated.(util.Model)

	if a.dialog.HasDialogs() {
		u, dialogCmd := a.dialog.Update(msg)
		a.dialog = u.(dialogs.DialogCmp)
		cmds = append(cmds, dialogCmd)
	}
	cmds = append(cmds, cmd)
	return a, tea.Batch(cmds...)
}

// handleWindowResize processes window resize events and updates all components.
func (a *appModel) handleWindowResize(width, height int) tea.Cmd {
	var cmds []tea.Cmd
	if a.showingFullHelp {
		height -= 5
	} else {
		height -= 2
	}
	a.width, a.height = width, height
	// Update status bar
	s, cmd := a.status.Update(tea.WindowSizeMsg{Width: width, Height: height})
	a.status = s.(status.StatusCmp)
	cmds = append(cmds, cmd)

	// Update the current page
	for p, page := range a.pages {
		updated, pageCmd := page.Update(tea.WindowSizeMsg{Width: width, Height: height})
		a.pages[p] = updated.(util.Model)
		cmds = append(cmds, pageCmd)
	}

	// Update the dialogs
	dialog, cmd := a.dialog.Update(tea.WindowSizeMsg{Width: width, Height: height})
	a.dialog = dialog.(dialogs.DialogCmp)
	cmds = append(cmds, cmd)

	return tea.Batch(cmds...)
}

// handleKeyPressMsg processes keyboard input and routes to appropriate handlers.
func (a *appModel) handleKeyPressMsg(msg tea.KeyPressMsg) tea.Cmd {
	if a.completions.Open() {
		// completions
		keyMap := a.completions.KeyMap()
		switch {
		case key.Matches(msg, keyMap.Up), key.Matches(msg, keyMap.Down),
			key.Matches(msg, keyMap.Select), key.Matches(msg, keyMap.Cancel),
			key.Matches(msg, keyMap.UpInsert), key.Matches(msg, keyMap.DownInsert):
			u, cmd := a.completions.Update(msg)
			a.completions = u.(completions.Completions)
			return cmd
		}
	}
	if a.dialog.HasDialogs() {
		u, dialogCmd := a.dialog.Update(msg)
		a.dialog = u.(dialogs.DialogCmp)
		return dialogCmd
	}
	switch {
	// help
	case key.Matches(msg, a.keyMap.Help):
		a.status.ToggleFullHelp()
		a.showingFullHelp = !a.showingFullHelp
		return a.handleWindowResize(a.wWidth, a.wHeight)
	// dialogs
	case key.Matches(msg, a.keyMap.Quit):
		if a.dialog.ActiveDialogID() == quit.QuitDialogID {
			return tea.Quit
		}
		return util.CmdHandler(dialogs.OpenDialogMsg{
			Model: quit.NewQuitDialog(),
		})

	case key.Matches(msg, a.keyMap.Commands):
		// if the app is not configured show no commands
		if !a.isConfigured {
			return nil
		}
		if a.dialog.ActiveDialogID() == commands.CommandsDialogID {
			return util.CmdHandler(dialogs.CloseDialogMsg{})
		}
		if a.dialog.HasDialogs() {
			return nil
		}
		return util.CmdHandler(dialogs.OpenDialogMsg{
			Model: commands.NewCommandDialog(a.selectedSessionID),
		})
	case key.Matches(msg, a.keyMap.Sessions):
		// if the app is not configured show no sessions
		if !a.isConfigured {
			return nil
		}
		if a.dialog.ActiveDialogID() == sessions.SessionsDialogID {
			return util.CmdHandler(dialogs.CloseDialogMsg{})
		}
		if a.dialog.HasDialogs() && a.dialog.ActiveDialogID() != commands.CommandsDialogID {
			return nil
		}
		var cmds []tea.Cmd
		if a.dialog.ActiveDialogID() == commands.CommandsDialogID {
			// If the commands dialog is open, close it first
			cmds = append(cmds, util.CmdHandler(dialogs.CloseDialogMsg{}))
		}
		cmds = append(cmds,
			func() tea.Msg {
				allSessions, _ := a.app.Sessions.List(context.Background())
				return dialogs.OpenDialogMsg{
					Model: sessions.NewSessionDialogCmp(allSessions, a.selectedSessionID),
				}
			},
		)
		return tea.Sequence(cmds...)
	case key.Matches(msg, a.keyMap.Suspend):
		if a.app.CoderAgent != nil && a.app.CoderAgent.IsBusy() {
			return util.ReportWarn("Agent is busy, please wait...")
		}
		return tea.Suspend
	default:
		item, ok := a.pages[a.currentPage]
		if !ok {
			return nil
		}

		updated, cmd := item.Update(msg)
		a.pages[a.currentPage] = updated.(util.Model)
		return cmd
	}
}

// moveToPage handles navigation between different pages in the application.
func (a *appModel) moveToPage(pageID page.PageID) tea.Cmd {
	if a.app.CoderAgent.IsBusy() {
		// TODO: maybe remove this :  For now we don't move to any page if the agent is busy
		return util.ReportWarn("Agent is busy, please wait...")
	}

	var cmds []tea.Cmd
	if _, ok := a.loadedPages[pageID]; !ok {
		cmd := a.pages[pageID].Init()
		cmds = append(cmds, cmd)
		a.loadedPages[pageID] = true
	}
	a.previousPage = a.currentPage
	a.currentPage = pageID
	if sizable, ok := a.pages[a.currentPage].(layout.Sizeable); ok {
		cmd := sizable.SetSize(a.width, a.height)
		cmds = append(cmds, cmd)
	}

	return tea.Batch(cmds...)
}

// View renders the complete application interface including pages, dialogs, and overlays.
func (a *appModel) View() tea.View {
	var view tea.View
	t := styles.CurrentTheme()
	view.BackgroundColor = t.BgBase
	if a.wWidth < 25 || a.wHeight < 15 {
		view.Layer = lipgloss.NewCanvas(
			lipgloss.NewLayer(
				t.S().Base.Width(a.wWidth).Height(a.wHeight).
					Align(lipgloss.Center, lipgloss.Center).
					Render(
						t.S().Base.
							Padding(1, 4).
							Foreground(t.White).
							BorderStyle(lipgloss.RoundedBorder()).
							BorderForeground(t.Primary).
							Render("Window too small!"),
					),
			),
		)
		return view
	}

	page := a.pages[a.currentPage]
	if withHelp, ok := page.(core.KeyMapHelp); ok {
		a.status.SetKeyMap(withHelp.Help())
	}
	pageView := page.View()
	components := []string{
		pageView,
	}
	components = append(components, a.status.View())

	appView := lipgloss.JoinVertical(lipgloss.Top, components...)
	layers := []*lipgloss.Layer{
		lipgloss.NewLayer(appView),
	}
	if a.dialog.HasDialogs() {
		layers = append(
			layers,
			a.dialog.GetLayers()...,
		)
	}

	var cursor *tea.Cursor
	if v, ok := page.(util.Cursor); ok {
		cursor = v.Cursor()
		// Hide the cursor if it's positioned outside the textarea
		statusHeight := a.height - strings.Count(pageView, "\n") + 1
		if cursor != nil && cursor.Y+statusHeight+chat.EditorHeight-2 <= a.height { // 2 for the top and bottom app padding
			cursor = nil
		}
	}
	activeView := a.dialog.ActiveModel()
	if activeView != nil {
		cursor = nil // Reset cursor if a dialog is active unless it implements util.Cursor
		if v, ok := activeView.(util.Cursor); ok {
			cursor = v.Cursor()
		}
	}

	if a.completions.Open() && cursor != nil {
		cmp := a.completions.View()
		x, y := a.completions.Position()
		layers = append(
			layers,
			lipgloss.NewLayer(cmp).X(x).Y(y),
		)
	}

	canvas := lipgloss.NewCanvas(
		layers...,
	)

	view.Layer = canvas
	view.Cursor = cursor
	return view
}

// New creates and initializes a new TUI application model.
func New(app *app.App) tea.Model {
	chatPage := chat.New(app)
	keyMap := DefaultKeyMap()
	keyMap.pageBindings = chatPage.Bindings()

	model := &appModel{
		currentPage: chat.ChatPageID,
		app:         app,
		status:      status.NewStatusCmp(),
		loadedPages: make(map[page.PageID]bool),
		keyMap:      keyMap,

		pages: map[page.PageID]util.Model{
			chat.ChatPageID: chatPage,
		},

		dialog:      dialogs.NewDialogCmp(),
		completions: completions.New(),
	}

	return model
}



================================================
FILE: internal/tui/components/anim/anim.go
================================================
// Package anim provides an animated spinner.
package anim

import (
	"fmt"
	"image/color"
	"math/rand/v2"
	"strings"
	"sync/atomic"
	"time"

	"github.com/zeebo/xxh3"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/lucasb-eyer/go-colorful"

	"github.com/charmbracelet/crush/internal/csync"
)

const (
	fps           = 20
	initialChar   = '.'
	labelGap      = " "
	labelGapWidth = 1

	// Periods of ellipsis animation speed in steps.
	//
	// If the FPS is 20 (50 milliseconds) this means that the ellipsis will
	// change every 8 frames (400 milliseconds).
	ellipsisAnimSpeed = 8

	// The maximum amount of time that can pass before a character appears.
	// This is used to create a staggered entrance effect.
	maxBirthOffset = time.Second

	// Number of frames to prerender for the animation. After this number
	// of frames, the animation will loop. This only applies when color
	// cycling is disabled.
	prerenderedFrames = 10

	// Default number of cycling chars.
	defaultNumCyclingChars = 10
)

// Default colors for gradient.
var (
	defaultGradColorA = color.RGBA{R: 0xff, G: 0, B: 0, A: 0xff}
	defaultGradColorB = color.RGBA{R: 0, G: 0, B: 0xff, A: 0xff}
	defaultLabelColor = color.RGBA{R: 0xcc, G: 0xcc, B: 0xcc, A: 0xff}
)

var (
	availableRunes = []rune("0123456789abcdefABCDEF~!@#$£€%^&*()+=_")
	ellipsisFrames = []string{".", "..", "...", ""}
)

// Internal ID management. Used during animating to ensure that frame messages
// are received only by spinner components that sent them.
var lastID int64

func nextID() int {
	return int(atomic.AddInt64(&lastID, 1))
}

// Cache for expensive animation calculations
type animCache struct {
	initialFrames  [][]string
	cyclingFrames  [][]string
	width          int
	labelWidth     int
	label          []string
	ellipsisFrames []string
}

var animCacheMap = csync.NewMap[string, *animCache]()

// settingsHash creates a hash key for the settings to use for caching
func settingsHash(opts Settings) string {
	h := xxh3.New()
	fmt.Fprintf(h, "%d-%s-%v-%v-%v-%t",
		opts.Size, opts.Label, opts.LabelColor, opts.GradColorA, opts.GradColorB, opts.CycleColors)
	return fmt.Sprintf("%x", h.Sum(nil))
}

// StepMsg is a message type used to trigger the next step in the animation.
type StepMsg struct{ id int }

// Settings defines settings for the animation.
type Settings struct {
	Size        int
	Label       string
	LabelColor  color.Color
	GradColorA  color.Color
	GradColorB  color.Color
	CycleColors bool
}

// Default settings.
const ()

// Anim is a Bubble for an animated spinner.
type Anim struct {
	width            int
	cyclingCharWidth int
	label            *csync.Slice[string]
	labelWidth       int
	labelColor       color.Color
	startTime        time.Time
	birthOffsets     []time.Duration
	initialFrames    [][]string // frames for the initial characters
	initialized      atomic.Bool
	cyclingFrames    [][]string           // frames for the cycling characters
	step             atomic.Int64         // current main frame step
	ellipsisStep     atomic.Int64         // current ellipsis frame step
	ellipsisFrames   *csync.Slice[string] // ellipsis animation frames
	id               int
}

// New creates a new Anim instance with the specified width and label.
func New(opts Settings) *Anim {
	a := &Anim{}
	// Validate settings.
	if opts.Size < 1 {
		opts.Size = defaultNumCyclingChars
	}
	if colorIsUnset(opts.GradColorA) {
		opts.GradColorA = defaultGradColorA
	}
	if colorIsUnset(opts.GradColorB) {
		opts.GradColorB = defaultGradColorB
	}
	if colorIsUnset(opts.LabelColor) {
		opts.LabelColor = defaultLabelColor
	}

	a.id = nextID()
	a.startTime = time.Now()
	a.cyclingCharWidth = opts.Size
	a.labelColor = opts.LabelColor

	// Check cache first
	cacheKey := settingsHash(opts)
	cached, exists := animCacheMap.Get(cacheKey)

	if exists {
		// Use cached values
		a.width = cached.width
		a.labelWidth = cached.labelWidth
		a.label = csync.NewSliceFrom(cached.label)
		a.ellipsisFrames = csync.NewSliceFrom(cached.ellipsisFrames)
		a.initialFrames = cached.initialFrames
		a.cyclingFrames = cached.cyclingFrames
	} else {
		// Generate new values and cache them
		a.labelWidth = lipgloss.Width(opts.Label)

		// Total width of anim, in cells.
		a.width = opts.Size
		if opts.Label != "" {
			a.width += labelGapWidth + lipgloss.Width(opts.Label)
		}

		// Render the label
		a.renderLabel(opts.Label)

		// Pre-generate gradient.
		var ramp []color.Color
		numFrames := prerenderedFrames
		if opts.CycleColors {
			ramp = makeGradientRamp(a.width*3, opts.GradColorA, opts.GradColorB, opts.GradColorA, opts.GradColorB)
			numFrames = a.width * 2
		} else {
			ramp = makeGradientRamp(a.width, opts.GradColorA, opts.GradColorB)
		}

		// Pre-render initial characters.
		a.initialFrames = make([][]string, numFrames)
		offset := 0
		for i := range a.initialFrames {
			a.initialFrames[i] = make([]string, a.width+labelGapWidth+a.labelWidth)
			for j := range a.initialFrames[i] {
				if j+offset >= len(ramp) {
					continue // skip if we run out of colors
				}

				var c color.Color
				if j <= a.cyclingCharWidth {
					c = ramp[j+offset]
				} else {
					c = opts.LabelColor
				}

				// Also prerender the initial character with Lip Gloss to avoid
				// processing in the render loop.
				a.initialFrames[i][j] = lipgloss.NewStyle().
					Foreground(c).
					Render(string(initialChar))
			}
			if opts.CycleColors {
				offset++
			}
		}

		// Prerender scrambled rune frames for the animation.
		a.cyclingFrames = make([][]string, numFrames)
		offset = 0
		for i := range a.cyclingFrames {
			a.cyclingFrames[i] = make([]string, a.width)
			for j := range a.cyclingFrames[i] {
				if j+offset >= len(ramp) {
					continue // skip if we run out of colors
				}

				// Also prerender the color with Lip Gloss here to avoid processing
				// in the render loop.
				r := availableRunes[rand.IntN(len(availableRunes))]
				a.cyclingFrames[i][j] = lipgloss.NewStyle().
					Foreground(ramp[j+offset]).
					Render(string(r))
			}
			if opts.CycleColors {
				offset++
			}
		}

		// Cache the results
		labelSlice := make([]string, a.label.Len())
		for i, v := range a.label.Seq2() {
			labelSlice[i] = v
		}
		ellipsisSlice := make([]string, a.ellipsisFrames.Len())
		for i, v := range a.ellipsisFrames.Seq2() {
			ellipsisSlice[i] = v
		}
		cached = &animCache{
			initialFrames:  a.initialFrames,
			cyclingFrames:  a.cyclingFrames,
			width:          a.width,
			labelWidth:     a.labelWidth,
			label:          labelSlice,
			ellipsisFrames: ellipsisSlice,
		}
		animCacheMap.Set(cacheKey, cached)
	}

	// Random assign a birth to each character for a stagged entrance effect.
	a.birthOffsets = make([]time.Duration, a.width)
	for i := range a.birthOffsets {
		a.birthOffsets[i] = time.Duration(rand.N(int64(maxBirthOffset))) * time.Nanosecond
	}

	return a
}

// SetLabel updates the label text and re-renders it.
func (a *Anim) SetLabel(newLabel string) {
	a.labelWidth = lipgloss.Width(newLabel)

	// Update total width
	a.width = a.cyclingCharWidth
	if newLabel != "" {
		a.width += labelGapWidth + a.labelWidth
	}

	// Re-render the label
	a.renderLabel(newLabel)
}

// renderLabel renders the label with the current label color.
func (a *Anim) renderLabel(label string) {
	if a.labelWidth > 0 {
		// Pre-render the label.
		labelRunes := []rune(label)
		a.label = csync.NewSlice[string]()
		for i := range labelRunes {
			rendered := lipgloss.NewStyle().
				Foreground(a.labelColor).
				Render(string(labelRunes[i]))
			a.label.Append(rendered)
		}

		// Pre-render the ellipsis frames which come after the label.
		a.ellipsisFrames = csync.NewSlice[string]()
		for _, frame := range ellipsisFrames {
			rendered := lipgloss.NewStyle().
				Foreground(a.labelColor).
				Render(frame)
			a.ellipsisFrames.Append(rendered)
		}
	} else {
		a.label = csync.NewSlice[string]()
		a.ellipsisFrames = csync.NewSlice[string]()
	}
}

// Width returns the total width of the animation.
func (a *Anim) Width() (w int) {
	w = a.width
	if a.labelWidth > 0 {
		w += labelGapWidth + a.labelWidth

		var widestEllipsisFrame int
		for _, f := range ellipsisFrames {
			fw := lipgloss.Width(f)
			if fw > widestEllipsisFrame {
				widestEllipsisFrame = fw
			}
		}
		w += widestEllipsisFrame
	}
	return w
}

// Init starts the animation.
func (a *Anim) Init() tea.Cmd {
	return a.Step()
}

// Update processes animation steps (or not).
func (a *Anim) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case StepMsg:
		if msg.id != a.id {
			// Reject messages that are not for this instance.
			return a, nil
		}

		step := a.step.Add(1)
		if int(step) >= len(a.cyclingFrames) {
			a.step.Store(0)
		}

		if a.initialized.Load() && a.labelWidth > 0 {
			// Manage the ellipsis animation.
			ellipsisStep := a.ellipsisStep.Add(1)
			if int(ellipsisStep) >= ellipsisAnimSpeed*len(ellipsisFrames) {
				a.ellipsisStep.Store(0)
			}
		} else if !a.initialized.Load() && time.Since(a.startTime) >= maxBirthOffset {
			a.initialized.Store(true)
		}
		return a, a.Step()
	default:
		return a, nil
	}
}

// View renders the current state of the animation.
func (a *Anim) View() string {
	var b strings.Builder
	step := int(a.step.Load())
	for i := range a.width {
		switch {
		case !a.initialized.Load() && i < len(a.birthOffsets) && time.Since(a.startTime) < a.birthOffsets[i]:
			// Birth offset not reached: render initial character.
			b.WriteString(a.initialFrames[step][i])
		case i < a.cyclingCharWidth:
			// Render a cycling character.
			b.WriteString(a.cyclingFrames[step][i])
		case i == a.cyclingCharWidth:
			// Render label gap.
			b.WriteString(labelGap)
		case i > a.cyclingCharWidth:
			// Label.
			if labelChar, ok := a.label.Get(i - a.cyclingCharWidth - labelGapWidth); ok {
				b.WriteString(labelChar)
			}
		}
	}
	// Render animated ellipsis at the end of the label if all characters
	// have been initialized.
	if a.initialized.Load() && a.labelWidth > 0 {
		ellipsisStep := int(a.ellipsisStep.Load())
		if ellipsisFrame, ok := a.ellipsisFrames.Get(ellipsisStep / ellipsisAnimSpeed); ok {
			b.WriteString(ellipsisFrame)
		}
	}

	return b.String()
}

// Step is a command that triggers the next step in the animation.
func (a *Anim) Step() tea.Cmd {
	return tea.Tick(time.Second/time.Duration(fps), func(t time.Time) tea.Msg {
		return StepMsg{id: a.id}
	})
}

// makeGradientRamp() returns a slice of colors blended between the given keys.
// Blending is done as Hcl to stay in gamut.
func makeGradientRamp(size int, stops ...color.Color) []color.Color {
	if len(stops) < 2 {
		return nil
	}

	points := make([]colorful.Color, len(stops))
	for i, k := range stops {
		points[i], _ = colorful.MakeColor(k)
	}

	numSegments := len(stops) - 1
	if numSegments == 0 {
		return nil
	}
	blended := make([]color.Color, 0, size)

	// Calculate how many colors each segment should have.
	segmentSizes := make([]int, numSegments)
	baseSize := size / numSegments
	remainder := size % numSegments

	// Distribute the remainder across segments.
	for i := range numSegments {
		segmentSizes[i] = baseSize
		if i < remainder {
			segmentSizes[i]++
		}
	}

	// Generate colors for each segment.
	for i := range numSegments {
		c1 := points[i]
		c2 := points[i+1]
		segmentSize := segmentSizes[i]

		for j := range segmentSize {
			if segmentSize == 0 {
				continue
			}
			t := float64(j) / float64(segmentSize)
			c := c1.BlendHcl(c2, t)
			blended = append(blended, c)
		}
	}

	return blended
}

func colorIsUnset(c color.Color) bool {
	if c == nil {
		return true
	}
	_, _, _, a := c.RGBA()
	return a == 0
}



================================================
FILE: internal/tui/components/anim/example/main.go
================================================
package main

import (
	"fmt"
	"image/color"
	"os"

	tea "github.com/charmbracelet/bubbletea/v2"
	anim "github.com/charmbracelet/crush/internal/tui/components/anim"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
)

type model struct {
	anim     tea.Model
	bgColor  color.Color
	quitting bool
	w, h     int
}

func (m model) Init() tea.Cmd {
	return m.anim.Init()
}

func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		m.w, m.h = msg.Width, msg.Height
		return m, nil
	case tea.KeyMsg:
		switch msg.String() {
		case "q", "ctrl+c":
			m.quitting = true
			return m, tea.Quit
		default:
			return m, nil
		}
	case anim.StepMsg:
		var cmd tea.Cmd
		m.anim, cmd = m.anim.Update(msg)
		return m, cmd
	default:
		return m, nil
	}
}

func (m model) View() tea.View {
	if m.w == 0 || m.h == 0 {
		return tea.NewView("")
	}

	v := tea.NewView("")
	v.BackgroundColor = m.bgColor

	if m.quitting {
		return v
	}

	if a, ok := m.anim.(*anim.Anim); ok {
		l := lipgloss.NewLayer(a.View()).
			Width(a.Width()).
			X(m.w/2 - a.Width()/2).
			Y(m.h / 2)

		v = tea.NewView(lipgloss.NewCanvas(l))
		v.BackgroundColor = m.bgColor
		return v
	}
	return v
}

func main() {
	t := styles.CurrentTheme()
	p := tea.NewProgram(model{
		bgColor: t.BgBase,
		anim: anim.New(anim.Settings{
			Label:       "Hello",
			Size:        50,
			LabelColor:  t.FgBase,
			GradColorA:  t.Primary,
			GradColorB:  t.Secondary,
			CycleColors: true,
		}),
	}, tea.WithAltScreen())

	if _, err := p.Run(); err != nil {
		fmt.Fprintf(os.Stderr, "Uh oh: %v\n", err)
		os.Exit(1)
	}
}



================================================
FILE: internal/tui/components/chat/chat.go
================================================
package chat

import (
	"context"
	"strings"
	"time"

	"github.com/atotto/clipboard"
	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/app"
	"github.com/charmbracelet/crush/internal/llm/agent"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/charmbracelet/crush/internal/session"
	"github.com/charmbracelet/crush/internal/tui/components/chat/messages"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
)

type SendMsg struct {
	Text        string
	Attachments []message.Attachment
}

type SessionSelectedMsg = session.Session

type SessionClearedMsg struct{}

type SelectionCopyMsg struct {
	clickCount   int
	endSelection bool
	x, y         int
}

const (
	NotFound = -1
)

// MessageListCmp represents a component that displays a list of chat messages
// with support for real-time updates and session management.
type MessageListCmp interface {
	util.Model
	layout.Sizeable
	layout.Focusable
	layout.Help

	SetSession(session.Session) tea.Cmd
	GoToBottom() tea.Cmd
	GetSelectedText() string
	CopySelectedText(bool) tea.Cmd
}

// messageListCmp implements MessageListCmp, providing a virtualized list
// of chat messages with support for tool calls, real-time updates, and
// session switching.
type messageListCmp struct {
	app              *app.App
	width, height    int
	session          session.Session
	listCmp          list.List[list.Item]
	previousSelected string // Last selected item index for restoring focus

	lastUserMessageTime int64
	defaultListKeyMap   list.KeyMap

	// Click tracking for double/triple click detection
	lastClickTime time.Time
	lastClickX    int
	lastClickY    int
	clickCount    int
	promptQueue   int
}

// New creates a new message list component with custom keybindings
// and reverse ordering (newest messages at bottom).
func New(app *app.App) MessageListCmp {
	defaultListKeyMap := list.DefaultKeyMap()
	listCmp := list.New(
		[]list.Item{},
		list.WithGap(1),
		list.WithDirectionBackward(),
		list.WithFocus(false),
		list.WithKeyMap(defaultListKeyMap),
		list.WithEnableMouse(),
	)
	return &messageListCmp{
		app:               app,
		listCmp:           listCmp,
		previousSelected:  "",
		defaultListKeyMap: defaultListKeyMap,
	}
}

// Init initializes the component.
func (m *messageListCmp) Init() tea.Cmd {
	return m.listCmp.Init()
}

// Update handles incoming messages and updates the component state.
func (m *messageListCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	var cmds []tea.Cmd
	if m.session.ID != "" && m.app.CoderAgent != nil {
		queueSize := m.app.CoderAgent.QueuedPrompts(m.session.ID)
		if queueSize != m.promptQueue {
			m.promptQueue = queueSize
			cmds = append(cmds, m.SetSize(m.width, m.height))
		}
	}
	switch msg := msg.(type) {
	case tea.KeyPressMsg:
		if m.listCmp.IsFocused() && m.listCmp.HasSelection() {
			switch {
			case key.Matches(msg, messages.CopyKey):
				cmds = append(cmds, m.CopySelectedText(true))
				return m, tea.Batch(cmds...)
			case key.Matches(msg, messages.ClearSelectionKey):
				cmds = append(cmds, m.SelectionClear())
				return m, tea.Batch(cmds...)
			}
		}
	case tea.MouseClickMsg:
		x := msg.X - 1 // Adjust for padding
		y := msg.Y - 1 // Adjust for padding
		if x < 0 || y < 0 || x >= m.width-2 || y >= m.height-1 {
			return m, nil // Ignore clicks outside the component
		}
		if msg.Button == tea.MouseLeft {
			cmds = append(cmds, m.handleMouseClick(x, y))
			return m, tea.Batch(cmds...)
		}
		return m, tea.Batch(cmds...)
	case tea.MouseMotionMsg:
		x := msg.X - 1 // Adjust for padding
		y := msg.Y - 1 // Adjust for padding
		if x < 0 || y < 0 || x >= m.width-2 || y >= m.height-1 {
			if y < 0 {
				cmds = append(cmds, m.listCmp.MoveUp(1))
				return m, tea.Batch(cmds...)
			}
			if y >= m.height-1 {
				cmds = append(cmds, m.listCmp.MoveDown(1))
				return m, tea.Batch(cmds...)
			}
			return m, nil // Ignore clicks outside the component
		}
		if msg.Button == tea.MouseLeft {
			m.listCmp.EndSelection(x, y)
		}
		return m, tea.Batch(cmds...)
	case tea.MouseReleaseMsg:
		x := msg.X - 1 // Adjust for padding
		y := msg.Y - 1 // Adjust for padding
		if msg.Button == tea.MouseLeft {
			clickCount := m.clickCount
			if x < 0 || y < 0 || x >= m.width-2 || y >= m.height-1 {
				tick := tea.Tick(doubleClickThreshold, func(time.Time) tea.Msg {
					return SelectionCopyMsg{
						clickCount:   clickCount,
						endSelection: false,
					}
				})

				cmds = append(cmds, tick)
				return m, tea.Batch(cmds...)
			}
			tick := tea.Tick(doubleClickThreshold, func(time.Time) tea.Msg {
				return SelectionCopyMsg{
					clickCount:   clickCount,
					endSelection: true,
					x:            x,
					y:            y,
				}
			})
			cmds = append(cmds, tick)
			return m, tea.Batch(cmds...)
		}
		return m, nil
	case SelectionCopyMsg:
		if msg.clickCount == m.clickCount && time.Since(m.lastClickTime) >= doubleClickThreshold {
			// If the click count matches and within threshold, copy selected text
			if msg.endSelection {
				m.listCmp.EndSelection(msg.x, msg.y)
			}
			m.listCmp.SelectionStop()
			cmds = append(cmds, m.CopySelectedText(true))
			return m, tea.Batch(cmds...)
		}
	case pubsub.Event[permission.PermissionNotification]:
		cmds = append(cmds, m.handlePermissionRequest(msg.Payload))
		return m, tea.Batch(cmds...)
	case SessionSelectedMsg:
		if msg.ID != m.session.ID {
			cmds = append(cmds, m.SetSession(msg))
		}
		return m, tea.Batch(cmds...)
	case SessionClearedMsg:
		m.session = session.Session{}
		cmds = append(cmds, m.listCmp.SetItems([]list.Item{}))
		return m, tea.Batch(cmds...)

	case pubsub.Event[message.Message]:
		cmds = append(cmds, m.handleMessageEvent(msg))
		return m, tea.Batch(cmds...)

	case tea.MouseWheelMsg:
		u, cmd := m.listCmp.Update(msg)
		m.listCmp = u.(list.List[list.Item])
		cmds = append(cmds, cmd)
		return m, tea.Batch(cmds...)
	}

	u, cmd := m.listCmp.Update(msg)
	m.listCmp = u.(list.List[list.Item])
	cmds = append(cmds, cmd)
	return m, tea.Batch(cmds...)
}

// View renders the message list or an initial screen if empty.
func (m *messageListCmp) View() string {
	t := styles.CurrentTheme()
	height := m.height
	if m.promptQueue > 0 {
		height -= 4 // pill height and padding
	}
	view := []string{
		t.S().Base.
			Padding(1, 1, 0, 1).
			Width(m.width).
			Height(height).
			Render(
				m.listCmp.View(),
			),
	}
	if m.app.CoderAgent != nil && m.promptQueue > 0 {
		queuePill := queuePill(m.promptQueue, t)
		view = append(view, t.S().Base.PaddingLeft(4).PaddingTop(1).Render(queuePill))
	}
	return strings.Join(view, "\n")
}

func (m *messageListCmp) handlePermissionRequest(permission permission.PermissionNotification) tea.Cmd {
	items := m.listCmp.Items()
	if toolCallIndex := m.findToolCallByID(items, permission.ToolCallID); toolCallIndex != NotFound {
		toolCall := items[toolCallIndex].(messages.ToolCallCmp)
		toolCall.SetPermissionRequested()
		if permission.Granted {
			toolCall.SetPermissionGranted()
		}
		m.listCmp.UpdateItem(toolCall.ID(), toolCall)
	}
	return nil
}

// handleChildSession handles messages from child sessions (agent tools).
func (m *messageListCmp) handleChildSession(event pubsub.Event[message.Message]) tea.Cmd {
	var cmds []tea.Cmd
	if len(event.Payload.ToolCalls()) == 0 && len(event.Payload.ToolResults()) == 0 {
		return nil
	}
	items := m.listCmp.Items()
	toolCallInx := NotFound
	var toolCall messages.ToolCallCmp
	for i := len(items) - 1; i >= 0; i-- {
		if msg, ok := items[i].(messages.ToolCallCmp); ok {
			if msg.GetToolCall().ID == event.Payload.SessionID {
				toolCallInx = i
				toolCall = msg
			}
		}
	}
	if toolCallInx == NotFound {
		return nil
	}
	nestedToolCalls := toolCall.GetNestedToolCalls()
	for _, tc := range event.Payload.ToolCalls() {
		found := false
		for existingInx, existingTC := range nestedToolCalls {
			if existingTC.GetToolCall().ID == tc.ID {
				nestedToolCalls[existingInx].SetToolCall(tc)
				found = true
				break
			}
		}
		if !found {
			nestedCall := messages.NewToolCallCmp(
				event.Payload.ID,
				tc,
				m.app.Permissions,
				messages.WithToolCallNested(true),
			)
			cmds = append(cmds, nestedCall.Init())
			nestedToolCalls = append(
				nestedToolCalls,
				nestedCall,
			)
		}
	}
	for _, tr := range event.Payload.ToolResults() {
		for nestedInx, nestedTC := range nestedToolCalls {
			if nestedTC.GetToolCall().ID == tr.ToolCallID {
				nestedToolCalls[nestedInx].SetToolResult(tr)
				break
			}
		}
	}

	toolCall.SetNestedToolCalls(nestedToolCalls)
	m.listCmp.UpdateItem(
		toolCall.ID(),
		toolCall,
	)
	return tea.Batch(cmds...)
}

// handleMessageEvent processes different types of message events (created/updated).
func (m *messageListCmp) handleMessageEvent(event pubsub.Event[message.Message]) tea.Cmd {
	switch event.Type {
	case pubsub.CreatedEvent:
		if event.Payload.SessionID != m.session.ID {
			return m.handleChildSession(event)
		}
		if m.messageExists(event.Payload.ID) {
			return nil
		}
		return m.handleNewMessage(event.Payload)
	case pubsub.UpdatedEvent:
		if event.Payload.SessionID != m.session.ID {
			return m.handleChildSession(event)
		}
		switch event.Payload.Role {
		case message.Assistant:
			return m.handleUpdateAssistantMessage(event.Payload)
		case message.Tool:
			return m.handleToolMessage(event.Payload)
		}
	}
	return nil
}

// messageExists checks if a message with the given ID already exists in the list.
func (m *messageListCmp) messageExists(messageID string) bool {
	items := m.listCmp.Items()
	// Search backwards as new messages are more likely to be at the end
	for i := len(items) - 1; i >= 0; i-- {
		if msg, ok := items[i].(messages.MessageCmp); ok && msg.GetMessage().ID == messageID {
			return true
		}
	}
	return false
}

// handleNewMessage routes new messages to appropriate handlers based on role.
func (m *messageListCmp) handleNewMessage(msg message.Message) tea.Cmd {
	switch msg.Role {
	case message.User:
		return m.handleNewUserMessage(msg)
	case message.Assistant:
		return m.handleNewAssistantMessage(msg)
	case message.Tool:
		return m.handleToolMessage(msg)
	}
	return nil
}

// handleNewUserMessage adds a new user message to the list and updates the timestamp.
func (m *messageListCmp) handleNewUserMessage(msg message.Message) tea.Cmd {
	m.lastUserMessageTime = msg.CreatedAt
	return m.listCmp.AppendItem(messages.NewMessageCmp(msg))
}

// handleToolMessage updates existing tool calls with their results.
func (m *messageListCmp) handleToolMessage(msg message.Message) tea.Cmd {
	items := m.listCmp.Items()
	for _, tr := range msg.ToolResults() {
		if toolCallIndex := m.findToolCallByID(items, tr.ToolCallID); toolCallIndex != NotFound {
			toolCall := items[toolCallIndex].(messages.ToolCallCmp)
			toolCall.SetToolResult(tr)
			m.listCmp.UpdateItem(toolCall.ID(), toolCall)
		}
	}
	return nil
}

// findToolCallByID searches for a tool call with the specified ID.
// Returns the index if found, NotFound otherwise.
func (m *messageListCmp) findToolCallByID(items []list.Item, toolCallID string) int {
	// Search backwards as tool calls are more likely to be recent
	for i := len(items) - 1; i >= 0; i-- {
		if toolCall, ok := items[i].(messages.ToolCallCmp); ok && toolCall.GetToolCall().ID == toolCallID {
			return i
		}
	}
	return NotFound
}

// handleUpdateAssistantMessage processes updates to assistant messages,
// managing both message content and associated tool calls.
func (m *messageListCmp) handleUpdateAssistantMessage(msg message.Message) tea.Cmd {
	var cmds []tea.Cmd
	items := m.listCmp.Items()

	// Find existing assistant message and tool calls for this message
	assistantIndex, existingToolCalls := m.findAssistantMessageAndToolCalls(items, msg.ID)

	// Handle assistant message content
	if cmd := m.updateAssistantMessageContent(msg, assistantIndex); cmd != nil {
		cmds = append(cmds, cmd)
	}

	// Handle tool calls
	if cmd := m.updateToolCalls(msg, existingToolCalls); cmd != nil {
		cmds = append(cmds, cmd)
	}

	return tea.Batch(cmds...)
}

// findAssistantMessageAndToolCalls locates the assistant message and its tool calls.
func (m *messageListCmp) findAssistantMessageAndToolCalls(items []list.Item, messageID string) (int, map[int]messages.ToolCallCmp) {
	assistantIndex := NotFound
	toolCalls := make(map[int]messages.ToolCallCmp)

	// Search backwards as messages are more likely to be at the end
	for i := len(items) - 1; i >= 0; i-- {
		item := items[i]
		if asMsg, ok := item.(messages.MessageCmp); ok {
			if asMsg.GetMessage().ID == messageID {
				assistantIndex = i
			}
		} else if tc, ok := item.(messages.ToolCallCmp); ok {
			if tc.ParentMessageID() == messageID {
				toolCalls[i] = tc
			}
		}
	}

	return assistantIndex, toolCalls
}

// updateAssistantMessageContent updates or removes the assistant message based on content.
func (m *messageListCmp) updateAssistantMessageContent(msg message.Message, assistantIndex int) tea.Cmd {
	if assistantIndex == NotFound {
		return nil
	}

	shouldShowMessage := m.shouldShowAssistantMessage(msg)
	hasToolCallsOnly := len(msg.ToolCalls()) > 0 && msg.Content().Text == ""

	var cmd tea.Cmd
	if shouldShowMessage {
		items := m.listCmp.Items()
		uiMsg := items[assistantIndex].(messages.MessageCmp)
		uiMsg.SetMessage(msg)
		m.listCmp.UpdateItem(
			items[assistantIndex].ID(),
			uiMsg,
		)
		if msg.FinishPart() != nil && msg.FinishPart().Reason == message.FinishReasonEndTurn {
			m.listCmp.AppendItem(
				messages.NewAssistantSection(
					msg,
					time.Unix(m.lastUserMessageTime, 0),
				),
			)
		}
	} else if hasToolCallsOnly {
		items := m.listCmp.Items()
		m.listCmp.DeleteItem(items[assistantIndex].ID())
	}

	return cmd
}

// shouldShowAssistantMessage determines if an assistant message should be displayed.
func (m *messageListCmp) shouldShowAssistantMessage(msg message.Message) bool {
	return len(msg.ToolCalls()) == 0 || msg.Content().Text != "" || msg.ReasoningContent().Thinking != "" || msg.IsThinking()
}

// updateToolCalls handles updates to tool calls, updating existing ones and adding new ones.
func (m *messageListCmp) updateToolCalls(msg message.Message, existingToolCalls map[int]messages.ToolCallCmp) tea.Cmd {
	var cmds []tea.Cmd

	for _, tc := range msg.ToolCalls() {
		if cmd := m.updateOrAddToolCall(msg, tc, existingToolCalls); cmd != nil {
			cmds = append(cmds, cmd)
		}
	}

	return tea.Batch(cmds...)
}

// updateOrAddToolCall updates an existing tool call or adds a new one.
func (m *messageListCmp) updateOrAddToolCall(msg message.Message, tc message.ToolCall, existingToolCalls map[int]messages.ToolCallCmp) tea.Cmd {
	// Try to find existing tool call
	for _, existingTC := range existingToolCalls {
		if tc.ID == existingTC.GetToolCall().ID {
			existingTC.SetToolCall(tc)
			if msg.FinishPart() != nil && msg.FinishPart().Reason == message.FinishReasonCanceled {
				existingTC.SetCancelled()
			}
			m.listCmp.UpdateItem(tc.ID, existingTC)
			return nil
		}
	}

	// Add new tool call if not found
	return m.listCmp.AppendItem(messages.NewToolCallCmp(msg.ID, tc, m.app.Permissions))
}

// handleNewAssistantMessage processes new assistant messages and their tool calls.
func (m *messageListCmp) handleNewAssistantMessage(msg message.Message) tea.Cmd {
	var cmds []tea.Cmd

	// Add assistant message if it should be displayed
	if m.shouldShowAssistantMessage(msg) {
		cmd := m.listCmp.AppendItem(
			messages.NewMessageCmp(
				msg,
			),
		)
		cmds = append(cmds, cmd)
	}

	// Add tool calls
	for _, tc := range msg.ToolCalls() {
		cmd := m.listCmp.AppendItem(messages.NewToolCallCmp(msg.ID, tc, m.app.Permissions))
		cmds = append(cmds, cmd)
	}

	return tea.Batch(cmds...)
}

// SetSession loads and displays messages for a new session.
func (m *messageListCmp) SetSession(session session.Session) tea.Cmd {
	if m.session.ID == session.ID {
		return nil
	}

	m.session = session
	sessionMessages, err := m.app.Messages.List(context.Background(), session.ID)
	if err != nil {
		return util.ReportError(err)
	}

	if len(sessionMessages) == 0 {
		return m.listCmp.SetItems([]list.Item{})
	}

	// Initialize with first message timestamp
	m.lastUserMessageTime = sessionMessages[0].CreatedAt

	// Build tool result map for efficient lookup
	toolResultMap := m.buildToolResultMap(sessionMessages)

	// Convert messages to UI components
	uiMessages := m.convertMessagesToUI(sessionMessages, toolResultMap)

	return m.listCmp.SetItems(uiMessages)
}

// buildToolResultMap creates a map of tool call ID to tool result for efficient lookup.
func (m *messageListCmp) buildToolResultMap(messages []message.Message) map[string]message.ToolResult {
	toolResultMap := make(map[string]message.ToolResult)
	for _, msg := range messages {
		for _, tr := range msg.ToolResults() {
			toolResultMap[tr.ToolCallID] = tr
		}
	}
	return toolResultMap
}

// convertMessagesToUI converts database messages to UI components.
func (m *messageListCmp) convertMessagesToUI(sessionMessages []message.Message, toolResultMap map[string]message.ToolResult) []list.Item {
	uiMessages := make([]list.Item, 0)

	for _, msg := range sessionMessages {
		switch msg.Role {
		case message.User:
			m.lastUserMessageTime = msg.CreatedAt
			uiMessages = append(uiMessages, messages.NewMessageCmp(msg))
		case message.Assistant:
			uiMessages = append(uiMessages, m.convertAssistantMessage(msg, toolResultMap)...)
			if msg.FinishPart() != nil && msg.FinishPart().Reason == message.FinishReasonEndTurn {
				uiMessages = append(uiMessages, messages.NewAssistantSection(msg, time.Unix(m.lastUserMessageTime, 0)))
			}
		}
	}

	return uiMessages
}

// convertAssistantMessage converts an assistant message and its tool calls to UI components.
func (m *messageListCmp) convertAssistantMessage(msg message.Message, toolResultMap map[string]message.ToolResult) []list.Item {
	var uiMessages []list.Item

	// Add assistant message if it should be displayed
	if m.shouldShowAssistantMessage(msg) {
		uiMessages = append(
			uiMessages,
			messages.NewMessageCmp(
				msg,
			),
		)
	}

	// Add tool calls with their results and status
	for _, tc := range msg.ToolCalls() {
		options := m.buildToolCallOptions(tc, msg, toolResultMap)
		uiMessages = append(uiMessages, messages.NewToolCallCmp(msg.ID, tc, m.app.Permissions, options...))
		// If this tool call is the agent tool, fetch nested tool calls
		if tc.Name == agent.AgentToolName {
			nestedMessages, _ := m.app.Messages.List(context.Background(), tc.ID)
			nestedToolResultMap := m.buildToolResultMap(nestedMessages)
			nestedUIMessages := m.convertMessagesToUI(nestedMessages, nestedToolResultMap)
			nestedToolCalls := make([]messages.ToolCallCmp, 0, len(nestedUIMessages))
			for _, nestedMsg := range nestedUIMessages {
				if toolCall, ok := nestedMsg.(messages.ToolCallCmp); ok {
					toolCall.SetIsNested(true)
					nestedToolCalls = append(nestedToolCalls, toolCall)
				}
			}
			uiMessages[len(uiMessages)-1].(messages.ToolCallCmp).SetNestedToolCalls(nestedToolCalls)
		}
	}

	return uiMessages
}

// buildToolCallOptions creates options for tool call components based on results and status.
func (m *messageListCmp) buildToolCallOptions(tc message.ToolCall, msg message.Message, toolResultMap map[string]message.ToolResult) []messages.ToolCallOption {
	var options []messages.ToolCallOption

	// Add tool result if available
	if tr, ok := toolResultMap[tc.ID]; ok {
		options = append(options, messages.WithToolCallResult(tr))
	}

	// Add cancelled status if applicable
	if msg.FinishPart() != nil && msg.FinishPart().Reason == message.FinishReasonCanceled {
		options = append(options, messages.WithToolCallCancelled())
	}

	return options
}

// GetSize returns the current width and height of the component.
func (m *messageListCmp) GetSize() (int, int) {
	return m.width, m.height
}

// SetSize updates the component dimensions and propagates to the list component.
func (m *messageListCmp) SetSize(width int, height int) tea.Cmd {
	m.width = width
	m.height = height
	if m.promptQueue > 0 {
		queueHeight := 3 + 1 // 1 for padding top
		lHight := max(0, height-(1+queueHeight))
		return m.listCmp.SetSize(width-2, lHight)
	}
	return m.listCmp.SetSize(width-2, max(0, height-1)) // for padding
}

// Blur implements MessageListCmp.
func (m *messageListCmp) Blur() tea.Cmd {
	return m.listCmp.Blur()
}

// Focus implements MessageListCmp.
func (m *messageListCmp) Focus() tea.Cmd {
	return m.listCmp.Focus()
}

// IsFocused implements MessageListCmp.
func (m *messageListCmp) IsFocused() bool {
	return m.listCmp.IsFocused()
}

func (m *messageListCmp) Bindings() []key.Binding {
	return m.defaultListKeyMap.KeyBindings()
}

func (m *messageListCmp) GoToBottom() tea.Cmd {
	return m.listCmp.GoToBottom()
}

const (
	doubleClickThreshold = 500 * time.Millisecond
	clickTolerance       = 2 // pixels
)

// handleMouseClick handles mouse click events and detects double/triple clicks.
func (m *messageListCmp) handleMouseClick(x, y int) tea.Cmd {
	now := time.Now()

	// Check if this is a potential multi-click
	if now.Sub(m.lastClickTime) <= doubleClickThreshold &&
		abs(x-m.lastClickX) <= clickTolerance &&
		abs(y-m.lastClickY) <= clickTolerance {
		m.clickCount++
	} else {
		m.clickCount = 1
	}

	m.lastClickTime = now
	m.lastClickX = x
	m.lastClickY = y

	switch m.clickCount {
	case 1:
		// Single click - start selection
		m.listCmp.StartSelection(x, y)
	case 2:
		// Double click - select word
		m.listCmp.SelectWord(x, y)
	case 3:
		// Triple click - select paragraph
		m.listCmp.SelectParagraph(x, y)
		m.clickCount = 0 // Reset after triple click
	}

	return nil
}

// SelectionClear clears the current selection in the list component.
func (m *messageListCmp) SelectionClear() tea.Cmd {
	m.listCmp.SelectionClear()
	m.previousSelected = ""
	m.lastClickX, m.lastClickY = 0, 0
	m.lastClickTime = time.Time{}
	m.clickCount = 0
	return nil
}

// HasSelection checks if there is a selection in the list component.
func (m *messageListCmp) HasSelection() bool {
	return m.listCmp.HasSelection()
}

// GetSelectedText returns the currently selected text from the list component.
func (m *messageListCmp) GetSelectedText() string {
	return m.listCmp.GetSelectedText(3) // 3 padding for the left border/padding
}

// CopySelectedText copies the currently selected text to the clipboard. When
// clear is true, it clears the selection after copying.
func (m *messageListCmp) CopySelectedText(clear bool) tea.Cmd {
	if !m.listCmp.HasSelection() {
		return nil
	}

	selectedText := m.GetSelectedText()
	if selectedText == "" {
		return util.ReportInfo("No text selected")
	}

	if clear {
		defer func() { m.SelectionClear() }()
	}

	return tea.Sequence(
		// We use both OSC 52 and native clipboard for compatibility with different
		// terminal emulators and environments.
		tea.SetClipboard(selectedText),
		func() tea.Msg {
			_ = clipboard.WriteAll(selectedText)
			return nil
		},
		util.ReportInfo("Selected text copied to clipboard"),
	)
}

// abs returns the absolute value of an integer.
func abs(x int) int {
	if x < 0 {
		return -x
	}
	return x
}



================================================
FILE: internal/tui/components/chat/queue.go
================================================
package chat

import (
	"fmt"
	"strings"

	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
)

func queuePill(queue int, t *styles.Theme) string {
	if queue <= 0 {
		return ""
	}
	triangles := styles.ForegroundGrad("▶▶▶▶▶▶▶▶▶", false, t.RedDark, t.Accent)
	if queue < 10 {
		triangles = triangles[:queue]
	}

	allTriangles := strings.Join(triangles, "")

	return t.S().Base.
		BorderStyle(lipgloss.RoundedBorder()).
		BorderForeground(t.BgOverlay).
		PaddingLeft(1).
		PaddingRight(1).
		Render(fmt.Sprintf("%s %d Queued", allTriangles, queue))
}



================================================
FILE: internal/tui/components/chat/editor/editor.go
================================================
package editor

import (
	"context"
	"fmt"
	"math/rand"
	"net/http"
	"os"
	"os/exec"
	"path/filepath"
	"runtime"
	"slices"
	"strings"
	"unicode"

	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/textarea"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/app"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/session"
	"github.com/charmbracelet/crush/internal/tui/components/chat"
	"github.com/charmbracelet/crush/internal/tui/components/completions"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/commands"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/filepicker"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/quit"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

type Editor interface {
	util.Model
	layout.Sizeable
	layout.Focusable
	layout.Help
	layout.Positional

	SetSession(session session.Session) tea.Cmd
	IsCompletionsOpen() bool
	HasAttachments() bool
	Cursor() *tea.Cursor
}

type FileCompletionItem struct {
	Path string // The file path
}

type editorCmp struct {
	width              int
	height             int
	x, y               int
	app                *app.App
	session            session.Session
	textarea           *textarea.Model
	attachments        []message.Attachment
	deleteMode         bool
	readyPlaceholder   string
	workingPlaceholder string

	keyMap EditorKeyMap

	// File path completions
	currentQuery          string
	completionsStartIndex int
	isCompletionsOpen     bool
}

var DeleteKeyMaps = DeleteAttachmentKeyMaps{
	AttachmentDeleteMode: key.NewBinding(
		key.WithKeys("ctrl+r"),
		key.WithHelp("ctrl+r+{i}", "delete attachment at index i"),
	),
	Escape: key.NewBinding(
		key.WithKeys("esc"),
		key.WithHelp("esc", "cancel delete mode"),
	),
	DeleteAllAttachments: key.NewBinding(
		key.WithKeys("r"),
		key.WithHelp("ctrl+r+r", "delete all attachments"),
	),
}

const (
	maxAttachments = 5
)

type OpenEditorMsg struct {
	Text string
}

func (m *editorCmp) openEditor(value string) tea.Cmd {
	editor := os.Getenv("EDITOR")
	if editor == "" {
		// Use platform-appropriate default editor
		if runtime.GOOS == "windows" {
			editor = "notepad"
		} else {
			editor = "nvim"
		}
	}

	tmpfile, err := os.CreateTemp("", "msg_*.md")
	if err != nil {
		return util.ReportError(err)
	}
	defer tmpfile.Close() //nolint:errcheck
	if _, err := tmpfile.WriteString(value); err != nil {
		return util.ReportError(err)
	}
	c := exec.CommandContext(context.TODO(), editor, tmpfile.Name())
	c.Stdin = os.Stdin
	c.Stdout = os.Stdout
	c.Stderr = os.Stderr
	return tea.ExecProcess(c, func(err error) tea.Msg {
		if err != nil {
			return util.ReportError(err)
		}
		content, err := os.ReadFile(tmpfile.Name())
		if err != nil {
			return util.ReportError(err)
		}
		if len(content) == 0 {
			return util.ReportWarn("Message is empty")
		}
		os.Remove(tmpfile.Name())
		return OpenEditorMsg{
			Text: strings.TrimSpace(string(content)),
		}
	})
}

func (m *editorCmp) Init() tea.Cmd {
	return nil
}

func (m *editorCmp) send() tea.Cmd {
	value := m.textarea.Value()
	value = strings.TrimSpace(value)

	switch value {
	case "exit", "quit":
		m.textarea.Reset()
		return util.CmdHandler(dialogs.OpenDialogMsg{Model: quit.NewQuitDialog()})
	}

	m.textarea.Reset()
	attachments := m.attachments

	m.attachments = nil
	if value == "" {
		return nil
	}

	// Change the placeholder when sending a new message.
	m.randomizePlaceholders()

	return tea.Batch(
		util.CmdHandler(chat.SendMsg{
			Text:        value,
			Attachments: attachments,
		}),
	)
}

func (m *editorCmp) repositionCompletions() tea.Msg {
	x, y := m.completionsPosition()
	return completions.RepositionCompletionsMsg{X: x, Y: y}
}

func (m *editorCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	var cmd tea.Cmd
	var cmds []tea.Cmd
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		return m, m.repositionCompletions
	case filepicker.FilePickedMsg:
		if len(m.attachments) >= maxAttachments {
			return m, util.ReportError(fmt.Errorf("cannot add more than %d images", maxAttachments))
		}
		m.attachments = append(m.attachments, msg.Attachment)
		return m, nil
	case completions.CompletionsOpenedMsg:
		m.isCompletionsOpen = true
	case completions.CompletionsClosedMsg:
		m.isCompletionsOpen = false
		m.currentQuery = ""
		m.completionsStartIndex = 0
	case completions.SelectCompletionMsg:
		if !m.isCompletionsOpen {
			return m, nil
		}
		if item, ok := msg.Value.(FileCompletionItem); ok {
			word := m.textarea.Word()
			// If the selected item is a file, insert its path into the textarea
			value := m.textarea.Value()
			value = value[:m.completionsStartIndex] + // Remove the current query
				item.Path + // Insert the file path
				value[m.completionsStartIndex+len(word):] // Append the rest of the value
			// XXX: This will always move the cursor to the end of the textarea.
			m.textarea.SetValue(value)
			m.textarea.MoveToEnd()
			if !msg.Insert {
				m.isCompletionsOpen = false
				m.currentQuery = ""
				m.completionsStartIndex = 0
			}
		}

	case commands.OpenExternalEditorMsg:
		if m.app.CoderAgent.IsSessionBusy(m.session.ID) {
			return m, util.ReportWarn("Agent is working, please wait...")
		}
		return m, m.openEditor(m.textarea.Value())
	case OpenEditorMsg:
		m.textarea.SetValue(msg.Text)
		m.textarea.MoveToEnd()
	case tea.PasteMsg:
		path := strings.ReplaceAll(string(msg), "\\ ", " ")
		// try to get an image
		path, err := filepath.Abs(strings.TrimSpace(path))
		if err != nil {
			m.textarea, cmd = m.textarea.Update(msg)
			return m, cmd
		}
		isAllowedType := false
		for _, ext := range filepicker.AllowedTypes {
			if strings.HasSuffix(path, ext) {
				isAllowedType = true
				break
			}
		}
		if !isAllowedType {
			m.textarea, cmd = m.textarea.Update(msg)
			return m, cmd
		}
		tooBig, _ := filepicker.IsFileTooBig(path, filepicker.MaxAttachmentSize)
		if tooBig {
			m.textarea, cmd = m.textarea.Update(msg)
			return m, cmd
		}

		content, err := os.ReadFile(path)
		if err != nil {
			m.textarea, cmd = m.textarea.Update(msg)
			return m, cmd
		}
		mimeBufferSize := min(512, len(content))
		mimeType := http.DetectContentType(content[:mimeBufferSize])
		fileName := filepath.Base(path)
		attachment := message.Attachment{FilePath: path, FileName: fileName, MimeType: mimeType, Content: content}
		return m, util.CmdHandler(filepicker.FilePickedMsg{
			Attachment: attachment,
		})

	case commands.ToggleYoloModeMsg:
		m.setEditorPrompt()
		return m, nil
	case tea.KeyPressMsg:
		cur := m.textarea.Cursor()
		curIdx := m.textarea.Width()*cur.Y + cur.X
		switch {
		// Completions
		case msg.String() == "/" && !m.isCompletionsOpen &&
			// only show if beginning of prompt, or if previous char is a space or newline:
			(len(m.textarea.Value()) == 0 || unicode.IsSpace(rune(m.textarea.Value()[len(m.textarea.Value())-1]))):
			m.isCompletionsOpen = true
			m.currentQuery = ""
			m.completionsStartIndex = curIdx
			cmds = append(cmds, m.startCompletions)
		case m.isCompletionsOpen && curIdx <= m.completionsStartIndex:
			cmds = append(cmds, util.CmdHandler(completions.CloseCompletionsMsg{}))
		}
		if key.Matches(msg, DeleteKeyMaps.AttachmentDeleteMode) {
			m.deleteMode = true
			return m, nil
		}
		if key.Matches(msg, DeleteKeyMaps.DeleteAllAttachments) && m.deleteMode {
			m.deleteMode = false
			m.attachments = nil
			return m, nil
		}
		rune := msg.Code
		if m.deleteMode && unicode.IsDigit(rune) {
			num := int(rune - '0')
			m.deleteMode = false
			if num < 10 && len(m.attachments) > num {
				if num == 0 {
					m.attachments = m.attachments[num+1:]
				} else {
					m.attachments = slices.Delete(m.attachments, num, num+1)
				}
				return m, nil
			}
		}
		if key.Matches(msg, m.keyMap.OpenEditor) {
			if m.app.CoderAgent.IsSessionBusy(m.session.ID) {
				return m, util.ReportWarn("Agent is working, please wait...")
			}
			return m, m.openEditor(m.textarea.Value())
		}
		if key.Matches(msg, DeleteKeyMaps.Escape) {
			m.deleteMode = false
			return m, nil
		}
		if key.Matches(msg, m.keyMap.Newline) {
			m.textarea.InsertRune('\n')
			cmds = append(cmds, util.CmdHandler(completions.CloseCompletionsMsg{}))
		}
		// Handle Enter key
		if m.textarea.Focused() && key.Matches(msg, m.keyMap.SendMessage) {
			value := m.textarea.Value()
			if strings.HasSuffix(value, "\\") {
				// If the last character is a backslash, remove it and add a newline.
				m.textarea.SetValue(strings.TrimSuffix(value, "\\"))
			} else {
				// Otherwise, send the message
				return m, m.send()
			}
		}
	}

	m.textarea, cmd = m.textarea.Update(msg)
	cmds = append(cmds, cmd)

	if m.textarea.Focused() {
		kp, ok := msg.(tea.KeyPressMsg)
		if ok {
			if kp.String() == "space" || m.textarea.Value() == "" {
				m.isCompletionsOpen = false
				m.currentQuery = ""
				m.completionsStartIndex = 0
				cmds = append(cmds, util.CmdHandler(completions.CloseCompletionsMsg{}))
			} else {
				word := m.textarea.Word()
				if strings.HasPrefix(word, "/") {
					// XXX: wont' work if editing in the middle of the field.
					m.completionsStartIndex = strings.LastIndex(m.textarea.Value(), word)
					m.currentQuery = word[1:]
					x, y := m.completionsPosition()
					x -= len(m.currentQuery)
					m.isCompletionsOpen = true
					cmds = append(cmds,
						util.CmdHandler(completions.FilterCompletionsMsg{
							Query:  m.currentQuery,
							Reopen: m.isCompletionsOpen,
							X:      x,
							Y:      y,
						}),
					)
				} else if m.isCompletionsOpen {
					m.isCompletionsOpen = false
					m.currentQuery = ""
					m.completionsStartIndex = 0
					cmds = append(cmds, util.CmdHandler(completions.CloseCompletionsMsg{}))
				}
			}
		}
	}

	return m, tea.Batch(cmds...)
}

func (m *editorCmp) setEditorPrompt() {
	if m.app.Permissions.SkipRequests() {
		m.textarea.SetPromptFunc(4, yoloPromptFunc)
		return
	}
	m.textarea.SetPromptFunc(4, normalPromptFunc)
}

func (m *editorCmp) completionsPosition() (int, int) {
	cur := m.textarea.Cursor()
	if cur == nil {
		return m.x, m.y + 1 // adjust for padding
	}
	x := cur.X + m.x
	y := cur.Y + m.y + 1 // adjust for padding
	return x, y
}

func (m *editorCmp) Cursor() *tea.Cursor {
	cursor := m.textarea.Cursor()
	if cursor != nil {
		cursor.X = cursor.X + m.x + 1
		cursor.Y = cursor.Y + m.y + 1 // adjust for padding
	}
	return cursor
}

var readyPlaceholders = [...]string{
	"Ready!",
	"Ready...",
	"Ready?",
	"Ready for instructions",
}

var workingPlaceholders = [...]string{
	"Working!",
	"Working...",
	"Brrrrr...",
	"Prrrrrrrr...",
	"Processing...",
	"Thinking...",
}

func (m *editorCmp) randomizePlaceholders() {
	m.workingPlaceholder = workingPlaceholders[rand.Intn(len(workingPlaceholders))]
	m.readyPlaceholder = readyPlaceholders[rand.Intn(len(readyPlaceholders))]
}

func (m *editorCmp) View() string {
	t := styles.CurrentTheme()
	// Update placeholder
	if m.app.CoderAgent != nil && m.app.CoderAgent.IsBusy() {
		m.textarea.Placeholder = m.workingPlaceholder
	} else {
		m.textarea.Placeholder = m.readyPlaceholder
	}
	if m.app.Permissions.SkipRequests() {
		m.textarea.Placeholder = "Yolo mode!"
	}
	if len(m.attachments) == 0 {
		content := t.S().Base.Padding(1).Render(
			m.textarea.View(),
		)
		return content
	}
	content := t.S().Base.Padding(0, 1, 1, 1).Render(
		lipgloss.JoinVertical(lipgloss.Top,
			m.attachmentsContent(),
			m.textarea.View(),
		),
	)
	return content
}

func (m *editorCmp) SetSize(width, height int) tea.Cmd {
	m.width = width
	m.height = height
	m.textarea.SetWidth(width - 2)   // adjust for padding
	m.textarea.SetHeight(height - 2) // adjust for padding
	return nil
}

func (m *editorCmp) GetSize() (int, int) {
	return m.textarea.Width(), m.textarea.Height()
}

func (m *editorCmp) attachmentsContent() string {
	var styledAttachments []string
	t := styles.CurrentTheme()
	attachmentStyles := t.S().Base.
		MarginLeft(1).
		Background(t.FgMuted).
		Foreground(t.FgBase)
	for i, attachment := range m.attachments {
		var filename string
		if len(attachment.FileName) > 10 {
			filename = fmt.Sprintf(" %s %s...", styles.DocumentIcon, attachment.FileName[0:7])
		} else {
			filename = fmt.Sprintf(" %s %s", styles.DocumentIcon, attachment.FileName)
		}
		if m.deleteMode {
			filename = fmt.Sprintf("%d%s", i, filename)
		}
		styledAttachments = append(styledAttachments, attachmentStyles.Render(filename))
	}
	content := lipgloss.JoinHorizontal(lipgloss.Left, styledAttachments...)
	return content
}

func (m *editorCmp) SetPosition(x, y int) tea.Cmd {
	m.x = x
	m.y = y
	return nil
}

func (m *editorCmp) startCompletions() tea.Msg {
	files, _, _ := fsext.ListDirectory(".", nil, 0)
	slices.Sort(files)
	completionItems := make([]completions.Completion, 0, len(files))
	for _, file := range files {
		file = strings.TrimPrefix(file, "./")
		completionItems = append(completionItems, completions.Completion{
			Title: file,
			Value: FileCompletionItem{
				Path: file,
			},
		})
	}

	x, y := m.completionsPosition()
	return completions.OpenCompletionsMsg{
		Completions: completionItems,
		X:           x,
		Y:           y,
	}
}

// Blur implements Container.
func (c *editorCmp) Blur() tea.Cmd {
	c.textarea.Blur()
	return nil
}

// Focus implements Container.
func (c *editorCmp) Focus() tea.Cmd {
	return c.textarea.Focus()
}

// IsFocused implements Container.
func (c *editorCmp) IsFocused() bool {
	return c.textarea.Focused()
}

// Bindings implements Container.
func (c *editorCmp) Bindings() []key.Binding {
	return c.keyMap.KeyBindings()
}

// TODO: most likely we do not need to have the session here
// we need to move some functionality to the page level
func (c *editorCmp) SetSession(session session.Session) tea.Cmd {
	c.session = session
	return nil
}

func (c *editorCmp) IsCompletionsOpen() bool {
	return c.isCompletionsOpen
}

func (c *editorCmp) HasAttachments() bool {
	return len(c.attachments) > 0
}

func normalPromptFunc(info textarea.PromptInfo) string {
	t := styles.CurrentTheme()
	if info.LineNumber == 0 {
		return "  > "
	}
	if info.Focused {
		return t.S().Base.Foreground(t.GreenDark).Render("::: ")
	}
	return t.S().Muted.Render("::: ")
}

func yoloPromptFunc(info textarea.PromptInfo) string {
	t := styles.CurrentTheme()
	if info.LineNumber == 0 {
		if info.Focused {
			return fmt.Sprintf("%s ", t.YoloIconFocused)
		} else {
			return fmt.Sprintf("%s ", t.YoloIconBlurred)
		}
	}
	if info.Focused {
		return fmt.Sprintf("%s ", t.YoloDotsFocused)
	}
	return fmt.Sprintf("%s ", t.YoloDotsBlurred)
}

func New(app *app.App) Editor {
	t := styles.CurrentTheme()
	ta := textarea.New()
	ta.SetStyles(t.S().TextArea)
	ta.ShowLineNumbers = false
	ta.CharLimit = -1
	ta.SetVirtualCursor(false)
	ta.Focus()
	e := &editorCmp{
		// TODO: remove the app instance from here
		app:      app,
		textarea: ta,
		keyMap:   DefaultEditorKeyMap(),
	}
	e.setEditorPrompt()

	e.randomizePlaceholders()
	e.textarea.Placeholder = e.readyPlaceholder

	return e
}



================================================
FILE: internal/tui/components/chat/editor/keys.go
================================================
package editor

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type EditorKeyMap struct {
	AddFile     key.Binding
	SendMessage key.Binding
	OpenEditor  key.Binding
	Newline     key.Binding
}

func DefaultEditorKeyMap() EditorKeyMap {
	return EditorKeyMap{
		AddFile: key.NewBinding(
			key.WithKeys("/"),
			key.WithHelp("/", "add file"),
		),
		SendMessage: key.NewBinding(
			key.WithKeys("enter"),
			key.WithHelp("enter", "send"),
		),
		OpenEditor: key.NewBinding(
			key.WithKeys("ctrl+o"),
			key.WithHelp("ctrl+o", "open editor"),
		),
		Newline: key.NewBinding(
			key.WithKeys("shift+enter", "ctrl+j"),
			// "ctrl+j" is a common keybinding for newline in many editors. If
			// the terminal supports "shift+enter", we substitute the help text
			// to reflect that.
			key.WithHelp("ctrl+j", "newline"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k EditorKeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.AddFile,
		k.SendMessage,
		k.OpenEditor,
		k.Newline,
		AttachmentsKeyMaps.AttachmentDeleteMode,
		AttachmentsKeyMaps.DeleteAllAttachments,
		AttachmentsKeyMaps.Escape,
	}
}

type DeleteAttachmentKeyMaps struct {
	AttachmentDeleteMode key.Binding
	Escape               key.Binding
	DeleteAllAttachments key.Binding
}

// TODO: update this to use the new keymap concepts
var AttachmentsKeyMaps = DeleteAttachmentKeyMaps{
	AttachmentDeleteMode: key.NewBinding(
		key.WithKeys("ctrl+r"),
		key.WithHelp("ctrl+r+{i}", "delete attachment at index i"),
	),
	Escape: key.NewBinding(
		key.WithKeys("esc"),
		key.WithHelp("esc", "cancel delete mode"),
	),
	DeleteAllAttachments: key.NewBinding(
		key.WithKeys("r"),
		key.WithHelp("ctrl+r+r", "delete all attachments"),
	),
}



================================================
FILE: internal/tui/components/chat/header/header.go
================================================
package header

import (
	"fmt"
	"strings"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/lsp/protocol"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/charmbracelet/crush/internal/session"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
)

type Header interface {
	util.Model
	SetSession(session session.Session) tea.Cmd
	SetWidth(width int) tea.Cmd
	SetDetailsOpen(open bool)
	ShowingDetails() bool
}

type header struct {
	width       int
	session     session.Session
	lspClients  map[string]*lsp.Client
	detailsOpen bool
}

func New(lspClients map[string]*lsp.Client) Header {
	return &header{
		lspClients: lspClients,
		width:      0,
	}
}

func (h *header) Init() tea.Cmd {
	return nil
}

func (h *header) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case pubsub.Event[session.Session]:
		if msg.Type == pubsub.UpdatedEvent {
			if h.session.ID == msg.Payload.ID {
				h.session = msg.Payload
			}
		}
	}
	return h, nil
}

func (h *header) View() string {
	if h.session.ID == "" {
		return ""
	}

	const (
		gap          = " "
		diag         = "╱"
		minDiags     = 3
		leftPadding  = 1
		rightPadding = 1
	)

	t := styles.CurrentTheme()

	var b strings.Builder

	b.WriteString(t.S().Base.Foreground(t.Secondary).Render("Charm™"))
	b.WriteString(gap)
	b.WriteString(styles.ApplyBoldForegroundGrad("CRUSH", t.Secondary, t.Primary))
	b.WriteString(gap)

	availDetailWidth := h.width - leftPadding - rightPadding - lipgloss.Width(b.String()) - minDiags
	details := h.details(availDetailWidth)

	remainingWidth := h.width -
		lipgloss.Width(b.String()) -
		lipgloss.Width(details) -
		leftPadding -
		rightPadding

	if remainingWidth > 0 {
		b.WriteString(t.S().Base.Foreground(t.Primary).Render(
			strings.Repeat(diag, max(minDiags, remainingWidth)),
		))
		b.WriteString(gap)
	}

	b.WriteString(details)

	return t.S().Base.Padding(0, rightPadding, 0, leftPadding).Render(b.String())
}

func (h *header) details(availWidth int) string {
	s := styles.CurrentTheme().S()

	var parts []string

	errorCount := 0
	for _, l := range h.lspClients {
		for _, diagnostics := range l.GetDiagnostics() {
			for _, diagnostic := range diagnostics {
				if diagnostic.Severity == protocol.SeverityError {
					errorCount++
				}
			}
		}
	}

	if errorCount > 0 {
		parts = append(parts, s.Error.Render(fmt.Sprintf("%s%d", styles.ErrorIcon, errorCount)))
	}

	agentCfg := config.Get().Agents["coder"]
	model := config.Get().GetModelByType(agentCfg.Model)
	percentage := (float64(h.session.CompletionTokens+h.session.PromptTokens) / float64(model.ContextWindow)) * 100
	formattedPercentage := s.Muted.Render(fmt.Sprintf("%d%%", int(percentage)))
	parts = append(parts, formattedPercentage)

	const keystroke = "ctrl+d"
	if h.detailsOpen {
		parts = append(parts, s.Muted.Render(keystroke)+s.Subtle.Render(" close"))
	} else {
		parts = append(parts, s.Muted.Render(keystroke)+s.Subtle.Render(" open "))
	}

	dot := s.Subtle.Render(" • ")
	metadata := strings.Join(parts, dot)
	metadata = dot + metadata

	// Truncate cwd if necessary, and insert it at the beginning.
	const dirTrimLimit = 4
	cwd := fsext.DirTrim(fsext.PrettyPath(config.Get().WorkingDir()), dirTrimLimit)
	cwd = ansi.Truncate(cwd, max(0, availWidth-lipgloss.Width(metadata)), "…")
	cwd = s.Muted.Render(cwd)

	return cwd + metadata
}

func (h *header) SetDetailsOpen(open bool) {
	h.detailsOpen = open
}

// SetSession implements Header.
func (h *header) SetSession(session session.Session) tea.Cmd {
	h.session = session
	return nil
}

// SetWidth implements Header.
func (h *header) SetWidth(width int) tea.Cmd {
	h.width = width
	return nil
}

// ShowingDetails implements Header.
func (h *header) ShowingDetails() bool {
	return h.detailsOpen
}



================================================
FILE: internal/tui/components/chat/messages/messages.go
================================================
package messages

import (
	"fmt"
	"path/filepath"
	"strings"
	"time"

	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/viewport"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
	"github.com/google/uuid"

	"github.com/atotto/clipboard"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/tui/components/anim"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
)

// CopyKey is the key binding for copying message content to the clipboard.
var CopyKey = key.NewBinding(key.WithKeys("c", "y", "C", "Y"), key.WithHelp("c/y", "copy"))

// ClearSelectionKey is the key binding for clearing the current selection in the chat interface.
var ClearSelectionKey = key.NewBinding(key.WithKeys("esc"), key.WithHelp("esc", "clear selection"))

// MessageCmp defines the interface for message components in the chat interface.
// It combines standard UI model interfaces with message-specific functionality.
type MessageCmp interface {
	util.Model                      // Basic Bubble Tea model interface
	layout.Sizeable                 // Width/height management
	layout.Focusable                // Focus state management
	GetMessage() message.Message    // Access to underlying message data
	SetMessage(msg message.Message) // Update the message content
	Spinning() bool                 // Animation state for loading messages
	ID() string
}

// messageCmp implements the MessageCmp interface for displaying chat messages.
// It handles rendering of user and assistant messages with proper styling,
// animations, and state management.
type messageCmp struct {
	width   int  // Component width for text wrapping
	focused bool // Focus state for border styling

	// Core message data and state
	message  message.Message // The underlying message content
	spinning bool            // Whether to show loading animation
	anim     *anim.Anim      // Animation component for loading states

	// Thinking viewport for displaying reasoning content
	thinkingViewport viewport.Model
}

var focusedMessageBorder = lipgloss.Border{
	Left: "▌",
}

// NewMessageCmp creates a new message component with the given message and options
func NewMessageCmp(msg message.Message) MessageCmp {
	t := styles.CurrentTheme()

	thinkingViewport := viewport.New()
	thinkingViewport.SetHeight(1)
	thinkingViewport.KeyMap = viewport.KeyMap{}

	m := &messageCmp{
		message: msg,
		anim: anim.New(anim.Settings{
			Size:        15,
			GradColorA:  t.Primary,
			GradColorB:  t.Secondary,
			CycleColors: true,
		}),
		thinkingViewport: thinkingViewport,
	}
	return m
}

// Init initializes the message component and starts animations if needed.
// Returns a command to start the animation for spinning messages.
func (m *messageCmp) Init() tea.Cmd {
	m.spinning = m.shouldSpin()
	return m.anim.Init()
}

// Update handles incoming messages and updates the component state.
// Manages animation updates for spinning messages and stops animation when appropriate.
func (m *messageCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case anim.StepMsg:
		m.spinning = m.shouldSpin()
		if m.spinning {
			u, cmd := m.anim.Update(msg)
			m.anim = u.(*anim.Anim)
			return m, cmd
		}
	case tea.KeyPressMsg:
		if key.Matches(msg, CopyKey) {
			return m, tea.Sequence(
				tea.SetClipboard(m.message.Content().Text),
				func() tea.Msg {
					_ = clipboard.WriteAll(m.message.Content().Text)
					return nil
				},
				util.ReportInfo("Message copied to clipboard"),
			)
		}
	}
	return m, nil
}

// View renders the message component based on its current state.
// Returns different views for spinning, user, and assistant messages.
func (m *messageCmp) View() string {
	if m.spinning && m.message.ReasoningContent().Thinking == "" {
		return m.style().PaddingLeft(1).Render(m.anim.View())
	}
	if m.message.ID != "" {
		// this is a user or assistant message
		switch m.message.Role {
		case message.User:
			return m.renderUserMessage()
		default:
			return m.renderAssistantMessage()
		}
	}
	return m.style().Render("No message content")
}

// GetMessage returns the underlying message data
func (m *messageCmp) GetMessage() message.Message {
	return m.message
}

func (m *messageCmp) SetMessage(msg message.Message) {
	m.message = msg
}

// textWidth calculates the available width for text content,
// accounting for borders and padding
func (m *messageCmp) textWidth() int {
	return m.width - 2 // take into account the border and/or padding
}

// style returns the lipgloss style for the message component.
// Applies different border colors and styles based on message role and focus state.
func (msg *messageCmp) style() lipgloss.Style {
	t := styles.CurrentTheme()
	borderStyle := lipgloss.NormalBorder()
	if msg.focused {
		borderStyle = focusedMessageBorder
	}

	style := t.S().Text
	if msg.message.Role == message.User {
		style = style.PaddingLeft(1).BorderLeft(true).BorderStyle(borderStyle).BorderForeground(t.Primary)
	} else {
		if msg.focused {
			style = style.PaddingLeft(1).BorderLeft(true).BorderStyle(borderStyle).BorderForeground(t.GreenDark)
		} else {
			style = style.PaddingLeft(2)
		}
	}
	return style
}

// renderAssistantMessage renders assistant messages with optional footer information.
// Shows model name, response time, and finish reason when the message is complete.
func (m *messageCmp) renderAssistantMessage() string {
	t := styles.CurrentTheme()
	parts := []string{}
	content := m.message.Content().String()
	thinking := m.message.IsThinking()
	finished := m.message.IsFinished()
	finishedData := m.message.FinishPart()
	thinkingContent := ""

	if thinking || m.message.ReasoningContent().Thinking != "" {
		m.anim.SetLabel("Thinking")
		thinkingContent = m.renderThinkingContent()
	} else if finished && content == "" && finishedData.Reason == message.FinishReasonEndTurn {
		content = ""
	} else if finished && content == "" && finishedData.Reason == message.FinishReasonCanceled {
		content = "*Canceled*"
	} else if finished && content == "" && finishedData.Reason == message.FinishReasonError {
		errTag := t.S().Base.Padding(0, 1).Background(t.Red).Foreground(t.White).Render("ERROR")
		truncated := ansi.Truncate(finishedData.Message, m.textWidth()-2-lipgloss.Width(errTag), "...")
		title := fmt.Sprintf("%s %s", errTag, t.S().Base.Foreground(t.FgHalfMuted).Render(truncated))
		details := t.S().Base.Foreground(t.FgSubtle).Width(m.textWidth() - 2).Render(finishedData.Details)
		errorContent := fmt.Sprintf("%s\n\n%s", title, details)
		return m.style().Render(errorContent)
	}

	if thinkingContent != "" {
		parts = append(parts, thinkingContent)
	}

	if content != "" {
		if thinkingContent != "" {
			parts = append(parts, "")
		}
		parts = append(parts, m.toMarkdown(content))
	}

	joined := lipgloss.JoinVertical(lipgloss.Left, parts...)
	return m.style().Render(joined)
}

// renderUserMessage renders user messages with file attachments. It displays
// message content and any attached files with appropriate icons.
func (m *messageCmp) renderUserMessage() string {
	t := styles.CurrentTheme()
	parts := []string{
		m.toMarkdown(m.message.Content().String()),
	}

	attachmentStyles := t.S().Text.
		MarginLeft(1).
		Background(t.BgSubtle)

	attachments := make([]string, len(m.message.BinaryContent()))
	for i, attachment := range m.message.BinaryContent() {
		const maxFilenameWidth = 10
		filename := filepath.Base(attachment.Path)
		attachments[i] = attachmentStyles.Render(fmt.Sprintf(
			" %s %s ",
			styles.DocumentIcon,
			ansi.Truncate(filename, maxFilenameWidth, "..."),
		))
	}

	if len(attachments) > 0 {
		parts = append(parts, "", strings.Join(attachments, ""))
	}

	joined := lipgloss.JoinVertical(lipgloss.Left, parts...)
	return m.style().Render(joined)
}

// toMarkdown converts text content to rendered markdown using the configured renderer
func (m *messageCmp) toMarkdown(content string) string {
	r := styles.GetMarkdownRenderer(m.textWidth())
	rendered, _ := r.Render(content)
	return strings.TrimSuffix(rendered, "\n")
}

func (m *messageCmp) renderThinkingContent() string {
	t := styles.CurrentTheme()
	reasoningContent := m.message.ReasoningContent()
	if reasoningContent.Thinking == "" {
		return ""
	}
	lines := strings.Split(reasoningContent.Thinking, "\n")
	var content strings.Builder
	lineStyle := t.S().Subtle.Background(t.BgBaseLighter)
	for i, line := range lines {
		if line == "" {
			continue
		}
		content.WriteString(lineStyle.Width(m.textWidth() - 2).Render(line))
		if i < len(lines)-1 {
			content.WriteString("\n")
		}
	}
	fullContent := content.String()
	height := util.Clamp(lipgloss.Height(fullContent), 1, 10)
	m.thinkingViewport.SetHeight(height)
	m.thinkingViewport.SetWidth(m.textWidth())
	m.thinkingViewport.SetContent(fullContent)
	m.thinkingViewport.GotoBottom()
	finishReason := m.message.FinishPart()
	var footer string
	if reasoningContent.StartedAt > 0 {
		duration := m.message.ThinkingDuration()
		if reasoningContent.FinishedAt > 0 {
			if duration.String() == "0s" {
				return ""
			}
			m.anim.SetLabel("")
			opts := core.StatusOpts{
				Title:       "Thought for",
				Description: duration.String(),
			}
			return t.S().Base.PaddingLeft(1).Render(core.Status(opts, m.textWidth()-1))
		} else if finishReason != nil && finishReason.Reason == message.FinishReasonCanceled {
			footer = t.S().Base.PaddingLeft(1).Render(m.toMarkdown("*Canceled*"))
		} else {
			footer = m.anim.View()
		}
	}
	return lineStyle.Width(m.textWidth()).Padding(0, 1).Render(m.thinkingViewport.View()) + "\n\n" + footer
}

// shouldSpin determines whether the message should show a loading animation.
// Only assistant messages without content that aren't finished should spin.
func (m *messageCmp) shouldSpin() bool {
	if m.message.Role != message.Assistant {
		return false
	}

	if m.message.IsFinished() {
		return false
	}

	if m.message.Content().Text != "" {
		return false
	}
	if len(m.message.ToolCalls()) > 0 {
		return false
	}
	return true
}

// Blur removes focus from the message component
func (m *messageCmp) Blur() tea.Cmd {
	m.focused = false
	return nil
}

// Focus sets focus on the message component
func (m *messageCmp) Focus() tea.Cmd {
	m.focused = true
	return nil
}

// IsFocused returns whether the message component is currently focused
func (m *messageCmp) IsFocused() bool {
	return m.focused
}

// Size management methods

// GetSize returns the current dimensions of the message component
func (m *messageCmp) GetSize() (int, int) {
	return m.width, 0
}

// SetSize updates the width of the message component for text wrapping
func (m *messageCmp) SetSize(width int, height int) tea.Cmd {
	m.width = util.Clamp(width, 1, 120)
	m.thinkingViewport.SetWidth(m.width - 4)
	return nil
}

// Spinning returns whether the message is currently showing a loading animation
func (m *messageCmp) Spinning() bool {
	return m.spinning
}

type AssistantSection interface {
	list.Item
	layout.Sizeable
}
type assistantSectionModel struct {
	width               int
	id                  string
	message             message.Message
	lastUserMessageTime time.Time
}

// ID implements AssistantSection.
func (m *assistantSectionModel) ID() string {
	return m.id
}

func NewAssistantSection(message message.Message, lastUserMessageTime time.Time) AssistantSection {
	return &assistantSectionModel{
		width:               0,
		id:                  uuid.NewString(),
		message:             message,
		lastUserMessageTime: lastUserMessageTime,
	}
}

func (m *assistantSectionModel) Init() tea.Cmd {
	return nil
}

func (m *assistantSectionModel) Update(tea.Msg) (tea.Model, tea.Cmd) {
	return m, nil
}

func (m *assistantSectionModel) View() string {
	t := styles.CurrentTheme()
	finishData := m.message.FinishPart()
	finishTime := time.Unix(finishData.Time, 0)
	duration := finishTime.Sub(m.lastUserMessageTime)
	infoMsg := t.S().Subtle.Render(duration.String())
	icon := t.S().Subtle.Render(styles.ModelIcon)
	model := config.Get().GetModel(m.message.Provider, m.message.Model)
	if model == nil {
		// This means the model is not configured anymore
		model = &catwalk.Model{
			Name: "Unknown Model",
		}
	}
	modelFormatted := t.S().Muted.Render(model.Name)
	assistant := fmt.Sprintf("%s %s %s", icon, modelFormatted, infoMsg)
	return t.S().Base.PaddingLeft(2).Render(
		core.Section(assistant, m.width-2),
	)
}

func (m *assistantSectionModel) GetSize() (int, int) {
	return m.width, 1
}

func (m *assistantSectionModel) SetSize(width int, height int) tea.Cmd {
	m.width = width
	return nil
}

func (m *assistantSectionModel) IsSectionHeader() bool {
	return true
}

func (m *messageCmp) ID() string {
	return m.message.ID
}



================================================
FILE: internal/tui/components/chat/messages/renderer.go
================================================
package messages

import (
	"encoding/json"
	"fmt"
	"strings"
	"time"

	"github.com/charmbracelet/crush/internal/ansiext"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/llm/agent"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/highlight"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/lipgloss/v2/tree"
	"github.com/charmbracelet/x/ansi"
)

// responseContextHeight limits the number of lines displayed in tool output
const responseContextHeight = 10

// renderer defines the interface for tool-specific rendering implementations
type renderer interface {
	// Render returns the complete (already styled) tool‑call view, not
	// including the outer border.
	Render(v *toolCallCmp) string
}

// rendererFactory creates new renderer instances
type rendererFactory func() renderer

// renderRegistry manages the mapping of tool names to their renderers
type renderRegistry map[string]rendererFactory

// register adds a new renderer factory to the registry
func (rr renderRegistry) register(name string, f rendererFactory) { rr[name] = f }

// lookup retrieves a renderer for the given tool name, falling back to generic renderer
func (rr renderRegistry) lookup(name string) renderer {
	if f, ok := rr[name]; ok {
		return f()
	}
	return genericRenderer{} // sensible fallback
}

// registry holds all registered tool renderers
var registry = renderRegistry{}

// baseRenderer provides common functionality for all tool renderers
type baseRenderer struct{}

// paramBuilder helps construct parameter lists for tool headers
type paramBuilder struct {
	args []string
}

// newParamBuilder creates a new parameter builder
func newParamBuilder() *paramBuilder {
	return &paramBuilder{args: make([]string, 0)}
}

// addMain adds the main parameter (first argument)
func (pb *paramBuilder) addMain(value string) *paramBuilder {
	if value != "" {
		pb.args = append(pb.args, value)
	}
	return pb
}

// addKeyValue adds a key-value pair parameter
func (pb *paramBuilder) addKeyValue(key, value string) *paramBuilder {
	if value != "" {
		pb.args = append(pb.args, key, value)
	}
	return pb
}

// addFlag adds a boolean flag parameter
func (pb *paramBuilder) addFlag(key string, value bool) *paramBuilder {
	if value {
		pb.args = append(pb.args, key, "true")
	}
	return pb
}

// build returns the final parameter list
func (pb *paramBuilder) build() []string {
	return pb.args
}

// renderWithParams provides a common rendering pattern for tools with parameters
func (br baseRenderer) renderWithParams(v *toolCallCmp, toolName string, args []string, contentRenderer func() string) string {
	width := v.textWidth()
	if v.isNested {
		width -= 4 // Adjust for nested tool call indentation
	}
	header := br.makeHeader(v, toolName, width, args...)
	if v.isNested {
		return v.style().Render(header)
	}
	if res, done := earlyState(header, v); done {
		return res
	}
	body := contentRenderer()
	return joinHeaderBody(header, body)
}

// unmarshalParams safely unmarshal JSON parameters
func (br baseRenderer) unmarshalParams(input string, target any) error {
	return json.Unmarshal([]byte(input), target)
}

// makeHeader builds the tool call header with status icon and parameters for a nested tool call.
func (br baseRenderer) makeNestedHeader(v *toolCallCmp, tool string, width int, params ...string) string {
	t := styles.CurrentTheme()
	icon := t.S().Base.Foreground(t.GreenDark).Render(styles.ToolPending)
	if v.result.ToolCallID != "" {
		if v.result.IsError {
			icon = t.S().Base.Foreground(t.RedDark).Render(styles.ToolError)
		} else {
			icon = t.S().Base.Foreground(t.Green).Render(styles.ToolSuccess)
		}
	} else if v.cancelled {
		icon = t.S().Muted.Render(styles.ToolPending)
	}
	tool = t.S().Base.Foreground(t.FgHalfMuted).Render(tool)
	prefix := fmt.Sprintf("%s %s ", icon, tool)
	return prefix + renderParamList(true, width-lipgloss.Width(prefix), params...)
}

// makeHeader builds "<Tool>: param (key=value)" and truncates as needed.
func (br baseRenderer) makeHeader(v *toolCallCmp, tool string, width int, params ...string) string {
	if v.isNested {
		return br.makeNestedHeader(v, tool, width, params...)
	}
	t := styles.CurrentTheme()
	icon := t.S().Base.Foreground(t.GreenDark).Render(styles.ToolPending)
	if v.result.ToolCallID != "" {
		if v.result.IsError {
			icon = t.S().Base.Foreground(t.RedDark).Render(styles.ToolError)
		} else {
			icon = t.S().Base.Foreground(t.Green).Render(styles.ToolSuccess)
		}
	} else if v.cancelled {
		icon = t.S().Muted.Render(styles.ToolPending)
	}
	tool = t.S().Base.Foreground(t.Blue).Render(tool)
	prefix := fmt.Sprintf("%s %s ", icon, tool)
	return prefix + renderParamList(false, width-lipgloss.Width(prefix), params...)
}

// renderError provides consistent error rendering
func (br baseRenderer) renderError(v *toolCallCmp, message string) string {
	t := styles.CurrentTheme()
	header := br.makeHeader(v, prettifyToolName(v.call.Name), v.textWidth(), "")
	errorTag := t.S().Base.Padding(0, 1).Background(t.Red).Foreground(t.White).Render("ERROR")
	message = t.S().Base.Foreground(t.FgHalfMuted).Render(v.fit(message, v.textWidth()-3-lipgloss.Width(errorTag))) // -2 for padding and space
	return joinHeaderBody(header, errorTag+" "+message)
}

// Register tool renderers
func init() {
	registry.register(tools.BashToolName, func() renderer { return bashRenderer{} })
	registry.register(tools.DownloadToolName, func() renderer { return downloadRenderer{} })
	registry.register(tools.ViewToolName, func() renderer { return viewRenderer{} })
	registry.register(tools.EditToolName, func() renderer { return editRenderer{} })
	registry.register(tools.MultiEditToolName, func() renderer { return multiEditRenderer{} })
	registry.register(tools.WriteToolName, func() renderer { return writeRenderer{} })
	registry.register(tools.FetchToolName, func() renderer { return fetchRenderer{} })
	registry.register(tools.GlobToolName, func() renderer { return globRenderer{} })
	registry.register(tools.GrepToolName, func() renderer { return grepRenderer{} })
	registry.register(tools.LSToolName, func() renderer { return lsRenderer{} })
	registry.register(tools.SourcegraphToolName, func() renderer { return sourcegraphRenderer{} })
	registry.register(tools.DiagnosticsToolName, func() renderer { return diagnosticsRenderer{} })
	registry.register(agent.AgentToolName, func() renderer { return agentRenderer{} })
}

// -----------------------------------------------------------------------------
//  Generic renderer
// -----------------------------------------------------------------------------

// genericRenderer handles unknown tool types with basic parameter display
type genericRenderer struct {
	baseRenderer
}

// Render displays the tool call with its raw input and plain content output
func (gr genericRenderer) Render(v *toolCallCmp) string {
	return gr.renderWithParams(v, prettifyToolName(v.call.Name), []string{v.call.Input}, func() string {
		return renderPlainContent(v, v.result.Content)
	})
}

// -----------------------------------------------------------------------------
//  Bash renderer
// -----------------------------------------------------------------------------

// bashRenderer handles bash command execution display
type bashRenderer struct {
	baseRenderer
}

// Render displays the bash command with sanitized newlines and plain output
func (br bashRenderer) Render(v *toolCallCmp) string {
	var params tools.BashParams
	if err := br.unmarshalParams(v.call.Input, &params); err != nil {
		return br.renderError(v, "Invalid bash parameters")
	}

	cmd := strings.ReplaceAll(params.Command, "\n", " ")
	cmd = strings.ReplaceAll(cmd, "\t", "    ")
	args := newParamBuilder().addMain(cmd).build()

	return br.renderWithParams(v, "Bash", args, func() string {
		var meta tools.BashResponseMetadata
		if err := br.unmarshalParams(v.result.Metadata, &meta); err != nil {
			return renderPlainContent(v, v.result.Content)
		}
		// for backwards compatibility with older tool calls.
		if meta.Output == "" && v.result.Content != tools.BashNoOutput {
			meta.Output = v.result.Content
		}

		if meta.Output == "" {
			return ""
		}
		return renderPlainContent(v, meta.Output)
	})
}

// -----------------------------------------------------------------------------
//  View renderer
// -----------------------------------------------------------------------------

// viewRenderer handles file viewing with syntax highlighting and line numbers
type viewRenderer struct {
	baseRenderer
}

// Render displays file content with optional limit and offset parameters
func (vr viewRenderer) Render(v *toolCallCmp) string {
	var params tools.ViewParams
	if err := vr.unmarshalParams(v.call.Input, &params); err != nil {
		return vr.renderError(v, "Invalid view parameters")
	}

	file := fsext.PrettyPath(params.FilePath)
	args := newParamBuilder().
		addMain(file).
		addKeyValue("limit", formatNonZero(params.Limit)).
		addKeyValue("offset", formatNonZero(params.Offset)).
		build()

	return vr.renderWithParams(v, "View", args, func() string {
		var meta tools.ViewResponseMetadata
		if err := vr.unmarshalParams(v.result.Metadata, &meta); err != nil {
			return renderPlainContent(v, v.result.Content)
		}
		return renderCodeContent(v, meta.FilePath, meta.Content, params.Offset)
	})
}

// formatNonZero returns string representation of non-zero integers, empty string for zero
func formatNonZero(value int) string {
	if value == 0 {
		return ""
	}
	return fmt.Sprintf("%d", value)
}

// -----------------------------------------------------------------------------
//  Edit renderer
// -----------------------------------------------------------------------------

// editRenderer handles file editing with diff visualization
type editRenderer struct {
	baseRenderer
}

// Render displays the edited file with a formatted diff of changes
func (er editRenderer) Render(v *toolCallCmp) string {
	t := styles.CurrentTheme()
	var params tools.EditParams
	var args []string
	if err := er.unmarshalParams(v.call.Input, &params); err == nil {
		file := fsext.PrettyPath(params.FilePath)
		args = newParamBuilder().addMain(file).build()
	}

	return er.renderWithParams(v, "Edit", args, func() string {
		var meta tools.EditResponseMetadata
		if err := er.unmarshalParams(v.result.Metadata, &meta); err != nil {
			return renderPlainContent(v, v.result.Content)
		}

		formatter := core.DiffFormatter().
			Before(fsext.PrettyPath(params.FilePath), meta.OldContent).
			After(fsext.PrettyPath(params.FilePath), meta.NewContent).
			Width(v.textWidth() - 2) // -2 for padding
		if v.textWidth() > 120 {
			formatter = formatter.Split()
		}
		// add a message to the bottom if the content was truncated
		formatted := formatter.String()
		if lipgloss.Height(formatted) > responseContextHeight {
			contentLines := strings.Split(formatted, "\n")
			truncateMessage := t.S().Muted.
				Background(t.BgBaseLighter).
				PaddingLeft(2).
				Width(v.textWidth() - 2).
				Render(fmt.Sprintf("… (%d lines)", len(contentLines)-responseContextHeight))
			formatted = strings.Join(contentLines[:responseContextHeight], "\n") + "\n" + truncateMessage
		}
		return formatted
	})
}

// -----------------------------------------------------------------------------
//  Multi-Edit renderer
// -----------------------------------------------------------------------------

// multiEditRenderer handles multiple file edits with diff visualization
type multiEditRenderer struct {
	baseRenderer
}

// Render displays the multi-edited file with a formatted diff of changes
func (mer multiEditRenderer) Render(v *toolCallCmp) string {
	t := styles.CurrentTheme()
	var params tools.MultiEditParams
	var args []string
	if err := mer.unmarshalParams(v.call.Input, &params); err == nil {
		file := fsext.PrettyPath(params.FilePath)
		editsCount := len(params.Edits)
		args = newParamBuilder().
			addMain(file).
			addKeyValue("edits", fmt.Sprintf("%d", editsCount)).
			build()
	}

	return mer.renderWithParams(v, "Multi-Edit", args, func() string {
		var meta tools.MultiEditResponseMetadata
		if err := mer.unmarshalParams(v.result.Metadata, &meta); err != nil {
			return renderPlainContent(v, v.result.Content)
		}

		formatter := core.DiffFormatter().
			Before(fsext.PrettyPath(params.FilePath), meta.OldContent).
			After(fsext.PrettyPath(params.FilePath), meta.NewContent).
			Width(v.textWidth() - 2) // -2 for padding
		if v.textWidth() > 120 {
			formatter = formatter.Split()
		}
		// add a message to the bottom if the content was truncated
		formatted := formatter.String()
		if lipgloss.Height(formatted) > responseContextHeight {
			contentLines := strings.Split(formatted, "\n")
			truncateMessage := t.S().Muted.
				Background(t.BgBaseLighter).
				PaddingLeft(2).
				Width(v.textWidth() - 4).
				Render(fmt.Sprintf("… (%d lines)", len(contentLines)-responseContextHeight))
			formatted = strings.Join(contentLines[:responseContextHeight], "\n") + "\n" + truncateMessage
		}
		return formatted
	})
}

// -----------------------------------------------------------------------------
//  Write renderer
// -----------------------------------------------------------------------------

// writeRenderer handles file writing with syntax-highlighted content preview
type writeRenderer struct {
	baseRenderer
}

// Render displays the file being written with syntax highlighting
func (wr writeRenderer) Render(v *toolCallCmp) string {
	var params tools.WriteParams
	var args []string
	var file string
	if err := wr.unmarshalParams(v.call.Input, &params); err == nil {
		file = fsext.PrettyPath(params.FilePath)
		args = newParamBuilder().addMain(file).build()
	}

	return wr.renderWithParams(v, "Write", args, func() string {
		return renderCodeContent(v, file, params.Content, 0)
	})
}

// -----------------------------------------------------------------------------
//  Fetch renderer
// -----------------------------------------------------------------------------

// fetchRenderer handles URL fetching with format-specific content display
type fetchRenderer struct {
	baseRenderer
}

// Render displays the fetched URL with format and timeout parameters
func (fr fetchRenderer) Render(v *toolCallCmp) string {
	var params tools.FetchParams
	var args []string
	if err := fr.unmarshalParams(v.call.Input, &params); err == nil {
		args = newParamBuilder().
			addMain(params.URL).
			addKeyValue("format", params.Format).
			addKeyValue("timeout", formatTimeout(params.Timeout)).
			build()
	}

	return fr.renderWithParams(v, "Fetch", args, func() string {
		file := fr.getFileExtension(params.Format)
		return renderCodeContent(v, file, v.result.Content, 0)
	})
}

// getFileExtension returns appropriate file extension for syntax highlighting
func (fr fetchRenderer) getFileExtension(format string) string {
	switch format {
	case "text":
		return "fetch.txt"
	case "html":
		return "fetch.html"
	default:
		return "fetch.md"
	}
}

// formatTimeout converts timeout seconds to duration string
func formatTimeout(timeout int) string {
	if timeout == 0 {
		return ""
	}
	return (time.Duration(timeout) * time.Second).String()
}

// -----------------------------------------------------------------------------
//  Download renderer
// -----------------------------------------------------------------------------

// downloadRenderer handles file downloading with URL and file path display
type downloadRenderer struct {
	baseRenderer
}

// Render displays the download URL and destination file path with timeout parameter
func (dr downloadRenderer) Render(v *toolCallCmp) string {
	var params tools.DownloadParams
	var args []string
	if err := dr.unmarshalParams(v.call.Input, &params); err == nil {
		args = newParamBuilder().
			addMain(params.URL).
			addKeyValue("file_path", fsext.PrettyPath(params.FilePath)).
			addKeyValue("timeout", formatTimeout(params.Timeout)).
			build()
	}

	return dr.renderWithParams(v, "Download", args, func() string {
		return renderPlainContent(v, v.result.Content)
	})
}

// -----------------------------------------------------------------------------
//  Glob renderer
// -----------------------------------------------------------------------------

// globRenderer handles file pattern matching with path filtering
type globRenderer struct {
	baseRenderer
}

// Render displays the glob pattern with optional path parameter
func (gr globRenderer) Render(v *toolCallCmp) string {
	var params tools.GlobParams
	var args []string
	if err := gr.unmarshalParams(v.call.Input, &params); err == nil {
		args = newParamBuilder().
			addMain(params.Pattern).
			addKeyValue("path", params.Path).
			build()
	}

	return gr.renderWithParams(v, "Glob", args, func() string {
		return renderPlainContent(v, v.result.Content)
	})
}

// -----------------------------------------------------------------------------
//  Grep renderer
// -----------------------------------------------------------------------------

// grepRenderer handles content searching with pattern matching options
type grepRenderer struct {
	baseRenderer
}

// Render displays the search pattern with path, include, and literal text options
func (gr grepRenderer) Render(v *toolCallCmp) string {
	var params tools.GrepParams
	var args []string
	if err := gr.unmarshalParams(v.call.Input, &params); err == nil {
		args = newParamBuilder().
			addMain(params.Pattern).
			addKeyValue("path", params.Path).
			addKeyValue("include", params.Include).
			addFlag("literal", params.LiteralText).
			build()
	}

	return gr.renderWithParams(v, "Grep", args, func() string {
		return renderPlainContent(v, v.result.Content)
	})
}

// -----------------------------------------------------------------------------
//  LS renderer
// -----------------------------------------------------------------------------

// lsRenderer handles directory listing with default path handling
type lsRenderer struct {
	baseRenderer
}

// Render displays the directory path, defaulting to current directory
func (lr lsRenderer) Render(v *toolCallCmp) string {
	var params tools.LSParams
	var args []string
	if err := lr.unmarshalParams(v.call.Input, &params); err == nil {
		path := params.Path
		if path == "" {
			path = "."
		}
		path = fsext.PrettyPath(path)

		args = newParamBuilder().addMain(path).build()
	}

	return lr.renderWithParams(v, "List", args, func() string {
		return renderPlainContent(v, v.result.Content)
	})
}

// -----------------------------------------------------------------------------
//  Sourcegraph renderer
// -----------------------------------------------------------------------------

// sourcegraphRenderer handles code search with count and context options
type sourcegraphRenderer struct {
	baseRenderer
}

// Render displays the search query with optional count and context window parameters
func (sr sourcegraphRenderer) Render(v *toolCallCmp) string {
	var params tools.SourcegraphParams
	var args []string
	if err := sr.unmarshalParams(v.call.Input, &params); err == nil {
		args = newParamBuilder().
			addMain(params.Query).
			addKeyValue("count", formatNonZero(params.Count)).
			addKeyValue("context", formatNonZero(params.ContextWindow)).
			build()
	}

	return sr.renderWithParams(v, "Sourcegraph", args, func() string {
		return renderPlainContent(v, v.result.Content)
	})
}

// -----------------------------------------------------------------------------
//  Diagnostics renderer
// -----------------------------------------------------------------------------

// diagnosticsRenderer handles project-wide diagnostic information
type diagnosticsRenderer struct {
	baseRenderer
}

// Render displays project diagnostics with plain content formatting
func (dr diagnosticsRenderer) Render(v *toolCallCmp) string {
	args := newParamBuilder().addMain("project").build()

	return dr.renderWithParams(v, "Diagnostics", args, func() string {
		return renderPlainContent(v, v.result.Content)
	})
}

// -----------------------------------------------------------------------------
//  Task renderer
// -----------------------------------------------------------------------------

// agentRenderer handles project-wide diagnostic information
type agentRenderer struct {
	baseRenderer
}

func RoundedEnumerator(children tree.Children, index int) string {
	if children.Length()-1 == index {
		return " ╰──"
	}
	return " ├──"
}

// Render displays agent task parameters and result content
func (tr agentRenderer) Render(v *toolCallCmp) string {
	t := styles.CurrentTheme()
	var params agent.AgentParams
	tr.unmarshalParams(v.call.Input, &params)

	prompt := params.Prompt
	prompt = strings.ReplaceAll(prompt, "\n", " ")

	header := tr.makeHeader(v, "Agent", v.textWidth())
	if res, done := earlyState(header, v); v.cancelled && done {
		return res
	}
	taskTag := t.S().Base.Padding(0, 1).MarginLeft(1).Background(t.BlueLight).Foreground(t.White).Render("Task")
	remainingWidth := v.textWidth() - lipgloss.Width(header) - lipgloss.Width(taskTag) - 2 // -2 for padding
	prompt = t.S().Muted.Width(remainingWidth).Render(prompt)
	header = lipgloss.JoinVertical(
		lipgloss.Left,
		header,
		"",
		lipgloss.JoinHorizontal(
			lipgloss.Left,
			taskTag,
			" ",
			prompt,
		),
	)
	childTools := tree.Root(header)

	for _, call := range v.nestedToolCalls {
		childTools.Child(call.View())
	}
	parts := []string{
		childTools.Enumerator(RoundedEnumerator).String(),
	}

	if v.result.ToolCallID == "" {
		v.spinning = true
		parts = append(parts, "", v.anim.View())
	} else {
		v.spinning = false
	}

	header = lipgloss.JoinVertical(
		lipgloss.Left,
		parts...,
	)

	if v.result.ToolCallID == "" {
		return header
	}

	body := renderPlainContent(v, v.result.Content)
	return joinHeaderBody(header, body)
}

// renderParamList renders params, params[0] (params[1]=params[2] ....)
func renderParamList(nested bool, paramsWidth int, params ...string) string {
	t := styles.CurrentTheme()
	if len(params) == 0 {
		return ""
	}
	mainParam := params[0]
	if paramsWidth >= 0 && lipgloss.Width(mainParam) > paramsWidth {
		mainParam = ansi.Truncate(mainParam, paramsWidth, "…")
	}

	if len(params) == 1 {
		if nested {
			return t.S().Muted.Render(mainParam)
		}
		return t.S().Subtle.Render(mainParam)
	}
	otherParams := params[1:]
	// create pairs of key/value
	// if odd number of params, the last one is a key without value
	if len(otherParams)%2 != 0 {
		otherParams = append(otherParams, "")
	}
	parts := make([]string, 0, len(otherParams)/2)
	for i := 0; i < len(otherParams); i += 2 {
		key := otherParams[i]
		value := otherParams[i+1]
		if value == "" {
			continue
		}
		parts = append(parts, fmt.Sprintf("%s=%s", key, value))
	}

	partsRendered := strings.Join(parts, ", ")
	remainingWidth := paramsWidth - lipgloss.Width(partsRendered) - 3 // count for " ()"
	if remainingWidth < 30 {
		if nested {
			return t.S().Muted.Render(mainParam)
		}
		// No space for the params, just show the main
		return t.S().Subtle.Render(mainParam)
	}

	if len(parts) > 0 {
		mainParam = fmt.Sprintf("%s (%s)", mainParam, strings.Join(parts, ", "))
	}

	if nested {
		return t.S().Muted.Render(ansi.Truncate(mainParam, paramsWidth, "…"))
	}
	return t.S().Subtle.Render(ansi.Truncate(mainParam, paramsWidth, "…"))
}

// earlyState returns immediately‑rendered error/cancelled/ongoing states.
func earlyState(header string, v *toolCallCmp) (string, bool) {
	t := styles.CurrentTheme()
	message := ""
	switch {
	case v.result.IsError:
		message = v.renderToolError()
	case v.cancelled:
		message = t.S().Base.Foreground(t.FgSubtle).Render("Canceled.")
	case v.result.ToolCallID == "":
		if v.permissionRequested && !v.permissionGranted {
			message = t.S().Base.Foreground(t.FgSubtle).Render("Requesting for permission...")
		} else {
			message = t.S().Base.Foreground(t.FgSubtle).Render("Waiting for tool response...")
		}
	default:
		return "", false
	}

	message = t.S().Base.PaddingLeft(2).Render(message)
	return lipgloss.JoinVertical(lipgloss.Left, header, "", message), true
}

func joinHeaderBody(header, body string) string {
	t := styles.CurrentTheme()
	if body == "" {
		return header
	}
	body = t.S().Base.PaddingLeft(2).Render(body)
	return lipgloss.JoinVertical(lipgloss.Left, header, "", body)
}

func renderPlainContent(v *toolCallCmp, content string) string {
	t := styles.CurrentTheme()
	content = strings.ReplaceAll(content, "\r\n", "\n") // Normalize line endings
	content = strings.ReplaceAll(content, "\t", "    ") // Replace tabs with spaces
	content = strings.TrimSpace(content)
	lines := strings.Split(content, "\n")

	width := v.textWidth() - 2 // -2 for left padding
	var out []string
	for i, ln := range lines {
		if i >= responseContextHeight {
			break
		}
		ln = ansiext.Escape(ln)
		ln = " " + ln // left padding
		if len(ln) > width {
			ln = v.fit(ln, width)
		}
		out = append(out, t.S().Muted.
			Width(width).
			Background(t.BgBaseLighter).
			Render(ln))
	}

	if len(lines) > responseContextHeight {
		out = append(out, t.S().Muted.
			Background(t.BgBaseLighter).
			Width(width).
			Render(fmt.Sprintf("… (%d lines)", len(lines)-responseContextHeight)))
	}

	return strings.Join(out, "\n")
}

func getDigits(n int) int {
	if n == 0 {
		return 1
	}
	if n < 0 {
		n = -n
	}

	digits := 0
	for n > 0 {
		n /= 10
		digits++
	}

	return digits
}

func renderCodeContent(v *toolCallCmp, path, content string, offset int) string {
	t := styles.CurrentTheme()
	content = strings.ReplaceAll(content, "\r\n", "\n") // Normalize line endings
	content = strings.ReplaceAll(content, "\t", "    ") // Replace tabs with spaces
	truncated := truncateHeight(content, responseContextHeight)

	lines := strings.Split(truncated, "\n")
	for i, ln := range lines {
		lines[i] = ansiext.Escape(ln)
	}

	bg := t.BgBase
	highlighted, _ := highlight.SyntaxHighlight(strings.Join(lines, "\n"), path, bg)
	lines = strings.Split(highlighted, "\n")

	if len(strings.Split(content, "\n")) > responseContextHeight {
		lines = append(lines, t.S().Muted.
			Background(bg).
			Render(fmt.Sprintf(" …(%d lines)", len(strings.Split(content, "\n"))-responseContextHeight)))
	}

	maxLineNumber := len(lines) + offset
	maxDigits := getDigits(maxLineNumber)
	numFmt := fmt.Sprintf("%%%dd", maxDigits)
	const numPR, numPL, codePR, codePL = 1, 1, 1, 2
	w := v.textWidth() - maxDigits - numPL - numPR - 2 // -2 for left padding
	for i, ln := range lines {
		num := t.S().Base.
			Foreground(t.FgMuted).
			Background(t.BgBase).
			PaddingRight(1).
			PaddingLeft(1).
			Render(fmt.Sprintf(numFmt, i+1+offset))
		lines[i] = lipgloss.JoinHorizontal(lipgloss.Left,
			num,
			t.S().Base.
				Width(w).
				Background(bg).
				PaddingRight(1).
				PaddingLeft(2).
				Render(v.fit(ln, w-codePL-codePR)),
		)
	}

	return lipgloss.JoinVertical(lipgloss.Left, lines...)
}

func (v *toolCallCmp) renderToolError() string {
	t := styles.CurrentTheme()
	err := strings.ReplaceAll(v.result.Content, "\n", " ")
	errTag := t.S().Base.Padding(0, 1).Background(t.Red).Foreground(t.White).Render("ERROR")
	err = fmt.Sprintf("%s %s", errTag, t.S().Base.Foreground(t.FgHalfMuted).Render(v.fit(err, v.textWidth()-2-lipgloss.Width(errTag))))
	return err
}

func truncateHeight(s string, h int) string {
	lines := strings.Split(s, "\n")
	if len(lines) > h {
		return strings.Join(lines[:h], "\n")
	}
	return s
}

func prettifyToolName(name string) string {
	switch name {
	case agent.AgentToolName:
		return "Agent"
	case tools.BashToolName:
		return "Bash"
	case tools.DownloadToolName:
		return "Download"
	case tools.EditToolName:
		return "Edit"
	case tools.MultiEditToolName:
		return "Multi-Edit"
	case tools.FetchToolName:
		return "Fetch"
	case tools.GlobToolName:
		return "Glob"
	case tools.GrepToolName:
		return "Grep"
	case tools.LSToolName:
		return "List"
	case tools.SourcegraphToolName:
		return "Sourcegraph"
	case tools.ViewToolName:
		return "View"
	case tools.WriteToolName:
		return "Write"
	default:
		return name
	}
}



================================================
FILE: internal/tui/components/chat/messages/tool.go
================================================
package messages

import (
	"encoding/json"
	"fmt"
	"path/filepath"
	"strings"
	"time"

	"github.com/atotto/clipboard"
	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/diff"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/llm/agent"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/tui/components/anim"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
)

// ToolCallCmp defines the interface for tool call components in the chat interface.
// It manages the display of tool execution including pending states, results, and errors.
type ToolCallCmp interface {
	util.Model                         // Basic Bubble Tea model interface
	layout.Sizeable                    // Width/height management
	layout.Focusable                   // Focus state management
	GetToolCall() message.ToolCall     // Access to tool call data
	GetToolResult() message.ToolResult // Access to tool result data
	SetToolResult(message.ToolResult)  // Update tool result
	SetToolCall(message.ToolCall)      // Update tool call
	SetCancelled()                     // Mark as cancelled
	ParentMessageID() string           // Get parent message ID
	Spinning() bool                    // Animation state for pending tools
	GetNestedToolCalls() []ToolCallCmp // Get nested tool calls
	SetNestedToolCalls([]ToolCallCmp)  // Set nested tool calls
	SetIsNested(bool)                  // Set whether this tool call is nested
	ID() string
	SetPermissionRequested() // Mark permission request
	SetPermissionGranted()   // Mark permission granted
}

// toolCallCmp implements the ToolCallCmp interface for displaying tool calls.
// It handles rendering of tool execution states including pending, completed, and error states.
type toolCallCmp struct {
	width    int  // Component width for text wrapping
	focused  bool // Focus state for border styling
	isNested bool // Whether this tool call is nested within another

	// Tool call data and state
	parentMessageID     string             // ID of the message that initiated this tool call
	call                message.ToolCall   // The tool call being executed
	result              message.ToolResult // The result of the tool execution
	cancelled           bool               // Whether the tool call was cancelled
	permissionRequested bool
	permissionGranted   bool

	// Animation state for pending tool calls
	spinning bool       // Whether to show loading animation
	anim     util.Model // Animation component for pending states

	nestedToolCalls []ToolCallCmp // Nested tool calls for hierarchical display
}

// ToolCallOption provides functional options for configuring tool call components
type ToolCallOption func(*toolCallCmp)

// WithToolCallCancelled marks the tool call as cancelled
func WithToolCallCancelled() ToolCallOption {
	return func(m *toolCallCmp) {
		m.cancelled = true
	}
}

// WithToolCallResult sets the initial tool result
func WithToolCallResult(result message.ToolResult) ToolCallOption {
	return func(m *toolCallCmp) {
		m.result = result
	}
}

func WithToolCallNested(isNested bool) ToolCallOption {
	return func(m *toolCallCmp) {
		m.isNested = isNested
	}
}

func WithToolCallNestedCalls(calls []ToolCallCmp) ToolCallOption {
	return func(m *toolCallCmp) {
		m.nestedToolCalls = calls
	}
}

func WithToolPermissionRequested() ToolCallOption {
	return func(m *toolCallCmp) {
		m.permissionRequested = true
	}
}

func WithToolPermissionGranted() ToolCallOption {
	return func(m *toolCallCmp) {
		m.permissionGranted = true
	}
}

// NewToolCallCmp creates a new tool call component with the given parent message ID,
// tool call, and optional configuration
func NewToolCallCmp(parentMessageID string, tc message.ToolCall, permissions permission.Service, opts ...ToolCallOption) ToolCallCmp {
	m := &toolCallCmp{
		call:            tc,
		parentMessageID: parentMessageID,
	}
	for _, opt := range opts {
		opt(m)
	}
	t := styles.CurrentTheme()
	m.anim = anim.New(anim.Settings{
		Size:        15,
		Label:       "Working",
		GradColorA:  t.Primary,
		GradColorB:  t.Secondary,
		LabelColor:  t.FgBase,
		CycleColors: true,
	})
	if m.isNested {
		m.anim = anim.New(anim.Settings{
			Size:        10,
			GradColorA:  t.Primary,
			GradColorB:  t.Secondary,
			CycleColors: true,
		})
	}
	return m
}

// Init initializes the tool call component and starts animations if needed.
// Returns a command to start the animation for pending tool calls.
func (m *toolCallCmp) Init() tea.Cmd {
	m.spinning = m.shouldSpin()
	return m.anim.Init()
}

// Update handles incoming messages and updates the component state.
// Manages animation updates for pending tool calls.
func (m *toolCallCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case anim.StepMsg:
		var cmds []tea.Cmd
		for i, nested := range m.nestedToolCalls {
			if nested.Spinning() {
				u, cmd := nested.Update(msg)
				m.nestedToolCalls[i] = u.(ToolCallCmp)
				cmds = append(cmds, cmd)
			}
		}
		if m.spinning {
			u, cmd := m.anim.Update(msg)
			m.anim = u.(util.Model)
			cmds = append(cmds, cmd)
		}
		return m, tea.Batch(cmds...)
	case tea.KeyPressMsg:
		if key.Matches(msg, CopyKey) {
			return m, m.copyTool()
		}
	}
	return m, nil
}

// View renders the tool call component based on its current state.
// Shows either a pending animation or the tool-specific rendered result.
func (m *toolCallCmp) View() string {
	box := m.style()

	if !m.call.Finished && !m.cancelled {
		return box.Render(m.renderPending())
	}

	r := registry.lookup(m.call.Name)

	if m.isNested {
		return box.Render(r.Render(m))
	}
	return box.Render(r.Render(m))
}

// State management methods

// SetCancelled marks the tool call as cancelled
func (m *toolCallCmp) SetCancelled() {
	m.cancelled = true
}

func (m *toolCallCmp) copyTool() tea.Cmd {
	content := m.formatToolForCopy()
	return tea.Sequence(
		tea.SetClipboard(content),
		func() tea.Msg {
			_ = clipboard.WriteAll(content)
			return nil
		},
		util.ReportInfo("Tool content copied to clipboard"),
	)
}

func (m *toolCallCmp) formatToolForCopy() string {
	var parts []string

	toolName := prettifyToolName(m.call.Name)
	parts = append(parts, fmt.Sprintf("## %s Tool Call", toolName))

	if m.call.Input != "" {
		params := m.formatParametersForCopy()
		if params != "" {
			parts = append(parts, "### Parameters:")
			parts = append(parts, params)
		}
	}

	if m.result.ToolCallID != "" {
		if m.result.IsError {
			parts = append(parts, "### Error:")
			parts = append(parts, m.result.Content)
		} else {
			parts = append(parts, "### Result:")
			content := m.formatResultForCopy()
			if content != "" {
				parts = append(parts, content)
			}
		}
	} else if m.cancelled {
		parts = append(parts, "### Status:")
		parts = append(parts, "Cancelled")
	} else {
		parts = append(parts, "### Status:")
		parts = append(parts, "Pending...")
	}

	return strings.Join(parts, "\n\n")
}

func (m *toolCallCmp) formatParametersForCopy() string {
	switch m.call.Name {
	case tools.BashToolName:
		var params tools.BashParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			cmd := strings.ReplaceAll(params.Command, "\n", " ")
			cmd = strings.ReplaceAll(cmd, "\t", "    ")
			return fmt.Sprintf("**Command:** %s", cmd)
		}
	case tools.ViewToolName:
		var params tools.ViewParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			var parts []string
			parts = append(parts, fmt.Sprintf("**File:** %s", fsext.PrettyPath(params.FilePath)))
			if params.Limit > 0 {
				parts = append(parts, fmt.Sprintf("**Limit:** %d", params.Limit))
			}
			if params.Offset > 0 {
				parts = append(parts, fmt.Sprintf("**Offset:** %d", params.Offset))
			}
			return strings.Join(parts, "\n")
		}
	case tools.EditToolName:
		var params tools.EditParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			return fmt.Sprintf("**File:** %s", fsext.PrettyPath(params.FilePath))
		}
	case tools.MultiEditToolName:
		var params tools.MultiEditParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			var parts []string
			parts = append(parts, fmt.Sprintf("**File:** %s", fsext.PrettyPath(params.FilePath)))
			parts = append(parts, fmt.Sprintf("**Edits:** %d", len(params.Edits)))
			return strings.Join(parts, "\n")
		}
	case tools.WriteToolName:
		var params tools.WriteParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			return fmt.Sprintf("**File:** %s", fsext.PrettyPath(params.FilePath))
		}
	case tools.FetchToolName:
		var params tools.FetchParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			var parts []string
			parts = append(parts, fmt.Sprintf("**URL:** %s", params.URL))
			if params.Format != "" {
				parts = append(parts, fmt.Sprintf("**Format:** %s", params.Format))
			}
			if params.Timeout > 0 {
				parts = append(parts, fmt.Sprintf("**Timeout:** %s", (time.Duration(params.Timeout)*time.Second).String()))
			}
			return strings.Join(parts, "\n")
		}
	case tools.GrepToolName:
		var params tools.GrepParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			var parts []string
			parts = append(parts, fmt.Sprintf("**Pattern:** %s", params.Pattern))
			if params.Path != "" {
				parts = append(parts, fmt.Sprintf("**Path:** %s", params.Path))
			}
			if params.Include != "" {
				parts = append(parts, fmt.Sprintf("**Include:** %s", params.Include))
			}
			if params.LiteralText {
				parts = append(parts, "**Literal:** true")
			}
			return strings.Join(parts, "\n")
		}
	case tools.GlobToolName:
		var params tools.GlobParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			var parts []string
			parts = append(parts, fmt.Sprintf("**Pattern:** %s", params.Pattern))
			if params.Path != "" {
				parts = append(parts, fmt.Sprintf("**Path:** %s", params.Path))
			}
			return strings.Join(parts, "\n")
		}
	case tools.LSToolName:
		var params tools.LSParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			path := params.Path
			if path == "" {
				path = "."
			}
			return fmt.Sprintf("**Path:** %s", fsext.PrettyPath(path))
		}
	case tools.DownloadToolName:
		var params tools.DownloadParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			var parts []string
			parts = append(parts, fmt.Sprintf("**URL:** %s", params.URL))
			parts = append(parts, fmt.Sprintf("**File Path:** %s", fsext.PrettyPath(params.FilePath)))
			if params.Timeout > 0 {
				parts = append(parts, fmt.Sprintf("**Timeout:** %s", (time.Duration(params.Timeout)*time.Second).String()))
			}
			return strings.Join(parts, "\n")
		}
	case tools.SourcegraphToolName:
		var params tools.SourcegraphParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			var parts []string
			parts = append(parts, fmt.Sprintf("**Query:** %s", params.Query))
			if params.Count > 0 {
				parts = append(parts, fmt.Sprintf("**Count:** %d", params.Count))
			}
			if params.ContextWindow > 0 {
				parts = append(parts, fmt.Sprintf("**Context:** %d", params.ContextWindow))
			}
			return strings.Join(parts, "\n")
		}
	case tools.DiagnosticsToolName:
		return "**Project:** diagnostics"
	case agent.AgentToolName:
		var params agent.AgentParams
		if json.Unmarshal([]byte(m.call.Input), &params) == nil {
			return fmt.Sprintf("**Task:**\n%s", params.Prompt)
		}
	}

	var params map[string]any
	if json.Unmarshal([]byte(m.call.Input), &params) == nil {
		var parts []string
		for key, value := range params {
			displayKey := strings.ReplaceAll(key, "_", " ")
			if len(displayKey) > 0 {
				displayKey = strings.ToUpper(displayKey[:1]) + displayKey[1:]
			}
			parts = append(parts, fmt.Sprintf("**%s:** %v", displayKey, value))
		}
		return strings.Join(parts, "\n")
	}

	return ""
}

func (m *toolCallCmp) formatResultForCopy() string {
	switch m.call.Name {
	case tools.BashToolName:
		return m.formatBashResultForCopy()
	case tools.ViewToolName:
		return m.formatViewResultForCopy()
	case tools.EditToolName:
		return m.formatEditResultForCopy()
	case tools.MultiEditToolName:
		return m.formatMultiEditResultForCopy()
	case tools.WriteToolName:
		return m.formatWriteResultForCopy()
	case tools.FetchToolName:
		return m.formatFetchResultForCopy()
	case agent.AgentToolName:
		return m.formatAgentResultForCopy()
	case tools.DownloadToolName, tools.GrepToolName, tools.GlobToolName, tools.LSToolName, tools.SourcegraphToolName, tools.DiagnosticsToolName:
		return fmt.Sprintf("```\n%s\n```", m.result.Content)
	default:
		return m.result.Content
	}
}

func (m *toolCallCmp) formatBashResultForCopy() string {
	var meta tools.BashResponseMetadata
	if m.result.Metadata != "" {
		json.Unmarshal([]byte(m.result.Metadata), &meta)
	}

	output := meta.Output
	if output == "" && m.result.Content != tools.BashNoOutput {
		output = m.result.Content
	}

	if output == "" {
		return ""
	}

	return fmt.Sprintf("```bash\n%s\n```", output)
}

func (m *toolCallCmp) formatViewResultForCopy() string {
	var meta tools.ViewResponseMetadata
	if m.result.Metadata != "" {
		json.Unmarshal([]byte(m.result.Metadata), &meta)
	}

	if meta.Content == "" {
		return m.result.Content
	}

	lang := ""
	if meta.FilePath != "" {
		ext := strings.ToLower(filepath.Ext(meta.FilePath))
		switch ext {
		case ".go":
			lang = "go"
		case ".js", ".mjs":
			lang = "javascript"
		case ".ts":
			lang = "typescript"
		case ".py":
			lang = "python"
		case ".rs":
			lang = "rust"
		case ".java":
			lang = "java"
		case ".c":
			lang = "c"
		case ".cpp", ".cc", ".cxx":
			lang = "cpp"
		case ".sh", ".bash":
			lang = "bash"
		case ".json":
			lang = "json"
		case ".yaml", ".yml":
			lang = "yaml"
		case ".xml":
			lang = "xml"
		case ".html":
			lang = "html"
		case ".css":
			lang = "css"
		case ".md":
			lang = "markdown"
		}
	}

	var result strings.Builder
	if lang != "" {
		result.WriteString(fmt.Sprintf("```%s\n", lang))
	} else {
		result.WriteString("```\n")
	}
	result.WriteString(meta.Content)
	result.WriteString("\n```")

	return result.String()
}

func (m *toolCallCmp) formatEditResultForCopy() string {
	var meta tools.EditResponseMetadata
	if m.result.Metadata == "" {
		return m.result.Content
	}

	if json.Unmarshal([]byte(m.result.Metadata), &meta) != nil {
		return m.result.Content
	}

	var params tools.EditParams
	json.Unmarshal([]byte(m.call.Input), &params)

	var result strings.Builder

	if meta.OldContent != "" || meta.NewContent != "" {
		fileName := params.FilePath
		if fileName != "" {
			fileName = fsext.PrettyPath(fileName)
		}
		diffContent, additions, removals := diff.GenerateDiff(meta.OldContent, meta.NewContent, fileName)

		result.WriteString(fmt.Sprintf("Changes: +%d -%d\n", additions, removals))
		result.WriteString("```diff\n")
		result.WriteString(diffContent)
		result.WriteString("\n```")
	}

	return result.String()
}

func (m *toolCallCmp) formatMultiEditResultForCopy() string {
	var meta tools.MultiEditResponseMetadata
	if m.result.Metadata == "" {
		return m.result.Content
	}

	if json.Unmarshal([]byte(m.result.Metadata), &meta) != nil {
		return m.result.Content
	}

	var params tools.MultiEditParams
	json.Unmarshal([]byte(m.call.Input), &params)

	var result strings.Builder
	if meta.OldContent != "" || meta.NewContent != "" {
		fileName := params.FilePath
		if fileName != "" {
			fileName = fsext.PrettyPath(fileName)
		}
		diffContent, additions, removals := diff.GenerateDiff(meta.OldContent, meta.NewContent, fileName)

		result.WriteString(fmt.Sprintf("Changes: +%d -%d\n", additions, removals))
		result.WriteString("```diff\n")
		result.WriteString(diffContent)
		result.WriteString("\n```")
	}

	return result.String()
}

func (m *toolCallCmp) formatWriteResultForCopy() string {
	var params tools.WriteParams
	if json.Unmarshal([]byte(m.call.Input), &params) != nil {
		return m.result.Content
	}

	lang := ""
	if params.FilePath != "" {
		ext := strings.ToLower(filepath.Ext(params.FilePath))
		switch ext {
		case ".go":
			lang = "go"
		case ".js", ".mjs":
			lang = "javascript"
		case ".ts":
			lang = "typescript"
		case ".py":
			lang = "python"
		case ".rs":
			lang = "rust"
		case ".java":
			lang = "java"
		case ".c":
			lang = "c"
		case ".cpp", ".cc", ".cxx":
			lang = "cpp"
		case ".sh", ".bash":
			lang = "bash"
		case ".json":
			lang = "json"
		case ".yaml", ".yml":
			lang = "yaml"
		case ".xml":
			lang = "xml"
		case ".html":
			lang = "html"
		case ".css":
			lang = "css"
		case ".md":
			lang = "markdown"
		}
	}

	var result strings.Builder
	result.WriteString(fmt.Sprintf("File: %s\n", fsext.PrettyPath(params.FilePath)))
	if lang != "" {
		result.WriteString(fmt.Sprintf("```%s\n", lang))
	} else {
		result.WriteString("```\n")
	}
	result.WriteString(params.Content)
	result.WriteString("\n```")

	return result.String()
}

func (m *toolCallCmp) formatFetchResultForCopy() string {
	var params tools.FetchParams
	if json.Unmarshal([]byte(m.call.Input), &params) != nil {
		return m.result.Content
	}

	var result strings.Builder
	if params.URL != "" {
		result.WriteString(fmt.Sprintf("URL: %s\n", params.URL))
	}

	switch params.Format {
	case "html":
		result.WriteString("```html\n")
	case "text":
		result.WriteString("```\n")
	default: // markdown
		result.WriteString("```markdown\n")
	}
	result.WriteString(m.result.Content)
	result.WriteString("\n```")

	return result.String()
}

func (m *toolCallCmp) formatAgentResultForCopy() string {
	var result strings.Builder

	if len(m.nestedToolCalls) > 0 {
		result.WriteString("### Nested Tool Calls:\n")
		for i, nestedCall := range m.nestedToolCalls {
			nestedContent := nestedCall.(*toolCallCmp).formatToolForCopy()
			indentedContent := strings.ReplaceAll(nestedContent, "\n", "\n  ")
			result.WriteString(fmt.Sprintf("%d. %s\n", i+1, indentedContent))
			if i < len(m.nestedToolCalls)-1 {
				result.WriteString("\n")
			}
		}

		if m.result.Content != "" {
			result.WriteString("\n### Final Result:\n")
		}
	}

	if m.result.Content != "" {
		result.WriteString(fmt.Sprintf("```markdown\n%s\n```", m.result.Content))
	}

	return result.String()
}

// SetToolCall updates the tool call data and stops spinning if finished
func (m *toolCallCmp) SetToolCall(call message.ToolCall) {
	m.call = call
	if m.call.Finished {
		m.spinning = false
	}
}

// ParentMessageID returns the ID of the message that initiated this tool call
func (m *toolCallCmp) ParentMessageID() string {
	return m.parentMessageID
}

// SetToolResult updates the tool result and stops the spinning animation
func (m *toolCallCmp) SetToolResult(result message.ToolResult) {
	m.result = result
	m.spinning = false
}

// GetToolCall returns the current tool call data
func (m *toolCallCmp) GetToolCall() message.ToolCall {
	return m.call
}

// GetToolResult returns the current tool result data
func (m *toolCallCmp) GetToolResult() message.ToolResult {
	return m.result
}

// GetNestedToolCalls returns the nested tool calls
func (m *toolCallCmp) GetNestedToolCalls() []ToolCallCmp {
	return m.nestedToolCalls
}

// SetNestedToolCalls sets the nested tool calls
func (m *toolCallCmp) SetNestedToolCalls(calls []ToolCallCmp) {
	m.nestedToolCalls = calls
	for _, nested := range m.nestedToolCalls {
		nested.SetSize(m.width, 0)
	}
}

// SetIsNested sets whether this tool call is nested within another
func (m *toolCallCmp) SetIsNested(isNested bool) {
	m.isNested = isNested
}

// Rendering methods

// renderPending displays the tool name with a loading animation for pending tool calls
func (m *toolCallCmp) renderPending() string {
	t := styles.CurrentTheme()
	icon := t.S().Base.Foreground(t.GreenDark).Render(styles.ToolPending)
	if m.isNested {
		tool := t.S().Base.Foreground(t.FgHalfMuted).Render(prettifyToolName(m.call.Name))
		return fmt.Sprintf("%s %s %s", icon, tool, m.anim.View())
	}
	tool := t.S().Base.Foreground(t.Blue).Render(prettifyToolName(m.call.Name))
	return fmt.Sprintf("%s %s %s", icon, tool, m.anim.View())
}

// style returns the lipgloss style for the tool call component.
// Applies muted colors and focus-dependent border styles.
func (m *toolCallCmp) style() lipgloss.Style {
	t := styles.CurrentTheme()

	if m.isNested {
		return t.S().Muted
	}
	style := t.S().Muted.PaddingLeft(4)

	if m.focused {
		style = style.PaddingLeft(3).BorderStyle(focusedMessageBorder).BorderLeft(true).BorderForeground(t.GreenDark)
	}
	return style
}

// textWidth calculates the available width for text content,
// accounting for borders and padding
func (m *toolCallCmp) textWidth() int {
	if m.isNested {
		return m.width - 6
	}
	return m.width - 5 // take into account the border and PaddingLeft
}

// fit truncates content to fit within the specified width with ellipsis
func (m *toolCallCmp) fit(content string, width int) string {
	t := styles.CurrentTheme()
	lineStyle := t.S().Muted
	dots := lineStyle.Render("…")
	return ansi.Truncate(content, width, dots)
}

// Focus management methods

// Blur removes focus from the tool call component
func (m *toolCallCmp) Blur() tea.Cmd {
	m.focused = false
	return nil
}

// Focus sets focus on the tool call component
func (m *toolCallCmp) Focus() tea.Cmd {
	m.focused = true
	return nil
}

// IsFocused returns whether the tool call component is currently focused
func (m *toolCallCmp) IsFocused() bool {
	return m.focused
}

// Size management methods

// GetSize returns the current dimensions of the tool call component
func (m *toolCallCmp) GetSize() (int, int) {
	return m.width, 0
}

// SetSize updates the width of the tool call component for text wrapping
func (m *toolCallCmp) SetSize(width int, height int) tea.Cmd {
	m.width = width
	for _, nested := range m.nestedToolCalls {
		nested.SetSize(width, height)
	}
	return nil
}

// shouldSpin determines whether the tool call should show a loading animation.
// Returns true if the tool call is not finished or if the result doesn't match the call ID.
func (m *toolCallCmp) shouldSpin() bool {
	return !m.call.Finished && !m.cancelled
}

// Spinning returns whether the tool call is currently showing a loading animation
func (m *toolCallCmp) Spinning() bool {
	if m.spinning {
		return true
	}
	for _, nested := range m.nestedToolCalls {
		if nested.Spinning() {
			return true
		}
	}
	return m.spinning
}

func (m *toolCallCmp) ID() string {
	return m.call.ID
}

// SetPermissionRequested marks that a permission request was made for this tool call
func (m *toolCallCmp) SetPermissionRequested() {
	m.permissionRequested = true
}

// SetPermissionGranted marks that permission was granted for this tool call
func (m *toolCallCmp) SetPermissionGranted() {
	m.permissionGranted = true
}



================================================
FILE: internal/tui/components/chat/sidebar/sidebar.go
================================================
package sidebar

import (
	"context"
	"fmt"
	"os"
	"slices"
	"strings"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/diff"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/history"
	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/charmbracelet/crush/internal/session"
	"github.com/charmbracelet/crush/internal/tui/components/chat"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/components/files"
	"github.com/charmbracelet/crush/internal/tui/components/logo"
	lspcomponent "github.com/charmbracelet/crush/internal/tui/components/lsp"
	"github.com/charmbracelet/crush/internal/tui/components/mcp"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/crush/internal/version"
	"github.com/charmbracelet/lipgloss/v2"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)

type FileHistory struct {
	initialVersion history.File
	latestVersion  history.File
}

const LogoHeightBreakpoint = 30

// Default maximum number of items to show in each section
const (
	DefaultMaxFilesShown = 10
	DefaultMaxLSPsShown  = 8
	DefaultMaxMCPsShown  = 8
	MinItemsPerSection   = 2 // Minimum items to show per section
)

type SessionFile struct {
	History   FileHistory
	FilePath  string
	Additions int
	Deletions int
}
type SessionFilesMsg struct {
	Files []SessionFile
}

type Sidebar interface {
	util.Model
	layout.Sizeable
	SetSession(session session.Session) tea.Cmd
	SetCompactMode(bool)
}

type sidebarCmp struct {
	width, height int
	session       session.Session
	logo          string
	cwd           string
	lspClients    map[string]*lsp.Client
	compactMode   bool
	history       history.Service
	files         *csync.Map[string, SessionFile]
}

func New(history history.Service, lspClients map[string]*lsp.Client, compact bool) Sidebar {
	return &sidebarCmp{
		lspClients:  lspClients,
		history:     history,
		compactMode: compact,
		files:       csync.NewMap[string, SessionFile](),
	}
}

func (m *sidebarCmp) Init() tea.Cmd {
	return nil
}

func (m *sidebarCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case SessionFilesMsg:
		m.files = csync.NewMap[string, SessionFile]()
		for _, file := range msg.Files {
			m.files.Set(file.FilePath, file)
		}
		return m, nil

	case chat.SessionClearedMsg:
		m.session = session.Session{}
	case pubsub.Event[history.File]:
		return m, m.handleFileHistoryEvent(msg)
	case pubsub.Event[session.Session]:
		if msg.Type == pubsub.UpdatedEvent {
			if m.session.ID == msg.Payload.ID {
				m.session = msg.Payload
			}
		}
	}
	return m, nil
}

func (m *sidebarCmp) View() string {
	t := styles.CurrentTheme()
	parts := []string{}

	style := t.S().Base.
		Width(m.width).
		Height(m.height).
		Padding(1)
	if m.compactMode {
		style = style.PaddingTop(0)
	}

	if !m.compactMode {
		if m.height > LogoHeightBreakpoint {
			parts = append(parts, m.logo)
		} else {
			// Use a smaller logo for smaller screens
			parts = append(parts,
				logo.SmallRender(m.width-style.GetHorizontalFrameSize()),
				"")
		}
	}

	if !m.compactMode && m.session.ID != "" {
		parts = append(parts, t.S().Muted.Render(m.session.Title), "")
	} else if m.session.ID != "" {
		parts = append(parts, t.S().Text.Render(m.session.Title), "")
	}

	if !m.compactMode {
		parts = append(parts,
			m.cwd,
			"",
		)
	}
	parts = append(parts,
		m.currentModelBlock(),
	)

	// Check if we should use horizontal layout for sections
	if m.compactMode && m.width > m.height {
		// Horizontal layout for compact mode when width > height
		sectionsContent := m.renderSectionsHorizontal()
		if sectionsContent != "" {
			parts = append(parts, "", sectionsContent)
		}
	} else {
		// Vertical layout (default)
		if m.session.ID != "" {
			parts = append(parts, "", m.filesBlock())
		}
		parts = append(parts,
			"",
			m.lspBlock(),
			"",
			m.mcpBlock(),
		)
	}

	return style.Render(
		lipgloss.JoinVertical(lipgloss.Left, parts...),
	)
}

func (m *sidebarCmp) handleFileHistoryEvent(event pubsub.Event[history.File]) tea.Cmd {
	return func() tea.Msg {
		file := event.Payload
		found := false
		for existing := range m.files.Seq() {
			if existing.FilePath != file.Path {
				continue
			}
			if existing.History.latestVersion.Version < file.Version {
				existing.History.latestVersion = file
			} else if file.Version == 0 {
				existing.History.initialVersion = file
			} else {
				// If the version is not greater than the latest, we ignore it
				continue
			}
			before, _ := fsext.ToUnixLineEndings(existing.History.initialVersion.Content)
			after, _ := fsext.ToUnixLineEndings(existing.History.latestVersion.Content)
			path := existing.History.initialVersion.Path
			cwd := config.Get().WorkingDir()
			path = strings.TrimPrefix(path, cwd)
			_, additions, deletions := diff.GenerateDiff(before, after, path)
			existing.Additions = additions
			existing.Deletions = deletions
			m.files.Set(file.Path, existing)
			found = true
			break
		}
		if found {
			return nil
		}
		sf := SessionFile{
			History: FileHistory{
				initialVersion: file,
				latestVersion:  file,
			},
			FilePath:  file.Path,
			Additions: 0,
			Deletions: 0,
		}
		m.files.Set(file.Path, sf)
		return nil
	}
}

func (m *sidebarCmp) loadSessionFiles() tea.Msg {
	files, err := m.history.ListBySession(context.Background(), m.session.ID)
	if err != nil {
		return util.InfoMsg{
			Type: util.InfoTypeError,
			Msg:  err.Error(),
		}
	}

	fileMap := make(map[string]FileHistory)

	for _, file := range files {
		if existing, ok := fileMap[file.Path]; ok {
			// Update the latest version
			existing.latestVersion = file
			fileMap[file.Path] = existing
		} else {
			// Add the initial version
			fileMap[file.Path] = FileHistory{
				initialVersion: file,
				latestVersion:  file,
			}
		}
	}

	sessionFiles := make([]SessionFile, 0, len(fileMap))
	for path, fh := range fileMap {
		cwd := config.Get().WorkingDir()
		path = strings.TrimPrefix(path, cwd)
		before, _ := fsext.ToUnixLineEndings(fh.initialVersion.Content)
		after, _ := fsext.ToUnixLineEndings(fh.latestVersion.Content)
		_, additions, deletions := diff.GenerateDiff(before, after, path)
		sessionFiles = append(sessionFiles, SessionFile{
			History:   fh,
			FilePath:  path,
			Additions: additions,
			Deletions: deletions,
		})
	}

	return SessionFilesMsg{
		Files: sessionFiles,
	}
}

func (m *sidebarCmp) SetSize(width, height int) tea.Cmd {
	m.logo = m.logoBlock()
	m.cwd = cwd()
	m.width = width
	m.height = height
	return nil
}

func (m *sidebarCmp) GetSize() (int, int) {
	return m.width, m.height
}

func (m *sidebarCmp) logoBlock() string {
	t := styles.CurrentTheme()
	return logo.Render(version.Version, true, logo.Opts{
		FieldColor:   t.Primary,
		TitleColorA:  t.Secondary,
		TitleColorB:  t.Primary,
		CharmColor:   t.Secondary,
		VersionColor: t.Primary,
		Width:        m.width - 2,
	})
}

func (m *sidebarCmp) getMaxWidth() int {
	return min(m.width-2, 58) // -2 for padding
}

// calculateAvailableHeight estimates how much height is available for dynamic content
func (m *sidebarCmp) calculateAvailableHeight() int {
	usedHeight := 0

	if !m.compactMode {
		if m.height > LogoHeightBreakpoint {
			usedHeight += 7 // Approximate logo height
		} else {
			usedHeight += 2 // Smaller logo height
		}
		usedHeight += 1 // Empty line after logo
	}

	if m.session.ID != "" {
		usedHeight += 1 // Title line
		usedHeight += 1 // Empty line after title
	}

	if !m.compactMode {
		usedHeight += 1 // CWD line
		usedHeight += 1 // Empty line after CWD
	}

	usedHeight += 2 // Model info

	usedHeight += 6 // 3 sections × 2 lines each (header + empty line)

	// Base padding
	usedHeight += 2 // Top and bottom padding

	return max(0, m.height-usedHeight)
}

// getDynamicLimits calculates how many items to show in each section based on available height
func (m *sidebarCmp) getDynamicLimits() (maxFiles, maxLSPs, maxMCPs int) {
	availableHeight := m.calculateAvailableHeight()

	// If we have very little space, use minimum values
	if availableHeight < 10 {
		return MinItemsPerSection, MinItemsPerSection, MinItemsPerSection
	}

	// Distribute available height among the three sections
	// Give priority to files, then LSPs, then MCPs
	totalSections := 3
	heightPerSection := availableHeight / totalSections

	// Calculate limits for each section, ensuring minimums
	maxFiles = max(MinItemsPerSection, min(DefaultMaxFilesShown, heightPerSection))
	maxLSPs = max(MinItemsPerSection, min(DefaultMaxLSPsShown, heightPerSection))
	maxMCPs = max(MinItemsPerSection, min(DefaultMaxMCPsShown, heightPerSection))

	// If we have extra space, give it to files first
	remainingHeight := availableHeight - (maxFiles + maxLSPs + maxMCPs)
	if remainingHeight > 0 {
		extraForFiles := min(remainingHeight, DefaultMaxFilesShown-maxFiles)
		maxFiles += extraForFiles
		remainingHeight -= extraForFiles

		if remainingHeight > 0 {
			extraForLSPs := min(remainingHeight, DefaultMaxLSPsShown-maxLSPs)
			maxLSPs += extraForLSPs
			remainingHeight -= extraForLSPs

			if remainingHeight > 0 {
				maxMCPs += min(remainingHeight, DefaultMaxMCPsShown-maxMCPs)
			}
		}
	}

	return maxFiles, maxLSPs, maxMCPs
}

// renderSectionsHorizontal renders the files, LSPs, and MCPs sections horizontally
func (m *sidebarCmp) renderSectionsHorizontal() string {
	// Calculate available width for each section
	totalWidth := m.width - 4 // Account for padding and spacing
	sectionWidth := min(50, totalWidth/3)

	// Get the sections content with limited height
	var filesContent, lspContent, mcpContent string

	filesContent = m.filesBlockCompact(sectionWidth)
	lspContent = m.lspBlockCompact(sectionWidth)
	mcpContent = m.mcpBlockCompact(sectionWidth)

	return lipgloss.JoinHorizontal(lipgloss.Top, filesContent, " ", lspContent, " ", mcpContent)
}

// filesBlockCompact renders the files block with limited width and height for horizontal layout
func (m *sidebarCmp) filesBlockCompact(maxWidth int) string {
	// Convert map to slice and handle type conversion
	sessionFiles := slices.Collect(m.files.Seq())
	fileSlice := make([]files.SessionFile, len(sessionFiles))
	for i, sf := range sessionFiles {
		fileSlice[i] = files.SessionFile{
			History: files.FileHistory{
				InitialVersion: sf.History.initialVersion,
				LatestVersion:  sf.History.latestVersion,
			},
			FilePath:  sf.FilePath,
			Additions: sf.Additions,
			Deletions: sf.Deletions,
		}
	}

	// Limit items for horizontal layout
	maxItems := min(5, len(fileSlice))
	availableHeight := m.height - 8 // Reserve space for header and other content
	if availableHeight > 0 {
		maxItems = min(maxItems, availableHeight)
	}

	return files.RenderFileBlock(fileSlice, files.RenderOptions{
		MaxWidth:    maxWidth,
		MaxItems:    maxItems,
		ShowSection: true,
		SectionName: "Modified Files",
	}, true)
}

// lspBlockCompact renders the LSP block with limited width and height for horizontal layout
func (m *sidebarCmp) lspBlockCompact(maxWidth int) string {
	// Limit items for horizontal layout
	lspConfigs := config.Get().LSP.Sorted()
	maxItems := min(5, len(lspConfigs))
	availableHeight := m.height - 8
	if availableHeight > 0 {
		maxItems = min(maxItems, availableHeight)
	}

	return lspcomponent.RenderLSPBlock(m.lspClients, lspcomponent.RenderOptions{
		MaxWidth:    maxWidth,
		MaxItems:    maxItems,
		ShowSection: true,
		SectionName: "LSPs",
	}, true)
}

// mcpBlockCompact renders the MCP block with limited width and height for horizontal layout
func (m *sidebarCmp) mcpBlockCompact(maxWidth int) string {
	// Limit items for horizontal layout
	maxItems := min(5, len(config.Get().MCP.Sorted()))
	availableHeight := m.height - 8
	if availableHeight > 0 {
		maxItems = min(maxItems, availableHeight)
	}

	return mcp.RenderMCPBlock(mcp.RenderOptions{
		MaxWidth:    maxWidth,
		MaxItems:    maxItems,
		ShowSection: true,
		SectionName: "MCPs",
	}, true)
}

func (m *sidebarCmp) filesBlock() string {
	// Convert map to slice and handle type conversion
	sessionFiles := slices.Collect(m.files.Seq())
	fileSlice := make([]files.SessionFile, len(sessionFiles))
	for i, sf := range sessionFiles {
		fileSlice[i] = files.SessionFile{
			History: files.FileHistory{
				InitialVersion: sf.History.initialVersion,
				LatestVersion:  sf.History.latestVersion,
			},
			FilePath:  sf.FilePath,
			Additions: sf.Additions,
			Deletions: sf.Deletions,
		}
	}

	// Limit the number of files shown
	maxFiles, _, _ := m.getDynamicLimits()
	maxFiles = min(len(fileSlice), maxFiles)

	return files.RenderFileBlock(fileSlice, files.RenderOptions{
		MaxWidth:    m.getMaxWidth(),
		MaxItems:    maxFiles,
		ShowSection: true,
		SectionName: core.Section("Modified Files", m.getMaxWidth()),
	}, true)
}

func (m *sidebarCmp) lspBlock() string {
	// Limit the number of LSPs shown
	_, maxLSPs, _ := m.getDynamicLimits()
	lspConfigs := config.Get().LSP.Sorted()
	maxLSPs = min(len(lspConfigs), maxLSPs)

	return lspcomponent.RenderLSPBlock(m.lspClients, lspcomponent.RenderOptions{
		MaxWidth:    m.getMaxWidth(),
		MaxItems:    maxLSPs,
		ShowSection: true,
		SectionName: core.Section("LSPs", m.getMaxWidth()),
	}, true)
}

func (m *sidebarCmp) mcpBlock() string {
	// Limit the number of MCPs shown
	_, _, maxMCPs := m.getDynamicLimits()
	mcps := config.Get().MCP.Sorted()
	maxMCPs = min(len(mcps), maxMCPs)

	return mcp.RenderMCPBlock(mcp.RenderOptions{
		MaxWidth:    m.getMaxWidth(),
		MaxItems:    maxMCPs,
		ShowSection: true,
		SectionName: core.Section("MCPs", m.getMaxWidth()),
	}, true)
}

func formatTokensAndCost(tokens, contextWindow int64, cost float64) string {
	t := styles.CurrentTheme()
	// Format tokens in human-readable format (e.g., 110K, 1.2M)
	var formattedTokens string
	switch {
	case tokens >= 1_000_000:
		formattedTokens = fmt.Sprintf("%.1fM", float64(tokens)/1_000_000)
	case tokens >= 1_000:
		formattedTokens = fmt.Sprintf("%.1fK", float64(tokens)/1_000)
	default:
		formattedTokens = fmt.Sprintf("%d", tokens)
	}

	// Remove .0 suffix if present
	if strings.HasSuffix(formattedTokens, ".0K") {
		formattedTokens = strings.Replace(formattedTokens, ".0K", "K", 1)
	}
	if strings.HasSuffix(formattedTokens, ".0M") {
		formattedTokens = strings.Replace(formattedTokens, ".0M", "M", 1)
	}

	percentage := (float64(tokens) / float64(contextWindow)) * 100

	baseStyle := t.S().Base

	formattedCost := baseStyle.Foreground(t.FgMuted).Render(fmt.Sprintf("$%.2f", cost))

	formattedTokens = baseStyle.Foreground(t.FgSubtle).Render(fmt.Sprintf("(%s)", formattedTokens))
	formattedPercentage := baseStyle.Foreground(t.FgMuted).Render(fmt.Sprintf("%d%%", int(percentage)))
	formattedTokens = fmt.Sprintf("%s %s", formattedPercentage, formattedTokens)
	if percentage > 80 {
		// add the warning icon
		formattedTokens = fmt.Sprintf("%s %s", styles.WarningIcon, formattedTokens)
	}

	return fmt.Sprintf("%s %s", formattedTokens, formattedCost)
}

func (s *sidebarCmp) currentModelBlock() string {
	cfg := config.Get()
	agentCfg := cfg.Agents["coder"]

	selectedModel := cfg.Models[agentCfg.Model]

	model := config.Get().GetModelByType(agentCfg.Model)
	modelProvider := config.Get().GetProviderForModel(agentCfg.Model)

	t := styles.CurrentTheme()

	modelIcon := t.S().Base.Foreground(t.FgSubtle).Render(styles.ModelIcon)
	modelName := t.S().Text.Render(model.Name)
	modelInfo := fmt.Sprintf("%s %s", modelIcon, modelName)
	parts := []string{
		modelInfo,
	}
	if model.CanReason {
		reasoningInfoStyle := t.S().Subtle.PaddingLeft(2)
		switch modelProvider.Type {
		case catwalk.TypeOpenAI:
			reasoningEffort := model.DefaultReasoningEffort
			if selectedModel.ReasoningEffort != "" {
				reasoningEffort = selectedModel.ReasoningEffort
			}
			formatter := cases.Title(language.English, cases.NoLower)
			parts = append(parts, reasoningInfoStyle.Render(formatter.String(fmt.Sprintf("Reasoning %s", reasoningEffort))))
		case catwalk.TypeAnthropic:
			formatter := cases.Title(language.English, cases.NoLower)
			if selectedModel.Think {
				parts = append(parts, reasoningInfoStyle.Render(formatter.String("Thinking on")))
			} else {
				parts = append(parts, reasoningInfoStyle.Render(formatter.String("Thinking off")))
			}
		}
	}
	if s.session.ID != "" {
		parts = append(
			parts,
			"  "+formatTokensAndCost(
				s.session.CompletionTokens+s.session.PromptTokens,
				model.ContextWindow,
				s.session.Cost,
			),
		)
	}
	return lipgloss.JoinVertical(
		lipgloss.Left,
		parts...,
	)
}

// SetSession implements Sidebar.
func (m *sidebarCmp) SetSession(session session.Session) tea.Cmd {
	m.session = session
	return m.loadSessionFiles
}

// SetCompactMode sets the compact mode for the sidebar.
func (m *sidebarCmp) SetCompactMode(compact bool) {
	m.compactMode = compact
}

func cwd() string {
	cwd := config.Get().WorkingDir()
	t := styles.CurrentTheme()
	// Replace home directory with ~, unless we're at the top level of the
	// home directory).
	homeDir, err := os.UserHomeDir()
	if err == nil && cwd != homeDir {
		cwd = strings.ReplaceAll(cwd, homeDir, "~")
	}
	return t.S().Muted.Render(cwd)
}



================================================
FILE: internal/tui/components/chat/splash/keys.go
================================================
package splash

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	Select,
	Next,
	Previous,
	Yes,
	No,
	Tab,
	LeftRight,
	Back key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Select: key.NewBinding(
			key.WithKeys("enter", "ctrl+y"),
			key.WithHelp("enter", "confirm"),
		),
		Next: key.NewBinding(
			key.WithKeys("down", "ctrl+n"),
			key.WithHelp("↓", "next item"),
		),
		Previous: key.NewBinding(
			key.WithKeys("up", "ctrl+p"),
			key.WithHelp("↑", "previous item"),
		),
		Yes: key.NewBinding(
			key.WithKeys("y", "Y"),
			key.WithHelp("y", "yes"),
		),
		No: key.NewBinding(
			key.WithKeys("n", "N"),
			key.WithHelp("n", "no"),
		),
		Tab: key.NewBinding(
			key.WithKeys("tab"),
			key.WithHelp("tab", "switch"),
		),
		LeftRight: key.NewBinding(
			key.WithKeys("left", "right"),
			key.WithHelp("←/→", "switch"),
		),
		Back: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "back"),
		),
	}
}



================================================
FILE: internal/tui/components/chat/splash/splash.go
================================================
package splash

import (
	"fmt"
	"os"
	"strings"
	"time"

	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/spinner"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/prompt"
	"github.com/charmbracelet/crush/internal/tui/components/chat"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/models"
	"github.com/charmbracelet/crush/internal/tui/components/logo"
	lspcomponent "github.com/charmbracelet/crush/internal/tui/components/lsp"
	"github.com/charmbracelet/crush/internal/tui/components/mcp"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/crush/internal/version"
	"github.com/charmbracelet/lipgloss/v2"
)

type Splash interface {
	util.Model
	layout.Sizeable
	layout.Help
	Cursor() *tea.Cursor
	// SetOnboarding controls whether the splash shows model selection UI
	SetOnboarding(bool)
	// SetProjectInit controls whether the splash shows project initialization prompt
	SetProjectInit(bool)

	// Showing API key input
	IsShowingAPIKey() bool

	// IsAPIKeyValid returns whether the API key is valid
	IsAPIKeyValid() bool
}

const (
	SplashScreenPaddingY = 1 // Padding Y for the splash screen

	LogoGap = 6
)

// OnboardingCompleteMsg is sent when onboarding is complete
type (
	OnboardingCompleteMsg struct{}
	SubmitAPIKeyMsg       struct{}
)

type splashCmp struct {
	width, height int
	keyMap        KeyMap
	logoRendered  string

	// State
	isOnboarding     bool
	needsProjectInit bool
	needsAPIKey      bool
	selectedNo       bool

	listHeight    int
	modelList     *models.ModelListComponent
	apiKeyInput   *models.APIKeyInput
	selectedModel *models.ModelOption
	isAPIKeyValid bool
	apiKeyValue   string
}

func New() Splash {
	keyMap := DefaultKeyMap()
	listKeyMap := list.DefaultKeyMap()
	listKeyMap.Down.SetEnabled(false)
	listKeyMap.Up.SetEnabled(false)
	listKeyMap.HalfPageDown.SetEnabled(false)
	listKeyMap.HalfPageUp.SetEnabled(false)
	listKeyMap.Home.SetEnabled(false)
	listKeyMap.End.SetEnabled(false)
	listKeyMap.DownOneItem = keyMap.Next
	listKeyMap.UpOneItem = keyMap.Previous

	modelList := models.NewModelListComponent(listKeyMap, "Find your fave", false)
	apiKeyInput := models.NewAPIKeyInput()

	return &splashCmp{
		width:        0,
		height:       0,
		keyMap:       keyMap,
		logoRendered: "",
		modelList:    modelList,
		apiKeyInput:  apiKeyInput,
		selectedNo:   false,
	}
}

func (s *splashCmp) SetOnboarding(onboarding bool) {
	s.isOnboarding = onboarding
}

func (s *splashCmp) SetProjectInit(needsInit bool) {
	s.needsProjectInit = needsInit
}

// GetSize implements SplashPage.
func (s *splashCmp) GetSize() (int, int) {
	return s.width, s.height
}

// Init implements SplashPage.
func (s *splashCmp) Init() tea.Cmd {
	return tea.Batch(s.modelList.Init(), s.apiKeyInput.Init())
}

// SetSize implements SplashPage.
func (s *splashCmp) SetSize(width int, height int) tea.Cmd {
	wasSmallScreen := s.isSmallScreen()
	rerenderLogo := width != s.width
	s.height = height
	s.width = width
	if rerenderLogo || wasSmallScreen != s.isSmallScreen() {
		s.logoRendered = s.logoBlock()
	}
	// remove padding, logo height, gap, title space
	s.listHeight = s.height - lipgloss.Height(s.logoRendered) - (SplashScreenPaddingY * 2) - s.logoGap() - 2
	listWidth := min(60, width)
	s.apiKeyInput.SetWidth(width - 2)
	return s.modelList.SetSize(listWidth, s.listHeight)
}

// Update implements SplashPage.
func (s *splashCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		return s, s.SetSize(msg.Width, msg.Height)
	case models.APIKeyStateChangeMsg:
		u, cmd := s.apiKeyInput.Update(msg)
		s.apiKeyInput = u.(*models.APIKeyInput)
		if msg.State == models.APIKeyInputStateVerified {
			return s, tea.Tick(5*time.Second, func(t time.Time) tea.Msg {
				return SubmitAPIKeyMsg{}
			})
		}
		return s, cmd
	case SubmitAPIKeyMsg:
		if s.isAPIKeyValid {
			return s, s.saveAPIKeyAndContinue(s.apiKeyValue)
		}
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, s.keyMap.Back):
			if s.isAPIKeyValid {
				return s, nil
			}
			if s.needsAPIKey {
				// Go back to model selection
				s.needsAPIKey = false
				s.selectedModel = nil
				s.isAPIKeyValid = false
				s.apiKeyValue = ""
				s.apiKeyInput.Reset()
				return s, nil
			}
		case key.Matches(msg, s.keyMap.Select):
			if s.isAPIKeyValid {
				return s, s.saveAPIKeyAndContinue(s.apiKeyValue)
			}
			if s.isOnboarding && !s.needsAPIKey {
				selectedItem := s.modelList.SelectedModel()
				if selectedItem == nil {
					return s, nil
				}
				if s.isProviderConfigured(string(selectedItem.Provider.ID)) {
					cmd := s.setPreferredModel(*selectedItem)
					s.isOnboarding = false
					return s, tea.Batch(cmd, util.CmdHandler(OnboardingCompleteMsg{}))
				} else {
					// Provider not configured, show API key input
					s.needsAPIKey = true
					s.selectedModel = selectedItem
					s.apiKeyInput.SetProviderName(selectedItem.Provider.Name)
					return s, nil
				}
			} else if s.needsAPIKey {
				// Handle API key submission
				s.apiKeyValue = strings.TrimSpace(s.apiKeyInput.Value())
				if s.apiKeyValue == "" {
					return s, nil
				}

				provider, err := s.getProvider(s.selectedModel.Provider.ID)
				if err != nil || provider == nil {
					return s, util.ReportError(fmt.Errorf("provider %s not found", s.selectedModel.Provider.ID))
				}
				providerConfig := config.ProviderConfig{
					ID:      string(s.selectedModel.Provider.ID),
					Name:    s.selectedModel.Provider.Name,
					APIKey:  s.apiKeyValue,
					Type:    provider.Type,
					BaseURL: provider.APIEndpoint,
				}
				return s, tea.Sequence(
					util.CmdHandler(models.APIKeyStateChangeMsg{
						State: models.APIKeyInputStateVerifying,
					}),
					func() tea.Msg {
						start := time.Now()
						err := providerConfig.TestConnection(config.Get().Resolver())
						// intentionally wait for at least 750ms to make sure the user sees the spinner
						elapsed := time.Since(start)
						if elapsed < 750*time.Millisecond {
							time.Sleep(750*time.Millisecond - elapsed)
						}
						if err == nil {
							s.isAPIKeyValid = true
							return models.APIKeyStateChangeMsg{
								State: models.APIKeyInputStateVerified,
							}
						}
						return models.APIKeyStateChangeMsg{
							State: models.APIKeyInputStateError,
						}
					},
				)
			} else if s.needsProjectInit {
				return s, s.initializeProject()
			}
		case key.Matches(msg, s.keyMap.Tab, s.keyMap.LeftRight):
			if s.needsAPIKey {
				u, cmd := s.apiKeyInput.Update(msg)
				s.apiKeyInput = u.(*models.APIKeyInput)
				return s, cmd
			}
			if s.needsProjectInit {
				s.selectedNo = !s.selectedNo
				return s, nil
			}
		case key.Matches(msg, s.keyMap.Yes):
			if s.needsAPIKey {
				u, cmd := s.apiKeyInput.Update(msg)
				s.apiKeyInput = u.(*models.APIKeyInput)
				return s, cmd
			}
			if s.isOnboarding {
				u, cmd := s.modelList.Update(msg)
				s.modelList = u
				return s, cmd
			}
			if s.needsProjectInit {
				return s, s.initializeProject()
			}
		case key.Matches(msg, s.keyMap.No):
			if s.needsAPIKey {
				u, cmd := s.apiKeyInput.Update(msg)
				s.apiKeyInput = u.(*models.APIKeyInput)
				return s, cmd
			}
			if s.isOnboarding {
				u, cmd := s.modelList.Update(msg)
				s.modelList = u
				return s, cmd
			}
			if s.needsProjectInit {
				s.selectedNo = true
				return s, s.initializeProject()
			}
		default:
			if s.needsAPIKey {
				u, cmd := s.apiKeyInput.Update(msg)
				s.apiKeyInput = u.(*models.APIKeyInput)
				return s, cmd
			} else if s.isOnboarding {
				u, cmd := s.modelList.Update(msg)
				s.modelList = u
				return s, cmd
			}
		}
	case tea.PasteMsg:
		if s.needsAPIKey {
			u, cmd := s.apiKeyInput.Update(msg)
			s.apiKeyInput = u.(*models.APIKeyInput)
			return s, cmd
		} else if s.isOnboarding {
			var cmd tea.Cmd
			s.modelList, cmd = s.modelList.Update(msg)
			return s, cmd
		}
	case spinner.TickMsg:
		u, cmd := s.apiKeyInput.Update(msg)
		s.apiKeyInput = u.(*models.APIKeyInput)
		return s, cmd
	}
	return s, nil
}

func (s *splashCmp) saveAPIKeyAndContinue(apiKey string) tea.Cmd {
	if s.selectedModel == nil {
		return nil
	}

	cfg := config.Get()
	err := cfg.SetProviderAPIKey(string(s.selectedModel.Provider.ID), apiKey)
	if err != nil {
		return util.ReportError(fmt.Errorf("failed to save API key: %w", err))
	}

	// Reset API key state and continue with model selection
	s.needsAPIKey = false
	cmd := s.setPreferredModel(*s.selectedModel)
	s.isOnboarding = false
	s.selectedModel = nil
	s.isAPIKeyValid = false

	return tea.Batch(cmd, util.CmdHandler(OnboardingCompleteMsg{}))
}

func (s *splashCmp) initializeProject() tea.Cmd {
	s.needsProjectInit = false

	if err := config.MarkProjectInitialized(); err != nil {
		return util.ReportError(err)
	}
	var cmds []tea.Cmd

	cmds = append(cmds, util.CmdHandler(OnboardingCompleteMsg{}))
	if !s.selectedNo {
		cmds = append(cmds,
			util.CmdHandler(chat.SessionClearedMsg{}),
			util.CmdHandler(chat.SendMsg{
				Text: prompt.Initialize(),
			}),
		)
	}
	return tea.Sequence(cmds...)
}

func (s *splashCmp) setPreferredModel(selectedItem models.ModelOption) tea.Cmd {
	cfg := config.Get()
	model := cfg.GetModel(string(selectedItem.Provider.ID), selectedItem.Model.ID)
	if model == nil {
		return util.ReportError(fmt.Errorf("model %s not found for provider %s", selectedItem.Model.ID, selectedItem.Provider.ID))
	}

	selectedModel := config.SelectedModel{
		Model:           selectedItem.Model.ID,
		Provider:        string(selectedItem.Provider.ID),
		ReasoningEffort: model.DefaultReasoningEffort,
		MaxTokens:       model.DefaultMaxTokens,
	}

	err := cfg.UpdatePreferredModel(config.SelectedModelTypeLarge, selectedModel)
	if err != nil {
		return util.ReportError(err)
	}

	// Now lets automatically setup the small model
	knownProvider, err := s.getProvider(selectedItem.Provider.ID)
	if err != nil {
		return util.ReportError(err)
	}
	if knownProvider == nil {
		// for local provider we just use the same model
		err = cfg.UpdatePreferredModel(config.SelectedModelTypeSmall, selectedModel)
		if err != nil {
			return util.ReportError(err)
		}
	} else {
		smallModel := knownProvider.DefaultSmallModelID
		model := cfg.GetModel(string(selectedItem.Provider.ID), smallModel)
		// should never happen
		if model == nil {
			err = cfg.UpdatePreferredModel(config.SelectedModelTypeSmall, selectedModel)
			if err != nil {
				return util.ReportError(err)
			}
			return nil
		}
		smallSelectedModel := config.SelectedModel{
			Model:           smallModel,
			Provider:        string(selectedItem.Provider.ID),
			ReasoningEffort: model.DefaultReasoningEffort,
			MaxTokens:       model.DefaultMaxTokens,
		}
		err = cfg.UpdatePreferredModel(config.SelectedModelTypeSmall, smallSelectedModel)
		if err != nil {
			return util.ReportError(err)
		}
	}
	cfg.SetupAgents()
	return nil
}

func (s *splashCmp) getProvider(providerID catwalk.InferenceProvider) (*catwalk.Provider, error) {
	providers, err := config.Providers()
	if err != nil {
		return nil, err
	}
	for _, p := range providers {
		if p.ID == providerID {
			return &p, nil
		}
	}
	return nil, nil
}

func (s *splashCmp) isProviderConfigured(providerID string) bool {
	cfg := config.Get()
	if _, ok := cfg.Providers.Get(providerID); ok {
		return true
	}
	return false
}

func (s *splashCmp) View() string {
	t := styles.CurrentTheme()
	var content string
	if s.needsAPIKey {
		remainingHeight := s.height - lipgloss.Height(s.logoRendered) - (SplashScreenPaddingY * 2)
		apiKeyView := t.S().Base.PaddingLeft(1).Render(s.apiKeyInput.View())
		apiKeySelector := t.S().Base.AlignVertical(lipgloss.Bottom).Height(remainingHeight).Render(
			lipgloss.JoinVertical(
				lipgloss.Left,
				apiKeyView,
			),
		)
		content = lipgloss.JoinVertical(
			lipgloss.Left,
			s.logoRendered,
			apiKeySelector,
		)
	} else if s.isOnboarding {
		modelListView := s.modelList.View()
		remainingHeight := s.height - lipgloss.Height(s.logoRendered) - (SplashScreenPaddingY * 2)
		modelSelector := t.S().Base.AlignVertical(lipgloss.Bottom).Height(remainingHeight).Render(
			lipgloss.JoinVertical(
				lipgloss.Left,
				t.S().Base.PaddingLeft(1).Foreground(t.Primary).Render("Choose a Model"),
				"",
				modelListView,
			),
		)
		content = lipgloss.JoinVertical(
			lipgloss.Left,
			s.logoRendered,
			modelSelector,
		)
	} else if s.needsProjectInit {
		titleStyle := t.S().Base.Foreground(t.FgBase)
		bodyStyle := t.S().Base.Foreground(t.FgMuted)
		shortcutStyle := t.S().Base.Foreground(t.Success)

		initText := lipgloss.JoinVertical(
			lipgloss.Left,
			titleStyle.Render("Would you like to initialize this project?"),
			"",
			bodyStyle.Render("When I initialize your codebase I examine the project and put the"),
			bodyStyle.Render("result into a CRUSH.md file which serves as general context."),
			"",
			bodyStyle.Render("You can also initialize anytime via ")+shortcutStyle.Render("ctrl+p")+bodyStyle.Render("."),
			"",
			bodyStyle.Render("Would you like to initialize now?"),
		)

		yesButton := core.SelectableButton(core.ButtonOpts{
			Text:           "Yep!",
			UnderlineIndex: 0,
			Selected:       !s.selectedNo,
		})

		noButton := core.SelectableButton(core.ButtonOpts{
			Text:           "Nope",
			UnderlineIndex: 0,
			Selected:       s.selectedNo,
		})

		buttons := lipgloss.JoinHorizontal(lipgloss.Left, yesButton, "  ", noButton)
		remainingHeight := s.height - lipgloss.Height(s.logoRendered) - (SplashScreenPaddingY * 2)

		initContent := t.S().Base.AlignVertical(lipgloss.Bottom).PaddingLeft(1).Height(remainingHeight).Render(
			lipgloss.JoinVertical(
				lipgloss.Left,
				initText,
				"",
				buttons,
			),
		)

		content = lipgloss.JoinVertical(
			lipgloss.Left,
			s.logoRendered,
			"",
			initContent,
		)
	} else {
		parts := []string{
			s.logoRendered,
			s.infoSection(),
		}
		content = lipgloss.JoinVertical(lipgloss.Left, parts...)
	}

	return t.S().Base.
		Width(s.width).
		Height(s.height).
		PaddingTop(SplashScreenPaddingY).
		PaddingBottom(SplashScreenPaddingY).
		Render(content)
}

func (s *splashCmp) Cursor() *tea.Cursor {
	if s.needsAPIKey {
		cursor := s.apiKeyInput.Cursor()
		if cursor != nil {
			return s.moveCursor(cursor)
		}
	} else if s.isOnboarding {
		cursor := s.modelList.Cursor()
		if cursor != nil {
			return s.moveCursor(cursor)
		}
	} else {
		return nil
	}
	return nil
}

func (s *splashCmp) isSmallScreen() bool {
	// Consider a screen small if either the width is less than 40 or if the
	// height is less than 20
	return s.width < 55 || s.height < 20
}

func (s *splashCmp) infoSection() string {
	t := styles.CurrentTheme()
	infoStyle := t.S().Base.PaddingLeft(2)
	if s.isSmallScreen() {
		infoStyle = infoStyle.MarginTop(1)
	}
	return infoStyle.Render(
		lipgloss.JoinVertical(
			lipgloss.Left,
			s.cwd(),
			"",
			s.currentModelBlock(),
			"",
			lipgloss.JoinHorizontal(lipgloss.Left, s.lspBlock(), s.mcpBlock()),
			"",
		),
	)
}

func (s *splashCmp) logoBlock() string {
	t := styles.CurrentTheme()
	logoStyle := t.S().Base.Padding(0, 2).Width(s.width)
	if s.isSmallScreen() {
		// If the width is too small, render a smaller version of the logo
		// NOTE: 20 is not correct because [splashCmp.height] is not the
		// *actual* window height, instead, it is the height of the splash
		// component and that depends on other variables like compact mode and
		// the height of the editor.
		return logoStyle.Render(
			logo.SmallRender(s.width - logoStyle.GetHorizontalFrameSize()),
		)
	}
	return logoStyle.Render(
		logo.Render(version.Version, false, logo.Opts{
			FieldColor:   t.Primary,
			TitleColorA:  t.Secondary,
			TitleColorB:  t.Primary,
			CharmColor:   t.Secondary,
			VersionColor: t.Primary,
			Width:        s.width - logoStyle.GetHorizontalFrameSize(),
		}),
	)
}

func (s *splashCmp) moveCursor(cursor *tea.Cursor) *tea.Cursor {
	if cursor == nil {
		return nil
	}
	// Calculate the correct Y offset based on current state
	logoHeight := lipgloss.Height(s.logoRendered)
	if s.needsAPIKey {
		infoSectionHeight := lipgloss.Height(s.infoSection())
		baseOffset := logoHeight + SplashScreenPaddingY + infoSectionHeight
		remainingHeight := s.height - baseOffset - lipgloss.Height(s.apiKeyInput.View()) - SplashScreenPaddingY
		offset := baseOffset + remainingHeight
		cursor.Y += offset
		cursor.X = cursor.X + 1
	} else if s.isOnboarding {
		offset := logoHeight + SplashScreenPaddingY + s.logoGap() + 2
		cursor.Y += offset
		cursor.X = cursor.X + 1
	}

	return cursor
}

func (s *splashCmp) logoGap() int {
	if s.height > 35 {
		return LogoGap
	}
	return 0
}

// Bindings implements SplashPage.
func (s *splashCmp) Bindings() []key.Binding {
	if s.needsAPIKey {
		return []key.Binding{
			s.keyMap.Select,
			s.keyMap.Back,
		}
	} else if s.isOnboarding {
		return []key.Binding{
			s.keyMap.Select,
			s.keyMap.Next,
			s.keyMap.Previous,
		}
	} else if s.needsProjectInit {
		return []key.Binding{
			s.keyMap.Select,
			s.keyMap.Yes,
			s.keyMap.No,
			s.keyMap.Tab,
			s.keyMap.LeftRight,
		}
	}
	return []key.Binding{}
}

func (s *splashCmp) getMaxInfoWidth() int {
	return min(s.width-2, 90) // 2 for left padding
}

func (s *splashCmp) cwd() string {
	cwd := config.Get().WorkingDir()
	t := styles.CurrentTheme()
	homeDir, err := os.UserHomeDir()
	if err == nil && cwd != homeDir {
		cwd = strings.ReplaceAll(cwd, homeDir, "~")
	}
	maxWidth := s.getMaxInfoWidth()
	return t.S().Muted.Width(maxWidth).Render(cwd)
}

func LSPList(maxWidth int) []string {
	return lspcomponent.RenderLSPList(nil, lspcomponent.RenderOptions{
		MaxWidth:    maxWidth,
		ShowSection: false,
	})
}

func (s *splashCmp) lspBlock() string {
	t := styles.CurrentTheme()
	maxWidth := s.getMaxInfoWidth() / 2
	section := t.S().Subtle.Render("LSPs")
	lspList := append([]string{section, ""}, LSPList(maxWidth-1)...)
	return t.S().Base.Width(maxWidth).PaddingRight(1).Render(
		lipgloss.JoinVertical(
			lipgloss.Left,
			lspList...,
		),
	)
}

func MCPList(maxWidth int) []string {
	return mcp.RenderMCPList(mcp.RenderOptions{
		MaxWidth:    maxWidth,
		ShowSection: false,
	})
}

func (s *splashCmp) mcpBlock() string {
	t := styles.CurrentTheme()
	maxWidth := s.getMaxInfoWidth() / 2
	section := t.S().Subtle.Render("MCPs")
	mcpList := append([]string{section, ""}, MCPList(maxWidth-1)...)
	return t.S().Base.Width(maxWidth).PaddingRight(1).Render(
		lipgloss.JoinVertical(
			lipgloss.Left,
			mcpList...,
		),
	)
}

func (s *splashCmp) currentModelBlock() string {
	cfg := config.Get()
	agentCfg := cfg.Agents["coder"]
	model := config.Get().GetModelByType(agentCfg.Model)
	if model == nil {
		return ""
	}
	t := styles.CurrentTheme()
	modelIcon := t.S().Base.Foreground(t.FgSubtle).Render(styles.ModelIcon)
	modelName := t.S().Text.Render(model.Name)
	modelInfo := fmt.Sprintf("%s %s", modelIcon, modelName)
	parts := []string{
		modelInfo,
	}

	return lipgloss.JoinVertical(
		lipgloss.Left,
		parts...,
	)
}

func (s *splashCmp) IsShowingAPIKey() bool {
	return s.needsAPIKey
}

func (s *splashCmp) IsAPIKeyValid() bool {
	return s.isAPIKeyValid
}



================================================
FILE: internal/tui/components/completions/completions.go
================================================
package completions

import (
	"strings"

	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

const maxCompletionsHeight = 10

type Completion struct {
	Title string // The title of the completion item
	Value any    // The value of the completion item
}

type OpenCompletionsMsg struct {
	Completions []Completion
	X           int // X position for the completions popup
	Y           int // Y position for the completions popup
}

type FilterCompletionsMsg struct {
	Query  string // The query to filter completions
	Reopen bool
	X      int // X position for the completions popup
	Y      int // Y position for the completions popup
}

type RepositionCompletionsMsg struct {
	X, Y int
}

type CompletionsClosedMsg struct{}

type CompletionsOpenedMsg struct{}

type CloseCompletionsMsg struct{}

type SelectCompletionMsg struct {
	Value  any // The value of the selected completion item
	Insert bool
}

type Completions interface {
	util.Model
	Open() bool
	Query() string // Returns the current filter query
	KeyMap() KeyMap
	Position() (int, int) // Returns the X and Y position of the completions popup
	Width() int
	Height() int
}

type listModel = list.FilterableList[list.CompletionItem[any]]

type completionsCmp struct {
	wWidth    int // The window width
	wHeight   int // The window height
	width     int
	lastWidth int
	height    int  // Height of the completions component`
	x, xorig  int  // X position for the completions popup
	y         int  // Y position for the completions popup
	open      bool // Indicates if the completions are open
	keyMap    KeyMap

	list  listModel
	query string // The current filter query
}

func New() Completions {
	completionsKeyMap := DefaultKeyMap()
	keyMap := list.DefaultKeyMap()
	keyMap.Up.SetEnabled(false)
	keyMap.Down.SetEnabled(false)
	keyMap.HalfPageDown.SetEnabled(false)
	keyMap.HalfPageUp.SetEnabled(false)
	keyMap.Home.SetEnabled(false)
	keyMap.End.SetEnabled(false)
	keyMap.UpOneItem = completionsKeyMap.Up
	keyMap.DownOneItem = completionsKeyMap.Down

	l := list.NewFilterableList(
		[]list.CompletionItem[any]{},
		list.WithFilterInputHidden(),
		list.WithFilterListOptions(
			list.WithDirectionBackward(),
			list.WithKeyMap(keyMap),
		),
	)
	return &completionsCmp{
		width:  0,
		height: maxCompletionsHeight,
		list:   l,
		query:  "",
		keyMap: completionsKeyMap,
	}
}

// Init implements Completions.
func (c *completionsCmp) Init() tea.Cmd {
	return tea.Sequence(
		c.list.Init(),
		c.list.SetSize(c.width, c.height),
	)
}

// Update implements Completions.
func (c *completionsCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		c.wWidth, c.wHeight = msg.Width, msg.Height
		return c, nil
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, c.keyMap.Up):
			u, cmd := c.list.Update(msg)
			c.list = u.(listModel)
			return c, cmd

		case key.Matches(msg, c.keyMap.Down):
			d, cmd := c.list.Update(msg)
			c.list = d.(listModel)
			return c, cmd
		case key.Matches(msg, c.keyMap.UpInsert):
			s := c.list.SelectedItem()
			if s == nil {
				return c, nil
			}
			selectedItem := *s
			c.list.SetSelected(selectedItem.ID())
			return c, util.CmdHandler(SelectCompletionMsg{
				Value:  selectedItem.Value(),
				Insert: true,
			})
		case key.Matches(msg, c.keyMap.DownInsert):
			s := c.list.SelectedItem()
			if s == nil {
				return c, nil
			}
			selectedItem := *s
			c.list.SetSelected(selectedItem.ID())
			return c, util.CmdHandler(SelectCompletionMsg{
				Value:  selectedItem.Value(),
				Insert: true,
			})
		case key.Matches(msg, c.keyMap.Select):
			s := c.list.SelectedItem()
			if s == nil {
				return c, nil
			}
			selectedItem := *s
			c.open = false // Close completions after selection
			return c, util.CmdHandler(SelectCompletionMsg{
				Value: selectedItem.Value(),
			})
		case key.Matches(msg, c.keyMap.Cancel):
			return c, util.CmdHandler(CloseCompletionsMsg{})
		}
	case RepositionCompletionsMsg:
		c.x, c.y = msg.X, msg.Y
		c.adjustPosition()
	case CloseCompletionsMsg:
		c.open = false
		return c, util.CmdHandler(CompletionsClosedMsg{})
	case OpenCompletionsMsg:
		c.open = true
		c.query = ""
		c.x, c.xorig = msg.X, msg.X
		c.y = msg.Y
		items := []list.CompletionItem[any]{}
		t := styles.CurrentTheme()
		for _, completion := range msg.Completions {
			item := list.NewCompletionItem(
				completion.Title,
				completion.Value,
				list.WithCompletionBackgroundColor(t.BgSubtle),
			)
			items = append(items, item)
		}
		width := listWidth(items)
		if len(items) == 0 {
			width = listWidth(c.list.Items())
		}
		if c.x+width >= c.wWidth {
			c.x = c.wWidth - width - 1
		}
		c.width = width
		c.height = max(min(maxCompletionsHeight, len(items)), 1) // Ensure at least 1 item height
		return c, tea.Batch(
			c.list.SetItems(items),
			c.list.SetSize(c.width, c.height),
			util.CmdHandler(CompletionsOpenedMsg{}),
		)
	case FilterCompletionsMsg:
		if !c.open && !msg.Reopen {
			return c, nil
		}
		if msg.Query == c.query {
			// PERF: if same query, don't need to filter again
			return c, nil
		}
		if len(c.list.Items()) == 0 &&
			len(msg.Query) > len(c.query) &&
			strings.HasPrefix(msg.Query, c.query) {
			// PERF: if c.query didn't match anything,
			// AND msg.Query is longer than c.query,
			// AND msg.Query is prefixed with c.query - which means
			//		that the user typed more chars after a 0 match,
			// it won't match anything, so return earlier.
			return c, nil
		}
		c.query = msg.Query
		var cmds []tea.Cmd
		cmds = append(cmds, c.list.Filter(msg.Query))
		items := c.list.Items()
		itemsLen := len(items)
		c.xorig = msg.X
		c.x, c.y = msg.X, msg.Y
		c.adjustPosition()
		cmds = append(cmds, c.list.SetSize(c.width, c.height))
		if itemsLen == 0 {
			cmds = append(cmds, util.CmdHandler(CloseCompletionsMsg{}))
		} else if msg.Reopen {
			c.open = true
			cmds = append(cmds, util.CmdHandler(CompletionsOpenedMsg{}))
		}
		return c, tea.Batch(cmds...)
	}
	return c, nil
}

func (c *completionsCmp) adjustPosition() {
	items := c.list.Items()
	itemsLen := len(items)
	width := listWidth(items)
	c.lastWidth = c.width
	if c.x < 0 || width < c.lastWidth {
		c.x = c.xorig
	} else if c.x+width >= c.wWidth {
		c.x = c.wWidth - width - 1
	}
	c.width = width
	c.height = max(min(maxCompletionsHeight, itemsLen), 1)
}

// View implements Completions.
func (c *completionsCmp) View() string {
	if !c.open || len(c.list.Items()) == 0 {
		return ""
	}

	t := styles.CurrentTheme()
	style := t.S().Base.
		Width(c.width).
		Height(c.height).
		Background(t.BgSubtle)

	return style.Render(c.list.View())
}

// listWidth returns the width of the last 10 items in the list, which is used
// to determine the width of the completions popup.
// Note this only works for [completionItemCmp] items.
func listWidth(items []list.CompletionItem[any]) int {
	var width int
	if len(items) == 0 {
		return width
	}

	for i := len(items) - 1; i >= 0 && i >= len(items)-10; i-- {
		itemWidth := lipgloss.Width(items[i].Text()) + 2 // +2 for padding
		width = max(width, itemWidth)
	}

	return width
}

func (c *completionsCmp) Open() bool {
	return c.open
}

func (c *completionsCmp) Query() string {
	return c.query
}

func (c *completionsCmp) KeyMap() KeyMap {
	return c.keyMap
}

func (c *completionsCmp) Position() (int, int) {
	return c.x, c.y - c.height
}

func (c *completionsCmp) Width() int {
	return c.width
}

func (c *completionsCmp) Height() int {
	return c.height
}



================================================
FILE: internal/tui/components/completions/keys.go
================================================
package completions

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	Down,
	Up,
	Select,
	Cancel key.Binding
	DownInsert,
	UpInsert key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Down: key.NewBinding(
			key.WithKeys("down"),
			key.WithHelp("down", "move down"),
		),
		Up: key.NewBinding(
			key.WithKeys("up"),
			key.WithHelp("up", "move up"),
		),
		Select: key.NewBinding(
			key.WithKeys("enter", "tab", "ctrl+y"),
			key.WithHelp("enter", "select"),
		),
		Cancel: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "cancel"),
		),
		DownInsert: key.NewBinding(
			key.WithKeys("ctrl+n"),
			key.WithHelp("ctrl+n", "insert next"),
		),
		UpInsert: key.NewBinding(
			key.WithKeys("ctrl+p"),
			key.WithHelp("ctrl+p", "insert previous"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Down,
		k.Up,
		k.Select,
		k.Cancel,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		k.Up,
		k.Down,
	}
}



================================================
FILE: internal/tui/components/core/core.go
================================================
package core

import (
	"image/color"
	"strings"

	"github.com/alecthomas/chroma/v2"
	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/crush/internal/tui/exp/diffview"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
)

type KeyMapHelp interface {
	Help() help.KeyMap
}

type simpleHelp struct {
	shortList []key.Binding
	fullList  [][]key.Binding
}

func NewSimpleHelp(shortList []key.Binding, fullList [][]key.Binding) help.KeyMap {
	return &simpleHelp{
		shortList: shortList,
		fullList:  fullList,
	}
}

// FullHelp implements help.KeyMap.
func (s *simpleHelp) FullHelp() [][]key.Binding {
	return s.fullList
}

// ShortHelp implements help.KeyMap.
func (s *simpleHelp) ShortHelp() []key.Binding {
	return s.shortList
}

func Section(text string, width int) string {
	t := styles.CurrentTheme()
	char := "─"
	length := lipgloss.Width(text) + 1
	remainingWidth := width - length
	lineStyle := t.S().Base.Foreground(t.Border)
	if remainingWidth > 0 {
		text = text + " " + lineStyle.Render(strings.Repeat(char, remainingWidth))
	}
	return text
}

func SectionWithInfo(text string, width int, info string) string {
	t := styles.CurrentTheme()
	char := "─"
	length := lipgloss.Width(text) + 1
	remainingWidth := width - length

	if info != "" {
		remainingWidth -= lipgloss.Width(info) + 1 // 1 for the space before info
	}
	lineStyle := t.S().Base.Foreground(t.Border)
	if remainingWidth > 0 {
		text = text + " " + lineStyle.Render(strings.Repeat(char, remainingWidth)) + " " + info
	}
	return text
}

func Title(title string, width int) string {
	t := styles.CurrentTheme()
	char := "╱"
	length := lipgloss.Width(title) + 1
	remainingWidth := width - length
	titleStyle := t.S().Base.Foreground(t.Primary)
	if remainingWidth > 0 {
		lines := strings.Repeat(char, remainingWidth)
		lines = styles.ApplyForegroundGrad(lines, t.Primary, t.Secondary)
		title = titleStyle.Render(title) + " " + lines
	}
	return title
}

type StatusOpts struct {
	Icon             string // if empty no icon will be shown
	Title            string
	TitleColor       color.Color
	Description      string
	DescriptionColor color.Color
	ExtraContent     string // additional content to append after the description
}

func Status(opts StatusOpts, width int) string {
	t := styles.CurrentTheme()
	icon := opts.Icon
	title := opts.Title
	titleColor := t.FgMuted
	if opts.TitleColor != nil {
		titleColor = opts.TitleColor
	}
	description := opts.Description
	descriptionColor := t.FgSubtle
	if opts.DescriptionColor != nil {
		descriptionColor = opts.DescriptionColor
	}
	title = t.S().Base.Foreground(titleColor).Render(title)
	if description != "" {
		extraContentWidth := lipgloss.Width(opts.ExtraContent)
		if extraContentWidth > 0 {
			extraContentWidth += 1
		}
		description = ansi.Truncate(description, width-lipgloss.Width(icon)-lipgloss.Width(title)-2-extraContentWidth, "…")
	}
	description = t.S().Base.Foreground(descriptionColor).Render(description)

	content := []string{}
	if icon != "" {
		content = append(content, icon)
	}
	content = append(content, title, description)
	if opts.ExtraContent != "" {
		content = append(content, opts.ExtraContent)
	}

	return strings.Join(content, " ")
}

type ButtonOpts struct {
	Text           string
	UnderlineIndex int  // Index of character to underline (0-based)
	Selected       bool // Whether this button is selected
}

// SelectableButton creates a button with an underlined character and selection state
func SelectableButton(opts ButtonOpts) string {
	t := styles.CurrentTheme()

	// Base style for the button
	buttonStyle := t.S().Text

	// Apply selection styling
	if opts.Selected {
		buttonStyle = buttonStyle.Foreground(t.White).Background(t.Secondary)
	} else {
		buttonStyle = buttonStyle.Background(t.BgSubtle)
	}

	// Create the button text with underlined character
	text := opts.Text
	if opts.UnderlineIndex >= 0 && opts.UnderlineIndex < len(text) {
		before := text[:opts.UnderlineIndex]
		underlined := text[opts.UnderlineIndex : opts.UnderlineIndex+1]
		after := text[opts.UnderlineIndex+1:]

		message := buttonStyle.Render(before) +
			buttonStyle.Underline(true).Render(underlined) +
			buttonStyle.Render(after)

		return buttonStyle.Padding(0, 2).Render(message)
	}

	// Fallback if no underline index specified
	return buttonStyle.Padding(0, 2).Render(text)
}

// SelectableButtons creates a horizontal row of selectable buttons
func SelectableButtons(buttons []ButtonOpts, spacing string) string {
	if spacing == "" {
		spacing = "  "
	}

	var parts []string
	for i, button := range buttons {
		parts = append(parts, SelectableButton(button))
		if i < len(buttons)-1 {
			parts = append(parts, spacing)
		}
	}

	return lipgloss.JoinHorizontal(lipgloss.Left, parts...)
}

// SelectableButtonsVertical creates a vertical row of selectable buttons
func SelectableButtonsVertical(buttons []ButtonOpts, spacing int) string {
	var parts []string
	for i, button := range buttons {
		parts = append(parts, SelectableButton(button))
		if i < len(buttons)-1 {
			for range spacing {
				parts = append(parts, "")
			}
		}
	}

	return lipgloss.JoinVertical(lipgloss.Center, parts...)
}

func DiffFormatter() *diffview.DiffView {
	t := styles.CurrentTheme()
	formatDiff := diffview.New()
	style := chroma.MustNewStyle("crush", styles.GetChromaTheme())
	diff := formatDiff.ChromaStyle(style).Style(t.S().Diff).TabWidth(4)
	return diff
}



================================================
FILE: internal/tui/components/core/status_test.go
================================================
package core_test

import (
	"fmt"
	"image/color"
	"testing"

	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/x/exp/golden"
)

func TestStatus(t *testing.T) {
	t.Parallel()

	tests := []struct {
		name  string
		opts  core.StatusOpts
		width int
	}{
		{
			name: "Default",
			opts: core.StatusOpts{
				Title:       "Status",
				Description: "Everything is working fine",
			},
			width: 80,
		},
		{
			name: "WithCustomIcon",
			opts: core.StatusOpts{
				Icon:        "✓",
				Title:       "Success",
				Description: "Operation completed successfully",
			},
			width: 80,
		},
		{
			name: "NoIcon",
			opts: core.StatusOpts{
				Title:       "Info",
				Description: "This status has no icon",
			},
			width: 80,
		},
		{
			name: "WithColors",
			opts: core.StatusOpts{
				Icon:             "⚠",
				Title:            "Warning",
				TitleColor:       color.RGBA{255, 255, 0, 255}, // Yellow
				Description:      "This is a warning message",
				DescriptionColor: color.RGBA{255, 0, 0, 255}, // Red
			},
			width: 80,
		},
		{
			name: "WithExtraContent",
			opts: core.StatusOpts{
				Title:        "Build",
				Description:  "Building project",
				ExtraContent: "[2/5]",
			},
			width: 80,
		},
		{
			name: "LongDescription",
			opts: core.StatusOpts{
				Title:       "Processing",
				Description: "This is a very long description that should be truncated when the width is too small to display it completely without wrapping",
			},
			width: 60,
		},
		{
			name: "NarrowWidth",
			opts: core.StatusOpts{
				Icon:        "●",
				Title:       "Status",
				Description: "Short message",
			},
			width: 30,
		},
		{
			name: "VeryNarrowWidth",
			opts: core.StatusOpts{
				Icon:        "●",
				Title:       "Test",
				Description: "This will be truncated",
			},
			width: 20,
		},
		{
			name: "EmptyDescription",
			opts: core.StatusOpts{
				Icon:  "●",
				Title: "Title Only",
			},
			width: 80,
		},
		{
			name: "AllFieldsWithExtraContent",
			opts: core.StatusOpts{
				Icon:             "🚀",
				Title:            "Deployment",
				TitleColor:       color.RGBA{0, 0, 255, 255}, // Blue
				Description:      "Deploying to production environment",
				DescriptionColor: color.RGBA{128, 128, 128, 255}, // Gray
				ExtraContent:     "v1.2.3",
			},
			width: 80,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()

			output := core.Status(tt.opts, tt.width)
			golden.RequireEqual(t, []byte(output))
		})
	}
}

func TestStatusTruncation(t *testing.T) {
	t.Parallel()

	opts := core.StatusOpts{
		Icon:         "●",
		Title:        "Very Long Title",
		Description:  "This is an extremely long description that definitely needs to be truncated",
		ExtraContent: "[extra]",
	}

	// Test different widths to ensure truncation works correctly
	widths := []int{20, 30, 40, 50, 60}

	for _, width := range widths {
		t.Run(fmt.Sprintf("Width%d", width), func(t *testing.T) {
			t.Parallel()

			output := core.Status(opts, width)
			golden.RequireEqual(t, []byte(output))
		})
	}
}



================================================
FILE: internal/tui/components/core/layout/layout.go
================================================
package layout

import (
	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
)

// TODO: move this to core

type Focusable interface {
	Focus() tea.Cmd
	Blur() tea.Cmd
	IsFocused() bool
}

type Sizeable interface {
	SetSize(width, height int) tea.Cmd
	GetSize() (int, int)
}

type Help interface {
	Bindings() []key.Binding
}

type Positional interface {
	SetPosition(x, y int) tea.Cmd
}



================================================
FILE: internal/tui/components/core/status/status.go
================================================
package status

import (
	"time"

	"github.com/charmbracelet/bubbles/v2/help"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
)

type StatusCmp interface {
	util.Model
	ToggleFullHelp()
	SetKeyMap(keyMap help.KeyMap)
}

type statusCmp struct {
	info       util.InfoMsg
	width      int
	messageTTL time.Duration
	help       help.Model
	keyMap     help.KeyMap
}

// clearMessageCmd is a command that clears status messages after a timeout
func (m *statusCmp) clearMessageCmd(ttl time.Duration) tea.Cmd {
	return tea.Tick(ttl, func(time.Time) tea.Msg {
		return util.ClearStatusMsg{}
	})
}

func (m *statusCmp) Init() tea.Cmd {
	return nil
}

func (m *statusCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		m.width = msg.Width
		m.help.Width = msg.Width - 2
		return m, nil

	// Handle status info
	case util.InfoMsg:
		m.info = msg
		ttl := msg.TTL
		if ttl == 0 {
			ttl = m.messageTTL
		}
		return m, m.clearMessageCmd(ttl)
	case util.ClearStatusMsg:
		m.info = util.InfoMsg{}
	}
	return m, nil
}

func (m *statusCmp) View() string {
	t := styles.CurrentTheme()
	status := t.S().Base.Padding(0, 1, 1, 1).Render(m.help.View(m.keyMap))
	if m.info.Msg != "" {
		status = m.infoMsg()
	}
	return status
}

func (m *statusCmp) infoMsg() string {
	t := styles.CurrentTheme()
	message := ""
	infoType := ""
	switch m.info.Type {
	case util.InfoTypeError:
		infoType = t.S().Base.Background(t.Red).Padding(0, 1).Render("ERROR")
		widthLeft := m.width - (lipgloss.Width(infoType) + 2)
		info := ansi.Truncate(m.info.Msg, widthLeft, "…")
		message = t.S().Base.Background(t.Error).Width(widthLeft+2).Foreground(t.White).Padding(0, 1).Render(info)
	case util.InfoTypeWarn:
		infoType = t.S().Base.Foreground(t.BgOverlay).Background(t.Yellow).Padding(0, 1).Render("WARNING")
		widthLeft := m.width - (lipgloss.Width(infoType) + 2)
		info := ansi.Truncate(m.info.Msg, widthLeft, "…")
		message = t.S().Base.Foreground(t.BgOverlay).Width(widthLeft+2).Background(t.Warning).Padding(0, 1).Render(info)
	default:
		infoType = t.S().Base.Foreground(t.BgOverlay).Background(t.Green).Padding(0, 1).Render("OKAY!")
		widthLeft := m.width - (lipgloss.Width(infoType) + 2)
		info := ansi.Truncate(m.info.Msg, widthLeft, "…")
		message = t.S().Base.Background(t.Success).Width(widthLeft+2).Foreground(t.White).Padding(0, 1).Render(info)
	}
	return ansi.Truncate(infoType+message, m.width, "…")
}

func (m *statusCmp) ToggleFullHelp() {
	m.help.ShowAll = !m.help.ShowAll
}

func (m *statusCmp) SetKeyMap(keyMap help.KeyMap) {
	m.keyMap = keyMap
}

func NewStatusCmp() StatusCmp {
	t := styles.CurrentTheme()
	help := help.New()
	help.Styles = t.S().Help
	return &statusCmp{
		messageTTL: 5 * time.Second,
		help:       help,
	}
}



================================================
FILE: internal/tui/components/core/testdata/TestStatus/AllFieldsWithExtraContent.golden
================================================
🚀 [38;2;0;0;255mDeployment[m [38;2;128;128;128mDeploying to production environment[m v1.2.3


================================================
FILE: internal/tui/components/core/testdata/TestStatus/Default.golden
================================================
[38;2;133;131;146mStatus[m [38;2;96;95;107mEverything is working fine[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/EmptyDescription.golden
================================================
● [38;2;133;131;146mTitle Only[m [38;2;96;95;107m[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/LongDescription.golden
================================================
[38;2;133;131;146mProcessing[m [38;2;96;95;107mThis is a very long description that should be …[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/NarrowWidth.golden
================================================
● [38;2;133;131;146mStatus[m [38;2;96;95;107mShort message[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/NoIcon.golden
================================================
[38;2;133;131;146mInfo[m [38;2;96;95;107mThis status has no icon[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/VeryNarrowWidth.golden
================================================
● [38;2;133;131;146mTest[m [38;2;96;95;107mThis will be…[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/WithColors.golden
================================================
⚠ [38;2;255;255;0mWarning[m [38;2;255;0;0mThis is a warning message[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/WithCustomIcon.golden
================================================
✓ [38;2;133;131;146mSuccess[m [38;2;96;95;107mOperation completed successfully[m


================================================
FILE: internal/tui/components/core/testdata/TestStatus/WithExtraContent.golden
================================================
[38;2;133;131;146mBuild[m [38;2;96;95;107mBuilding project[m [2/5]


================================================
FILE: internal/tui/components/core/testdata/TestStatusTruncation/Width20.golden
================================================
● [38;2;133;131;146mVery Long Title[m [38;2;96;95;107m[m [extra]


================================================
FILE: internal/tui/components/core/testdata/TestStatusTruncation/Width30.golden
================================================
● [38;2;133;131;146mVery Long Title[m [38;2;96;95;107mThi…[m [extra]


================================================
FILE: internal/tui/components/core/testdata/TestStatusTruncation/Width40.golden
================================================
● [38;2;133;131;146mVery Long Title[m [38;2;96;95;107mThis is an ex…[m [extra]


================================================
FILE: internal/tui/components/core/testdata/TestStatusTruncation/Width50.golden
================================================
● [38;2;133;131;146mVery Long Title[m [38;2;96;95;107mThis is an extremely lo…[m [extra]


================================================
FILE: internal/tui/components/core/testdata/TestStatusTruncation/Width60.golden
================================================
● [38;2;133;131;146mVery Long Title[m [38;2;96;95;107mThis is an extremely long descrip…[m [extra]


================================================
FILE: internal/tui/components/dialogs/dialogs.go
================================================
package dialogs

import (
	"slices"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

type DialogID string

// DialogModel represents a dialog component that can be displayed.
type DialogModel interface {
	util.Model
	Position() (int, int)
	ID() DialogID
}

// CloseCallback allows dialogs to perform cleanup when closed.
type CloseCallback interface {
	Close() tea.Cmd
}

// OpenDialogMsg is sent to open a new dialog with specified dimensions.
type OpenDialogMsg struct {
	Model DialogModel
}

// CloseDialogMsg is sent to close the topmost dialog.
type CloseDialogMsg struct{}

// DialogCmp manages a stack of dialogs with keyboard navigation.
type DialogCmp interface {
	tea.Model

	Dialogs() []DialogModel
	HasDialogs() bool
	GetLayers() []*lipgloss.Layer
	ActiveModel() util.Model
	ActiveDialogID() DialogID
}

type dialogCmp struct {
	width, height int
	dialogs       []DialogModel
	idMap         map[DialogID]int
	keyMap        KeyMap
}

// NewDialogCmp creates a new dialog manager.
func NewDialogCmp() DialogCmp {
	return dialogCmp{
		dialogs: []DialogModel{},
		keyMap:  DefaultKeyMap(),
		idMap:   make(map[DialogID]int),
	}
}

func (d dialogCmp) Init() tea.Cmd {
	return nil
}

// Update handles dialog lifecycle and forwards messages to the active dialog.
func (d dialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		var cmds []tea.Cmd
		d.width = msg.Width
		d.height = msg.Height
		for i := range d.dialogs {
			u, cmd := d.dialogs[i].Update(msg)
			d.dialogs[i] = u.(DialogModel)
			cmds = append(cmds, cmd)
		}
		return d, tea.Batch(cmds...)
	case OpenDialogMsg:
		return d.handleOpen(msg)
	case CloseDialogMsg:
		if len(d.dialogs) == 0 {
			return d, nil
		}
		inx := len(d.dialogs) - 1
		dialog := d.dialogs[inx]
		delete(d.idMap, dialog.ID())
		d.dialogs = d.dialogs[:len(d.dialogs)-1]
		if closeable, ok := dialog.(CloseCallback); ok {
			return d, closeable.Close()
		}
		return d, nil
	}
	if d.HasDialogs() {
		lastIndex := len(d.dialogs) - 1
		u, cmd := d.dialogs[lastIndex].Update(msg)
		d.dialogs[lastIndex] = u.(DialogModel)
		return d, cmd
	}
	return d, nil
}

func (d dialogCmp) handleOpen(msg OpenDialogMsg) (tea.Model, tea.Cmd) {
	if d.HasDialogs() {
		dialog := d.dialogs[len(d.dialogs)-1]
		if dialog.ID() == msg.Model.ID() {
			return d, nil // Do not open a dialog if it's already the topmost one
		}
		if dialog.ID() == "quit" {
			return d, nil // Do not open dialogs on top of quit
		}
	}
	// if the dialog is already in the stack make it the last item
	if _, ok := d.idMap[msg.Model.ID()]; ok {
		existing := d.dialogs[d.idMap[msg.Model.ID()]]
		// Reuse the model so we keep the state
		msg.Model = existing
		d.dialogs = slices.Delete(d.dialogs, d.idMap[msg.Model.ID()], d.idMap[msg.Model.ID()]+1)
	}
	d.idMap[msg.Model.ID()] = len(d.dialogs)
	d.dialogs = append(d.dialogs, msg.Model)
	var cmds []tea.Cmd
	cmd := msg.Model.Init()
	cmds = append(cmds, cmd)
	_, cmd = msg.Model.Update(tea.WindowSizeMsg{
		Width:  d.width,
		Height: d.height,
	})
	cmds = append(cmds, cmd)
	return d, tea.Batch(cmds...)
}

func (d dialogCmp) Dialogs() []DialogModel {
	return d.dialogs
}

func (d dialogCmp) ActiveModel() util.Model {
	if len(d.dialogs) == 0 {
		return nil
	}
	return d.dialogs[len(d.dialogs)-1]
}

func (d dialogCmp) ActiveDialogID() DialogID {
	if len(d.dialogs) == 0 {
		return ""
	}
	return d.dialogs[len(d.dialogs)-1].ID()
}

func (d dialogCmp) GetLayers() []*lipgloss.Layer {
	layers := []*lipgloss.Layer{}
	for _, dialog := range d.Dialogs() {
		dialogView := dialog.View()
		row, col := dialog.Position()
		layers = append(layers, lipgloss.NewLayer(dialogView).X(col).Y(row))
	}
	return layers
}

func (d dialogCmp) HasDialogs() bool {
	return len(d.dialogs) > 0
}



================================================
FILE: internal/tui/components/dialogs/keys.go
================================================
package dialogs

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

// KeyMap defines keyboard bindings for dialog management.
type KeyMap struct {
	Close key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Close: key.NewBinding(
			key.WithKeys("esc"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Close,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		k.Close,
	}
}



================================================
FILE: internal/tui/components/dialogs/commands/arguments.go
================================================
package commands

import (
	"fmt"
	"strings"

	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/textinput"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

const (
	argumentsDialogID dialogs.DialogID = "arguments"
)

// ShowArgumentsDialogMsg is a message that is sent to show the arguments dialog.
type ShowArgumentsDialogMsg struct {
	CommandID string
	Content   string
	ArgNames  []string
}

// CloseArgumentsDialogMsg is a message that is sent when the arguments dialog is closed.
type CloseArgumentsDialogMsg struct {
	Submit    bool
	CommandID string
	Content   string
	Args      map[string]string
}

// CommandArgumentsDialog represents the commands dialog.
type CommandArgumentsDialog interface {
	dialogs.DialogModel
}

type commandArgumentsDialogCmp struct {
	width   int
	wWidth  int // Width of the terminal window
	wHeight int // Height of the terminal window

	inputs     []textinput.Model
	focusIndex int
	keys       ArgumentsDialogKeyMap
	commandID  string
	content    string
	argNames   []string
	help       help.Model
}

func NewCommandArgumentsDialog(commandID, content string, argNames []string) CommandArgumentsDialog {
	t := styles.CurrentTheme()
	inputs := make([]textinput.Model, len(argNames))

	for i, name := range argNames {
		ti := textinput.New()
		ti.Placeholder = fmt.Sprintf("Enter value for %s...", name)
		ti.SetWidth(40)
		ti.SetVirtualCursor(false)
		ti.Prompt = ""

		ti.SetStyles(t.S().TextInput)
		// Only focus the first input initially
		if i == 0 {
			ti.Focus()
		} else {
			ti.Blur()
		}

		inputs[i] = ti
	}

	return &commandArgumentsDialogCmp{
		inputs:     inputs,
		keys:       DefaultArgumentsDialogKeyMap(),
		commandID:  commandID,
		content:    content,
		argNames:   argNames,
		focusIndex: 0,
		width:      60,
		help:       help.New(),
	}
}

// Init implements CommandArgumentsDialog.
func (c *commandArgumentsDialogCmp) Init() tea.Cmd {
	return nil
}

// Update implements CommandArgumentsDialog.
func (c *commandArgumentsDialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		c.wWidth = msg.Width
		c.wHeight = msg.Height
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, c.keys.Confirm):
			if c.focusIndex == len(c.inputs)-1 {
				content := c.content
				for i, name := range c.argNames {
					value := c.inputs[i].Value()
					placeholder := "$" + name
					content = strings.ReplaceAll(content, placeholder, value)
				}
				return c, tea.Sequence(
					util.CmdHandler(dialogs.CloseDialogMsg{}),
					util.CmdHandler(CommandRunCustomMsg{
						Content: content,
					}),
				)
			}
			// Otherwise, move to the next input
			c.inputs[c.focusIndex].Blur()
			c.focusIndex++
			c.inputs[c.focusIndex].Focus()
		case key.Matches(msg, c.keys.Next):
			// Move to the next input
			c.inputs[c.focusIndex].Blur()
			c.focusIndex = (c.focusIndex + 1) % len(c.inputs)
			c.inputs[c.focusIndex].Focus()
		case key.Matches(msg, c.keys.Previous):
			// Move to the previous input
			c.inputs[c.focusIndex].Blur()
			c.focusIndex = (c.focusIndex - 1 + len(c.inputs)) % len(c.inputs)
			c.inputs[c.focusIndex].Focus()

		default:
			var cmd tea.Cmd
			c.inputs[c.focusIndex], cmd = c.inputs[c.focusIndex].Update(msg)
			return c, cmd
		}
	}
	return c, nil
}

// View implements CommandArgumentsDialog.
func (c *commandArgumentsDialogCmp) View() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base

	title := lipgloss.NewStyle().
		Foreground(t.Primary).
		Bold(true).
		Padding(0, 1).
		Render("Command Arguments")

	explanation := t.S().Text.
		Padding(0, 1).
		Render("This command requires arguments.")

	// Create input fields for each argument
	inputFields := make([]string, len(c.inputs))
	for i, input := range c.inputs {
		// Highlight the label of the focused input
		labelStyle := baseStyle.
			Padding(1, 1, 0, 1)

		if i == c.focusIndex {
			labelStyle = labelStyle.Foreground(t.FgBase).Bold(true)
		} else {
			labelStyle = labelStyle.Foreground(t.FgMuted)
		}

		label := labelStyle.Render(c.argNames[i] + ":")

		field := t.S().Text.
			Padding(0, 1).
			Render(input.View())

		inputFields[i] = lipgloss.JoinVertical(lipgloss.Left, label, field)
	}

	// Join all elements vertically
	elements := []string{title, explanation}
	elements = append(elements, inputFields...)

	c.help.ShowAll = false
	helpText := baseStyle.Padding(0, 1).Render(c.help.View(c.keys))
	elements = append(elements, "", helpText)

	content := lipgloss.JoinVertical(
		lipgloss.Left,
		elements...,
	)

	return baseStyle.Padding(1, 1, 0, 1).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus).
		Width(c.width).
		Render(content)
}

func (c *commandArgumentsDialogCmp) Cursor() *tea.Cursor {
	cursor := c.inputs[c.focusIndex].Cursor()
	if cursor != nil {
		cursor = c.moveCursor(cursor)
	}
	return cursor
}

func (c *commandArgumentsDialogCmp) moveCursor(cursor *tea.Cursor) *tea.Cursor {
	row, col := c.Position()
	offset := row + 3 + (1+c.focusIndex)*3
	cursor.Y += offset
	cursor.X = cursor.X + col + 3
	return cursor
}

func (c *commandArgumentsDialogCmp) Position() (int, int) {
	row := c.wHeight / 2
	row -= c.wHeight / 2
	col := c.wWidth / 2
	col -= c.width / 2
	return row, col
}

// ID implements CommandArgumentsDialog.
func (c *commandArgumentsDialogCmp) ID() dialogs.DialogID {
	return argumentsDialogID
}



================================================
FILE: internal/tui/components/dialogs/commands/commands.go
================================================
package commands

import (
	"os"

	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/lipgloss/v2"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/prompt"
	"github.com/charmbracelet/crush/internal/tui/components/chat"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
)

const (
	CommandsDialogID dialogs.DialogID = "commands"

	defaultWidth int = 70
)

const (
	SystemCommands int = iota
	UserCommands
)

type listModel = list.FilterableList[list.CompletionItem[Command]]

// Command represents a command that can be executed
type Command struct {
	ID          string
	Title       string
	Description string
	Shortcut    string // Optional shortcut for the command
	Handler     func(cmd Command) tea.Cmd
}

// CommandsDialog represents the commands dialog.
type CommandsDialog interface {
	dialogs.DialogModel
}

type commandDialogCmp struct {
	width   int
	wWidth  int // Width of the terminal window
	wHeight int // Height of the terminal window

	commandList  listModel
	keyMap       CommandsDialogKeyMap
	help         help.Model
	commandType  int       // SystemCommands or UserCommands
	userCommands []Command // User-defined commands
	sessionID    string    // Current session ID
}

type (
	SwitchSessionsMsg     struct{}
	NewSessionsMsg        struct{}
	SwitchModelMsg        struct{}
	QuitMsg               struct{}
	OpenFilePickerMsg     struct{}
	ToggleHelpMsg         struct{}
	ToggleCompactModeMsg  struct{}
	ToggleThinkingMsg     struct{}
	OpenExternalEditorMsg struct{}
	ToggleYoloModeMsg     struct{}
	CompactMsg            struct {
		SessionID string
	}
)

func NewCommandDialog(sessionID string) CommandsDialog {
	keyMap := DefaultCommandsDialogKeyMap()
	listKeyMap := list.DefaultKeyMap()
	listKeyMap.Down.SetEnabled(false)
	listKeyMap.Up.SetEnabled(false)
	listKeyMap.DownOneItem = keyMap.Next
	listKeyMap.UpOneItem = keyMap.Previous

	t := styles.CurrentTheme()
	inputStyle := t.S().Base.PaddingLeft(1).PaddingBottom(1)
	commandList := list.NewFilterableList(
		[]list.CompletionItem[Command]{},
		list.WithFilterInputStyle(inputStyle),
		list.WithFilterListOptions(
			list.WithKeyMap(listKeyMap),
			list.WithWrapNavigation(),
			list.WithResizeByList(),
		),
	)
	help := help.New()
	help.Styles = t.S().Help
	return &commandDialogCmp{
		commandList: commandList,
		width:       defaultWidth,
		keyMap:      DefaultCommandsDialogKeyMap(),
		help:        help,
		commandType: SystemCommands,
		sessionID:   sessionID,
	}
}

func (c *commandDialogCmp) Init() tea.Cmd {
	commands, err := LoadCustomCommands()
	if err != nil {
		return util.ReportError(err)
	}
	c.userCommands = commands
	return c.SetCommandType(c.commandType)
}

func (c *commandDialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		c.wWidth = msg.Width
		c.wHeight = msg.Height
		return c, tea.Batch(
			c.SetCommandType(c.commandType),
			c.commandList.SetSize(c.listWidth(), c.listHeight()),
		)
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, c.keyMap.Select):
			selectedItem := c.commandList.SelectedItem()
			if selectedItem == nil {
				return c, nil // No item selected, do nothing
			}
			command := (*selectedItem).Value()
			return c, tea.Sequence(
				util.CmdHandler(dialogs.CloseDialogMsg{}),
				command.Handler(command),
			)
		case key.Matches(msg, c.keyMap.Tab):
			if len(c.userCommands) == 0 {
				return c, nil
			}
			// Toggle command type between System and User commands
			if c.commandType == SystemCommands {
				return c, c.SetCommandType(UserCommands)
			} else {
				return c, c.SetCommandType(SystemCommands)
			}
		case key.Matches(msg, c.keyMap.Close):
			return c, util.CmdHandler(dialogs.CloseDialogMsg{})
		default:
			u, cmd := c.commandList.Update(msg)
			c.commandList = u.(listModel)
			return c, cmd
		}
	}
	return c, nil
}

func (c *commandDialogCmp) View() string {
	t := styles.CurrentTheme()
	listView := c.commandList
	radio := c.commandTypeRadio()

	header := t.S().Base.Padding(0, 1, 1, 1).Render(core.Title("Commands", c.width-lipgloss.Width(radio)-5) + " " + radio)
	if len(c.userCommands) == 0 {
		header = t.S().Base.Padding(0, 1, 1, 1).Render(core.Title("Commands", c.width-4))
	}
	content := lipgloss.JoinVertical(
		lipgloss.Left,
		header,
		listView.View(),
		"",
		t.S().Base.Width(c.width-2).PaddingLeft(1).AlignHorizontal(lipgloss.Left).Render(c.help.View(c.keyMap)),
	)
	return c.style().Render(content)
}

func (c *commandDialogCmp) Cursor() *tea.Cursor {
	if cursor, ok := c.commandList.(util.Cursor); ok {
		cursor := cursor.Cursor()
		if cursor != nil {
			cursor = c.moveCursor(cursor)
		}
		return cursor
	}
	return nil
}

func (c *commandDialogCmp) commandTypeRadio() string {
	t := styles.CurrentTheme()
	choices := []string{"System", "User"}
	iconSelected := "◉"
	iconUnselected := "○"
	if c.commandType == SystemCommands {
		return t.S().Base.Foreground(t.FgHalfMuted).Render(iconSelected + " " + choices[0] + " " + iconUnselected + " " + choices[1])
	}
	return t.S().Base.Foreground(t.FgHalfMuted).Render(iconUnselected + " " + choices[0] + " " + iconSelected + " " + choices[1])
}

func (c *commandDialogCmp) listWidth() int {
	return defaultWidth - 2 // 4 for padding
}

func (c *commandDialogCmp) SetCommandType(commandType int) tea.Cmd {
	c.commandType = commandType

	var commands []Command
	if c.commandType == SystemCommands {
		commands = c.defaultCommands()
	} else {
		commands = c.userCommands
	}

	commandItems := []list.CompletionItem[Command]{}
	for _, cmd := range commands {
		opts := []list.CompletionItemOption{
			list.WithCompletionID(cmd.ID),
		}
		if cmd.Shortcut != "" {
			opts = append(
				opts,
				list.WithCompletionShortcut(cmd.Shortcut),
			)
		}
		commandItems = append(commandItems, list.NewCompletionItem(cmd.Title, cmd, opts...))
	}
	return c.commandList.SetItems(commandItems)
}

func (c *commandDialogCmp) listHeight() int {
	listHeigh := len(c.commandList.Items()) + 2 + 4 // height based on items + 2 for the input + 4 for the sections
	return min(listHeigh, c.wHeight/2)
}

func (c *commandDialogCmp) moveCursor(cursor *tea.Cursor) *tea.Cursor {
	row, col := c.Position()
	offset := row + 3
	cursor.Y += offset
	cursor.X = cursor.X + col + 2
	return cursor
}

func (c *commandDialogCmp) style() lipgloss.Style {
	t := styles.CurrentTheme()
	return t.S().Base.
		Width(c.width).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus)
}

func (c *commandDialogCmp) Position() (int, int) {
	row := c.wHeight/4 - 2 // just a bit above the center
	col := c.wWidth / 2
	col -= c.width / 2
	return row, col
}

func (c *commandDialogCmp) defaultCommands() []Command {
	commands := []Command{
		{
			ID:          "new_session",
			Title:       "New Session",
			Description: "start a new session",
			Shortcut:    "ctrl+n",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(NewSessionsMsg{})
			},
		},
		{
			ID:          "switch_session",
			Title:       "Switch Session",
			Description: "Switch to a different session",
			Shortcut:    "ctrl+s",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(SwitchSessionsMsg{})
			},
		},
		{
			ID:          "switch_model",
			Title:       "Switch Model",
			Description: "Switch to a different model",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(SwitchModelMsg{})
			},
		},
	}

	// Only show compact command if there's an active session
	if c.sessionID != "" {
		commands = append(commands, Command{
			ID:          "Summarize",
			Title:       "Summarize Session",
			Description: "Summarize the current session and create a new one with the summary",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(CompactMsg{
					SessionID: c.sessionID,
				})
			},
		})
	}

	// Only show thinking toggle for Anthropic models that can reason
	cfg := config.Get()
	if agentCfg, ok := cfg.Agents["coder"]; ok {
		providerCfg := cfg.GetProviderForModel(agentCfg.Model)
		model := cfg.GetModelByType(agentCfg.Model)
		if providerCfg != nil && model != nil &&
			providerCfg.Type == catwalk.TypeAnthropic && model.CanReason {
			selectedModel := cfg.Models[agentCfg.Model]
			status := "Enable"
			if selectedModel.Think {
				status = "Disable"
			}
			commands = append(commands, Command{
				ID:          "toggle_thinking",
				Title:       status + " Thinking Mode",
				Description: "Toggle model thinking for reasoning-capable models",
				Handler: func(cmd Command) tea.Cmd {
					return util.CmdHandler(ToggleThinkingMsg{})
				},
			})
		}
	}
	// Only show toggle compact mode command if window width is larger than compact breakpoint (90)
	if c.wWidth > 120 && c.sessionID != "" {
		commands = append(commands, Command{
			ID:          "toggle_sidebar",
			Title:       "Toggle Sidebar",
			Description: "Toggle between compact and normal layout",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(ToggleCompactModeMsg{})
			},
		})
	}
	if c.sessionID != "" {
		agentCfg := config.Get().Agents["coder"]
		model := config.Get().GetModelByType(agentCfg.Model)
		if model.SupportsImages {
			commands = append(commands, Command{
				ID:          "file_picker",
				Title:       "Open File Picker",
				Shortcut:    "ctrl+f",
				Description: "Open file picker",
				Handler: func(cmd Command) tea.Cmd {
					return util.CmdHandler(OpenFilePickerMsg{})
				},
			})
		}
	}

	// Add external editor command if $EDITOR is available
	if os.Getenv("EDITOR") != "" {
		commands = append(commands, Command{
			ID:          "open_external_editor",
			Title:       "Open External Editor",
			Shortcut:    "ctrl+o",
			Description: "Open external editor to compose message",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(OpenExternalEditorMsg{})
			},
		})
	}

	return append(commands, []Command{
		{
			ID:          "toggle_yolo",
			Title:       "Toggle Yolo Mode",
			Description: "Toggle yolo mode",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(ToggleYoloModeMsg{})
			},
		},
		{
			ID:          "toggle_help",
			Title:       "Toggle Help",
			Shortcut:    "ctrl+g",
			Description: "Toggle help",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(ToggleHelpMsg{})
			},
		},
		{
			ID:          "init",
			Title:       "Initialize Project",
			Description: "Create/Update the CRUSH.md memory file",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(chat.SendMsg{
					Text: prompt.Initialize(),
				})
			},
		},
		{
			ID:          "quit",
			Title:       "Quit",
			Description: "Quit",
			Shortcut:    "ctrl+c",
			Handler: func(cmd Command) tea.Cmd {
				return util.CmdHandler(QuitMsg{})
			},
		},
	}...)
}

func (c *commandDialogCmp) ID() dialogs.DialogID {
	return CommandsDialogID
}



================================================
FILE: internal/tui/components/dialogs/commands/keys.go
================================================
package commands

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type CommandsDialogKeyMap struct {
	Select,
	Next,
	Previous,
	Tab,
	Close key.Binding
}

func DefaultCommandsDialogKeyMap() CommandsDialogKeyMap {
	return CommandsDialogKeyMap{
		Select: key.NewBinding(
			key.WithKeys("enter", "ctrl+y"),
			key.WithHelp("enter", "confirm"),
		),
		Next: key.NewBinding(
			key.WithKeys("down", "ctrl+n"),
			key.WithHelp("↓", "next item"),
		),
		Previous: key.NewBinding(
			key.WithKeys("up", "ctrl+p"),
			key.WithHelp("↑", "previous item"),
		),
		Tab: key.NewBinding(
			key.WithKeys("tab"),
			key.WithHelp("tab", "switch selection"),
		),
		Close: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "cancel"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k CommandsDialogKeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Select,
		k.Next,
		k.Previous,
		k.Tab,
		k.Close,
	}
}

// FullHelp implements help.KeyMap.
func (k CommandsDialogKeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k CommandsDialogKeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		k.Tab,
		key.NewBinding(
			key.WithKeys("down", "up"),
			key.WithHelp("↑↓", "choose"),
		),
		k.Select,
		k.Close,
	}
}

type ArgumentsDialogKeyMap struct {
	Confirm  key.Binding
	Next     key.Binding
	Previous key.Binding
}

func DefaultArgumentsDialogKeyMap() ArgumentsDialogKeyMap {
	return ArgumentsDialogKeyMap{
		Confirm: key.NewBinding(
			key.WithKeys("enter"),
			key.WithHelp("enter", "confirm"),
		),

		Next: key.NewBinding(
			key.WithKeys("tab", "down"),
			key.WithHelp("tab/↓", "next"),
		),
		Previous: key.NewBinding(
			key.WithKeys("shift+tab", "up"),
			key.WithHelp("shift+tab/↑", "previous"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k ArgumentsDialogKeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Confirm,
		k.Next,
		k.Previous,
	}
}

// FullHelp implements help.KeyMap.
func (k ArgumentsDialogKeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k ArgumentsDialogKeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		k.Confirm,
		k.Next,
		k.Previous,
	}
}



================================================
FILE: internal/tui/components/dialogs/commands/loader.go
================================================
package commands

import (
	"fmt"
	"io/fs"
	"os"
	"path/filepath"
	"regexp"
	"strings"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/tui/util"
)

const (
	UserCommandPrefix    = "user:"
	ProjectCommandPrefix = "project:"
)

var namedArgPattern = regexp.MustCompile(`\$([A-Z][A-Z0-9_]*)`)

type commandLoader struct {
	sources []commandSource
}

type commandSource struct {
	path   string
	prefix string
}

func LoadCustomCommands() ([]Command, error) {
	cfg := config.Get()
	if cfg == nil {
		return nil, fmt.Errorf("config not loaded")
	}

	loader := &commandLoader{
		sources: buildCommandSources(cfg),
	}

	return loader.loadAll()
}

func buildCommandSources(cfg *config.Config) []commandSource {
	var sources []commandSource

	// XDG config directory
	if dir := getXDGCommandsDir(); dir != "" {
		sources = append(sources, commandSource{
			path:   dir,
			prefix: UserCommandPrefix,
		})
	}

	// Home directory
	if home, err := os.UserHomeDir(); err == nil {
		sources = append(sources, commandSource{
			path:   filepath.Join(home, ".crush", "commands"),
			prefix: UserCommandPrefix,
		})
	}

	// Project directory
	sources = append(sources, commandSource{
		path:   filepath.Join(cfg.Options.DataDirectory, "commands"),
		prefix: ProjectCommandPrefix,
	})

	return sources
}

func getXDGCommandsDir() string {
	xdgHome := os.Getenv("XDG_CONFIG_HOME")
	if xdgHome == "" {
		if home, err := os.UserHomeDir(); err == nil {
			xdgHome = filepath.Join(home, ".config")
		}
	}
	if xdgHome != "" {
		return filepath.Join(xdgHome, "crush", "commands")
	}
	return ""
}

func (l *commandLoader) loadAll() ([]Command, error) {
	var commands []Command

	for _, source := range l.sources {
		if cmds, err := l.loadFromSource(source); err == nil {
			commands = append(commands, cmds...)
		}
	}

	return commands, nil
}

func (l *commandLoader) loadFromSource(source commandSource) ([]Command, error) {
	if err := ensureDir(source.path); err != nil {
		return nil, err
	}

	var commands []Command

	err := filepath.WalkDir(source.path, func(path string, d fs.DirEntry, err error) error {
		if err != nil || d.IsDir() || !isMarkdownFile(d.Name()) {
			return err
		}

		cmd, err := l.loadCommand(path, source.path, source.prefix)
		if err != nil {
			return nil // Skip invalid files
		}

		commands = append(commands, cmd)
		return nil
	})

	return commands, err
}

func (l *commandLoader) loadCommand(path, baseDir, prefix string) (Command, error) {
	content, err := os.ReadFile(path)
	if err != nil {
		return Command{}, err
	}

	id := buildCommandID(path, baseDir, prefix)

	return Command{
		ID:          id,
		Title:       id,
		Description: fmt.Sprintf("Custom command from %s", filepath.Base(path)),
		Handler:     createCommandHandler(id, string(content)),
	}, nil
}

func buildCommandID(path, baseDir, prefix string) string {
	relPath, _ := filepath.Rel(baseDir, path)
	parts := strings.Split(relPath, string(filepath.Separator))

	// Remove .md extension from last part
	if len(parts) > 0 {
		lastIdx := len(parts) - 1
		parts[lastIdx] = strings.TrimSuffix(parts[lastIdx], filepath.Ext(parts[lastIdx]))
	}

	return prefix + strings.Join(parts, ":")
}

func createCommandHandler(id string, content string) func(Command) tea.Cmd {
	return func(cmd Command) tea.Cmd {
		args := extractArgNames(content)

		if len(args) > 0 {
			return util.CmdHandler(ShowArgumentsDialogMsg{
				CommandID: id,
				Content:   content,
				ArgNames:  args,
			})
		}

		return util.CmdHandler(CommandRunCustomMsg{
			Content: content,
		})
	}
}

func extractArgNames(content string) []string {
	matches := namedArgPattern.FindAllStringSubmatch(content, -1)
	if len(matches) == 0 {
		return nil
	}

	seen := make(map[string]bool)
	var args []string

	for _, match := range matches {
		arg := match[1]
		if !seen[arg] {
			seen[arg] = true
			args = append(args, arg)
		}
	}

	return args
}

func ensureDir(path string) error {
	if _, err := os.Stat(path); os.IsNotExist(err) {
		return os.MkdirAll(path, 0o755)
	}
	return nil
}

func isMarkdownFile(name string) bool {
	return strings.HasSuffix(strings.ToLower(name), ".md")
}

type CommandRunCustomMsg struct {
	Content string
}



================================================
FILE: internal/tui/components/dialogs/compact/compact.go
================================================
package compact

import (
	"context"

	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/lipgloss/v2"

	"github.com/charmbracelet/crush/internal/llm/agent"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
)

const CompactDialogID dialogs.DialogID = "compact"

// CompactDialog interface for the session compact dialog
type CompactDialog interface {
	dialogs.DialogModel
}

type compactDialogCmp struct {
	wWidth, wHeight int
	width, height   int
	selected        int
	keyMap          KeyMap
	sessionID       string
	state           compactState
	progress        string
	agent           agent.Service
	noAsk           bool // If true, skip confirmation dialog
}

type compactState int

const (
	stateConfirm compactState = iota
	stateCompacting
	stateError
)

// NewCompactDialogCmp creates a new session compact dialog
func NewCompactDialogCmp(agent agent.Service, sessionID string, noAsk bool) CompactDialog {
	return &compactDialogCmp{
		sessionID: sessionID,
		keyMap:    DefaultKeyMap(),
		state:     stateConfirm,
		selected:  0,
		agent:     agent,
		noAsk:     noAsk,
	}
}

func (c *compactDialogCmp) Init() tea.Cmd {
	if c.noAsk {
		// If noAsk is true, skip confirmation and start compaction immediately
		return c.startCompaction()
	}
	return nil
}

func (c *compactDialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		c.wWidth = msg.Width
		c.wHeight = msg.Height
		cmd := c.SetSize()
		return c, cmd

	case tea.KeyPressMsg:
		switch c.state {
		case stateConfirm:
			switch {
			case key.Matches(msg, c.keyMap.ChangeSelection):
				c.selected = (c.selected + 1) % 2
				return c, nil
			case key.Matches(msg, c.keyMap.Select):
				if c.selected == 0 {
					return c, c.startCompaction()
				} else {
					return c, util.CmdHandler(dialogs.CloseDialogMsg{})
				}
			case key.Matches(msg, c.keyMap.Y):
				return c, c.startCompaction()
			case key.Matches(msg, c.keyMap.N):
				return c, util.CmdHandler(dialogs.CloseDialogMsg{})
			case key.Matches(msg, c.keyMap.Close):
				return c, util.CmdHandler(dialogs.CloseDialogMsg{})
			}
		case stateCompacting:
			switch {
			case key.Matches(msg, c.keyMap.Close):
				return c, util.CmdHandler(dialogs.CloseDialogMsg{})
			}
		case stateError:
			switch {
			case key.Matches(msg, c.keyMap.Select):
				return c, util.CmdHandler(dialogs.CloseDialogMsg{})
			case key.Matches(msg, c.keyMap.Close):
				return c, util.CmdHandler(dialogs.CloseDialogMsg{})
			}
		}

	case agent.AgentEvent:
		if msg.Type == agent.AgentEventTypeSummarize {
			if msg.Error != nil {
				c.state = stateError
				c.progress = "Error: " + msg.Error.Error()
			} else if msg.Done {
				return c, util.CmdHandler(
					dialogs.CloseDialogMsg{},
				)
			} else {
				c.progress = msg.Progress
			}
		}
		return c, nil
	}

	return c, nil
}

func (c *compactDialogCmp) startCompaction() tea.Cmd {
	c.state = stateCompacting
	c.progress = "Starting summarization..."
	return func() tea.Msg {
		err := c.agent.Summarize(context.Background(), c.sessionID)
		if err != nil {
			c.state = stateError
			c.progress = "Error: " + err.Error()
		}
		return nil
	}
}

func (c *compactDialogCmp) renderButtons() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base

	buttons := []core.ButtonOpts{
		{
			Text:           "Yes",
			UnderlineIndex: 0, // "Y"
			Selected:       c.selected == 0,
		},
		{
			Text:           "No",
			UnderlineIndex: 0, // "N"
			Selected:       c.selected == 1,
		},
	}

	content := core.SelectableButtons(buttons, "  ")

	return baseStyle.AlignHorizontal(lipgloss.Right).Width(c.width - 4).Render(content)
}

func (c *compactDialogCmp) renderContent() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base

	switch c.state {
	case stateConfirm:
		explanation := t.S().Text.
			Width(c.width - 4).
			Render("This will summarize the current session and reset the context. The conversation history will be condensed into a summary to free up context space while preserving important information.")

		question := t.S().Text.
			Width(c.width - 4).
			Render("Do you want to continue?")

		return baseStyle.Render(lipgloss.JoinVertical(
			lipgloss.Left,
			explanation,
			"",
			question,
		))
	case stateCompacting:
		return baseStyle.Render(lipgloss.JoinVertical(
			lipgloss.Left,
			c.progress,
			"",
			"Please wait...",
		))
	case stateError:
		return baseStyle.Render(lipgloss.JoinVertical(
			lipgloss.Left,
			c.progress,
			"",
			"Press Enter to close",
		))
	}
	return ""
}

func (c *compactDialogCmp) render() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base

	var title string
	switch c.state {
	case stateConfirm:
		title = "Compact Session"
	case stateCompacting:
		title = "Compacting Session"
	case stateError:
		title = "Compact Failed"
	}

	titleView := core.Title(title, c.width-4)
	content := c.renderContent()

	var dialogContent string
	if c.state == stateConfirm {
		buttons := c.renderButtons()
		dialogContent = lipgloss.JoinVertical(
			lipgloss.Top,
			titleView,
			"",
			content,
			"",
			buttons,
			"",
		)
	} else {
		dialogContent = lipgloss.JoinVertical(
			lipgloss.Top,
			titleView,
			"",
			content,
			"",
		)
	}

	return baseStyle.
		Padding(0, 1).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus).
		Width(c.width).
		Render(dialogContent)
}

func (c *compactDialogCmp) View() string {
	return c.render()
}

// SetSize sets the size of the component.
func (c *compactDialogCmp) SetSize() tea.Cmd {
	c.width = min(90, c.wWidth)
	c.height = min(15, c.wHeight)
	return nil
}

func (c *compactDialogCmp) Position() (int, int) {
	row := (c.wHeight / 2) - (c.height / 2)
	col := (c.wWidth / 2) - (c.width / 2)
	return row, col
}

// ID implements CompactDialog.
func (c *compactDialogCmp) ID() dialogs.DialogID {
	return CompactDialogID
}



================================================
FILE: internal/tui/components/dialogs/compact/keys.go
================================================
package compact

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

// KeyMap defines the key bindings for the compact dialog.
type KeyMap struct {
	ChangeSelection key.Binding
	Select          key.Binding
	Y               key.Binding
	N               key.Binding
	Close           key.Binding
}

// DefaultKeyMap returns the default key bindings for the compact dialog.
func DefaultKeyMap() KeyMap {
	return KeyMap{
		ChangeSelection: key.NewBinding(
			key.WithKeys("tab", "left", "right", "h", "l"),
			key.WithHelp("tab/←/→", "toggle selection"),
		),
		Select: key.NewBinding(
			key.WithKeys("enter"),
			key.WithHelp("enter", "confirm"),
		),
		Y: key.NewBinding(
			key.WithKeys("y"),
			key.WithHelp("y", "yes"),
		),
		N: key.NewBinding(
			key.WithKeys("n"),
			key.WithHelp("n", "no"),
		),
		Close: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "cancel"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.ChangeSelection,
		k.Select,
		k.Y,
		k.N,
		k.Close,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		k.ChangeSelection,
		k.Select,
		k.Close,
	}
}



================================================
FILE: internal/tui/components/dialogs/filepicker/filepicker.go
================================================
package filepicker

import (
	"fmt"
	"net/http"
	"os"
	"path/filepath"
	"strings"

	"github.com/charmbracelet/bubbles/v2/filepicker"
	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/components/image"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

const (
	MaxAttachmentSize  = int64(5 * 1024 * 1024) // 5MB
	FilePickerID       = "filepicker"
	fileSelectionHight = 10
)

type FilePickedMsg struct {
	Attachment message.Attachment
}

type FilePicker interface {
	dialogs.DialogModel
}

type model struct {
	wWidth          int
	wHeight         int
	width           int
	filePicker      filepicker.Model
	highlightedFile string
	image           image.Model
	keyMap          KeyMap
	help            help.Model
}

var AllowedTypes = []string{".jpg", ".jpeg", ".png"}

func NewFilePickerCmp(workingDir string) FilePicker {
	t := styles.CurrentTheme()
	fp := filepicker.New()
	fp.AllowedTypes = AllowedTypes

	if workingDir != "" {
		fp.CurrentDirectory = workingDir
	} else {
		// Fallback to current working directory, then home directory
		if cwd, err := os.Getwd(); err == nil {
			fp.CurrentDirectory = cwd
		} else {
			fp.CurrentDirectory, _ = os.UserHomeDir()
		}
	}

	fp.ShowPermissions = false
	fp.ShowSize = false
	fp.AutoHeight = false
	fp.Styles = t.S().FilePicker
	fp.Cursor = ""
	fp.SetHeight(fileSelectionHight)

	image := image.New(1, 1, "")

	help := help.New()
	help.Styles = t.S().Help
	return &model{
		filePicker: fp,
		image:      image,
		keyMap:     DefaultKeyMap(),
		help:       help,
	}
}

func (m *model) Init() tea.Cmd {
	return m.filePicker.Init()
}

func (m *model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		m.wWidth = msg.Width
		m.wHeight = msg.Height
		m.width = min(70, m.wWidth)
		styles := m.filePicker.Styles
		styles.Directory = styles.Directory.Width(m.width - 4)
		styles.Selected = styles.Selected.PaddingLeft(1).Width(m.width - 4)
		styles.DisabledSelected = styles.DisabledSelected.PaddingLeft(1).Width(m.width - 4)
		styles.File = styles.File.Width(m.width)
		m.filePicker.Styles = styles
		return m, nil
	case tea.KeyPressMsg:
		if key.Matches(msg, m.keyMap.Close) {
			return m, util.CmdHandler(dialogs.CloseDialogMsg{})
		}
		if key.Matches(msg, m.filePicker.KeyMap.Back) {
			// make sure we don't go back if we are at the home directory
			homeDir, _ := os.UserHomeDir()
			if m.filePicker.CurrentDirectory == homeDir {
				return m, nil
			}
		}
	}

	var cmd tea.Cmd
	var cmds []tea.Cmd
	m.filePicker, cmd = m.filePicker.Update(msg)
	cmds = append(cmds, cmd)
	if m.highlightedFile != m.currentImage() && m.currentImage() != "" {
		w, h := m.imagePreviewSize()
		cmd = m.image.Redraw(uint(w-2), uint(h-2), m.currentImage())
		cmds = append(cmds, cmd)
	}
	m.highlightedFile = m.currentImage()

	// Did the user select a file?
	if didSelect, path := m.filePicker.DidSelectFile(msg); didSelect {
		// Get the path of the selected file.
		return m, tea.Sequence(
			util.CmdHandler(dialogs.CloseDialogMsg{}),
			func() tea.Msg {
				isFileLarge, err := IsFileTooBig(path, MaxAttachmentSize)
				if err != nil {
					return util.ReportError(fmt.Errorf("unable to read the image: %w", err))
				}
				if isFileLarge {
					return util.ReportError(fmt.Errorf("file too large, max 5MB"))
				}

				content, err := os.ReadFile(path)
				if err != nil {
					return util.ReportError(fmt.Errorf("unable to read the image: %w", err))
				}

				mimeBufferSize := min(512, len(content))
				mimeType := http.DetectContentType(content[:mimeBufferSize])
				fileName := filepath.Base(path)
				attachment := message.Attachment{FilePath: path, FileName: fileName, MimeType: mimeType, Content: content}
				return FilePickedMsg{
					Attachment: attachment,
				}
			},
		)
	}
	m.image, cmd = m.image.Update(msg)
	cmds = append(cmds, cmd)
	return m, tea.Batch(cmds...)
}

func (m *model) View() string {
	t := styles.CurrentTheme()

	content := lipgloss.JoinVertical(
		lipgloss.Left,
		t.S().Base.Padding(0, 1, 1, 1).Render(core.Title("Add Image", m.width-4)),
		m.imagePreview(),
		m.filePicker.View(),
		t.S().Base.Width(m.width-2).PaddingLeft(1).AlignHorizontal(lipgloss.Left).Render(m.help.View(m.keyMap)),
	)
	return m.style().Render(content)
}

func (m *model) currentImage() string {
	for _, ext := range m.filePicker.AllowedTypes {
		if strings.HasSuffix(m.filePicker.HighlightedPath(), ext) {
			return m.filePicker.HighlightedPath()
		}
	}
	return ""
}

func (m *model) imagePreview() string {
	t := styles.CurrentTheme()
	w, h := m.imagePreviewSize()
	if m.currentImage() == "" {
		imgPreview := t.S().Base.
			Width(w).
			Height(h).
			Background(t.BgOverlay)

		return m.imagePreviewStyle().Render(imgPreview.Render())
	}

	return m.imagePreviewStyle().Width(w).Height(h).Render(m.image.View())
}

func (m *model) imagePreviewStyle() lipgloss.Style {
	t := styles.CurrentTheme()
	return t.S().Base.Padding(1, 1, 1, 1)
}

func (m *model) imagePreviewSize() (int, int) {
	return m.width - 4, min(20, m.wHeight/2)
}

func (m *model) style() lipgloss.Style {
	t := styles.CurrentTheme()
	return t.S().Base.
		Width(m.width).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus)
}

// ID implements FilePicker.
func (m *model) ID() dialogs.DialogID {
	return FilePickerID
}

// Position implements FilePicker.
func (m *model) Position() (int, int) {
	row := m.wHeight/4 - 2 // just a bit above the center
	col := m.wWidth / 2
	col -= m.width / 2
	return row, col
}

func IsFileTooBig(filePath string, sizeLimit int64) (bool, error) {
	fileInfo, err := os.Stat(filePath)
	if err != nil {
		return false, fmt.Errorf("error getting file info: %w", err)
	}

	if fileInfo.Size() > sizeLimit {
		return true, nil
	}

	return false, nil
}



================================================
FILE: internal/tui/components/dialogs/filepicker/keys.go
================================================
package filepicker

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

// KeyMap defines keyboard bindings for dialog management.
type KeyMap struct {
	Select,
	Down,
	Up,
	Forward,
	Backward,
	Close key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Select: key.NewBinding(
			key.WithKeys("enter"),
			key.WithHelp("enter", "accept"),
		),
		Down: key.NewBinding(
			key.WithKeys("down", "j"),
			key.WithHelp("down/j", "move down"),
		),
		Up: key.NewBinding(
			key.WithKeys("up", "k"),
			key.WithHelp("up/k", "move up"),
		),
		Forward: key.NewBinding(
			key.WithKeys("right", "l"),
			key.WithHelp("right/l", "move forward"),
		),
		Backward: key.NewBinding(
			key.WithKeys("left", "h"),
			key.WithHelp("left/h", "move backward"),
		),

		Close: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "close/exit"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Select,
		k.Down,
		k.Up,
		k.Forward,
		k.Backward,
		k.Close,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		key.NewBinding(
			key.WithKeys("right", "l", "left", "h", "up", "k", "down", "j"),
			key.WithHelp("↑↓←→", "navigate"),
		),
		k.Select,
		k.Close,
	}
}



================================================
FILE: internal/tui/components/dialogs/models/apikey.go
================================================
package models

import (
	"fmt"
	"strings"

	"github.com/charmbracelet/bubbles/v2/spinner"
	"github.com/charmbracelet/bubbles/v2/textinput"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
)

type APIKeyInputState int

const (
	APIKeyInputStateInitial APIKeyInputState = iota
	APIKeyInputStateVerifying
	APIKeyInputStateVerified
	APIKeyInputStateError
)

type APIKeyStateChangeMsg struct {
	State APIKeyInputState
}

type APIKeyInput struct {
	input        textinput.Model
	width        int
	spinner      spinner.Model
	providerName string
	state        APIKeyInputState
	title        string
	showTitle    bool
}

func NewAPIKeyInput() *APIKeyInput {
	t := styles.CurrentTheme()

	ti := textinput.New()
	ti.Placeholder = "Enter your API key..."
	ti.SetVirtualCursor(false)
	ti.Prompt = "> "
	ti.SetStyles(t.S().TextInput)
	ti.Focus()

	return &APIKeyInput{
		input: ti,
		state: APIKeyInputStateInitial,
		spinner: spinner.New(
			spinner.WithSpinner(spinner.Dot),
			spinner.WithStyle(t.S().Base.Foreground(t.Green)),
		),
		providerName: "Provider",
		showTitle:    true,
	}
}

func (a *APIKeyInput) SetProviderName(name string) {
	a.providerName = name
	a.updateStatePresentation()
}

func (a *APIKeyInput) SetShowTitle(show bool) {
	a.showTitle = show
}

func (a *APIKeyInput) GetTitle() string {
	return a.title
}

func (a *APIKeyInput) Init() tea.Cmd {
	a.updateStatePresentation()
	return a.spinner.Tick
}

func (a *APIKeyInput) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case spinner.TickMsg:
		if a.state == APIKeyInputStateVerifying {
			var cmd tea.Cmd
			a.spinner, cmd = a.spinner.Update(msg)
			a.updateStatePresentation()
			return a, cmd
		}
		return a, nil
	case APIKeyStateChangeMsg:
		a.state = msg.State
		var cmd tea.Cmd
		if msg.State == APIKeyInputStateVerifying {
			cmd = a.spinner.Tick
		}
		a.updateStatePresentation()
		return a, cmd
	}

	var cmd tea.Cmd
	a.input, cmd = a.input.Update(msg)
	return a, cmd
}

func (a *APIKeyInput) updateStatePresentation() {
	t := styles.CurrentTheme()

	prefixStyle := t.S().Base.
		Foreground(t.Primary)
	accentStyle := t.S().Base.Foreground(t.Green).Bold(true)
	errorStyle := t.S().Base.Foreground(t.Cherry)

	switch a.state {
	case APIKeyInputStateInitial:
		titlePrefix := prefixStyle.Render("Enter your ")
		a.title = titlePrefix + accentStyle.Render(a.providerName+" API Key") + prefixStyle.Render(".")
		a.input.SetStyles(t.S().TextInput)
		a.input.Prompt = "> "
	case APIKeyInputStateVerifying:
		titlePrefix := prefixStyle.Render("Verifying your ")
		a.title = titlePrefix + accentStyle.Render(a.providerName+" API Key") + prefixStyle.Render("...")
		ts := t.S().TextInput
		// make the blurred state be the same
		ts.Blurred.Prompt = ts.Focused.Prompt
		a.input.Prompt = a.spinner.View()
		a.input.Blur()
	case APIKeyInputStateVerified:
		a.title = accentStyle.Render(a.providerName+" API Key") + prefixStyle.Render(" validated.")
		ts := t.S().TextInput
		// make the blurred state be the same
		ts.Blurred.Prompt = ts.Focused.Prompt
		a.input.SetStyles(ts)
		a.input.Prompt = styles.CheckIcon + " "
		a.input.Blur()
	case APIKeyInputStateError:
		a.title = errorStyle.Render("Invalid ") + accentStyle.Render(a.providerName+" API Key") + errorStyle.Render(". Try again?")
		ts := t.S().TextInput
		ts.Focused.Prompt = ts.Focused.Prompt.Foreground(t.Cherry)
		a.input.Focus()
		a.input.SetStyles(ts)
		a.input.Prompt = styles.ErrorIcon + " "
	}
}

func (a *APIKeyInput) View() string {
	inputView := a.input.View()

	dataPath := config.GlobalConfigData()
	dataPath = strings.Replace(dataPath, fsext.HomeDir(), "~", 1)
	helpText := styles.CurrentTheme().S().Muted.
		Render(fmt.Sprintf("This will be written to the global configuration: %s", dataPath))

	var content string
	if a.showTitle && a.title != "" {
		content = lipgloss.JoinVertical(
			lipgloss.Left,
			a.title,
			"",
			inputView,
			"",
			helpText,
		)
	} else {
		content = lipgloss.JoinVertical(
			lipgloss.Left,
			inputView,
			"",
			helpText,
		)
	}

	return content
}

func (a *APIKeyInput) Cursor() *tea.Cursor {
	cursor := a.input.Cursor()
	if cursor != nil && a.showTitle {
		cursor.Y += 2 // Adjust for title and spacing
	}
	return cursor
}

func (a *APIKeyInput) Value() string {
	return a.input.Value()
}

func (a *APIKeyInput) Tick() tea.Cmd {
	if a.state == APIKeyInputStateVerifying {
		return a.spinner.Tick
	}
	return nil
}

func (a *APIKeyInput) SetWidth(width int) {
	a.width = width
	a.input.SetWidth(width - 4)
}

func (a *APIKeyInput) Reset() {
	a.state = APIKeyInputStateInitial
	a.input.SetValue("")
	a.input.Focus()
	a.updateStatePresentation()
}



================================================
FILE: internal/tui/components/dialogs/models/keys.go
================================================
package models

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	Select,
	Next,
	Previous,
	Tab,
	Close key.Binding

	isAPIKeyHelp  bool
	isAPIKeyValid bool
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Select: key.NewBinding(
			key.WithKeys("enter", "ctrl+y"),
			key.WithHelp("enter", "confirm"),
		),
		Next: key.NewBinding(
			key.WithKeys("down", "ctrl+n"),
			key.WithHelp("↓", "next item"),
		),
		Previous: key.NewBinding(
			key.WithKeys("up", "ctrl+p"),
			key.WithHelp("↑", "previous item"),
		),
		Tab: key.NewBinding(
			key.WithKeys("tab"),
			key.WithHelp("tab", "toggle type"),
		),
		Close: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "cancel"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Select,
		k.Next,
		k.Previous,
		k.Tab,
		k.Close,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	if k.isAPIKeyHelp && !k.isAPIKeyValid {
		return []key.Binding{
			k.Close,
		}
	} else if k.isAPIKeyValid {
		return []key.Binding{
			k.Select,
		}
	}
	return []key.Binding{
		key.NewBinding(
			key.WithKeys("down", "up"),
			key.WithHelp("↑↓", "choose"),
		),
		k.Tab,
		k.Select,
		k.Close,
	}
}



================================================
FILE: internal/tui/components/dialogs/models/list.go
================================================
package models

import (
	"fmt"
	"slices"
	"strings"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
)

type listModel = list.FilterableGroupList[list.CompletionItem[ModelOption]]

type ModelListComponent struct {
	list      listModel
	modelType int
	providers []catwalk.Provider
}

func NewModelListComponent(keyMap list.KeyMap, inputPlaceholder string, shouldResize bool) *ModelListComponent {
	t := styles.CurrentTheme()
	inputStyle := t.S().Base.PaddingLeft(1).PaddingBottom(1)
	options := []list.ListOption{
		list.WithKeyMap(keyMap),
		list.WithWrapNavigation(),
	}
	if shouldResize {
		options = append(options, list.WithResizeByList())
	}
	modelList := list.NewFilterableGroupedList(
		[]list.Group[list.CompletionItem[ModelOption]]{},
		list.WithFilterInputStyle(inputStyle),
		list.WithFilterPlaceholder(inputPlaceholder),
		list.WithFilterListOptions(
			options...,
		),
	)

	return &ModelListComponent{
		list:      modelList,
		modelType: LargeModelType,
	}
}

func (m *ModelListComponent) Init() tea.Cmd {
	var cmds []tea.Cmd
	if len(m.providers) == 0 {
		providers, err := config.Providers()
		filteredProviders := []catwalk.Provider{}
		for _, p := range providers {
			hasAPIKeyEnv := strings.HasPrefix(p.APIKey, "$")
			if hasAPIKeyEnv && p.ID != catwalk.InferenceProviderAzure {
				filteredProviders = append(filteredProviders, p)
			}
		}

		m.providers = filteredProviders
		if err != nil {
			cmds = append(cmds, util.ReportError(err))
		}
	}
	cmds = append(cmds, m.list.Init(), m.SetModelType(m.modelType))
	return tea.Batch(cmds...)
}

func (m *ModelListComponent) Update(msg tea.Msg) (*ModelListComponent, tea.Cmd) {
	u, cmd := m.list.Update(msg)
	m.list = u.(listModel)
	return m, cmd
}

func (m *ModelListComponent) View() string {
	return m.list.View()
}

func (m *ModelListComponent) Cursor() *tea.Cursor {
	return m.list.Cursor()
}

func (m *ModelListComponent) SetSize(width, height int) tea.Cmd {
	return m.list.SetSize(width, height)
}

func (m *ModelListComponent) SelectedModel() *ModelOption {
	s := m.list.SelectedItem()
	if s == nil {
		return nil
	}
	sv := *s
	model := sv.Value()
	return &model
}

func (m *ModelListComponent) SetModelType(modelType int) tea.Cmd {
	t := styles.CurrentTheme()
	m.modelType = modelType

	var groups []list.Group[list.CompletionItem[ModelOption]]
	// first none section
	selectedItemID := ""

	cfg := config.Get()
	var currentModel config.SelectedModel
	if m.modelType == LargeModelType {
		currentModel = cfg.Models[config.SelectedModelTypeLarge]
	} else {
		currentModel = cfg.Models[config.SelectedModelTypeSmall]
	}

	configuredIcon := t.S().Base.Foreground(t.Success).Render(styles.CheckIcon)
	configured := fmt.Sprintf("%s %s", configuredIcon, t.S().Subtle.Render("Configured"))

	// Create a map to track which providers we've already added
	addedProviders := make(map[string]bool)

	// First, add any configured providers that are not in the known providers list
	// These should appear at the top of the list
	knownProviders, err := config.Providers()
	if err != nil {
		return util.ReportError(err)
	}
	for providerID, providerConfig := range cfg.Providers.Seq2() {
		if providerConfig.Disable {
			continue
		}

		// Check if this provider is not in the known providers list
		if !slices.ContainsFunc(knownProviders, func(p catwalk.Provider) bool { return p.ID == catwalk.InferenceProvider(providerID) }) ||
			!slices.ContainsFunc(m.providers, func(p catwalk.Provider) bool { return p.ID == catwalk.InferenceProvider(providerID) }) {
			// Convert config provider to provider.Provider format
			configProvider := catwalk.Provider{
				Name:   providerConfig.Name,
				ID:     catwalk.InferenceProvider(providerID),
				Models: make([]catwalk.Model, len(providerConfig.Models)),
			}

			// Convert models
			for i, model := range providerConfig.Models {
				configProvider.Models[i] = catwalk.Model{
					ID:                     model.ID,
					Name:                   model.Name,
					CostPer1MIn:            model.CostPer1MIn,
					CostPer1MOut:           model.CostPer1MOut,
					CostPer1MInCached:      model.CostPer1MInCached,
					CostPer1MOutCached:     model.CostPer1MOutCached,
					ContextWindow:          model.ContextWindow,
					DefaultMaxTokens:       model.DefaultMaxTokens,
					CanReason:              model.CanReason,
					HasReasoningEffort:     model.HasReasoningEffort,
					DefaultReasoningEffort: model.DefaultReasoningEffort,
					SupportsImages:         model.SupportsImages,
				}
			}

			// Add this unknown provider to the list
			name := configProvider.Name
			if name == "" {
				name = string(configProvider.ID)
			}
			section := list.NewItemSection(name)
			section.SetInfo(configured)
			group := list.Group[list.CompletionItem[ModelOption]]{
				Section: section,
			}
			for _, model := range configProvider.Models {
				item := list.NewCompletionItem(model.Name, ModelOption{
					Provider: configProvider,
					Model:    model,
				},
					list.WithCompletionID(
						fmt.Sprintf("%s:%s", providerConfig.ID, model.ID),
					),
				)

				group.Items = append(group.Items, item)
				if model.ID == currentModel.Model && string(configProvider.ID) == currentModel.Provider {
					selectedItemID = item.ID()
				}
			}
			groups = append(groups, group)

			addedProviders[providerID] = true
		}
	}

	// Then add the known providers from the predefined list
	for _, provider := range m.providers {
		// Skip if we already added this provider as an unknown provider
		if addedProviders[string(provider.ID)] {
			continue
		}

		// Check if this provider is configured and not disabled
		if providerConfig, exists := cfg.Providers.Get(string(provider.ID)); exists && providerConfig.Disable {
			continue
		}

		name := provider.Name
		if name == "" {
			name = string(provider.ID)
		}

		section := list.NewItemSection(name)
		if _, ok := cfg.Providers.Get(string(provider.ID)); ok {
			section.SetInfo(configured)
		}
		group := list.Group[list.CompletionItem[ModelOption]]{
			Section: section,
		}
		for _, model := range provider.Models {
			item := list.NewCompletionItem(model.Name, ModelOption{
				Provider: provider,
				Model:    model,
			},
				list.WithCompletionID(
					fmt.Sprintf("%s:%s", provider.ID, model.ID),
				),
			)
			group.Items = append(group.Items, item)
			if model.ID == currentModel.Model && string(provider.ID) == currentModel.Provider {
				selectedItemID = item.ID()
			}
		}
		groups = append(groups, group)
	}

	var cmds []tea.Cmd

	cmd := m.list.SetGroups(groups)

	if cmd != nil {
		cmds = append(cmds, cmd)
	}
	cmd = m.list.SetSelected(selectedItemID)
	if cmd != nil {
		cmds = append(cmds, cmd)
	}

	return tea.Sequence(cmds...)
}

// GetModelType returns the current model type
func (m *ModelListComponent) GetModelType() int {
	return m.modelType
}

func (m *ModelListComponent) SetInputPlaceholder(placeholder string) {
	m.list.SetInputPlaceholder(placeholder)
}



================================================
FILE: internal/tui/components/dialogs/models/models.go
================================================
package models

import (
	"fmt"
	"time"

	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/spinner"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/catwalk/pkg/catwalk"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

const (
	ModelsDialogID dialogs.DialogID = "models"

	defaultWidth = 60
)

const (
	LargeModelType int = iota
	SmallModelType

	largeModelInputPlaceholder = "Choose a model for large, complex tasks"
	smallModelInputPlaceholder = "Choose a model for small, simple tasks"
)

// ModelSelectedMsg is sent when a model is selected
type ModelSelectedMsg struct {
	Model     config.SelectedModel
	ModelType config.SelectedModelType
}

// CloseModelDialogMsg is sent when a model is selected
type CloseModelDialogMsg struct{}

// ModelDialog interface for the model selection dialog
type ModelDialog interface {
	dialogs.DialogModel
}

type ModelOption struct {
	Provider catwalk.Provider
	Model    catwalk.Model
}

type modelDialogCmp struct {
	width   int
	wWidth  int
	wHeight int

	modelList *ModelListComponent
	keyMap    KeyMap
	help      help.Model

	// API key state
	needsAPIKey       bool
	apiKeyInput       *APIKeyInput
	selectedModel     *ModelOption
	selectedModelType config.SelectedModelType
	isAPIKeyValid     bool
	apiKeyValue       string
}

func NewModelDialogCmp() ModelDialog {
	keyMap := DefaultKeyMap()

	listKeyMap := list.DefaultKeyMap()
	listKeyMap.Down.SetEnabled(false)
	listKeyMap.Up.SetEnabled(false)
	listKeyMap.DownOneItem = keyMap.Next
	listKeyMap.UpOneItem = keyMap.Previous

	t := styles.CurrentTheme()
	modelList := NewModelListComponent(listKeyMap, largeModelInputPlaceholder, true)
	apiKeyInput := NewAPIKeyInput()
	apiKeyInput.SetShowTitle(false)
	help := help.New()
	help.Styles = t.S().Help

	return &modelDialogCmp{
		modelList:   modelList,
		apiKeyInput: apiKeyInput,
		width:       defaultWidth,
		keyMap:      DefaultKeyMap(),
		help:        help,
	}
}

func (m *modelDialogCmp) Init() tea.Cmd {
	return tea.Batch(m.modelList.Init(), m.apiKeyInput.Init())
}

func (m *modelDialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		m.wWidth = msg.Width
		m.wHeight = msg.Height
		m.apiKeyInput.SetWidth(m.width - 2)
		m.help.Width = m.width - 2
		return m, m.modelList.SetSize(m.listWidth(), m.listHeight())
	case APIKeyStateChangeMsg:
		u, cmd := m.apiKeyInput.Update(msg)
		m.apiKeyInput = u.(*APIKeyInput)
		return m, cmd
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, m.keyMap.Select):
			if m.isAPIKeyValid {
				return m, m.saveAPIKeyAndContinue(m.apiKeyValue)
			}
			if m.needsAPIKey {
				// Handle API key submission
				m.apiKeyValue = m.apiKeyInput.Value()
				provider, err := m.getProvider(m.selectedModel.Provider.ID)
				if err != nil || provider == nil {
					return m, util.ReportError(fmt.Errorf("provider %s not found", m.selectedModel.Provider.ID))
				}
				providerConfig := config.ProviderConfig{
					ID:      string(m.selectedModel.Provider.ID),
					Name:    m.selectedModel.Provider.Name,
					APIKey:  m.apiKeyValue,
					Type:    provider.Type,
					BaseURL: provider.APIEndpoint,
				}
				return m, tea.Sequence(
					util.CmdHandler(APIKeyStateChangeMsg{
						State: APIKeyInputStateVerifying,
					}),
					func() tea.Msg {
						start := time.Now()
						err := providerConfig.TestConnection(config.Get().Resolver())
						// intentionally wait for at least 750ms to make sure the user sees the spinner
						elapsed := time.Since(start)
						if elapsed < 750*time.Millisecond {
							time.Sleep(750*time.Millisecond - elapsed)
						}
						if err == nil {
							m.isAPIKeyValid = true
							return APIKeyStateChangeMsg{
								State: APIKeyInputStateVerified,
							}
						}
						return APIKeyStateChangeMsg{
							State: APIKeyInputStateError,
						}
					},
				)
			}
			// Normal model selection
			selectedItem := m.modelList.SelectedModel()

			var modelType config.SelectedModelType
			if m.modelList.GetModelType() == LargeModelType {
				modelType = config.SelectedModelTypeLarge
			} else {
				modelType = config.SelectedModelTypeSmall
			}

			// Check if provider is configured
			if m.isProviderConfigured(string(selectedItem.Provider.ID)) {
				return m, tea.Sequence(
					util.CmdHandler(dialogs.CloseDialogMsg{}),
					util.CmdHandler(ModelSelectedMsg{
						Model: config.SelectedModel{
							Model:    selectedItem.Model.ID,
							Provider: string(selectedItem.Provider.ID),
						},
						ModelType: modelType,
					}),
				)
			} else {
				// Provider not configured, show API key input
				m.needsAPIKey = true
				m.selectedModel = selectedItem
				m.selectedModelType = modelType
				m.apiKeyInput.SetProviderName(selectedItem.Provider.Name)
				return m, nil
			}
		case key.Matches(msg, m.keyMap.Tab):
			if m.needsAPIKey {
				u, cmd := m.apiKeyInput.Update(msg)
				m.apiKeyInput = u.(*APIKeyInput)
				return m, cmd
			}
			if m.modelList.GetModelType() == LargeModelType {
				m.modelList.SetInputPlaceholder(smallModelInputPlaceholder)
				return m, m.modelList.SetModelType(SmallModelType)
			} else {
				m.modelList.SetInputPlaceholder(largeModelInputPlaceholder)
				return m, m.modelList.SetModelType(LargeModelType)
			}
		case key.Matches(msg, m.keyMap.Close):
			if m.needsAPIKey {
				if m.isAPIKeyValid {
					return m, nil
				}
				// Go back to model selection
				m.needsAPIKey = false
				m.selectedModel = nil
				m.isAPIKeyValid = false
				m.apiKeyValue = ""
				m.apiKeyInput.Reset()
				return m, nil
			}
			return m, util.CmdHandler(dialogs.CloseDialogMsg{})
		default:
			if m.needsAPIKey {
				u, cmd := m.apiKeyInput.Update(msg)
				m.apiKeyInput = u.(*APIKeyInput)
				return m, cmd
			} else {
				u, cmd := m.modelList.Update(msg)
				m.modelList = u
				return m, cmd
			}
		}
	case tea.PasteMsg:
		if m.needsAPIKey {
			u, cmd := m.apiKeyInput.Update(msg)
			m.apiKeyInput = u.(*APIKeyInput)
			return m, cmd
		} else {
			var cmd tea.Cmd
			m.modelList, cmd = m.modelList.Update(msg)
			return m, cmd
		}
	case spinner.TickMsg:
		u, cmd := m.apiKeyInput.Update(msg)
		m.apiKeyInput = u.(*APIKeyInput)
		return m, cmd
	}
	return m, nil
}

func (m *modelDialogCmp) View() string {
	t := styles.CurrentTheme()

	if m.needsAPIKey {
		// Show API key input
		m.keyMap.isAPIKeyHelp = true
		m.keyMap.isAPIKeyValid = m.isAPIKeyValid
		apiKeyView := m.apiKeyInput.View()
		apiKeyView = t.S().Base.Width(m.width - 3).Height(lipgloss.Height(apiKeyView)).PaddingLeft(1).Render(apiKeyView)
		content := lipgloss.JoinVertical(
			lipgloss.Left,
			t.S().Base.Padding(0, 1, 1, 1).Render(core.Title(m.apiKeyInput.GetTitle(), m.width-4)),
			apiKeyView,
			"",
			t.S().Base.Width(m.width-2).PaddingLeft(1).AlignHorizontal(lipgloss.Left).Render(m.help.View(m.keyMap)),
		)
		return m.style().Render(content)
	}

	// Show model selection
	listView := m.modelList.View()
	radio := m.modelTypeRadio()
	content := lipgloss.JoinVertical(
		lipgloss.Left,
		t.S().Base.Padding(0, 1, 1, 1).Render(core.Title("Switch Model", m.width-lipgloss.Width(radio)-5)+" "+radio),
		listView,
		"",
		t.S().Base.Width(m.width-2).PaddingLeft(1).AlignHorizontal(lipgloss.Left).Render(m.help.View(m.keyMap)),
	)
	return m.style().Render(content)
}

func (m *modelDialogCmp) Cursor() *tea.Cursor {
	if m.needsAPIKey {
		cursor := m.apiKeyInput.Cursor()
		if cursor != nil {
			cursor = m.moveCursor(cursor)
			return cursor
		}
	} else {
		cursor := m.modelList.Cursor()
		if cursor != nil {
			cursor = m.moveCursor(cursor)
			return cursor
		}
	}
	return nil
}

func (m *modelDialogCmp) style() lipgloss.Style {
	t := styles.CurrentTheme()
	return t.S().Base.
		Width(m.width).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus)
}

func (m *modelDialogCmp) listWidth() int {
	return m.width - 2
}

func (m *modelDialogCmp) listHeight() int {
	return m.wHeight / 2
}

func (m *modelDialogCmp) Position() (int, int) {
	row := m.wHeight/4 - 2 // just a bit above the center
	col := m.wWidth / 2
	col -= m.width / 2
	return row, col
}

func (m *modelDialogCmp) moveCursor(cursor *tea.Cursor) *tea.Cursor {
	row, col := m.Position()
	if m.needsAPIKey {
		offset := row + 3 // Border + title + API key input offset
		cursor.Y += offset
		cursor.X = cursor.X + col + 2
	} else {
		offset := row + 3 // Border + title
		cursor.Y += offset
		cursor.X = cursor.X + col + 2
	}
	return cursor
}

func (m *modelDialogCmp) ID() dialogs.DialogID {
	return ModelsDialogID
}

func (m *modelDialogCmp) modelTypeRadio() string {
	t := styles.CurrentTheme()
	choices := []string{"Large Task", "Small Task"}
	iconSelected := "◉"
	iconUnselected := "○"
	if m.modelList.GetModelType() == LargeModelType {
		return t.S().Base.Foreground(t.FgHalfMuted).Render(iconSelected + " " + choices[0] + "  " + iconUnselected + " " + choices[1])
	}
	return t.S().Base.Foreground(t.FgHalfMuted).Render(iconUnselected + " " + choices[0] + "  " + iconSelected + " " + choices[1])
}

func (m *modelDialogCmp) isProviderConfigured(providerID string) bool {
	cfg := config.Get()
	if _, ok := cfg.Providers.Get(providerID); ok {
		return true
	}
	return false
}

func (m *modelDialogCmp) getProvider(providerID catwalk.InferenceProvider) (*catwalk.Provider, error) {
	providers, err := config.Providers()
	if err != nil {
		return nil, err
	}
	for _, p := range providers {
		if p.ID == providerID {
			return &p, nil
		}
	}
	return nil, nil
}

func (m *modelDialogCmp) saveAPIKeyAndContinue(apiKey string) tea.Cmd {
	if m.selectedModel == nil {
		return util.ReportError(fmt.Errorf("no model selected"))
	}

	cfg := config.Get()
	err := cfg.SetProviderAPIKey(string(m.selectedModel.Provider.ID), apiKey)
	if err != nil {
		return util.ReportError(fmt.Errorf("failed to save API key: %w", err))
	}

	// Reset API key state and continue with model selection
	selectedModel := *m.selectedModel
	return tea.Sequence(
		util.CmdHandler(dialogs.CloseDialogMsg{}),
		util.CmdHandler(ModelSelectedMsg{
			Model: config.SelectedModel{
				Model:    selectedModel.Model.ID,
				Provider: string(selectedModel.Provider.ID),
			},
			ModelType: m.selectedModelType,
		}),
	)
}



================================================
FILE: internal/tui/components/dialogs/permissions/keys.go
================================================
package permissions

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	Left,
	Right,
	Tab,
	Select,
	Allow,
	AllowSession,
	Deny,
	ToggleDiffMode,
	ScrollDown,
	ScrollUp key.Binding
	ScrollLeft,
	ScrollRight key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Left: key.NewBinding(
			key.WithKeys("left", "h"),
			key.WithHelp("←", "previous"),
		),
		Right: key.NewBinding(
			key.WithKeys("right", "l"),
			key.WithHelp("→", "next"),
		),
		Tab: key.NewBinding(
			key.WithKeys("tab"),
			key.WithHelp("tab", "switch"),
		),
		Allow: key.NewBinding(
			key.WithKeys("a", "A", "ctrl+a"),
			key.WithHelp("a", "allow"),
		),
		AllowSession: key.NewBinding(
			key.WithKeys("s", "S", "ctrl+s"),
			key.WithHelp("s", "allow session"),
		),
		Deny: key.NewBinding(
			key.WithKeys("d", "D", "ctrl+d", "esc"),
			key.WithHelp("d", "deny"),
		),
		Select: key.NewBinding(
			key.WithKeys("enter", "ctrl+y"),
			key.WithHelp("enter", "confirm"),
		),
		ToggleDiffMode: key.NewBinding(
			key.WithKeys("t"),
			key.WithHelp("t", "toggle diff mode"),
		),
		ScrollDown: key.NewBinding(
			key.WithKeys("shift+down", "J"),
			key.WithHelp("shift+↓", "scroll down"),
		),
		ScrollUp: key.NewBinding(
			key.WithKeys("shift+up", "K"),
			key.WithHelp("shift+↑", "scroll up"),
		),
		ScrollLeft: key.NewBinding(
			key.WithKeys("shift+left", "H"),
			key.WithHelp("shift+←", "scroll left"),
		),
		ScrollRight: key.NewBinding(
			key.WithKeys("shift+right", "L"),
			key.WithHelp("shift+→", "scroll right"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Left,
		k.Right,
		k.Tab,
		k.Select,
		k.Allow,
		k.AllowSession,
		k.Deny,
		k.ToggleDiffMode,
		k.ScrollDown,
		k.ScrollUp,
		k.ScrollLeft,
		k.ScrollRight,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		k.ToggleDiffMode,
		key.NewBinding(
			key.WithKeys("shift+left", "shift+down", "shift+up", "shift+right"),
			key.WithHelp("shift+←↓↑→", "scroll"),
		),
	}
}



================================================
FILE: internal/tui/components/dialogs/permissions/permissions.go
================================================
package permissions

import (
	"fmt"
	"strings"

	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/viewport"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/llm/tools"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
)

type PermissionAction string

// Permission responses
const (
	PermissionAllow           PermissionAction = "allow"
	PermissionAllowForSession PermissionAction = "allow_session"
	PermissionDeny            PermissionAction = "deny"

	PermissionsDialogID dialogs.DialogID = "permissions"
)

// PermissionResponseMsg represents the user's response to a permission request
type PermissionResponseMsg struct {
	Permission permission.PermissionRequest
	Action     PermissionAction
}

// PermissionDialogCmp interface for permission dialog component
type PermissionDialogCmp interface {
	dialogs.DialogModel
}

// permissionDialogCmp is the implementation of PermissionDialog
type permissionDialogCmp struct {
	wWidth          int
	wHeight         int
	width           int
	height          int
	permission      permission.PermissionRequest
	contentViewPort viewport.Model
	selectedOption  int // 0: Allow, 1: Allow for session, 2: Deny

	// Diff view state
	defaultDiffSplitMode bool  // true for split, false for unified
	diffSplitMode        *bool // nil means use defaultDiffSplitMode
	diffXOffset          int   // horizontal scroll offset
	diffYOffset          int   // vertical scroll offset

	// Caching
	cachedContent string
	contentDirty  bool

	positionRow int // Row position for dialog
	positionCol int // Column position for dialog

	finalDialogHeight int

	keyMap KeyMap
}

func NewPermissionDialogCmp(permission permission.PermissionRequest, opts *Options) PermissionDialogCmp {
	if opts == nil {
		opts = &Options{}
	}

	// Create viewport for content
	contentViewport := viewport.New()
	return &permissionDialogCmp{
		contentViewPort: contentViewport,
		selectedOption:  0, // Default to "Allow"
		permission:      permission,
		diffSplitMode:   opts.isSplitMode(),
		keyMap:          DefaultKeyMap(),
		contentDirty:    true, // Mark as dirty initially
	}
}

func (p *permissionDialogCmp) Init() tea.Cmd {
	return p.contentViewPort.Init()
}

func (p *permissionDialogCmp) supportsDiffView() bool {
	return p.permission.ToolName == tools.EditToolName || p.permission.ToolName == tools.WriteToolName || p.permission.ToolName == tools.MultiEditToolName
}

func (p *permissionDialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	var cmds []tea.Cmd

	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		p.wWidth = msg.Width
		p.wHeight = msg.Height
		p.contentDirty = true // Mark content as dirty on window resize
		cmd := p.SetSize()
		cmds = append(cmds, cmd)
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, p.keyMap.Right) || key.Matches(msg, p.keyMap.Tab):
			p.selectedOption = (p.selectedOption + 1) % 3
			return p, nil
		case key.Matches(msg, p.keyMap.Left):
			p.selectedOption = (p.selectedOption + 2) % 3
		case key.Matches(msg, p.keyMap.Select):
			return p, p.selectCurrentOption()
		case key.Matches(msg, p.keyMap.Allow):
			return p, tea.Batch(
				util.CmdHandler(dialogs.CloseDialogMsg{}),
				util.CmdHandler(PermissionResponseMsg{Action: PermissionAllow, Permission: p.permission}),
			)
		case key.Matches(msg, p.keyMap.AllowSession):
			return p, tea.Batch(
				util.CmdHandler(dialogs.CloseDialogMsg{}),
				util.CmdHandler(PermissionResponseMsg{Action: PermissionAllowForSession, Permission: p.permission}),
			)
		case key.Matches(msg, p.keyMap.Deny):
			return p, tea.Batch(
				util.CmdHandler(dialogs.CloseDialogMsg{}),
				util.CmdHandler(PermissionResponseMsg{Action: PermissionDeny, Permission: p.permission}),
			)
		case key.Matches(msg, p.keyMap.ToggleDiffMode):
			if p.supportsDiffView() {
				if p.diffSplitMode == nil {
					diffSplitMode := !p.defaultDiffSplitMode
					p.diffSplitMode = &diffSplitMode
				} else {
					*p.diffSplitMode = !*p.diffSplitMode
				}
				p.contentDirty = true // Mark content as dirty when diff mode changes
				return p, nil
			}
		case key.Matches(msg, p.keyMap.ScrollDown):
			if p.supportsDiffView() {
				p.scrollDown()
				return p, nil
			}
		case key.Matches(msg, p.keyMap.ScrollUp):
			if p.supportsDiffView() {
				p.scrollUp()
				return p, nil
			}
		case key.Matches(msg, p.keyMap.ScrollLeft):
			if p.supportsDiffView() {
				p.scrollLeft()
				return p, nil
			}
		case key.Matches(msg, p.keyMap.ScrollRight):
			if p.supportsDiffView() {
				p.scrollRight()
				return p, nil
			}
		default:
			// Pass other keys to viewport
			viewPort, cmd := p.contentViewPort.Update(msg)
			p.contentViewPort = viewPort
			cmds = append(cmds, cmd)
		}
	case tea.MouseWheelMsg:
		if p.supportsDiffView() && p.isMouseOverDialog(msg.Mouse().X, msg.Mouse().Y) {
			switch msg.Button {
			case tea.MouseWheelDown:
				p.scrollDown()
			case tea.MouseWheelUp:
				p.scrollUp()
			case tea.MouseWheelLeft:
				p.scrollLeft()
			case tea.MouseWheelRight:
				p.scrollRight()
			}
		}
	}

	return p, tea.Batch(cmds...)
}

func (p *permissionDialogCmp) scrollDown() {
	p.diffYOffset += 1
	p.contentDirty = true
}

func (p *permissionDialogCmp) scrollUp() {
	p.diffYOffset = max(0, p.diffYOffset-1)
	p.contentDirty = true
}

func (p *permissionDialogCmp) scrollLeft() {
	p.diffXOffset = max(0, p.diffXOffset-5)
	p.contentDirty = true
}

func (p *permissionDialogCmp) scrollRight() {
	p.diffXOffset += 5
	p.contentDirty = true
}

// isMouseOverDialog checks if the given mouse coordinates are within the dialog bounds.
// Returns true if the mouse is over the dialog area, false otherwise.
func (p *permissionDialogCmp) isMouseOverDialog(x, y int) bool {
	if p.permission.ID == "" {
		return false
	}
	var (
		dialogX      = p.positionCol
		dialogY      = p.positionRow
		dialogWidth  = p.width
		dialogHeight = p.finalDialogHeight
	)
	return x >= dialogX && x < dialogX+dialogWidth && y >= dialogY && y < dialogY+dialogHeight
}

func (p *permissionDialogCmp) selectCurrentOption() tea.Cmd {
	var action PermissionAction

	switch p.selectedOption {
	case 0:
		action = PermissionAllow
	case 1:
		action = PermissionAllowForSession
	case 2:
		action = PermissionDeny
	}

	return tea.Batch(
		util.CmdHandler(PermissionResponseMsg{Action: action, Permission: p.permission}),
		util.CmdHandler(dialogs.CloseDialogMsg{}),
	)
}

func (p *permissionDialogCmp) renderButtons() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base

	buttons := []core.ButtonOpts{
		{
			Text:           "Allow",
			UnderlineIndex: 0, // "A"
			Selected:       p.selectedOption == 0,
		},
		{
			Text:           "Allow for Session",
			UnderlineIndex: 10, // "S" in "Session"
			Selected:       p.selectedOption == 1,
		},
		{
			Text:           "Deny",
			UnderlineIndex: 0, // "D"
			Selected:       p.selectedOption == 2,
		},
	}

	content := core.SelectableButtons(buttons, "  ")
	if lipgloss.Width(content) > p.width-4 {
		content = core.SelectableButtonsVertical(buttons, 1)
		return baseStyle.AlignVertical(lipgloss.Center).
			AlignHorizontal(lipgloss.Center).
			Width(p.width - 4).
			Render(content)
	}

	return baseStyle.AlignHorizontal(lipgloss.Right).Width(p.width - 4).Render(content)
}

func (p *permissionDialogCmp) renderHeader() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base

	toolKey := t.S().Muted.Render("Tool")
	toolValue := t.S().Text.
		Width(p.width - lipgloss.Width(toolKey)).
		Render(fmt.Sprintf(" %s", p.permission.ToolName))

	pathKey := t.S().Muted.Render("Path")
	pathValue := t.S().Text.
		Width(p.width - lipgloss.Width(pathKey)).
		Render(fmt.Sprintf(" %s", fsext.PrettyPath(p.permission.Path)))

	headerParts := []string{
		lipgloss.JoinHorizontal(
			lipgloss.Left,
			toolKey,
			toolValue,
		),
		baseStyle.Render(strings.Repeat(" ", p.width)),
		lipgloss.JoinHorizontal(
			lipgloss.Left,
			pathKey,
			pathValue,
		),
		baseStyle.Render(strings.Repeat(" ", p.width)),
	}

	// Add tool-specific header information
	switch p.permission.ToolName {
	case tools.BashToolName:
		headerParts = append(headerParts, t.S().Muted.Width(p.width).Render("Command"))
	case tools.DownloadToolName:
		params := p.permission.Params.(tools.DownloadPermissionsParams)
		urlKey := t.S().Muted.Render("URL")
		urlValue := t.S().Text.
			Width(p.width - lipgloss.Width(urlKey)).
			Render(fmt.Sprintf(" %s", params.URL))
		fileKey := t.S().Muted.Render("File")
		filePath := t.S().Text.
			Width(p.width - lipgloss.Width(fileKey)).
			Render(fmt.Sprintf(" %s", fsext.PrettyPath(params.FilePath)))
		headerParts = append(headerParts,
			lipgloss.JoinHorizontal(
				lipgloss.Left,
				urlKey,
				urlValue,
			),
			baseStyle.Render(strings.Repeat(" ", p.width)),
			lipgloss.JoinHorizontal(
				lipgloss.Left,
				fileKey,
				filePath,
			),
			baseStyle.Render(strings.Repeat(" ", p.width)),
		)
	case tools.EditToolName:
		params := p.permission.Params.(tools.EditPermissionsParams)
		fileKey := t.S().Muted.Render("File")
		filePath := t.S().Text.
			Width(p.width - lipgloss.Width(fileKey)).
			Render(fmt.Sprintf(" %s", fsext.PrettyPath(params.FilePath)))
		headerParts = append(headerParts,
			lipgloss.JoinHorizontal(
				lipgloss.Left,
				fileKey,
				filePath,
			),
			baseStyle.Render(strings.Repeat(" ", p.width)),
		)

	case tools.WriteToolName:
		params := p.permission.Params.(tools.WritePermissionsParams)
		fileKey := t.S().Muted.Render("File")
		filePath := t.S().Text.
			Width(p.width - lipgloss.Width(fileKey)).
			Render(fmt.Sprintf(" %s", fsext.PrettyPath(params.FilePath)))
		headerParts = append(headerParts,
			lipgloss.JoinHorizontal(
				lipgloss.Left,
				fileKey,
				filePath,
			),
			baseStyle.Render(strings.Repeat(" ", p.width)),
		)
	case tools.MultiEditToolName:
		params := p.permission.Params.(tools.MultiEditPermissionsParams)
		fileKey := t.S().Muted.Render("File")
		filePath := t.S().Text.
			Width(p.width - lipgloss.Width(fileKey)).
			Render(fmt.Sprintf(" %s", fsext.PrettyPath(params.FilePath)))
		headerParts = append(headerParts,
			lipgloss.JoinHorizontal(
				lipgloss.Left,
				fileKey,
				filePath,
			),
			baseStyle.Render(strings.Repeat(" ", p.width)),
		)
	case tools.FetchToolName:
		headerParts = append(headerParts, t.S().Muted.Width(p.width).Bold(true).Render("URL"))
	case tools.ViewToolName:
		params := p.permission.Params.(tools.ViewPermissionsParams)
		fileKey := t.S().Muted.Render("File")
		filePath := t.S().Text.
			Width(p.width - lipgloss.Width(fileKey)).
			Render(fmt.Sprintf(" %s", fsext.PrettyPath(params.FilePath)))
		headerParts = append(headerParts,
			lipgloss.JoinHorizontal(
				lipgloss.Left,
				fileKey,
				filePath,
			),
			baseStyle.Render(strings.Repeat(" ", p.width)),
		)
	case tools.LSToolName:
		params := p.permission.Params.(tools.LSPermissionsParams)
		pathKey := t.S().Muted.Render("Directory")
		pathValue := t.S().Text.
			Width(p.width - lipgloss.Width(pathKey)).
			Render(fmt.Sprintf(" %s", fsext.PrettyPath(params.Path)))
		headerParts = append(headerParts,
			lipgloss.JoinHorizontal(
				lipgloss.Left,
				pathKey,
				pathValue,
			),
			baseStyle.Render(strings.Repeat(" ", p.width)),
		)
	}

	return baseStyle.Render(lipgloss.JoinVertical(lipgloss.Left, headerParts...))
}

func (p *permissionDialogCmp) getOrGenerateContent() string {
	// Return cached content if available and not dirty
	if !p.contentDirty && p.cachedContent != "" {
		return p.cachedContent
	}

	// Generate new content
	var content string
	switch p.permission.ToolName {
	case tools.BashToolName:
		content = p.generateBashContent()
	case tools.DownloadToolName:
		content = p.generateDownloadContent()
	case tools.EditToolName:
		content = p.generateEditContent()
	case tools.WriteToolName:
		content = p.generateWriteContent()
	case tools.MultiEditToolName:
		content = p.generateMultiEditContent()
	case tools.FetchToolName:
		content = p.generateFetchContent()
	case tools.ViewToolName:
		content = p.generateViewContent()
	case tools.LSToolName:
		content = p.generateLSContent()
	default:
		content = p.generateDefaultContent()
	}

	// Cache the result
	p.cachedContent = content
	p.contentDirty = false

	return content
}

func (p *permissionDialogCmp) generateBashContent() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base.Background(t.BgSubtle)
	if pr, ok := p.permission.Params.(tools.BashPermissionsParams); ok {
		content := pr.Command
		t := styles.CurrentTheme()
		content = strings.TrimSpace(content)
		lines := strings.Split(content, "\n")

		width := p.width - 4
		var out []string
		for _, ln := range lines {
			out = append(out, t.S().Muted.
				Width(width).
				Padding(0, 3).
				Foreground(t.FgBase).
				Background(t.BgSubtle).
				Render(ln))
		}

		// Use the cache for markdown rendering
		renderedContent := strings.Join(out, "\n")
		finalContent := baseStyle.
			Width(p.contentViewPort.Width()).
			Padding(1, 0).
			Render(renderedContent)

		return finalContent
	}
	return ""
}

func (p *permissionDialogCmp) generateEditContent() string {
	if pr, ok := p.permission.Params.(tools.EditPermissionsParams); ok {
		formatter := core.DiffFormatter().
			Before(fsext.PrettyPath(pr.FilePath), pr.OldContent).
			After(fsext.PrettyPath(pr.FilePath), pr.NewContent).
			Height(p.contentViewPort.Height()).
			Width(p.contentViewPort.Width()).
			XOffset(p.diffXOffset).
			YOffset(p.diffYOffset)
		if p.useDiffSplitMode() {
			formatter = formatter.Split()
		} else {
			formatter = formatter.Unified()
		}

		diff := formatter.String()
		return diff
	}
	return ""
}

func (p *permissionDialogCmp) generateWriteContent() string {
	if pr, ok := p.permission.Params.(tools.WritePermissionsParams); ok {
		// Use the cache for diff rendering
		formatter := core.DiffFormatter().
			Before(fsext.PrettyPath(pr.FilePath), pr.OldContent).
			After(fsext.PrettyPath(pr.FilePath), pr.NewContent).
			Height(p.contentViewPort.Height()).
			Width(p.contentViewPort.Width()).
			XOffset(p.diffXOffset).
			YOffset(p.diffYOffset)
		if p.useDiffSplitMode() {
			formatter = formatter.Split()
		} else {
			formatter = formatter.Unified()
		}

		diff := formatter.String()
		return diff
	}
	return ""
}

func (p *permissionDialogCmp) generateDownloadContent() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base.Background(t.BgSubtle)
	if pr, ok := p.permission.Params.(tools.DownloadPermissionsParams); ok {
		content := fmt.Sprintf("URL: %s\nFile: %s", pr.URL, fsext.PrettyPath(pr.FilePath))
		if pr.Timeout > 0 {
			content += fmt.Sprintf("\nTimeout: %ds", pr.Timeout)
		}

		finalContent := baseStyle.
			Padding(1, 2).
			Width(p.contentViewPort.Width()).
			Render(content)
		return finalContent
	}
	return ""
}

func (p *permissionDialogCmp) generateMultiEditContent() string {
	if pr, ok := p.permission.Params.(tools.MultiEditPermissionsParams); ok {
		// Use the cache for diff rendering
		formatter := core.DiffFormatter().
			Before(fsext.PrettyPath(pr.FilePath), pr.OldContent).
			After(fsext.PrettyPath(pr.FilePath), pr.NewContent).
			Height(p.contentViewPort.Height()).
			Width(p.contentViewPort.Width()).
			XOffset(p.diffXOffset).
			YOffset(p.diffYOffset)
		if p.useDiffSplitMode() {
			formatter = formatter.Split()
		} else {
			formatter = formatter.Unified()
		}

		diff := formatter.String()
		return diff
	}
	return ""
}

func (p *permissionDialogCmp) generateFetchContent() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base.Background(t.BgSubtle)
	if pr, ok := p.permission.Params.(tools.FetchPermissionsParams); ok {
		finalContent := baseStyle.
			Padding(1, 2).
			Width(p.contentViewPort.Width()).
			Render(pr.URL)
		return finalContent
	}
	return ""
}

func (p *permissionDialogCmp) generateViewContent() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base.Background(t.BgSubtle)
	if pr, ok := p.permission.Params.(tools.ViewPermissionsParams); ok {
		content := fmt.Sprintf("File: %s", fsext.PrettyPath(pr.FilePath))
		if pr.Offset > 0 {
			content += fmt.Sprintf("\nStarting from line: %d", pr.Offset+1)
		}
		if pr.Limit > 0 && pr.Limit != 2000 { // 2000 is the default limit
			content += fmt.Sprintf("\nLines to read: %d", pr.Limit)
		}

		finalContent := baseStyle.
			Padding(1, 2).
			Width(p.contentViewPort.Width()).
			Render(content)
		return finalContent
	}
	return ""
}

func (p *permissionDialogCmp) generateLSContent() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base.Background(t.BgSubtle)
	if pr, ok := p.permission.Params.(tools.LSPermissionsParams); ok {
		content := fmt.Sprintf("Directory: %s", fsext.PrettyPath(pr.Path))
		if len(pr.Ignore) > 0 {
			content += fmt.Sprintf("\nIgnore patterns: %s", strings.Join(pr.Ignore, ", "))
		}

		finalContent := baseStyle.
			Padding(1, 2).
			Width(p.contentViewPort.Width()).
			Render(content)
		return finalContent
	}
	return ""
}

func (p *permissionDialogCmp) generateDefaultContent() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base.Background(t.BgSubtle)

	content := p.permission.Description

	content = strings.TrimSpace(content)
	content = "\n" + content + "\n"
	lines := strings.Split(content, "\n")

	width := p.width - 4
	var out []string
	for _, ln := range lines {
		ln = " " + ln // left padding
		if len(ln) > width {
			ln = ansi.Truncate(ln, width, "…")
		}
		out = append(out, t.S().Muted.
			Width(width).
			Foreground(t.FgBase).
			Background(t.BgSubtle).
			Render(ln))
	}

	// Use the cache for markdown rendering
	renderedContent := strings.Join(out, "\n")
	finalContent := baseStyle.
		Width(p.contentViewPort.Width()).
		Render(renderedContent)

	if renderedContent == "" {
		return ""
	}

	return finalContent
}

func (p *permissionDialogCmp) useDiffSplitMode() bool {
	if p.diffSplitMode != nil {
		return *p.diffSplitMode
	}
	return p.defaultDiffSplitMode
}

func (p *permissionDialogCmp) styleViewport() string {
	t := styles.CurrentTheme()
	return t.S().Base.Render(p.contentViewPort.View())
}

func (p *permissionDialogCmp) render() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base
	title := core.Title("Permission Required", p.width-4)
	// Render header
	headerContent := p.renderHeader()
	// Render buttons
	buttons := p.renderButtons()

	p.contentViewPort.SetWidth(p.width - 4)

	// Get cached or generate content
	contentFinal := p.getOrGenerateContent()

	// Always set viewport content (the caching is handled in getOrGenerateContent)
	const minContentHeight = 9
	contentHeight := min(
		max(minContentHeight, p.height-minContentHeight),
		lipgloss.Height(contentFinal),
	)
	p.contentViewPort.SetHeight(contentHeight)
	p.contentViewPort.SetContent(contentFinal)

	p.positionRow = p.wHeight / 2
	p.positionRow -= (contentHeight + 9) / 2
	p.positionRow -= 3 // Move dialog slightly higher than middle

	var contentHelp string
	if p.supportsDiffView() {
		contentHelp = help.New().View(p.keyMap)
	}

	// Calculate content height dynamically based on window size
	strs := []string{
		title,
		"",
		headerContent,
		p.styleViewport(),
		"",
		buttons,
		"",
	}
	if contentHelp != "" {
		strs = append(strs, "", contentHelp)
	}
	content := lipgloss.JoinVertical(lipgloss.Top, strs...)

	dialog := baseStyle.
		Padding(0, 1).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus).
		Width(p.width).
		Render(
			content,
		)
	p.finalDialogHeight = lipgloss.Height(dialog)
	return dialog
}

func (p *permissionDialogCmp) View() string {
	return p.render()
}

func (p *permissionDialogCmp) SetSize() tea.Cmd {
	if p.permission.ID == "" {
		return nil
	}

	oldWidth, oldHeight := p.width, p.height

	switch p.permission.ToolName {
	case tools.BashToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.3)
	case tools.DownloadToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.4)
	case tools.EditToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.8)
	case tools.WriteToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.8)
	case tools.MultiEditToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.8)
	case tools.FetchToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.3)
	case tools.ViewToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.4)
	case tools.LSToolName:
		p.width = int(float64(p.wWidth) * 0.8)
		p.height = int(float64(p.wHeight) * 0.4)
	default:
		p.width = int(float64(p.wWidth) * 0.7)
		p.height = int(float64(p.wHeight) * 0.5)
	}

	// Default to diff split mode when dialog is wide enough.
	p.defaultDiffSplitMode = p.width >= 140

	// Set a maximum width for the dialog
	p.width = min(p.width, 180)

	// Mark content as dirty if size changed
	if oldWidth != p.width || oldHeight != p.height {
		p.contentDirty = true
	}
	p.positionRow = p.wHeight / 2
	p.positionRow -= p.height / 2
	p.positionRow -= 3 // Move dialog slightly higher than middle
	p.positionCol = p.wWidth / 2
	p.positionCol -= p.width / 2
	return nil
}

func (c *permissionDialogCmp) GetOrSetMarkdown(key string, generator func() (string, error)) string {
	content, err := generator()
	if err != nil {
		return fmt.Sprintf("Error rendering markdown: %v", err)
	}

	return content
}

// ID implements PermissionDialogCmp.
func (p *permissionDialogCmp) ID() dialogs.DialogID {
	return PermissionsDialogID
}

// Position implements PermissionDialogCmp.
func (p *permissionDialogCmp) Position() (int, int) {
	return p.positionRow, p.positionCol
}

// Options for create a new permission dialog
type Options struct {
	DiffMode string // split or unified, empty means use defaultDiffSplitMode
}

// isSplitMode returns internal representation of diff mode switch
func (o Options) isSplitMode() *bool {
	var split bool

	switch o.DiffMode {
	case "split":
		split = true
	case "unified":
		split = false
	default:
		return nil
	}

	return &split
}



================================================
FILE: internal/tui/components/dialogs/quit/keys.go
================================================
package quit

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

// KeyMap defines the keyboard bindings for the quit dialog.
type KeyMap struct {
	LeftRight,
	EnterSpace,
	Yes,
	No,
	Tab,
	Close key.Binding
}

func DefaultKeymap() KeyMap {
	return KeyMap{
		LeftRight: key.NewBinding(
			key.WithKeys("left", "right"),
			key.WithHelp("←/→", "switch options"),
		),
		EnterSpace: key.NewBinding(
			key.WithKeys("enter", " "),
			key.WithHelp("enter/space", "confirm"),
		),
		Yes: key.NewBinding(
			key.WithKeys("y", "Y", "ctrl+c"),
			key.WithHelp("y/Y/ctrl+c", "yes"),
		),
		No: key.NewBinding(
			key.WithKeys("n", "N"),
			key.WithHelp("n/N", "no"),
		),
		Tab: key.NewBinding(
			key.WithKeys("tab"),
			key.WithHelp("tab", "switch options"),
		),
		Close: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "cancel"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.LeftRight,
		k.EnterSpace,
		k.Yes,
		k.No,
		k.Tab,
		k.Close,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		k.LeftRight,
		k.EnterSpace,
	}
}



================================================
FILE: internal/tui/components/dialogs/quit/quit.go
================================================
package quit

import (
	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

const (
	question                      = "Are you sure you want to quit?"
	QuitDialogID dialogs.DialogID = "quit"
)

// QuitDialog represents a confirmation dialog for quitting the application.
type QuitDialog interface {
	dialogs.DialogModel
}

type quitDialogCmp struct {
	wWidth  int
	wHeight int

	selectedNo bool // true if "No" button is selected
	keymap     KeyMap
}

// NewQuitDialog creates a new quit confirmation dialog.
func NewQuitDialog() QuitDialog {
	return &quitDialogCmp{
		selectedNo: true, // Default to "No" for safety
		keymap:     DefaultKeymap(),
	}
}

func (q *quitDialogCmp) Init() tea.Cmd {
	return nil
}

// Update handles keyboard input for the quit dialog.
func (q *quitDialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		q.wWidth = msg.Width
		q.wHeight = msg.Height
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, q.keymap.LeftRight, q.keymap.Tab):
			q.selectedNo = !q.selectedNo
			return q, nil
		case key.Matches(msg, q.keymap.EnterSpace):
			if !q.selectedNo {
				return q, tea.Quit
			}
			return q, util.CmdHandler(dialogs.CloseDialogMsg{})
		case key.Matches(msg, q.keymap.Yes):
			return q, tea.Quit
		case key.Matches(msg, q.keymap.No, q.keymap.Close):
			return q, util.CmdHandler(dialogs.CloseDialogMsg{})
		}
	}
	return q, nil
}

// View renders the quit dialog with Yes/No buttons.
func (q *quitDialogCmp) View() string {
	t := styles.CurrentTheme()
	baseStyle := t.S().Base
	yesStyle := t.S().Text
	noStyle := yesStyle

	if q.selectedNo {
		noStyle = noStyle.Foreground(t.White).Background(t.Secondary)
		yesStyle = yesStyle.Background(t.BgSubtle)
	} else {
		yesStyle = yesStyle.Foreground(t.White).Background(t.Secondary)
		noStyle = noStyle.Background(t.BgSubtle)
	}

	const horizontalPadding = 3
	yesButton := yesStyle.PaddingLeft(horizontalPadding).Underline(true).Render("Y") +
		yesStyle.PaddingRight(horizontalPadding).Render("ep!")
	noButton := noStyle.PaddingLeft(horizontalPadding).Underline(true).Render("N") +
		noStyle.PaddingRight(horizontalPadding).Render("ope")

	buttons := baseStyle.Width(lipgloss.Width(question)).Align(lipgloss.Right).Render(
		lipgloss.JoinHorizontal(lipgloss.Center, yesButton, "  ", noButton),
	)

	content := baseStyle.Render(
		lipgloss.JoinVertical(
			lipgloss.Center,
			question,
			"",
			buttons,
		),
	)

	quitDialogStyle := baseStyle.
		Padding(1, 2).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus)

	return quitDialogStyle.Render(content)
}

func (q *quitDialogCmp) Position() (int, int) {
	row := q.wHeight / 2
	row -= 7 / 2
	col := q.wWidth / 2
	col -= (lipgloss.Width(question) + 4) / 2

	return row, col
}

func (q *quitDialogCmp) ID() dialogs.DialogID {
	return QuitDialogID
}



================================================
FILE: internal/tui/components/dialogs/sessions/keys.go
================================================
package sessions

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	Select,
	Next,
	Previous,
	Close key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Select: key.NewBinding(
			key.WithKeys("enter", "tab", "ctrl+y"),
			key.WithHelp("enter", "confirm"),
		),
		Next: key.NewBinding(
			key.WithKeys("down", "ctrl+n"),
			key.WithHelp("↓", "next item"),
		),
		Previous: key.NewBinding(
			key.WithKeys("up", "ctrl+p"),
			key.WithHelp("↑", "previous item"),
		),
		Close: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "cancel"),
		),
	}
}

// KeyBindings implements layout.KeyMapProvider
func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Select,
		k.Next,
		k.Previous,
		k.Close,
	}
}

// FullHelp implements help.KeyMap.
func (k KeyMap) FullHelp() [][]key.Binding {
	m := [][]key.Binding{}
	slice := k.KeyBindings()
	for i := 0; i < len(slice); i += 4 {
		end := min(i+4, len(slice))
		m = append(m, slice[i:end])
	}
	return m
}

// ShortHelp implements help.KeyMap.
func (k KeyMap) ShortHelp() []key.Binding {
	return []key.Binding{
		key.NewBinding(

			key.WithKeys("down", "up"),
			key.WithHelp("↑↓", "choose"),
		),
		k.Select,
		k.Close,
	}
}



================================================
FILE: internal/tui/components/dialogs/sessions/sessions.go
================================================
package sessions

import (
	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/session"
	"github.com/charmbracelet/crush/internal/tui/components/chat"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs"
	"github.com/charmbracelet/crush/internal/tui/exp/list"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
)

const SessionsDialogID dialogs.DialogID = "sessions"

// SessionDialog interface for the session switching dialog
type SessionDialog interface {
	dialogs.DialogModel
}

type SessionsList = list.FilterableList[list.CompletionItem[session.Session]]

type sessionDialogCmp struct {
	selectedInx       int
	wWidth            int
	wHeight           int
	width             int
	selectedSessionID string
	keyMap            KeyMap
	sessionsList      SessionsList
	help              help.Model
}

// NewSessionDialogCmp creates a new session switching dialog
func NewSessionDialogCmp(sessions []session.Session, selectedID string) SessionDialog {
	t := styles.CurrentTheme()
	listKeyMap := list.DefaultKeyMap()
	keyMap := DefaultKeyMap()
	listKeyMap.Down.SetEnabled(false)
	listKeyMap.Up.SetEnabled(false)
	listKeyMap.DownOneItem = keyMap.Next
	listKeyMap.UpOneItem = keyMap.Previous

	items := make([]list.CompletionItem[session.Session], len(sessions))
	if len(sessions) > 0 {
		for i, session := range sessions {
			items[i] = list.NewCompletionItem(session.Title, session, list.WithCompletionID(session.ID))
		}
	}

	inputStyle := t.S().Base.PaddingLeft(1).PaddingBottom(1)
	sessionsList := list.NewFilterableList(
		items,
		list.WithFilterPlaceholder("Enter a session name"),
		list.WithFilterInputStyle(inputStyle),
		list.WithFilterListOptions(
			list.WithKeyMap(listKeyMap),
			list.WithWrapNavigation(),
		),
	)
	help := help.New()
	help.Styles = t.S().Help
	s := &sessionDialogCmp{
		selectedSessionID: selectedID,
		keyMap:            DefaultKeyMap(),
		sessionsList:      sessionsList,
		help:              help,
	}

	return s
}

func (s *sessionDialogCmp) Init() tea.Cmd {
	var cmds []tea.Cmd
	cmds = append(cmds, s.sessionsList.Init())
	cmds = append(cmds, s.sessionsList.Focus())
	return tea.Sequence(cmds...)
}

func (s *sessionDialogCmp) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.WindowSizeMsg:
		var cmds []tea.Cmd
		s.wWidth = msg.Width
		s.wHeight = msg.Height
		s.width = min(120, s.wWidth-8)
		s.sessionsList.SetInputWidth(s.listWidth() - 2)
		cmds = append(cmds, s.sessionsList.SetSize(s.listWidth(), s.listHeight()))
		if s.selectedSessionID != "" {
			cmds = append(cmds, s.sessionsList.SetSelected(s.selectedSessionID))
		}
		return s, tea.Batch(cmds...)
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, s.keyMap.Select):
			selectedItem := s.sessionsList.SelectedItem()
			if selectedItem != nil {
				selected := *selectedItem
				return s, tea.Sequence(
					util.CmdHandler(dialogs.CloseDialogMsg{}),
					util.CmdHandler(
						chat.SessionSelectedMsg(selected.Value()),
					),
				)
			}
		case key.Matches(msg, s.keyMap.Close):
			return s, util.CmdHandler(dialogs.CloseDialogMsg{})
		default:
			u, cmd := s.sessionsList.Update(msg)
			s.sessionsList = u.(SessionsList)
			return s, cmd
		}
	}
	return s, nil
}

func (s *sessionDialogCmp) View() string {
	t := styles.CurrentTheme()
	listView := s.sessionsList.View()
	content := lipgloss.JoinVertical(
		lipgloss.Left,
		t.S().Base.Padding(0, 1, 1, 1).Render(core.Title("Switch Session", s.width-4)),
		listView,
		"",
		t.S().Base.Width(s.width-2).PaddingLeft(1).AlignHorizontal(lipgloss.Left).Render(s.help.View(s.keyMap)),
	)

	return s.style().Render(content)
}

func (s *sessionDialogCmp) Cursor() *tea.Cursor {
	if cursor, ok := s.sessionsList.(util.Cursor); ok {
		cursor := cursor.Cursor()
		if cursor != nil {
			cursor = s.moveCursor(cursor)
		}
		return cursor
	}
	return nil
}

func (s *sessionDialogCmp) style() lipgloss.Style {
	t := styles.CurrentTheme()
	return t.S().Base.
		Width(s.width).
		Border(lipgloss.RoundedBorder()).
		BorderForeground(t.BorderFocus)
}

func (s *sessionDialogCmp) listHeight() int {
	return s.wHeight/2 - 6 // 5 for the border, title and help
}

func (s *sessionDialogCmp) listWidth() int {
	return s.width - 2 // 2 for the border
}

func (s *sessionDialogCmp) Position() (int, int) {
	row := s.wHeight/4 - 2 // just a bit above the center
	col := s.wWidth / 2
	col -= s.width / 2
	return row, col
}

func (s *sessionDialogCmp) moveCursor(cursor *tea.Cursor) *tea.Cursor {
	row, col := s.Position()
	offset := row + 3 // Border + title
	cursor.Y += offset
	cursor.X = cursor.X + col + 2
	return cursor
}

// ID implements SessionDialog.
func (s *sessionDialogCmp) ID() dialogs.DialogID {
	return SessionsDialogID
}



================================================
FILE: internal/tui/components/files/files.go
================================================
package files

import (
	"fmt"
	"os"
	"path/filepath"
	"sort"
	"strings"

	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/fsext"
	"github.com/charmbracelet/crush/internal/history"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/styles"
)

// FileHistory represents a file history with initial and latest versions.
type FileHistory struct {
	InitialVersion history.File
	LatestVersion  history.File
}

// SessionFile represents a file with its history information.
type SessionFile struct {
	History   FileHistory
	FilePath  string
	Additions int
	Deletions int
}

// RenderOptions contains options for rendering file lists.
type RenderOptions struct {
	MaxWidth    int
	MaxItems    int
	ShowSection bool
	SectionName string
}

// RenderFileList renders a list of file status items with the given options.
func RenderFileList(fileSlice []SessionFile, opts RenderOptions) []string {
	t := styles.CurrentTheme()
	fileList := []string{}

	if opts.ShowSection {
		sectionName := opts.SectionName
		if sectionName == "" {
			sectionName = "Modified Files"
		}
		section := t.S().Subtle.Render(sectionName)
		fileList = append(fileList, section, "")
	}

	if len(fileSlice) == 0 {
		fileList = append(fileList, t.S().Base.Foreground(t.Border).Render("None"))
		return fileList
	}

	// Sort files by the latest version's created time
	sort.Slice(fileSlice, func(i, j int) bool {
		if fileSlice[i].History.LatestVersion.CreatedAt == fileSlice[j].History.LatestVersion.CreatedAt {
			return strings.Compare(fileSlice[i].FilePath, fileSlice[j].FilePath) < 0
		}
		return fileSlice[i].History.LatestVersion.CreatedAt > fileSlice[j].History.LatestVersion.CreatedAt
	})

	// Determine how many items to show
	maxItems := len(fileSlice)
	if opts.MaxItems > 0 {
		maxItems = min(opts.MaxItems, len(fileSlice))
	}

	filesShown := 0
	for _, file := range fileSlice {
		if file.Additions == 0 && file.Deletions == 0 {
			continue // skip files with no changes
		}
		if filesShown >= maxItems {
			break
		}

		var statusParts []string
		if file.Additions > 0 {
			statusParts = append(statusParts, t.S().Base.Foreground(t.Success).Render(fmt.Sprintf("+%d", file.Additions)))
		}
		if file.Deletions > 0 {
			statusParts = append(statusParts, t.S().Base.Foreground(t.Error).Render(fmt.Sprintf("-%d", file.Deletions)))
		}

		extraContent := strings.Join(statusParts, " ")
		cwd := config.Get().WorkingDir() + string(os.PathSeparator)
		filePath := file.FilePath
		if rel, err := filepath.Rel(cwd, filePath); err == nil {
			filePath = rel
		}
		filePath = fsext.DirTrim(fsext.PrettyPath(filePath), 2)
		filePath = ansi.Truncate(filePath, opts.MaxWidth-lipgloss.Width(extraContent)-2, "…")

		fileList = append(fileList,
			core.Status(
				core.StatusOpts{
					Title:        filePath,
					ExtraContent: extraContent,
				},
				opts.MaxWidth,
			),
		)
		filesShown++
	}

	return fileList
}

// RenderFileBlock renders a complete file block with optional truncation indicator.
func RenderFileBlock(fileSlice []SessionFile, opts RenderOptions, showTruncationIndicator bool) string {
	t := styles.CurrentTheme()
	fileList := RenderFileList(fileSlice, opts)

	// Add truncation indicator if needed
	if showTruncationIndicator && opts.MaxItems > 0 {
		totalFilesWithChanges := 0
		for _, file := range fileSlice {
			if file.Additions > 0 || file.Deletions > 0 {
				totalFilesWithChanges++
			}
		}
		if totalFilesWithChanges > opts.MaxItems {
			remaining := totalFilesWithChanges - opts.MaxItems
			if remaining == 1 {
				fileList = append(fileList, t.S().Base.Foreground(t.FgMuted).Render("…"))
			} else {
				fileList = append(fileList,
					t.S().Base.Foreground(t.FgSubtle).Render(fmt.Sprintf("…and %d more", remaining)),
				)
			}
		}
	}

	content := lipgloss.JoinVertical(lipgloss.Left, fileList...)
	if opts.MaxWidth > 0 {
		return lipgloss.NewStyle().Width(opts.MaxWidth).Render(content)
	}
	return content
}



================================================
FILE: internal/tui/components/image/image.go
================================================
// Based on the implementation by @trashhalo at:
// https://github.com/trashhalo/imgcat
package image

import (
	"fmt"
	_ "image/jpeg"
	_ "image/png"

	tea "github.com/charmbracelet/bubbletea/v2"
)

type Model struct {
	url    string
	image  string
	width  uint
	height uint
	err    error
}

func New(width, height uint, url string) Model {
	return Model{
		width:  width,
		height: height,
		url:    url,
	}
}

func (m Model) Init() tea.Cmd {
	return nil
}

func (m Model) Update(msg tea.Msg) (Model, tea.Cmd) {
	switch msg := msg.(type) {
	case errMsg:
		m.err = msg
		return m, nil
	case redrawMsg:
		m.width = msg.width
		m.height = msg.height
		m.url = msg.url
		return m, loadURL(m.url)
	case loadMsg:
		return handleLoadMsg(m, msg)
	}
	return m, nil
}

func (m Model) View() string {
	if m.err != nil {
		return fmt.Sprintf("couldn't load image(s): %v", m.err)
	}
	return m.image
}

type errMsg struct{ error }

func (m Model) Redraw(width uint, height uint, url string) tea.Cmd {
	return func() tea.Msg {
		return redrawMsg{
			width:  width,
			height: height,
			url:    url,
		}
	}
}

func (m Model) UpdateURL(url string) tea.Cmd {
	return func() tea.Msg {
		return redrawMsg{
			width:  m.width,
			height: m.height,
			url:    url,
		}
	}
}

type redrawMsg struct {
	width  uint
	height uint
	url    string
}

func (m Model) IsLoading() bool {
	return m.image == ""
}



================================================
FILE: internal/tui/components/image/load.go
================================================
// Based on the implementation by @trashhalo at:
// https://github.com/trashhalo/imgcat
package image

import (
	"context"
	"image"
	"image/png"
	"io"
	"net/http"
	"os"
	"strings"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/disintegration/imageorient"
	"github.com/lucasb-eyer/go-colorful"
	"github.com/muesli/termenv"
	"github.com/nfnt/resize"
	"github.com/srwiley/oksvg"
	"github.com/srwiley/rasterx"
)

type loadMsg struct {
	io.ReadCloser
}

func loadURL(url string) tea.Cmd {
	var r io.ReadCloser
	var err error

	if strings.HasPrefix(url, "http") {
		var resp *http.Request
		resp, err = http.NewRequestWithContext(context.Background(), http.MethodGet, url, nil)
		r = resp.Body
	} else {
		r, err = os.Open(url)
	}

	if err != nil {
		return func() tea.Msg {
			return errMsg{err}
		}
	}

	return load(r)
}

func load(r io.ReadCloser) tea.Cmd {
	return func() tea.Msg {
		return loadMsg{r}
	}
}

func handleLoadMsg(m Model, msg loadMsg) (Model, tea.Cmd) {
	defer msg.Close()

	img, err := readerToImage(m.width, m.height, m.url, msg)
	if err != nil {
		return m, func() tea.Msg { return errMsg{err} }
	}
	m.image = img
	return m, nil
}

func imageToString(width, height uint, img image.Image) (string, error) {
	img = resize.Thumbnail(width, height*2-4, img, resize.Lanczos3)
	b := img.Bounds()
	w := b.Max.X
	h := b.Max.Y
	p := termenv.ColorProfile()
	str := strings.Builder{}
	for y := 0; y < h; y += 2 {
		for x := w; x < int(width); x = x + 2 {
			str.WriteString(" ")
		}
		for x := range w {
			c1, _ := colorful.MakeColor(img.At(x, y))
			color1 := p.Color(c1.Hex())
			c2, _ := colorful.MakeColor(img.At(x, y+1))
			color2 := p.Color(c2.Hex())
			str.WriteString(termenv.String("▀").
				Foreground(color1).
				Background(color2).
				String())
		}
		str.WriteString("\n")
	}
	return str.String(), nil
}

func readerToImage(width uint, height uint, url string, r io.Reader) (string, error) {
	if strings.HasSuffix(strings.ToLower(url), ".svg") {
		return svgToImage(width, height, r)
	}

	img, _, err := imageorient.Decode(r)
	if err != nil {
		return "", err
	}

	return imageToString(width, height, img)
}

func svgToImage(width uint, height uint, r io.Reader) (string, error) {
	// Original author: https://stackoverflow.com/users/10826783/usual-human
	// https://stackoverflow.com/questions/42993407/how-to-create-and-export-svg-to-png-jpeg-in-golang
	// Adapted to use size from SVG, and to use temp file.

	tmpPngFile, err := os.CreateTemp("", "img.*.png")
	if err != nil {
		return "", err
	}
	tmpPngPath := tmpPngFile.Name()
	defer os.Remove(tmpPngPath)
	defer tmpPngFile.Close()

	// Rasterize the SVG:
	icon, err := oksvg.ReadIconStream(r)
	if err != nil {
		return "", err
	}
	w := int(icon.ViewBox.W)
	h := int(icon.ViewBox.H)
	icon.SetTarget(0, 0, float64(w), float64(h))
	rgba := image.NewRGBA(image.Rect(0, 0, w, h))
	icon.Draw(rasterx.NewDasher(w, h, rasterx.NewScannerGV(w, h, rgba, rgba.Bounds())), 1)
	// Write rasterized image as PNG:
	err = png.Encode(tmpPngFile, rgba)
	if err != nil {
		tmpPngFile.Close()
		return "", err
	}
	tmpPngFile.Close()

	rPng, err := os.Open(tmpPngPath)
	if err != nil {
		return "", err
	}
	defer rPng.Close()

	img, _, err := imageorient.Decode(rPng)
	if err != nil {
		return "", err
	}
	return imageToString(width, height, img)
}



================================================
FILE: internal/tui/components/logo/logo.go
================================================
// Package logo renders a Crush wordmark in a stylized way.
package logo

import (
	"fmt"
	"image/color"
	"math/rand/v2"
	"strings"

	"github.com/MakeNowJust/heredoc"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
	"github.com/charmbracelet/x/exp/slice"
)

// letterform represents a letterform. It can be stretched horizontally by
// a given amount via the boolean argument.
type letterform func(bool) string

const diag = `╱`

// Opts are the options for rendering the Crush title art.
type Opts struct {
	FieldColor   color.Color // diagonal lines
	TitleColorA  color.Color // left gradient ramp point
	TitleColorB  color.Color // right gradient ramp point
	CharmColor   color.Color // Charm™ text color
	VersionColor color.Color // Version text color
	Width        int         // width of the rendered logo, used for truncation
}

// Render renders the Crush logo. Set the argument to true to render the narrow
// version, intended for use in a sidebar.
//
// The compact argument determines whether it renders compact for the sidebar
// or wider for the main pane.
func Render(version string, compact bool, o Opts) string {
	const charm = " Charm™"

	fg := func(c color.Color, s string) string {
		return lipgloss.NewStyle().Foreground(c).Render(s)
	}

	// Title.
	const spacing = 1
	letterforms := []letterform{
		letterC,
		letterR,
		letterU,
		letterSStylized,
		letterH,
	}
	stretchIndex := -1 // -1 means no stretching.
	if !compact {
		stretchIndex = rand.IntN(len(letterforms))
	}

	crush := renderWord(spacing, stretchIndex, letterforms...)
	crushWidth := lipgloss.Width(crush)
	b := new(strings.Builder)
	for r := range strings.SplitSeq(crush, "\n") {
		fmt.Fprintln(b, styles.ApplyForegroundGrad(r, o.TitleColorA, o.TitleColorB))
	}
	crush = b.String()

	// Charm and version.
	metaRowGap := 1
	maxVersionWidth := crushWidth - lipgloss.Width(charm) - metaRowGap
	version = ansi.Truncate(version, maxVersionWidth, "…") // truncate version if too long.
	gap := max(0, crushWidth-lipgloss.Width(charm)-lipgloss.Width(version))
	metaRow := fg(o.CharmColor, charm) + strings.Repeat(" ", gap) + fg(o.VersionColor, version)

	// Join the meta row and big Crush title.
	crush = strings.TrimSpace(metaRow + "\n" + crush)

	// Narrow version.
	if compact {
		field := fg(o.FieldColor, strings.Repeat(diag, crushWidth))
		return strings.Join([]string{field, field, crush, field, ""}, "\n")
	}

	fieldHeight := lipgloss.Height(crush)

	// Left field.
	const leftWidth = 6
	leftFieldRow := fg(o.FieldColor, strings.Repeat(diag, leftWidth))
	leftField := new(strings.Builder)
	for range fieldHeight {
		fmt.Fprintln(leftField, leftFieldRow)
	}

	// Right field.
	rightWidth := max(15, o.Width-crushWidth-leftWidth-2) // 2 for the gap.
	const stepDownAt = 0
	rightField := new(strings.Builder)
	for i := range fieldHeight {
		width := rightWidth
		if i >= stepDownAt {
			width = rightWidth - (i - stepDownAt)
		}
		fmt.Fprint(rightField, fg(o.FieldColor, strings.Repeat(diag, width)), "\n")
	}

	// Return the wide version.
	const hGap = " "
	logo := lipgloss.JoinHorizontal(lipgloss.Top, leftField.String(), hGap, crush, hGap, rightField.String())
	if o.Width > 0 {
		// Truncate the logo to the specified width.
		lines := strings.Split(logo, "\n")
		for i, line := range lines {
			lines[i] = ansi.Truncate(line, o.Width, "")
		}
		logo = strings.Join(lines, "\n")
	}
	return logo
}

// SmallRender renders a smaller version of the Crush logo, suitable for
// smaller windows or sidebar usage.
func SmallRender(width int) string {
	t := styles.CurrentTheme()
	title := t.S().Base.Foreground(t.Secondary).Render("Charm™")
	title = fmt.Sprintf("%s %s", title, styles.ApplyBoldForegroundGrad("Crush", t.Secondary, t.Primary))
	remainingWidth := width - lipgloss.Width(title) - 1 // 1 for the space after "Crush"
	if remainingWidth > 0 {
		lines := strings.Repeat("╱", remainingWidth)
		title = fmt.Sprintf("%s %s", title, t.S().Base.Foreground(t.Primary).Render(lines))
	}
	return title
}

// renderWord renders letterforms to fork a word. stretchIndex is the index of
// the letter to stretch, or -1 if no letter should be stretched.
func renderWord(spacing int, stretchIndex int, letterforms ...letterform) string {
	if spacing < 0 {
		spacing = 0
	}

	renderedLetterforms := make([]string, len(letterforms))

	// pick one letter randomly to stretch
	for i, letter := range letterforms {
		renderedLetterforms[i] = letter(i == stretchIndex)
	}

	if spacing > 0 {
		// Add spaces between the letters and render.
		renderedLetterforms = slice.Intersperse(renderedLetterforms, strings.Repeat(" ", spacing))
	}
	return strings.TrimSpace(
		lipgloss.JoinHorizontal(lipgloss.Top, renderedLetterforms...),
	)
}

// letterC renders the letter C in a stylized way. It takes an integer that
// determines how many cells to stretch the letter. If the stretch is less than
// 1, it defaults to no stretching.
func letterC(stretch bool) string {
	// Here's what we're making:
	//
	// ▄▀▀▀▀
	// █
	//	▀▀▀▀

	left := heredoc.Doc(`
		▄
		█
	`)
	right := heredoc.Doc(`
		▀

		▀
	`)
	return joinLetterform(
		left,
		stretchLetterformPart(right, letterformProps{
			stretch:    stretch,
			width:      4,
			minStretch: 7,
			maxStretch: 12,
		}),
	)
}

// letterH renders the letter H in a stylized way. It takes an integer that
// determines how many cells to stretch the letter. If the stretch is less than
// 1, it defaults to no stretching.
func letterH(stretch bool) string {
	// Here's what we're making:
	//
	// █   █
	// █▀▀▀█
	// ▀   ▀

	side := heredoc.Doc(`
		█
		█
		▀`)
	middle := heredoc.Doc(`

		▀
	`)
	return joinLetterform(
		side,
		stretchLetterformPart(middle, letterformProps{
			stretch:    stretch,
			width:      3,
			minStretch: 8,
			maxStretch: 12,
		}),
		side,
	)
}

// letterR renders the letter R in a stylized way. It takes an integer that
// determines how many cells to stretch the letter. If the stretch is less than
// 1, it defaults to no stretching.
func letterR(stretch bool) string {
	// Here's what we're making:
	//
	// █▀▀▀▄
	// █▀▀▀▄
	// ▀   ▀

	left := heredoc.Doc(`
		█
		█
		▀
	`)
	center := heredoc.Doc(`
		▀
		▀
	`)
	right := heredoc.Doc(`
		▄
		▄
		▀
	`)
	return joinLetterform(
		left,
		stretchLetterformPart(center, letterformProps{
			stretch:    stretch,
			width:      3,
			minStretch: 7,
			maxStretch: 12,
		}),
		right,
	)
}

// letterSStylized renders the letter S in a stylized way, more so than
// [letterS]. It takes an integer that determines how many cells to stretch the
// letter. If the stretch is less than 1, it defaults to no stretching.
func letterSStylized(stretch bool) string {
	// Here's what we're making:
	//
	// ▄▀▀▀▀▀
	// ▀▀▀▀▀█
	// ▀▀▀▀▀

	left := heredoc.Doc(`
		▄
		▀
		▀
	`)
	center := heredoc.Doc(`
		▀
		▀
		▀
	`)
	right := heredoc.Doc(`
		▀
		█
	`)
	return joinLetterform(
		left,
		stretchLetterformPart(center, letterformProps{
			stretch:    stretch,
			width:      3,
			minStretch: 7,
			maxStretch: 12,
		}),
		right,
	)
}

// letterU renders the letter U in a stylized way. It takes an integer that
// determines how many cells to stretch the letter. If the stretch is less than
// 1, it defaults to no stretching.
func letterU(stretch bool) string {
	// Here's what we're making:
	//
	// █   █
	// █   █
	//	▀▀▀

	side := heredoc.Doc(`
		█
		█
	`)
	middle := heredoc.Doc(`


		▀
	`)
	return joinLetterform(
		side,
		stretchLetterformPart(middle, letterformProps{
			stretch:    stretch,
			width:      3,
			minStretch: 7,
			maxStretch: 12,
		}),
		side,
	)
}

func joinLetterform(letters ...string) string {
	return lipgloss.JoinHorizontal(lipgloss.Top, letters...)
}

// letterformProps defines letterform stretching properties.
// for readability.
type letterformProps struct {
	width      int
	minStretch int
	maxStretch int
	stretch    bool
}

// stretchLetterformPart is a helper function for letter stretching. If randomize
// is false the minimum number will be used.
func stretchLetterformPart(s string, p letterformProps) string {
	if p.maxStretch < p.minStretch {
		p.minStretch, p.maxStretch = p.maxStretch, p.minStretch
	}
	n := p.width
	if p.stretch {
		n = rand.IntN(p.maxStretch-p.minStretch) + p.minStretch //nolint:gosec
	}
	parts := make([]string, n)
	for i := range parts {
		parts[i] = s
	}
	return lipgloss.JoinHorizontal(lipgloss.Top, parts...)
}



================================================
FILE: internal/tui/components/lsp/lsp.go
================================================
package lsp

import (
	"fmt"
	"strings"

	"github.com/charmbracelet/lipgloss/v2"

	"github.com/charmbracelet/crush/internal/app"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/lsp"
	"github.com/charmbracelet/crush/internal/lsp/protocol"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/styles"
)

// RenderOptions contains options for rendering LSP lists.
type RenderOptions struct {
	MaxWidth    int
	MaxItems    int
	ShowSection bool
	SectionName string
}

// RenderLSPList renders a list of LSP status items with the given options.
func RenderLSPList(lspClients map[string]*lsp.Client, opts RenderOptions) []string {
	t := styles.CurrentTheme()
	lspList := []string{}

	if opts.ShowSection {
		sectionName := opts.SectionName
		if sectionName == "" {
			sectionName = "LSPs"
		}
		section := t.S().Subtle.Render(sectionName)
		lspList = append(lspList, section, "")
	}

	lspConfigs := config.Get().LSP.Sorted()
	if len(lspConfigs) == 0 {
		lspList = append(lspList, t.S().Base.Foreground(t.Border).Render("None"))
		return lspList
	}

	// Get LSP states
	lspStates := app.GetLSPStates()

	// Determine how many items to show
	maxItems := len(lspConfigs)
	if opts.MaxItems > 0 {
		maxItems = min(opts.MaxItems, len(lspConfigs))
	}

	for i, l := range lspConfigs {
		if i >= maxItems {
			break
		}

		// Determine icon color and description based on state
		icon := t.ItemOfflineIcon
		description := l.LSP.Command

		if l.LSP.Disabled {
			description = t.S().Subtle.Render("disabled")
		} else if state, exists := lspStates[l.Name]; exists {
			switch state.State {
			case lsp.StateStarting:
				icon = t.ItemBusyIcon
				description = t.S().Subtle.Render("starting...")
			case lsp.StateReady:
				icon = t.ItemOnlineIcon
				description = l.LSP.Command
			case lsp.StateError:
				icon = t.ItemErrorIcon
				if state.Error != nil {
					description = t.S().Subtle.Render(fmt.Sprintf("error: %s", state.Error.Error()))
				} else {
					description = t.S().Subtle.Render("error")
				}
			}
		}

		// Calculate diagnostic counts if we have LSP clients
		var extraContent string
		if lspClients != nil {
			lspErrs := map[protocol.DiagnosticSeverity]int{
				protocol.SeverityError:       0,
				protocol.SeverityWarning:     0,
				protocol.SeverityHint:        0,
				protocol.SeverityInformation: 0,
			}
			if client, ok := lspClients[l.Name]; ok {
				for _, diagnostics := range client.GetDiagnostics() {
					for _, diagnostic := range diagnostics {
						if severity, ok := lspErrs[diagnostic.Severity]; ok {
							lspErrs[diagnostic.Severity] = severity + 1
						}
					}
				}
			}

			errs := []string{}
			if lspErrs[protocol.SeverityError] > 0 {
				errs = append(errs, t.S().Base.Foreground(t.Error).Render(fmt.Sprintf("%s %d", styles.ErrorIcon, lspErrs[protocol.SeverityError])))
			}
			if lspErrs[protocol.SeverityWarning] > 0 {
				errs = append(errs, t.S().Base.Foreground(t.Warning).Render(fmt.Sprintf("%s %d", styles.WarningIcon, lspErrs[protocol.SeverityWarning])))
			}
			if lspErrs[protocol.SeverityHint] > 0 {
				errs = append(errs, t.S().Base.Foreground(t.FgHalfMuted).Render(fmt.Sprintf("%s %d", styles.HintIcon, lspErrs[protocol.SeverityHint])))
			}
			if lspErrs[protocol.SeverityInformation] > 0 {
				errs = append(errs, t.S().Base.Foreground(t.FgHalfMuted).Render(fmt.Sprintf("%s %d", styles.InfoIcon, lspErrs[protocol.SeverityInformation])))
			}
			extraContent = strings.Join(errs, " ")
		}

		lspList = append(lspList,
			core.Status(
				core.StatusOpts{
					Icon:         icon.String(),
					Title:        l.Name,
					Description:  description,
					ExtraContent: extraContent,
				},
				opts.MaxWidth,
			),
		)
	}

	return lspList
}

// RenderLSPBlock renders a complete LSP block with optional truncation indicator.
func RenderLSPBlock(lspClients map[string]*lsp.Client, opts RenderOptions, showTruncationIndicator bool) string {
	t := styles.CurrentTheme()
	lspList := RenderLSPList(lspClients, opts)

	// Add truncation indicator if needed
	if showTruncationIndicator && opts.MaxItems > 0 {
		lspConfigs := config.Get().LSP.Sorted()
		if len(lspConfigs) > opts.MaxItems {
			remaining := len(lspConfigs) - opts.MaxItems
			if remaining == 1 {
				lspList = append(lspList, t.S().Base.Foreground(t.FgMuted).Render("…"))
			} else {
				lspList = append(lspList,
					t.S().Base.Foreground(t.FgSubtle).Render(fmt.Sprintf("…and %d more", remaining)),
				)
			}
		}
	}

	content := lipgloss.JoinVertical(lipgloss.Left, lspList...)
	if opts.MaxWidth > 0 {
		return lipgloss.NewStyle().Width(opts.MaxWidth).Render(content)
	}
	return content
}



================================================
FILE: internal/tui/components/mcp/mcp.go
================================================
package mcp

import (
	"fmt"

	"github.com/charmbracelet/lipgloss/v2"

	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/llm/agent"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/styles"
)

// RenderOptions contains options for rendering MCP lists.
type RenderOptions struct {
	MaxWidth    int
	MaxItems    int
	ShowSection bool
	SectionName string
}

// RenderMCPList renders a list of MCP status items with the given options.
func RenderMCPList(opts RenderOptions) []string {
	t := styles.CurrentTheme()
	mcpList := []string{}

	if opts.ShowSection {
		sectionName := opts.SectionName
		if sectionName == "" {
			sectionName = "MCPs"
		}
		section := t.S().Subtle.Render(sectionName)
		mcpList = append(mcpList, section, "")
	}

	mcps := config.Get().MCP.Sorted()
	if len(mcps) == 0 {
		mcpList = append(mcpList, t.S().Base.Foreground(t.Border).Render("None"))
		return mcpList
	}

	// Get MCP states
	mcpStates := agent.GetMCPStates()

	// Determine how many items to show
	maxItems := len(mcps)
	if opts.MaxItems > 0 {
		maxItems = min(opts.MaxItems, len(mcps))
	}

	for i, l := range mcps {
		if i >= maxItems {
			break
		}

		// Determine icon and color based on state
		icon := t.ItemOfflineIcon
		description := l.MCP.Command
		extraContent := ""

		if state, exists := mcpStates[l.Name]; exists {
			switch state.State {
			case agent.MCPStateDisabled:
				description = t.S().Subtle.Render("disabled")
			case agent.MCPStateStarting:
				icon = t.ItemBusyIcon
				description = t.S().Subtle.Render("starting...")
			case agent.MCPStateConnected:
				icon = t.ItemOnlineIcon
				if state.ToolCount > 0 {
					extraContent = t.S().Subtle.Render(fmt.Sprintf("%d tools", state.ToolCount))
				}
			case agent.MCPStateError:
				icon = t.ItemErrorIcon
				if state.Error != nil {
					description = t.S().Subtle.Render(fmt.Sprintf("error: %s", state.Error.Error()))
				} else {
					description = t.S().Subtle.Render("error")
				}
			}
		} else if l.MCP.Disabled {
			description = t.S().Subtle.Render("disabled")
		}

		mcpList = append(mcpList,
			core.Status(
				core.StatusOpts{
					Icon:         icon.String(),
					Title:        l.Name,
					Description:  description,
					ExtraContent: extraContent,
				},
				opts.MaxWidth,
			),
		)
	}

	return mcpList
}

// RenderMCPBlock renders a complete MCP block with optional truncation indicator.
func RenderMCPBlock(opts RenderOptions, showTruncationIndicator bool) string {
	t := styles.CurrentTheme()
	mcpList := RenderMCPList(opts)

	// Add truncation indicator if needed
	if showTruncationIndicator && opts.MaxItems > 0 {
		mcps := config.Get().MCP.Sorted()
		if len(mcps) > opts.MaxItems {
			remaining := len(mcps) - opts.MaxItems
			if remaining == 1 {
				mcpList = append(mcpList, t.S().Base.Foreground(t.FgMuted).Render("…"))
			} else {
				mcpList = append(mcpList,
					t.S().Base.Foreground(t.FgSubtle).Render(fmt.Sprintf("…and %d more", remaining)),
				)
			}
		}
	}

	content := lipgloss.JoinVertical(lipgloss.Left, mcpList...)
	if opts.MaxWidth > 0 {
		return lipgloss.NewStyle().Width(opts.MaxWidth).Render(content)
	}
	return content
}



================================================
FILE: internal/tui/exp/diffview/chroma.go
================================================
package diffview

import (
	"fmt"
	"image/color"
	"io"
	"strings"

	"github.com/alecthomas/chroma/v2"
	"github.com/charmbracelet/crush/internal/ansiext"
	"github.com/charmbracelet/lipgloss/v2"
)

var _ chroma.Formatter = chromaFormatter{}

// chromaFormatter is a custom formatter for Chroma that uses Lip Gloss for
// foreground styling, while keeping a forced background color.
type chromaFormatter struct {
	bgColor color.Color
}

// Format implements the chroma.Formatter interface.
func (c chromaFormatter) Format(w io.Writer, style *chroma.Style, it chroma.Iterator) error {
	for token := it(); token != chroma.EOF; token = it() {
		value := strings.TrimRight(token.Value, "\n")
		value = ansiext.Escape(value)

		entry := style.Get(token.Type)
		if entry.IsZero() {
			if _, err := fmt.Fprint(w, value); err != nil {
				return err
			}
			continue
		}

		s := lipgloss.NewStyle().
			Background(c.bgColor)

		if entry.Bold == chroma.Yes {
			s = s.Bold(true)
		}
		if entry.Underline == chroma.Yes {
			s = s.Underline(true)
		}
		if entry.Italic == chroma.Yes {
			s = s.Italic(true)
		}
		if entry.Colour.IsSet() {
			s = s.Foreground(lipgloss.Color(entry.Colour.String()))
		}

		if _, err := fmt.Fprint(w, s.Render(value)); err != nil {
			return err
		}
	}
	return nil
}



================================================
FILE: internal/tui/exp/diffview/diffview.go
================================================
package diffview

import (
	"fmt"
	"image/color"
	"strconv"
	"strings"

	"github.com/alecthomas/chroma/v2"
	"github.com/alecthomas/chroma/v2/lexers"
	"github.com/aymanbagabas/go-udiff"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
	"github.com/zeebo/xxh3"
)

const (
	leadingSymbolsSize = 2
	lineNumPadding     = 1
)

type file struct {
	path    string
	content string
}

type layout int

const (
	layoutUnified layout = iota + 1
	layoutSplit
)

// DiffView represents a view for displaying differences between two files.
type DiffView struct {
	layout          layout
	before          file
	after           file
	contextLines    int
	lineNumbers     bool
	height          int
	width           int
	xOffset         int
	yOffset         int
	infiniteYScroll bool
	style           Style
	tabWidth        int
	chromaStyle     *chroma.Style

	isComputed bool
	err        error
	unified    udiff.UnifiedDiff
	edits      []udiff.Edit

	splitHunks []splitHunk

	totalLines      int
	codeWidth       int
	fullCodeWidth   int  // with leading symbols
	extraColOnAfter bool // add extra column on after panel
	beforeNumDigits int
	afterNumDigits  int

	// Cache lexer to avoid expensive file pattern matching on every line
	cachedLexer chroma.Lexer

	// Cache highlighted lines to avoid re-highlighting the same content
	// Key: hash of (content + background color), Value: highlighted string
	syntaxCache map[string]string
}

// New creates a new DiffView with default settings.
func New() *DiffView {
	dv := &DiffView{
		layout:       layoutUnified,
		contextLines: udiff.DefaultContextLines,
		lineNumbers:  true,
		tabWidth:     8,
		syntaxCache:  make(map[string]string),
	}
	dv.style = DefaultDarkStyle()
	return dv
}

// Unified sets the layout of the DiffView to unified.
func (dv *DiffView) Unified() *DiffView {
	dv.layout = layoutUnified
	return dv
}

// Split sets the layout of the DiffView to split (side-by-side).
func (dv *DiffView) Split() *DiffView {
	dv.layout = layoutSplit
	return dv
}

// Before sets the "before" file for the DiffView.
func (dv *DiffView) Before(path, content string) *DiffView {
	dv.before = file{path: path, content: content}
	// Clear caches when content changes
	dv.clearCaches()
	return dv
}

// After sets the "after" file for the DiffView.
func (dv *DiffView) After(path, content string) *DiffView {
	dv.after = file{path: path, content: content}
	// Clear caches when content changes
	dv.clearCaches()
	return dv
}

// clearCaches clears all caches when content or major settings change.
func (dv *DiffView) clearCaches() {
	dv.cachedLexer = nil
	dv.clearSyntaxCache()
	dv.isComputed = false
}

// ContextLines sets the number of context lines for the DiffView.
func (dv *DiffView) ContextLines(contextLines int) *DiffView {
	dv.contextLines = contextLines
	return dv
}

// Style sets the style for the DiffView.
func (dv *DiffView) Style(style Style) *DiffView {
	dv.style = style
	return dv
}

// LineNumbers sets whether to display line numbers in the DiffView.
func (dv *DiffView) LineNumbers(lineNumbers bool) *DiffView {
	dv.lineNumbers = lineNumbers
	return dv
}

// Height sets the height of the DiffView.
func (dv *DiffView) Height(height int) *DiffView {
	dv.height = height
	return dv
}

// Width sets the width of the DiffView.
func (dv *DiffView) Width(width int) *DiffView {
	dv.width = width
	return dv
}

// XOffset sets the horizontal offset for the DiffView.
func (dv *DiffView) XOffset(xOffset int) *DiffView {
	dv.xOffset = xOffset
	return dv
}

// YOffset sets the vertical offset for the DiffView.
func (dv *DiffView) YOffset(yOffset int) *DiffView {
	dv.yOffset = yOffset
	return dv
}

// InfiniteYScroll allows the YOffset to scroll beyond the last line.
func (dv *DiffView) InfiniteYScroll(infiniteYScroll bool) *DiffView {
	dv.infiniteYScroll = infiniteYScroll
	return dv
}

// TabWidth sets the tab width. Only relevant for code that contains tabs, like
// Go code.
func (dv *DiffView) TabWidth(tabWidth int) *DiffView {
	dv.tabWidth = tabWidth
	return dv
}

// ChromaStyle sets the chroma style for syntax highlighting.
// If nil, no syntax highlighting will be applied.
func (dv *DiffView) ChromaStyle(style *chroma.Style) *DiffView {
	dv.chromaStyle = style
	// Clear syntax cache when style changes since highlighting will be different
	dv.clearSyntaxCache()
	return dv
}

// clearSyntaxCache clears the syntax highlighting cache.
func (dv *DiffView) clearSyntaxCache() {
	if dv.syntaxCache != nil {
		// Clear the map but keep it allocated
		for k := range dv.syntaxCache {
			delete(dv.syntaxCache, k)
		}
	}
}

// String returns the string representation of the DiffView.
func (dv *DiffView) String() string {
	dv.normalizeLineEndings()
	dv.replaceTabs()
	if err := dv.computeDiff(); err != nil {
		return err.Error()
	}
	dv.convertDiffToSplit()
	dv.adjustStyles()
	dv.detectNumDigits()
	dv.detectTotalLines()
	dv.preventInfiniteYScroll()

	if dv.width <= 0 {
		dv.detectCodeWidth()
	} else {
		dv.resizeCodeWidth()
	}

	style := lipgloss.NewStyle()
	if dv.width > 0 {
		style = style.MaxWidth(dv.width)
	}
	if dv.height > 0 {
		style = style.MaxHeight(dv.height)
	}

	switch dv.layout {
	case layoutUnified:
		return style.Render(strings.TrimSuffix(dv.renderUnified(), "\n"))
	case layoutSplit:
		return style.Render(strings.TrimSuffix(dv.renderSplit(), "\n"))
	default:
		panic("unknown diffview layout")
	}
}

// normalizeLineEndings ensures the file contents use Unix-style line endings.
func (dv *DiffView) normalizeLineEndings() {
	dv.before.content = strings.ReplaceAll(dv.before.content, "\r\n", "\n")
	dv.after.content = strings.ReplaceAll(dv.after.content, "\r\n", "\n")
}

// replaceTabs replaces tabs in the before and after file contents with spaces
// according to the specified tab width.
func (dv *DiffView) replaceTabs() {
	spaces := strings.Repeat(" ", dv.tabWidth)
	dv.before.content = strings.ReplaceAll(dv.before.content, "\t", spaces)
	dv.after.content = strings.ReplaceAll(dv.after.content, "\t", spaces)
}

// computeDiff computes the differences between the "before" and "after" files.
func (dv *DiffView) computeDiff() error {
	if dv.isComputed {
		return dv.err
	}
	dv.isComputed = true
	dv.edits = udiff.Strings(
		dv.before.content,
		dv.after.content,
	)
	dv.unified, dv.err = udiff.ToUnifiedDiff(
		dv.before.path,
		dv.after.path,
		dv.before.content,
		dv.edits,
		dv.contextLines,
	)
	return dv.err
}

// convertDiffToSplit converts the unified diff to a split diff if the layout is
// set to split.
func (dv *DiffView) convertDiffToSplit() {
	if dv.layout != layoutSplit {
		return
	}

	dv.splitHunks = make([]splitHunk, len(dv.unified.Hunks))
	for i, h := range dv.unified.Hunks {
		dv.splitHunks[i] = hunkToSplit(h)
	}
}

// adjustStyles adjusts adds padding and alignment to the styles.
func (dv *DiffView) adjustStyles() {
	setPadding := func(s lipgloss.Style) lipgloss.Style {
		return s.Padding(0, lineNumPadding).Align(lipgloss.Right)
	}
	dv.style.MissingLine.LineNumber = setPadding(dv.style.MissingLine.LineNumber)
	dv.style.DividerLine.LineNumber = setPadding(dv.style.DividerLine.LineNumber)
	dv.style.EqualLine.LineNumber = setPadding(dv.style.EqualLine.LineNumber)
	dv.style.InsertLine.LineNumber = setPadding(dv.style.InsertLine.LineNumber)
	dv.style.DeleteLine.LineNumber = setPadding(dv.style.DeleteLine.LineNumber)
}

// detectNumDigits calculates the maximum number of digits needed for before and
// after line numbers.
func (dv *DiffView) detectNumDigits() {
	dv.beforeNumDigits = 0
	dv.afterNumDigits = 0

	for _, h := range dv.unified.Hunks {
		dv.beforeNumDigits = max(dv.beforeNumDigits, len(strconv.Itoa(h.FromLine+len(h.Lines))))
		dv.afterNumDigits = max(dv.afterNumDigits, len(strconv.Itoa(h.ToLine+len(h.Lines))))
	}
}

func (dv *DiffView) detectTotalLines() {
	dv.totalLines = 0

	switch dv.layout {
	case layoutUnified:
		for _, h := range dv.unified.Hunks {
			dv.totalLines += 1 + len(h.Lines)
		}
	case layoutSplit:
		for _, h := range dv.splitHunks {
			dv.totalLines += 1 + len(h.lines)
		}
	}
}

func (dv *DiffView) preventInfiniteYScroll() {
	if dv.infiniteYScroll {
		return
	}

	// clamp yOffset to prevent scrolling beyond the last line
	if dv.height > 0 {
		maxYOffset := max(0, dv.totalLines-dv.height)
		dv.yOffset = min(dv.yOffset, maxYOffset)
	} else {
		// if no height limit, ensure yOffset doesn't exceed total lines
		dv.yOffset = min(dv.yOffset, max(0, dv.totalLines-1))
	}
	dv.yOffset = max(0, dv.yOffset) // ensure yOffset is not negative
}

// detectCodeWidth calculates the maximum width of code lines in the diff view.
func (dv *DiffView) detectCodeWidth() {
	switch dv.layout {
	case layoutUnified:
		dv.detectUnifiedCodeWidth()
	case layoutSplit:
		dv.detectSplitCodeWidth()
	}
	dv.fullCodeWidth = dv.codeWidth + leadingSymbolsSize
}

// detectUnifiedCodeWidth calculates the maximum width of code lines in a
// unified diff.
func (dv *DiffView) detectUnifiedCodeWidth() {
	dv.codeWidth = 0

	for _, h := range dv.unified.Hunks {
		shownLines := ansi.StringWidth(dv.hunkLineFor(h))

		for _, l := range h.Lines {
			lineWidth := ansi.StringWidth(strings.TrimSuffix(l.Content, "\n")) + 1
			dv.codeWidth = max(dv.codeWidth, lineWidth, shownLines)
		}
	}
}

// detectSplitCodeWidth calculates the maximum width of code lines in a
// split diff.
func (dv *DiffView) detectSplitCodeWidth() {
	dv.codeWidth = 0

	for i, h := range dv.splitHunks {
		shownLines := ansi.StringWidth(dv.hunkLineFor(dv.unified.Hunks[i]))

		for _, l := range h.lines {
			if l.before != nil {
				codeWidth := ansi.StringWidth(strings.TrimSuffix(l.before.Content, "\n")) + 1
				dv.codeWidth = max(dv.codeWidth, codeWidth, shownLines)
			}
			if l.after != nil {
				codeWidth := ansi.StringWidth(strings.TrimSuffix(l.after.Content, "\n")) + 1
				dv.codeWidth = max(dv.codeWidth, codeWidth, shownLines)
			}
		}
	}
}

// resizeCodeWidth resizes the code width to fit within the specified width.
func (dv *DiffView) resizeCodeWidth() {
	fullNumWidth := dv.beforeNumDigits + dv.afterNumDigits
	fullNumWidth += lineNumPadding * 4 // left and right padding for both line numbers

	switch dv.layout {
	case layoutUnified:
		dv.codeWidth = dv.width - fullNumWidth - leadingSymbolsSize
	case layoutSplit:
		remainingWidth := dv.width - fullNumWidth - leadingSymbolsSize*2
		dv.codeWidth = remainingWidth / 2
		dv.extraColOnAfter = isOdd(remainingWidth)
	}

	dv.fullCodeWidth = dv.codeWidth + leadingSymbolsSize
}

// renderUnified renders the unified diff view as a string.
func (dv *DiffView) renderUnified() string {
	var b strings.Builder

	fullContentStyle := lipgloss.NewStyle().MaxWidth(dv.fullCodeWidth)
	printedLines := -dv.yOffset
	shouldWrite := func() bool { return printedLines >= 0 }

	getContent := func(in string, ls LineStyle) (content string, leadingEllipsis bool) {
		content = strings.TrimSuffix(in, "\n")
		content = dv.hightlightCode(content, ls.Code.GetBackground())
		content = ansi.GraphemeWidth.Cut(content, dv.xOffset, len(content))
		content = ansi.Truncate(content, dv.codeWidth, "…")
		leadingEllipsis = dv.xOffset > 0 && strings.TrimSpace(content) != ""
		return
	}

outer:
	for i, h := range dv.unified.Hunks {
		if shouldWrite() {
			ls := dv.style.DividerLine
			if dv.lineNumbers {
				b.WriteString(ls.LineNumber.Render(pad("…", dv.beforeNumDigits)))
				b.WriteString(ls.LineNumber.Render(pad("…", dv.afterNumDigits)))
			}
			content := ansi.Truncate(dv.hunkLineFor(h), dv.fullCodeWidth, "…")
			b.WriteString(ls.Code.Width(dv.fullCodeWidth).Render(content))
			b.WriteString("\n")
		}
		printedLines++

		beforeLine := h.FromLine
		afterLine := h.ToLine

		for j, l := range h.Lines {
			// print ellipis if we don't have enough space to print the rest of the diff
			hasReachedHeight := dv.height > 0 && printedLines+1 == dv.height
			isLastHunk := i+1 == len(dv.unified.Hunks)
			isLastLine := j+1 == len(h.Lines)
			if hasReachedHeight && (!isLastHunk || !isLastLine) {
				if shouldWrite() {
					ls := dv.lineStyleForType(l.Kind)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad("…", dv.beforeNumDigits)))
						b.WriteString(ls.LineNumber.Render(pad("…", dv.afterNumDigits)))
					}
					b.WriteString(fullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth).Render("  …"),
					))
					b.WriteRune('\n')
				}
				break outer
			}

			switch l.Kind {
			case udiff.Equal:
				if shouldWrite() {
					ls := dv.style.EqualLine
					content, leadingEllipsis := getContent(l.Content, ls)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(beforeLine, dv.beforeNumDigits)))
						b.WriteString(ls.LineNumber.Render(pad(afterLine, dv.afterNumDigits)))
					}
					b.WriteString(fullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth).Render(ternary(leadingEllipsis, " …", "  ") + content),
					))
				}
				beforeLine++
				afterLine++
			case udiff.Insert:
				if shouldWrite() {
					ls := dv.style.InsertLine
					content, leadingEllipsis := getContent(l.Content, ls)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(" ", dv.beforeNumDigits)))
						b.WriteString(ls.LineNumber.Render(pad(afterLine, dv.afterNumDigits)))
					}
					b.WriteString(fullContentStyle.Render(
						ls.Symbol.Render(ternary(leadingEllipsis, "+…", "+ ")) +
							ls.Code.Width(dv.codeWidth).Render(content),
					))
				}
				afterLine++
			case udiff.Delete:
				if shouldWrite() {
					ls := dv.style.DeleteLine
					content, leadingEllipsis := getContent(l.Content, ls)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(beforeLine, dv.beforeNumDigits)))
						b.WriteString(ls.LineNumber.Render(pad(" ", dv.afterNumDigits)))
					}
					b.WriteString(fullContentStyle.Render(
						ls.Symbol.Render(ternary(leadingEllipsis, "-…", "- ")) +
							ls.Code.Width(dv.codeWidth).Render(content),
					))
				}
				beforeLine++
			}
			if shouldWrite() {
				b.WriteRune('\n')
			}

			printedLines++
		}
	}

	for printedLines < dv.height {
		if shouldWrite() {
			ls := dv.style.MissingLine
			if dv.lineNumbers {
				b.WriteString(ls.LineNumber.Render(pad(" ", dv.beforeNumDigits)))
				b.WriteString(ls.LineNumber.Render(pad(" ", dv.afterNumDigits)))
			}
			b.WriteString(ls.Code.Width(dv.fullCodeWidth).Render("  "))
			b.WriteRune('\n')
		}
		printedLines++
	}

	return b.String()
}

// renderSplit renders the split (side-by-side) diff view as a string.
func (dv *DiffView) renderSplit() string {
	var b strings.Builder

	beforeFullContentStyle := lipgloss.NewStyle().MaxWidth(dv.fullCodeWidth)
	afterFullContentStyle := lipgloss.NewStyle().MaxWidth(dv.fullCodeWidth + btoi(dv.extraColOnAfter))
	printedLines := -dv.yOffset
	shouldWrite := func() bool { return printedLines >= 0 }

	getContent := func(in string, ls LineStyle) (content string, leadingEllipsis bool) {
		content = strings.TrimSuffix(in, "\n")
		content = dv.hightlightCode(content, ls.Code.GetBackground())
		content = ansi.GraphemeWidth.Cut(content, dv.xOffset, len(content))
		content = ansi.Truncate(content, dv.codeWidth, "…")
		leadingEllipsis = dv.xOffset > 0 && strings.TrimSpace(content) != ""
		return
	}

outer:
	for i, h := range dv.splitHunks {
		if shouldWrite() {
			ls := dv.style.DividerLine
			if dv.lineNumbers {
				b.WriteString(ls.LineNumber.Render(pad("…", dv.beforeNumDigits)))
			}
			content := ansi.Truncate(dv.hunkLineFor(dv.unified.Hunks[i]), dv.fullCodeWidth, "…")
			b.WriteString(ls.Code.Width(dv.fullCodeWidth).Render(content))
			if dv.lineNumbers {
				b.WriteString(ls.LineNumber.Render(pad("…", dv.afterNumDigits)))
			}
			b.WriteString(ls.Code.Width(dv.fullCodeWidth + btoi(dv.extraColOnAfter)).Render(" "))
			b.WriteRune('\n')
		}
		printedLines++

		beforeLine := h.fromLine
		afterLine := h.toLine

		for j, l := range h.lines {
			// print ellipis if we don't have enough space to print the rest of the diff
			hasReachedHeight := dv.height > 0 && printedLines+1 == dv.height
			isLastHunk := i+1 == len(dv.unified.Hunks)
			isLastLine := j+1 == len(h.lines)
			if hasReachedHeight && (!isLastHunk || !isLastLine) {
				if shouldWrite() {
					ls := dv.style.MissingLine
					if l.before != nil {
						ls = dv.lineStyleForType(l.before.Kind)
					}
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad("…", dv.beforeNumDigits)))
					}
					b.WriteString(beforeFullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth).Render("  …"),
					))
					ls = dv.style.MissingLine
					if l.after != nil {
						ls = dv.lineStyleForType(l.after.Kind)
					}
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad("…", dv.afterNumDigits)))
					}
					b.WriteString(afterFullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth).Render("  …"),
					))
					b.WriteRune('\n')
				}
				break outer
			}

			switch {
			case l.before == nil:
				if shouldWrite() {
					ls := dv.style.MissingLine
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(" ", dv.beforeNumDigits)))
					}
					b.WriteString(beforeFullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth).Render("  "),
					))
				}
			case l.before.Kind == udiff.Equal:
				if shouldWrite() {
					ls := dv.style.EqualLine
					content, leadingEllipsis := getContent(l.before.Content, ls)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(beforeLine, dv.beforeNumDigits)))
					}
					b.WriteString(beforeFullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth).Render(ternary(leadingEllipsis, " …", "  ") + content),
					))
				}
				beforeLine++
			case l.before.Kind == udiff.Delete:
				if shouldWrite() {
					ls := dv.style.DeleteLine
					content, leadingEllipsis := getContent(l.before.Content, ls)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(beforeLine, dv.beforeNumDigits)))
					}
					b.WriteString(beforeFullContentStyle.Render(
						ls.Symbol.Render(ternary(leadingEllipsis, "-…", "- ")) +
							ls.Code.Width(dv.codeWidth).Render(content),
					))
				}
				beforeLine++
			}

			switch {
			case l.after == nil:
				if shouldWrite() {
					ls := dv.style.MissingLine
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(" ", dv.afterNumDigits)))
					}
					b.WriteString(afterFullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth + btoi(dv.extraColOnAfter)).Render("  "),
					))
				}
			case l.after.Kind == udiff.Equal:
				if shouldWrite() {
					ls := dv.style.EqualLine
					content, leadingEllipsis := getContent(l.after.Content, ls)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(afterLine, dv.afterNumDigits)))
					}
					b.WriteString(afterFullContentStyle.Render(
						ls.Code.Width(dv.fullCodeWidth + btoi(dv.extraColOnAfter)).Render(ternary(leadingEllipsis, " …", "  ") + content),
					))
				}
				afterLine++
			case l.after.Kind == udiff.Insert:
				if shouldWrite() {
					ls := dv.style.InsertLine
					content, leadingEllipsis := getContent(l.after.Content, ls)
					if dv.lineNumbers {
						b.WriteString(ls.LineNumber.Render(pad(afterLine, dv.afterNumDigits)))
					}
					b.WriteString(afterFullContentStyle.Render(
						ls.Symbol.Render(ternary(leadingEllipsis, "+…", "+ ")) +
							ls.Code.Width(dv.codeWidth+btoi(dv.extraColOnAfter)).Render(content),
					))
				}
				afterLine++
			}

			if shouldWrite() {
				b.WriteRune('\n')
			}

			printedLines++
		}
	}

	for printedLines < dv.height {
		if shouldWrite() {
			ls := dv.style.MissingLine
			if dv.lineNumbers {
				b.WriteString(ls.LineNumber.Render(pad(" ", dv.beforeNumDigits)))
			}
			b.WriteString(ls.Code.Width(dv.fullCodeWidth).Render(" "))
			if dv.lineNumbers {
				b.WriteString(ls.LineNumber.Render(pad(" ", dv.afterNumDigits)))
			}
			b.WriteString(ls.Code.Width(dv.fullCodeWidth + btoi(dv.extraColOnAfter)).Render(" "))
			b.WriteRune('\n')
		}
		printedLines++
	}

	return b.String()
}

// hunkLineFor formats the header line for a hunk in the unified diff view.
func (dv *DiffView) hunkLineFor(h *udiff.Hunk) string {
	beforeShownLines, afterShownLines := dv.hunkShownLines(h)

	return fmt.Sprintf(
		"  @@ -%d,%d +%d,%d @@ ",
		h.FromLine,
		beforeShownLines,
		h.ToLine,
		afterShownLines,
	)
}

// hunkShownLines calculates the number of lines shown in a hunk for both before
// and after versions.
func (dv *DiffView) hunkShownLines(h *udiff.Hunk) (before, after int) {
	for _, l := range h.Lines {
		switch l.Kind {
		case udiff.Equal:
			before++
			after++
		case udiff.Insert:
			after++
		case udiff.Delete:
			before++
		}
	}
	return
}

func (dv *DiffView) lineStyleForType(t udiff.OpKind) LineStyle {
	switch t {
	case udiff.Equal:
		return dv.style.EqualLine
	case udiff.Insert:
		return dv.style.InsertLine
	case udiff.Delete:
		return dv.style.DeleteLine
	default:
		return dv.style.MissingLine
	}
}

func (dv *DiffView) hightlightCode(source string, bgColor color.Color) string {
	if dv.chromaStyle == nil {
		return source
	}

	// Create cache key from content and background color
	cacheKey := dv.createSyntaxCacheKey(source, bgColor)

	// Check if we already have this highlighted
	if cached, exists := dv.syntaxCache[cacheKey]; exists {
		return cached
	}

	l := dv.getChromaLexer()
	f := dv.getChromaFormatter(bgColor)

	it, err := l.Tokenise(nil, source)
	if err != nil {
		return source
	}

	var b strings.Builder
	if err := f.Format(&b, dv.chromaStyle, it); err != nil {
		return source
	}

	result := b.String()

	// Cache the result for future use
	dv.syntaxCache[cacheKey] = result

	return result
}

// createSyntaxCacheKey creates a cache key from source content and background color.
// We use a simple hash to keep memory usage reasonable.
func (dv *DiffView) createSyntaxCacheKey(source string, bgColor color.Color) string {
	// Convert color to string representation
	r, g, b, a := bgColor.RGBA()
	colorStr := fmt.Sprintf("%d,%d,%d,%d", r, g, b, a)

	// Create a hash of the content + color to use as cache key
	h := xxh3.New()
	h.Write([]byte(source))
	h.Write([]byte(colorStr))
	return fmt.Sprintf("%x", h.Sum(nil))
}

func (dv *DiffView) getChromaLexer() chroma.Lexer {
	if dv.cachedLexer != nil {
		return dv.cachedLexer
	}

	l := lexers.Match(dv.before.path)
	if l == nil {
		l = lexers.Analyse(dv.before.content)
	}
	if l == nil {
		l = lexers.Fallback
	}
	dv.cachedLexer = chroma.Coalesce(l)
	return dv.cachedLexer
}

func (dv *DiffView) getChromaFormatter(bgColor color.Color) chroma.Formatter {
	return chromaFormatter{
		bgColor: bgColor,
	}
}



================================================
FILE: internal/tui/exp/diffview/diffview_test.go
================================================
package diffview_test

import (
	_ "embed"
	"fmt"
	"strings"
	"testing"

	"github.com/alecthomas/chroma/v2/styles"
	"github.com/charmbracelet/crush/internal/tui/exp/diffview"
	"github.com/charmbracelet/x/ansi"
	"github.com/charmbracelet/x/exp/golden"
)

//go:embed testdata/TestDefault.before
var TestDefaultBefore string

//go:embed testdata/TestDefault.after
var TestDefaultAfter string

//go:embed testdata/TestMultipleHunks.before
var TestMultipleHunksBefore string

//go:embed testdata/TestMultipleHunks.after
var TestMultipleHunksAfter string

//go:embed testdata/TestNarrow.before
var TestNarrowBefore string

//go:embed testdata/TestNarrow.after
var TestNarrowAfter string

//go:embed testdata/TestTabs.before
var TestTabsBefore string

//go:embed testdata/TestTabs.after
var TestTabsAfter string

//go:embed testdata/TestLineBreakIssue.before
var TestLineBreakIssueBefore string

//go:embed testdata/TestLineBreakIssue.after
var TestLineBreakIssueAfter string

type (
	TestFunc  func(dv *diffview.DiffView) *diffview.DiffView
	TestFuncs map[string]TestFunc
)

var (
	UnifiedFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.Unified()
	}
	SplitFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.Split()
	}

	DefaultFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("main.go", TestDefaultBefore).
			After("main.go", TestDefaultAfter)
	}
	NoLineNumbersFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("main.go", TestDefaultBefore).
			After("main.go", TestDefaultAfter).
			LineNumbers(false)
	}
	MultipleHunksFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("main.go", TestMultipleHunksBefore).
			After("main.go", TestMultipleHunksAfter)
	}
	CustomContextLinesFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("main.go", TestMultipleHunksBefore).
			After("main.go", TestMultipleHunksAfter).
			ContextLines(4)
	}
	NarrowFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("text.txt", TestNarrowBefore).
			After("text.txt", TestNarrowAfter)
	}
	SmallWidthFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("main.go", TestMultipleHunksBefore).
			After("main.go", TestMultipleHunksAfter).
			Width(40)
	}
	LargeWidthFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("main.go", TestMultipleHunksBefore).
			After("main.go", TestMultipleHunksAfter).
			Width(120)
	}
	NoSyntaxHighlightFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Before("main.go", TestMultipleHunksBefore).
			After("main.go", TestMultipleHunksAfter).
			ChromaStyle(nil)
	}

	LightModeFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Style(diffview.DefaultLightStyle()).
			ChromaStyle(styles.Get("catppuccin-latte"))
	}
	DarkModeFunc = func(dv *diffview.DiffView) *diffview.DiffView {
		return dv.
			Style(diffview.DefaultDarkStyle()).
			ChromaStyle(styles.Get("catppuccin-macchiato"))
	}

	LayoutFuncs = TestFuncs{
		"Unified": UnifiedFunc,
		"Split":   SplitFunc,
	}
	BehaviorFuncs = TestFuncs{
		"Default":            DefaultFunc,
		"NoLineNumbers":      NoLineNumbersFunc,
		"MultipleHunks":      MultipleHunksFunc,
		"CustomContextLines": CustomContextLinesFunc,
		"Narrow":             NarrowFunc,
		"SmallWidth":         SmallWidthFunc,
		"LargeWidth":         LargeWidthFunc,
		"NoSyntaxHighlight":  NoSyntaxHighlightFunc,
	}
	ThemeFuncs = TestFuncs{
		"LightMode": LightModeFunc,
		"DarkMode":  DarkModeFunc,
	}
)

func TestDiffView(t *testing.T) {
	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			for behaviorName, behaviorFunc := range BehaviorFuncs {
				t.Run(behaviorName, func(t *testing.T) {
					for themeName, themeFunc := range ThemeFuncs {
						t.Run(themeName, func(t *testing.T) {
							t.Parallel()

							dv := diffview.New()
							dv = layoutFunc(dv)
							dv = themeFunc(dv)
							dv = behaviorFunc(dv)

							output := dv.String()
							golden.RequireEqual(t, []byte(output))

							switch behaviorName {
							case "SmallWidth":
								assertLineWidth(t, 40, output)
							case "LargeWidth":
								assertLineWidth(t, 120, output)
							}
						})
					}
				})
			}
		})
	}
}

func TestDiffViewTabs(t *testing.T) {
	t.Parallel()

	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			t.Parallel()

			dv := diffview.New().
				Before("main.go", TestTabsBefore).
				After("main.go", TestTabsAfter).
				Style(diffview.DefaultLightStyle()).
				ChromaStyle(styles.Get("catppuccin-latte"))
			dv = layoutFunc(dv)

			output := dv.String()
			golden.RequireEqual(t, []byte(output))
		})
	}
}

func TestDiffViewLineBreakIssue(t *testing.T) {
	t.Parallel()

	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			t.Parallel()

			dv := diffview.New().
				Before("index.js", TestLineBreakIssueBefore).
				After("index.js", TestLineBreakIssueAfter).
				Style(diffview.DefaultLightStyle()).
				ChromaStyle(styles.Get("catppuccin-latte"))
			dv = layoutFunc(dv)

			output := dv.String()
			golden.RequireEqual(t, []byte(output))
		})
	}
}

func TestDiffViewWidth(t *testing.T) {
	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			for width := 1; width <= 110; width++ {
				if layoutName == "Unified" && width > 60 {
					continue
				}

				t.Run(fmt.Sprintf("WidthOf%03d", width), func(t *testing.T) {
					t.Parallel()

					dv := diffview.New().
						Before("main.go", TestMultipleHunksBefore).
						After("main.go", TestMultipleHunksAfter).
						Width(width).
						Style(diffview.DefaultLightStyle()).
						ChromaStyle(styles.Get("catppuccin-latte"))
					dv = layoutFunc(dv)

					output := dv.String()
					golden.RequireEqual(t, []byte(output))

					assertLineWidth(t, width, output)
				})
			}
		})
	}
}

func TestDiffViewHeight(t *testing.T) {
	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			for height := 1; height <= 20; height++ {
				t.Run(fmt.Sprintf("HeightOf%03d", height), func(t *testing.T) {
					t.Parallel()

					dv := diffview.New().
						Before("main.go", TestMultipleHunksBefore).
						After("main.go", TestMultipleHunksAfter).
						Height(height).
						Style(diffview.DefaultLightStyle()).
						ChromaStyle(styles.Get("catppuccin-latte"))
					dv = layoutFunc(dv)

					output := dv.String()
					golden.RequireEqual(t, []byte(output))

					assertHeight(t, height, output)
				})
			}
		})
	}
}

func TestDiffViewXOffset(t *testing.T) {
	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			for xOffset := range 21 {
				t.Run(fmt.Sprintf("XOffsetOf%02d", xOffset), func(t *testing.T) {
					t.Parallel()

					dv := diffview.New().
						Before("main.go", TestDefaultBefore).
						After("main.go", TestDefaultAfter).
						Style(diffview.DefaultLightStyle()).
						ChromaStyle(styles.Get("catppuccin-latte")).
						Width(60).
						XOffset(xOffset)
					dv = layoutFunc(dv)

					output := dv.String()
					golden.RequireEqual(t, []byte(output))

					assertLineWidth(t, 60, output)
				})
			}
		})
	}
}

func TestDiffViewYOffset(t *testing.T) {
	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			for yOffset := range 17 {
				t.Run(fmt.Sprintf("YOffsetOf%02d", yOffset), func(t *testing.T) {
					t.Parallel()

					dv := diffview.New().
						Before("main.go", TestMultipleHunksBefore).
						After("main.go", TestMultipleHunksAfter).
						Style(diffview.DefaultLightStyle()).
						ChromaStyle(styles.Get("catppuccin-latte")).
						Height(5).
						YOffset(yOffset)
					dv = layoutFunc(dv)

					output := dv.String()
					golden.RequireEqual(t, []byte(output))

					assertHeight(t, 5, output)
				})
			}
		})
	}
}

func TestDiffViewYOffsetInfinite(t *testing.T) {
	for layoutName, layoutFunc := range LayoutFuncs {
		t.Run(layoutName, func(t *testing.T) {
			for yOffset := range 17 {
				t.Run(fmt.Sprintf("YOffsetOf%02d", yOffset), func(t *testing.T) {
					t.Parallel()

					dv := diffview.New().
						Before("main.go", TestMultipleHunksBefore).
						After("main.go", TestMultipleHunksAfter).
						Style(diffview.DefaultLightStyle()).
						ChromaStyle(styles.Get("catppuccin-latte")).
						Height(5).
						YOffset(yOffset).
						InfiniteYScroll(true)
					dv = layoutFunc(dv)

					output := dv.String()
					golden.RequireEqual(t, []byte(output))

					assertHeight(t, 5, output)
				})
			}
		})
	}
}

func assertLineWidth(t *testing.T, expected int, output string) {
	var lineWidth int
	for line := range strings.SplitSeq(output, "\n") {
		lineWidth = max(lineWidth, ansi.StringWidth(line))
	}
	if lineWidth != expected {
		t.Errorf("expected output width to be == %d, got %d", expected, lineWidth)
	}
}

func assertHeight(t *testing.T, expected int, output string) {
	output = strings.TrimSuffix(output, "\n")
	lines := strings.Count(output, "\n") + 1
	if lines != expected {
		t.Errorf("expected output height to be == %d, got %d", expected, lines)
	}
}



================================================
FILE: internal/tui/exp/diffview/split.go
================================================
package diffview

import (
	"slices"

	"github.com/aymanbagabas/go-udiff"
	"github.com/charmbracelet/x/exp/slice"
)

type splitHunk struct {
	fromLine int
	toLine   int
	lines    []*splitLine
}

type splitLine struct {
	before *udiff.Line
	after  *udiff.Line
}

func hunkToSplit(h *udiff.Hunk) (sh splitHunk) {
	lines := slices.Clone(h.Lines)
	sh = splitHunk{
		fromLine: h.FromLine,
		toLine:   h.ToLine,
		lines:    make([]*splitLine, 0, len(lines)),
	}

	for {
		var ul udiff.Line
		var ok bool
		ul, lines, ok = slice.Shift(lines)
		if !ok {
			break
		}

		var sl splitLine

		switch ul.Kind {
		// For equal lines, add as is
		case udiff.Equal:
			sl.before = &ul
			sl.after = &ul

		// For inserted lines, set after and keep before as nil
		case udiff.Insert:
			sl.before = nil
			sl.after = &ul

		// For deleted lines, set before and loop over the next lines
		// searching for the equivalent after line.
		case udiff.Delete:
			sl.before = &ul

		inner:
			for i, l := range lines {
				switch l.Kind {
				case udiff.Insert:
					var ll udiff.Line
					ll, lines, _ = slice.DeleteAt(lines, i)
					sl.after = &ll
					break inner
				case udiff.Equal:
					break inner
				}
			}
		}

		sh.lines = append(sh.lines, &sl)
	}

	return
}



================================================
FILE: internal/tui/exp/diffview/style.go
================================================
package diffview

import (
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/exp/charmtone"
)

// LineStyle defines the styles for a given line type in the diff view.
type LineStyle struct {
	LineNumber lipgloss.Style
	Symbol     lipgloss.Style
	Code       lipgloss.Style
}

// Style defines the overall style for the diff view, including styles for
// different line types such as divider, missing, equal, insert, and delete
// lines.
type Style struct {
	DividerLine LineStyle
	MissingLine LineStyle
	EqualLine   LineStyle
	InsertLine  LineStyle
	DeleteLine  LineStyle
}

// DefaultLightStyle provides a default light theme style for the diff view.
func DefaultLightStyle() Style {
	return Style{
		DividerLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Iron).
				Background(charmtone.Thunder),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Oyster).
				Background(charmtone.Anchovy),
		},
		MissingLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Background(charmtone.Ash),
			Code: lipgloss.NewStyle().
				Background(charmtone.Ash),
		},
		EqualLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Charcoal).
				Background(charmtone.Ash),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Pepper).
				Background(charmtone.Salt),
		},
		InsertLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Turtle).
				Background(lipgloss.Color("#c8e6c9")),
			Symbol: lipgloss.NewStyle().
				Foreground(charmtone.Turtle).
				Background(lipgloss.Color("#e8f5e9")),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Pepper).
				Background(lipgloss.Color("#e8f5e9")),
		},
		DeleteLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Cherry).
				Background(lipgloss.Color("#ffcdd2")),
			Symbol: lipgloss.NewStyle().
				Foreground(charmtone.Cherry).
				Background(lipgloss.Color("#ffebee")),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Pepper).
				Background(lipgloss.Color("#ffebee")),
		},
	}
}

// DefaultDarkStyle provides a default dark theme style for the diff view.
func DefaultDarkStyle() Style {
	return Style{
		DividerLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Smoke).
				Background(charmtone.Sapphire),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Smoke).
				Background(charmtone.Ox),
		},
		MissingLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Background(charmtone.Charcoal),
			Code: lipgloss.NewStyle().
				Background(charmtone.Charcoal),
		},
		EqualLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Ash).
				Background(charmtone.Charcoal),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Salt).
				Background(charmtone.Pepper),
		},
		InsertLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Turtle).
				Background(lipgloss.Color("#293229")),
			Symbol: lipgloss.NewStyle().
				Foreground(charmtone.Turtle).
				Background(lipgloss.Color("#303a30")),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Salt).
				Background(lipgloss.Color("#303a30")),
		},
		DeleteLine: LineStyle{
			LineNumber: lipgloss.NewStyle().
				Foreground(charmtone.Cherry).
				Background(lipgloss.Color("#332929")),
			Symbol: lipgloss.NewStyle().
				Foreground(charmtone.Cherry).
				Background(lipgloss.Color("#3a3030")),
			Code: lipgloss.NewStyle().
				Foreground(charmtone.Salt).
				Background(lipgloss.Color("#3a3030")),
		},
	}
}



================================================
FILE: internal/tui/exp/diffview/Taskfile.yaml
================================================
version: "3"

tasks:
  test:
    desc: Run tests
    cmds:
      - go test ./... {{.CLI_ARGS}}

  test:update:
    desc: Run tests and update golden files
    cmds:
      - go test ./... -update {{.CLI_ARGS}}

  test:print:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffView/**/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:width:unified:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewWidth/Unified/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:width:split:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewWidth/Split/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:height:unified:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewHeight/Unified/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:height:split:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewHeight/Split/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:xoffset:unified:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewXOffset/Unified/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:xoffset:split:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewXOffset/Split/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:yoffset:unified:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewYOffset/Unified/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:yoffset:split:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewYOffset/Split/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:yoffset:unified:infinite:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewYOffsetInfinite/Unified/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true

  test:print:yoffset:split:infinite:
    desc: Print golden files for debugging
    method: none
    sources:
      - ./testdata/TestDiffViewYOffsetInfinite/Split/*.golden
    cmds:
      - for: sources
        cmd: echo && echo "------- {{.ITEM}} -------" && echo && cat {{.ITEM}}
    silent: true



================================================
FILE: internal/tui/exp/diffview/udiff_test.go
================================================
package diffview_test

import (
	"bytes"
	"encoding/json"
	"testing"

	"github.com/aymanbagabas/go-udiff"
	"github.com/charmbracelet/x/exp/golden"
)

func TestUdiff(t *testing.T) {
	before := `package main

	import (
		"fmt"
	)

	func main() {
		fmt.Println("Hello, World!")
	}`

	after := `package main

	import (
		"fmt"
	)

	func main() {
		content := "Hello, World!"
		fmt.Println(content)
	}`

	t.Run("Unified", func(t *testing.T) {
		content := udiff.Unified("main.go", "main.go", before, after)
		golden.RequireEqual(t, []byte(content))
	})

	t.Run("ToUnifiedDiff", func(t *testing.T) {
		toUnifiedDiff := func(t *testing.T, before, after string, contextLines int) udiff.UnifiedDiff {
			edits := udiff.Strings(before, after)
			unifiedDiff, err := udiff.ToUnifiedDiff("main.go", "main.go", before, edits, contextLines)
			if err != nil {
				t.Fatalf("ToUnifiedDiff failed: %v", err)
			}
			return unifiedDiff
		}
		toJSON := func(t *testing.T, unifiedDiff udiff.UnifiedDiff) []byte {
			var buff bytes.Buffer
			encoder := json.NewEncoder(&buff)
			encoder.SetIndent("", "  ")
			if err := encoder.Encode(unifiedDiff); err != nil {
				t.Fatalf("Failed to encode unified diff: %v", err)
			}
			return buff.Bytes()
		}

		t.Run("DefaultContextLines", func(t *testing.T) {
			unifiedDiff := toUnifiedDiff(t, before, after, udiff.DefaultContextLines)

			t.Run("Content", func(t *testing.T) {
				golden.RequireEqual(t, []byte(unifiedDiff.String()))
			})
			t.Run("JSON", func(t *testing.T) {
				golden.RequireEqual(t, toJSON(t, unifiedDiff))
			})
		})

		t.Run("DefaultContextLinesPlusOne", func(t *testing.T) {
			unifiedDiff := toUnifiedDiff(t, before, after, udiff.DefaultContextLines+1)

			t.Run("Content", func(t *testing.T) {
				golden.RequireEqual(t, []byte(unifiedDiff.String()))
			})
			t.Run("JSON", func(t *testing.T) {
				golden.RequireEqual(t, toJSON(t, unifiedDiff))
			})
		})

		t.Run("DefaultContextLinesPlusTwo", func(t *testing.T) {
			unifiedDiff := toUnifiedDiff(t, before, after, udiff.DefaultContextLines+2)

			t.Run("Content", func(t *testing.T) {
				golden.RequireEqual(t, []byte(unifiedDiff.String()))
			})
			t.Run("JSON", func(t *testing.T) {
				golden.RequireEqual(t, toJSON(t, unifiedDiff))
			})
		})
	})
}



================================================
FILE: internal/tui/exp/diffview/util.go
================================================
package diffview

import (
	"fmt"
	"strings"

	"github.com/charmbracelet/x/ansi"
)

func pad(v any, width int) string {
	s := fmt.Sprintf("%v", v)
	w := ansi.StringWidth(s)
	if w >= width {
		return s
	}
	return strings.Repeat(" ", width-w) + s
}

func isEven(n int) bool {
	return n%2 == 0
}

func isOdd(n int) bool {
	return !isEven(n)
}

func btoi(b bool) int {
	if b {
		return 1
	}
	return 0
}

func ternary[T any](cond bool, t, f T) T {
	if cond {
		return t
	}
	return f
}



================================================
FILE: internal/tui/exp/diffview/util_test.go
================================================
package diffview

import (
	"testing"
)

func TestPad(t *testing.T) {
	tests := []struct {
		input    any
		width    int
		expected string
	}{
		{7, 2, " 7"},
		{7, 3, "  7"},
		{"a", 2, " a"},
		{"a", 3, "  a"},
		{"…", 2, " …"},
		{"…", 3, "  …"},
	}

	for _, tt := range tests {
		result := pad(tt.input, tt.width)
		if result != tt.expected {
			t.Errorf("expected %q, got %q", tt.expected, result)
		}
	}
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestDefault.after
================================================
package main

import (
    "fmt"
)

func main() {
    content := "Hello, world!"
    fmt.Println(content)
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestDefault.before
================================================
package main

import (
    "fmt"
)

func main() {
    fmt.Println("Hello, world!")
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestLineBreakIssue.after
================================================
/**
 * this is
 * a block
 * comment
 */
$(function() {
    console.log("Hello, world!");
});



================================================
FILE: internal/tui/exp/diffview/testdata/TestLineBreakIssue.before
================================================
// this is
// a regular
// comment
$(function() {
    console.log("Hello, world!");
});



================================================
FILE: internal/tui/exp/diffview/testdata/TestMultipleHunks.after
================================================
package main

import (
    "fmt"
    "strings"
)

func main() {
    fmt.Println(getContent())
}

func getContent() string {
    content := strings.ToUpper("Hello, World!")
    return content
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestMultipleHunks.before
================================================
package main

import (
    "fmt"
)

func main() {
    fmt.Println(getContent())
}

func getContent() string {
    return "Hello, world!"
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestNarrow.after
================================================
d
e
f



================================================
FILE: internal/tui/exp/diffview/testdata/TestNarrow.before
================================================
a
b
c



================================================
FILE: internal/tui/exp/diffview/testdata/TestTabs.after
================================================
package main

import (
	"fmt"
	"strings"
)

func main() {
	fmt.Println(getContent())
}

func getContent() string {
	content := strings.ToUpper("Hello, World!")
	return content
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestTabs.before
================================================
package main

import (
	"fmt"
)

func main() {
	fmt.Println(getContent())
}

func getContent() string {
	return "Hello, world!"
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/CustomContextLines/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -1,13 +1,15 @@ [m[48;2;51;49;178m                              [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 1[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mpackage[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38mmain[m[m[48;2;32;31;38m                                    [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 1[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mpackage[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38mmain[m[m[48;2;32;31;38m                                    [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                        [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                        [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                       [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                       [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                   [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;202;211;245;48;2;32;31;38mfmt[m[38;2;202;211;245;48;2;32;31;38m.[m[38;2;138;173;244;48;2;32;31;38mPrintln[m[38;2;202;211;245;48;2;32;31;38m([m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m())[m[m[48;2;32;31;38m                   [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;202;211;245;48;2;32;31;38mfmt[m[38;2;202;211;245;48;2;32;31;38m.[m[38;2;138;173;244;48;2;32;31;38mPrintln[m[38;2;202;211;245;48;2;32;31;38m([m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m())[m[m[48;2;32;31;38m                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                      [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                      [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[m[48;2;58;48;48m                      [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mstrings[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mToUpper[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;166;218;149;48;2;48;58;48m"Hello, World!"[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mcontent[m[m[48;2;48;58;48m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/CustomContextLines/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -1,13 +1,15 @@ [m[48;2;113;154;252m                              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 1[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mpackage[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239mmain[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 1[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mpackage[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239mmain[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;76;79;105;48;2;241;239;239mfmt[m[38;2;76;79;105;48;2;241;239;239m.[m[38;2;30;102;245;48;2;241;239;239mPrintln[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m())[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;76;79;105;48;2;241;239;239mfmt[m[38;2;76;79;105;48;2;241;239;239m.[m[38;2;30;102;245;48;2;241;239;239mPrintln[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m())[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/Default/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -5,5 +5,6 @@ [m[48;2;51;49;178m                 [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                  [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                 [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                    [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                    [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m 8[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;202;211;245;48;2;58;48;48mfmt[m[38;2;202;211;245;48;2;58;48;48m.[m[38;2;138;173;244;48;2;58;48;48mPrintln[m[38;2;202;211;245;48;2;58;48;48m([m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[38;2;202;211;245;48;2;58;48;48m)[m[m[48;2;58;48;48m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 8[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;166;218;149;48;2;48;58;48m"Hello, world!"[m[m[48;2;48;58;48m   [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                 [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 9[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mfmt[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mPrintln[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m         [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/Default/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                 [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/LargeWidth/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 @@ [m[48;2;51;49;178m                                      [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                                       [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                      [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                      [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                              [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                             [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                             [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                      [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m                                         [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                                     [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                                     [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                      [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                      [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                         [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                         [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6 @@ [m[48;2;51;49;178m                                     [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                                       [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                                     [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                                     [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                      [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                      [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                            [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                            [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[m[48;2;58;48;48m                            [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mstrings[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mToUpper[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;166;218;149;48;2;48;58;48m"Hello, World!"[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m       [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                      [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mcontent[m[m[48;2;48;58;48m                                    [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                                     [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/LargeWidth/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                         [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                                     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                            [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/MultipleHunks/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 @@ [m[48;2;51;49;178m                                [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                        [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                        [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                       [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                       [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                   [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                   [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6 @@ [m[48;2;51;49;178m                               [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                      [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                      [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[m[48;2;58;48;48m                      [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mstrings[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mToUpper[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;166;218;149;48;2;48;58;48m"Hello, World!"[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mcontent[m[m[48;2;48;58;48m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/MultipleHunks/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/Narrow/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m…[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -1,3 +1,3 @@ [m[48;2;51;49;178m  [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m…[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                   [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m1[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48ma[m[m[48;2;58;48;48m                 [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m1[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48md[m[m[48;2;48;58;48m                 [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m2[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48mb[m[m[48;2;58;48;48m                 [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m2[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48me[m[m[48;2;48;58;48m                 [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m3[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48mc[m[m[48;2;58;48;48m                 [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m3[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48mf[m[m[48;2;48;58;48m                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/Narrow/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m…[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -1,3 +1,3 @@ [m[48;2;113;154;252m  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m…[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m1[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238ma[m[m[48;2;255;235;238m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m1[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233md[m[m[48;2;232;245;233m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m2[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238mb[m[m[48;2;255;235;238m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m2[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233me[m[m[48;2;232;245;233m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m3[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238mc[m[m[48;2;255;235;238m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m3[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233mf[m[m[48;2;232;245;233m                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/NoLineNumbers/DarkMode.golden
================================================
[38;2;191;188;200;48;2;51;49;178m  @@ -5,5 +5,6 @@ [m[48;2;51;49;178m                 [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                  [m
[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                [m
[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                 [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                 [m
[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                    [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                    [m
[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;202;211;245;48;2;58;48;48mfmt[m[38;2;202;211;245;48;2;58;48;48m.[m[38;2;138;173;244;48;2;58;48;48mPrintln[m[38;2;202;211;245;48;2;58;48;48m([m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[38;2;202;211;245;48;2;58;48;48m)[m[m[48;2;58;48;48m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;166;218;149;48;2;48;58;48m"Hello, world!"[m[m[48;2;48;58;48m   [m
[48;2;58;57;67m  [m[48;2;58;57;67m                                 [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mfmt[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mPrintln[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m         [m
[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/NoLineNumbers/LightMode.golden
================================================
[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                 [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                  [m
[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m
[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m  [m[48;2;223;219;221m                                 [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m         [m
[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/NoSyntaxHighlight/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 @@ [m[48;2;51;49;178m                                [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  import ([m[48;2;32;31;38m                                        [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  import ([m[48;2;32;31;38m                                        [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m      "fmt"[m[48;2;32;31;38m                                       [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m      "fmt"[m[48;2;32;31;38m                                       [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m    "strings"[m[48;2;48;58;48m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  )[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  )[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  func main() {[m[48;2;32;31;38m                                   [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  func main() {[m[48;2;32;31;38m                                   [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6 @@ [m[48;2;51;49;178m                               [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m                                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  }[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  }[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  func getContent() string {[m[48;2;32;31;38m                      [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  func getContent() string {[m[48;2;32;31;38m                      [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m    return "Hello, world!"[m[48;2;58;48;48m                      [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m    content := strings.ToUpper("Hello, World!")[m[48;2;48;58;48m [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m                                                [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m    return content[m[48;2;48;58;48m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  }[m[48;2;32;31;38m                                               [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  }[m[48;2;32;31;38m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/NoSyntaxHighlight/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  import ([m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  import ([m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m      "fmt"[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m      "fmt"[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m    "strings"[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  )[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  )[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  func main() {[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  func main() {[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  }[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  }[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  func getContent() string {[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  func getContent() string {[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m    return "Hello, world!"[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m    content := strings.ToUpper("Hello, World!")[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m    return content[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  }[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  }[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/SmallWidth/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m              [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m      [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m      [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m     [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m     [m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m              [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m             [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m              [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6…[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m [m[48;2;51;49;178m               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m             [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m              [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetConte…[m[38;2;202;211;245;48;2;32;31;38m[m[38;2;202;211;245;48;2;32;31;38m[m[38;2;237;135;150;48;2;32;31;38m[m[38;2;202;211;245;48;2;32;31;38m[m[38;2;202;211;245;48;2;32;31;38m[m[m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetConte…[m[38;2;202;211;245;48;2;32;31;38m[m[38;2;202;211;245;48;2;32;31;38m[m[38;2;237;135;150;48;2;32;31;38m[m[38;2;202;211;245;48;2;32;31;38m[m[38;2;202;211;245;48;2;32;31;38m[m[m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"H…[m[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:…[m[38;2;202;211;245;48;2;48;58;48m[m[38;2;202;211;245;48;2;48;58;48m[m[38;2;202;211;245;48;2;48;58;48m[m[38;2;138;173;244;48;2;48;58;48m[m[38;2;202;211;245;48;2;48;58;48m[m[38;2;166;218;149;48;2;48;58;48m[m[38;2;202;211;245;48;2;48;58;48m[m[m
[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m [m[48;2;58;57;67m  [m[48;2;58;57;67m              [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mco…[m[m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m             [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Split/SmallWidth/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConte…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConte…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"H…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mco…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/CustomContextLines/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -1,13 +1,15 @@ [m[48;2;51;49;178m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 1[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 1[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mpackage[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38mmain[m[m[48;2;32;31;38m                                    [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                        [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                       [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;202;211;245;48;2;32;31;38mfmt[m[38;2;202;211;245;48;2;32;31;38m.[m[38;2;138;173;244;48;2;32;31;38mPrintln[m[38;2;202;211;245;48;2;32;31;38m([m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m())[m[m[48;2;32;31;38m                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                      [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m  [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[m[48;2;58;48;48m                      [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mstrings[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mToUpper[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;166;218;149;48;2;48;58;48m"Hello, World!"[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mcontent[m[m[48;2;48;58;48m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/CustomContextLines/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -1,13 +1,15 @@ [m[48;2;113;154;252m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 1[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 1[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mpackage[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239mmain[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;76;79;105;48;2;241;239;239mfmt[m[38;2;76;79;105;48;2;241;239;239m.[m[38;2;30;102;245;48;2;241;239;239mPrintln[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m())[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/Default/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -5,5 +5,6 @@ [m[48;2;51;49;178m                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                    [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m 8[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m  [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;202;211;245;48;2;58;48;48mfmt[m[38;2;202;211;245;48;2;58;48;48m.[m[38;2;138;173;244;48;2;58;48;48mPrintln[m[38;2;202;211;245;48;2;58;48;48m([m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[38;2;202;211;245;48;2;58;48;48m)[m[m[48;2;58;48;48m [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 8[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;166;218;149;48;2;48;58;48m"Hello, world!"[m[m[48;2;48;58;48m   [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 9[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mfmt[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mPrintln[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m         [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/Default/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/LargeWidth/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 @@ [m[48;2;51;49;178m                                                                                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                                                                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                                                                                      [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                                                                                     [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m                                                                                                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                                                                                             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                                                                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                                                                                 [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6 @@ [m[48;2;51;49;178m                                                                                             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                                                                                             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                                                                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                                                                    [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m  [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[m[48;2;58;48;48m                                                                                    [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mstrings[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mToUpper[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;166;218;149;48;2;48;58;48m"Hello, World!"[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m                                                               [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mcontent[m[m[48;2;48;58;48m                                                                                            [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                                                                                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/LargeWidth/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                                                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                                                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                                                                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                                                                                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                                                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                                                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                                                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                                                                                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                                                                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                                                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                                                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                                                                    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                                                                                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                                               [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                                                                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                                                                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/MultipleHunks/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 @@ [m[48;2;51;49;178m                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                                        [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                                       [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                                   [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6 @@ [m[48;2;51;49;178m                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                      [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m  [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[m[48;2;58;48;48m                      [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mstrings[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mToUpper[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;166;218;149;48;2;48;58;48m"Hello, World!"[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mcontent[m[m[48;2;48;58;48m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/MultipleHunks/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/Narrow/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m…[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m…[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -1,3 +1,3 @@ [m[48;2;51;49;178m  [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m1[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48ma[m[m[48;2;58;48;48m                 [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m1[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48md[m[m[48;2;48;58;48m                 [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m2[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48mb[m[m[48;2;58;48;48m                 [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m2[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48me[m[m[48;2;48;58;48m                 [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m3[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48mc[m[m[48;2;58;48;48m                 [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m3[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48mf[m[m[48;2;48;58;48m                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/Narrow/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m…[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m…[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -1,3 +1,3 @@ [m[48;2;113;154;252m  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m1[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238ma[m[m[48;2;255;235;238m                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m1[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233md[m[m[48;2;232;245;233m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m2[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238mb[m[m[48;2;255;235;238m                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m2[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233me[m[m[48;2;232;245;233m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m3[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238mc[m[m[48;2;255;235;238m                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m3[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233mf[m[m[48;2;232;245;233m                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/NoLineNumbers/DarkMode.golden
================================================
[38;2;191;188;200;48;2;51;49;178m  @@ -5,5 +5,6 @@ [m[48;2;51;49;178m                 [m
[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                                [m
[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                 [m
[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                    [m
[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;202;211;245;48;2;58;48;48mfmt[m[38;2;202;211;245;48;2;58;48;48m.[m[38;2;138;173;244;48;2;58;48;48mPrintln[m[38;2;202;211;245;48;2;58;48;48m([m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[38;2;202;211;245;48;2;58;48;48m)[m[m[48;2;58;48;48m [m
[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;166;218;149;48;2;48;58;48m"Hello, world!"[m[m[48;2;48;58;48m   [m
[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mfmt[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mPrintln[m[38;2;202;211;245;48;2;48;58;48m([m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m)[m[m[48;2;48;58;48m         [m
[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/NoLineNumbers/LightMode.golden
================================================
[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                 [m
[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m
[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m [m
[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m   [m
[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m         [m
[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/NoSyntaxHighlight/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 @@ [m[48;2;51;49;178m                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  import ([m[48;2;32;31;38m                                        [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m      "fmt"[m[48;2;32;31;38m                                       [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m    "strings"[m[48;2;48;58;48m                                   [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  )[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  func main() {[m[48;2;32;31;38m                                   [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6 @@ [m[48;2;51;49;178m                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  }[m[48;2;32;31;38m                                               [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                                                [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  func getContent() string {[m[48;2;32;31;38m                      [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m  [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m    return "Hello, world!"[m[48;2;58;48;48m                      [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m    content := strings.ToUpper("Hello, World!")[m[48;2;48;58;48m [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m    return content[m[48;2;48;58;48m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  }[m[48;2;32;31;38m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/NoSyntaxHighlight/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  import ([m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m      "fmt"[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m    "strings"[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  )[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  func main() {[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  }[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  func getContent() string {[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m    return "Hello, world!"[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m    content := strings.ToUpper("Hello, World!")[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m    return content[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  }[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/SmallWidth/DarkMode.golden
================================================
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -2,6 +2,7 @@ [m[48;2;51;49;178m              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 2[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 3[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;139;213;202;48;2;32;31;38mimport[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m([m[m[48;2;32;31;38m                      [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 4[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m    [m[38;2;166;218;149;48;2;32;31;38m"fmt"[m[m[48;2;32;31;38m                     [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m 5[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;166;218;149;48;2;48;58;48m"strings"[m[m[48;2;48;58;48m                 [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 5[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m)[m[m[48;2;32;31;38m                             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 6[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 7[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 8[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mmain[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m                 [m
[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[48;2;73;73;255m [m[38;2;191;188;200;48;2;73;73;255m …[m[48;2;73;73;255m [m[38;2;191;188;200;48;2;51;49;178m  @@ -9,5 +10,6 @@ [m[48;2;51;49;178m             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m 9[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                             [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m10[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [m[48;2;32;31;38m                              [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m11[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m12[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;237;135;150;48;2;32;31;38mfunc[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;138;173;244;48;2;32;31;38mgetContent[m[38;2;202;211;245;48;2;32;31;38m()[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;237;135;150;48;2;32;31;38mstring[m[38;2;202;211;245;48;2;32;31;38m [m[38;2;202;211;245;48;2;32;31;38m{[m[m[48;2;32;31;38m    [m
[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m12[m[48;2;51;41;41m [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;51;41;41m  [m[48;2;51;41;41m [m[38;2;255;56;139;48;2;58;48;48m- [m[38;2;241;239;239;48;2;58;48;48m[38;2;202;211;245;48;2;58;48;48m    [m[38;2;198;160;246;48;2;58;48;48mreturn[m[38;2;202;211;245;48;2;58;48;48m [m[38;2;166;218;149;48;2;58;48;48m"Hello, world!"[m[m[48;2;58;48;48m    [m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m13[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;202;211;245;48;2;48;58;48mcontent[m[38;2;202;211;245;48;2;48;58;48m [m[1;38;2;145;215;227;48;2;48;58;48m:=[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mstrings[m[38;2;202;211;245;48;2;48;58;48m.[m[38;2;138;173;244;48;2;48;58;48mToUppe…[m[38;2;202;211;245;48;2;48;58;48m[m[38;2;166;218;149;48;2;48;58;48m[m[38;2;202;211;245;48;2;48;58;48m[m[m
[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m  [m[48;2;41;50;41m [m[48;2;41;50;41m [m[38;2;10;220;217;48;2;41;50;41m14[m[48;2;41;50;41m [m[38;2;10;220;217;48;2;48;58;48m+ [m[38;2;241;239;239;48;2;48;58;48m[38;2;202;211;245;48;2;48;58;48m    [m[38;2;198;160;246;48;2;48;58;48mreturn[m[38;2;202;211;245;48;2;48;58;48m [m[38;2;202;211;245;48;2;48;58;48mcontent[m[m[48;2;48;58;48m            [m
[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m13[m[48;2;58;57;67m [m[48;2;58;57;67m [m[38;2;223;219;221;48;2;58;57;67m15[m[48;2;58;57;67m [m[38;2;241;239;239;48;2;32;31;38m  [38;2;202;211;245;48;2;32;31;38m}[m[m[48;2;32;31;38m                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffView/Unified/SmallWidth/LightMode.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUppe…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf001.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf002.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf003.golden
================================================
[Binary file]


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf004.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf005.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m  …[m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf006.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf007.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf008.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf009.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf010.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf011.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf012.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf013.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[38;2;32;31;38;48;2;255;235;238m  …[m[48;2;255;235;238m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf014.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m  …[m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf015.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf016.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf017.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf018.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf019.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Split/HeightOf020.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf001.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf002.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf003.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf004.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf005.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf006.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf007.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf008.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf009.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf010.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf011.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf012.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf013.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[38;2;32;31;38;48;2;255;235;238m  …[m[48;2;255;235;238m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf014.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf015.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf016.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf017.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf018.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf019.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewHeight/Unified/HeightOf020.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewLineBreakIssue/Split.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -1,6 +1,8 @@ [m[48;2;113;154;252m                  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 1[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[3;38;2;156;160;176;48;2;255;235;238m// this is[m[m[48;2;255;235;238m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 1[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;210;15;57;48;2;232;245;233m/**[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 2[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;136;57;239;48;2;232;245;233mthis[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mis[m[m[48;2;232;245;233m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 2[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[3;38;2;156;160;176;48;2;255;235;238m// a regular[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 3[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233ma[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mblock[m[m[48;2;232;245;233m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 3[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[3;38;2;156;160;176;48;2;255;235;238m// comment[m[m[48;2;255;235;238m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 4[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcomment[m[m[48;2;232;245;233m                        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;210;15;57;48;2;232;245;233m/[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m$[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;210;15;57;48;2;241;239;239mfunction[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m$[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;210;15;57;48;2;241;239;239mfunction[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;76;79;105;48;2;241;239;239mconsole[m[38;2;76;79;105;48;2;241;239;239m.[m[38;2;76;79;105;48;2;241;239;239mlog[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;64;160;43;48;2;241;239;239m"Hello, world!"[m[38;2;76;79;105;48;2;241;239;239m);[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;76;79;105;48;2;241;239;239mconsole[m[38;2;76;79;105;48;2;241;239;239m.[m[38;2;76;79;105;48;2;241;239;239mlog[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;64;160;43;48;2;241;239;239m"Hello, world!"[m[38;2;76;79;105;48;2;241;239;239m);[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m});[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m});[m[m[48;2;241;239;239m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewLineBreakIssue/Unified.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -1,6 +1,8 @@ [m[48;2;113;154;252m                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 1[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[3;38;2;156;160;176;48;2;255;235;238m// this is[m[m[48;2;255;235;238m                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 1[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;210;15;57;48;2;232;245;233m/**[m[m[48;2;232;245;233m                               [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 2[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;136;57;239;48;2;232;245;233mthis[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mis[m[m[48;2;232;245;233m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 2[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[3;38;2;156;160;176;48;2;255;235;238m// a regular[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 3[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233ma[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mblock[m[m[48;2;232;245;233m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 3[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[3;38;2;156;160;176;48;2;255;235;238m// comment[m[m[48;2;255;235;238m                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 4[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcomment[m[m[48;2;232;245;233m                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m*[m[38;2;210;15;57;48;2;232;245;233m/[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m$[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;210;15;57;48;2;241;239;239mfunction[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;76;79;105;48;2;241;239;239mconsole[m[38;2;76;79;105;48;2;241;239;239m.[m[38;2;76;79;105;48;2;241;239;239mlog[m[38;2;76;79;105;48;2;241;239;239m([m[38;2;64;160;43;48;2;241;239;239m"Hello, world!"[m[38;2;76;79;105;48;2;241;239;239m);[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m});[m[m[48;2;241;239;239m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewTabs/Split.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m        [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m        [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m        [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                                   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m        [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m        [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m        [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewTabs/Unified.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m        [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m        [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m        [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m        [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m        [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf001.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf002.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m1[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf003.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf004.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf005.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-[m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf006.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf007.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf008.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m1[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m1[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf009.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m[48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-[m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf010.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-[m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf011.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m[48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m[48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m[48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m [m[48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf012.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf013.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf014.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m…[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m…[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m…[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf015.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m…[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m…[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;64;160;43;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m…[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf016.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mi…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mi…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m …[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf017.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mi…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mi…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;64;160;43;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf018.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mim…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mim…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m  …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m  …[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m  …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf019.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mim…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mim…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m  …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m  …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;64;160;43;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m  …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf020.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimp…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimp…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m   …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m   …[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m   …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf021.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimp…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimp…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m   …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m   …[m[38;2;64;160;43;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;64;160;43;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m   …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf022.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238m…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf023.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m…[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238m…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf024.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpor…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpor…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mr…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mc…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mr…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf025.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpor…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpor…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"…[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mr…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mc…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mr…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf026.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"f…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"f…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"s…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mm…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mm…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mg…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mg…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mre…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mco…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mre…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf027.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"f…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"f…[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"s…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mm…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mm…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mg…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mg…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mre…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mco…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mre…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf028.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fm…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fm…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"st…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mma…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mma…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mge…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mge…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mret…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcon…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mret…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf029.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fm…[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fm…[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"st…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mma…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mma…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mge…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mge…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mret…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcon…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mret…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf030.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"str…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmai…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmai…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mget…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mget…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mretu…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcont…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mretu…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf031.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"str…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmai…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmai…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mget…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mget…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mretu…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcont…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mretu…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf032.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"stri…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetC…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetC…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mretur…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mconte…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mretur…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf033.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"stri…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetC…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetC…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mretur…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mconte…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mretur…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf034.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strin…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +1…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m…[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mconten…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf035.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strin…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +1…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m…[m[38;2;64;160;43;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mconten…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf036.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"string…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCon…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCon…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m…[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233m…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf037.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"string…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCon…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCon…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m…[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233m…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf038.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCont…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCont…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mc…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf039.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCont…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCont…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mc…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf040.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConte…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConte…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"H…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mco…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf041.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConte…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConte…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"H…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mco…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf042.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConten…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConten…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"He…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcon…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf043.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 …[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConten…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConten…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"He…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcon…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf044.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hel…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcont…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf045.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @…[m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hel…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcont…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf046.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hell…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233ms…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mconte…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf047.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hell…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233ms…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mconte…[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf048.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mst…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf049.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mst…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf050.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello,…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstr…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf051.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello,…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstr…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf052.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239ms…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239ms…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, …[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstri…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf053.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239ms…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239ms…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, …[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstri…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf054.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mst…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mst…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, w…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrin…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf055.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mst…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mst…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, w…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrin…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf056.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstr…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstr…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, wo…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstring…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf057.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstr…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstr…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, wo…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstring…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf058.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstri…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstri…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, wor…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf059.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstri…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstri…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, wor…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf060.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstrin…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstrin…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, worl…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf061.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstrin…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstrin…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, worl…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf062.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mT…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf063.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world…[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mT…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf064.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mTo…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf065.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mTo…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf066.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToU…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf067.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToU…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf068.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUp…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf069.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUp…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf070.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpp…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf071.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpp…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf072.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUppe…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf073.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUppe…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf074.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf075.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf076.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf077.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf078.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                 [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf079.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                 [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf080.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                 [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"H…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf081.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                 [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"H…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf082.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"He…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf083.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                  [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"He…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf084.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hel…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf085.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                        [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                   [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hel…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf086.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                        [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hell…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf087.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                         [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                    [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hell…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf088.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                         [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf089.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                     [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf090.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello,…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf091.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                           [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                      [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello,…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf092.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                           [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, …[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf093.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                            [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                       [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, …[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf094.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                            [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, W…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf095.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                             [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, W…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf096.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                             [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Wo…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf097.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                              [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                         [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Wo…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf098.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                              [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Wor…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf099.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                               [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                          [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Wor…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf100.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                               [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Worl…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf101.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                           [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Worl…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf102.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf103.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                            [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                             [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf104.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf105.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                             [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!…[m[38;2;76;79;105;48;2;232;245;233m[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                              [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf106.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf107.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                              [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf108.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf109.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Split/WidthOf110.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                 [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                         [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                 [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf001.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m[m[48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf002.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m1[m[48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf003.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf004.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf005.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m[m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf006.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m [m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m [m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m [m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m [m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m1[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m1[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m1[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf007.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m[m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m[m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m[m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m[m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf008.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf009.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-[m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+[m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m[m[48;2;241;239;239m [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf010.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf011.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m…[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m…[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf012.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mi…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m …[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mf…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf013.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mim…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m  …[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfu…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m  …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf014.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimp…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m   …[m[38;2;64;160;43;48;2;241;239;239m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;64;160;43;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfun…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m   …[m[38;2;136;57;239;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   …[m[38;2;136;57;239;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf015.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238m…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf016.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimpor…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mr…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mc…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mr…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf017.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"f…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"s…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mm…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mg…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mre…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mco…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mre…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf018.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fm…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"st…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mma…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mge…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mret…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcon…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mret…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf019.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"str…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmai…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mget…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mretu…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcont…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mretu…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf020.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"stri…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetC…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mretur…[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mconte…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mretur…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf021.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strin…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +1…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCo…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m…[m[38;2;64;160;43;48;2;255;235;238m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mconten…[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf022.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"string…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCon…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m…[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233m…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf023.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetCont…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mc…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf024.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConte…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"H…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mco…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf025.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 …[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetConten…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"He…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcon…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf026.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @…[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hel…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcont…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf027.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m(…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hell…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233ms…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mconte…[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf028.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m         [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mst…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf029.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m          [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello,…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstr…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf030.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m           [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239ms…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, …[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstri…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf031.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m            [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mst…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, w…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrin…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf032.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m             [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstr…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, wo…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstring…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf033.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m              [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstri…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, wor…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf034.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m               [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstrin…[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, worl…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf035.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m…[m[38;2;76;79;105;48;2;241;239;239m[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world…[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mT…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf036.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mTo…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf037.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToU…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf038.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUp…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf039.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpp…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf040.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUppe…[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf041.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m…[m[38;2;64;160;43;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf042.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf043.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf044.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                         [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"H…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf045.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                          [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m         [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m         [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"He…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf046.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                           [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m          [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m          [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hel…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                   [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf047.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                            [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                        [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m           [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hell…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                    [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf048.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                             [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                         [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m            [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                     [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf049.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                              [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                          [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m             [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello,…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                      [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf050.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                               [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                           [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m              [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, …[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf051.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                            [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m               [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, W…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf052.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                             [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Wo…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                         [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf053.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                              [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Wor…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                          [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf054.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                               [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, Worl…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                           [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf055.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                            [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf056.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                 [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!…[m[38;2;76;79;105;48;2;232;245;233m[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                             [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf057.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                  [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                              [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf058.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf059.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                    [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewWidth/Unified/WidthOf060.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                         [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                     [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf00.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m           [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello,…[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, …[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                       [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf01.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239munc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239munc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m            [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m   [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, …[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, w…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf02.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239mnc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239mnc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m             [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m  [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, w…[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, wo…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf03.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239mc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239mc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m              [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, wo…[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, wor…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf04.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m               [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, wor…[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, worl…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf05.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238mmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, worl…[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233montent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world…[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf06.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239main[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239main[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238mt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world…[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mntent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf07.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239min[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239min[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!…[m[38;2;76;79;105;48;2;255;235;238m[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mtent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf08.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239mn[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239mn[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                   [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233ment[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m  [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf09.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                    [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mnt[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m   [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf10.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m)[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m)[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m  [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mt[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m    [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf11.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mntln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m   [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m     [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mntln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf12.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mtln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m    [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m      [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mtln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf13.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m     [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf14.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mn[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m        [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mn[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf15.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m       [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m         [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf16.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mHello, world!"[m[m[48;2;232;245;233m          [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf17.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mHello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m         [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mello, world!"[m[m[48;2;232;245;233m           [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233montent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf18.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m          [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mllo, world!"[m[m[48;2;232;245;233m            [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mntent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf19.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mllo, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m           [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mlo, world!"[m[m[48;2;232;245;233m             [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mtent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Split/XOffsetOf20.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m        [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mlo, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m            [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mo, world!"[m[m[48;2;232;245;233m              [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                        [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233ment[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                        [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf00.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                     [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf01.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239munc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m   [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m   [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf02.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239mnc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                       [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m  [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m  [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf03.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239mc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                        [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m [m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf04.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                         [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238mfmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mfmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf05.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                          [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238mmt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233montent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                         [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mmt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf06.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239main[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                           [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238mt[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mntent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                          [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mt[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf07.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239min[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                            [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m.[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                         [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mtent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                           [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf08.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239mn[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                             [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mPrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                          [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233ment[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                            [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mPrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf09.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                              [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mrintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                           [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mnt[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                             [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mrintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf10.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m)[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                               [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mintln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                            [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mt[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                              [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mintln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                    [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf11.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                                [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mntln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                             [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                               [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mntln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                     [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf12.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                                 [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mtln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                              [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                                [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mtln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                      [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf13.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mln[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                               [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mln[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                       [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf14.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238mn[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                                [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                                  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233mn[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf15.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m([m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                                 [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233m"Hello, world!"[m[m[48;2;232;245;233m                                   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                         [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf16.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                                  [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mHello, world!"[m[m[48;2;232;245;233m                                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                          [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf17.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mHello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                                   [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mello, world!"[m[m[48;2;232;245;233m                                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233montent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                           [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf18.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mello, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                                    [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mllo, world!"[m[m[48;2;232;245;233m                                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mntent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                            [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf19.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mllo, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                                     [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mlo, world!"[m[m[48;2;232;245;233m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233mtent[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                             [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewXOffset/Unified/XOffsetOf20.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -5,5 +5,6 @@ [m[48;2;113;154;252m                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                  [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;210;15;57;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;30;102;245;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m 8[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m-…[m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;30;102;245;48;2;255;235;238m[m[38;2;76;79;105;48;2;255;235;238m[m[38;2;64;160;43;48;2;255;235;238mlo, world!"[m[38;2;76;79;105;48;2;255;235;238m)[m[m[48;2;255;235;238m                                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 8[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[1;38;2;4;165;229;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;64;160;43;48;2;232;245;233mo, world!"[m[m[48;2;232;245;233m                                        [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 9[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+…[m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;30;102;245;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233m[m[38;2;76;79;105;48;2;232;245;233ment[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m                                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m …[38;2;76;79;105;48;2;241;239;239m[m[m[48;2;241;239;239m                                                  [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf00.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m  …[m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf01.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf02.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf03.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf04.golden
================================================
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf05.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf06.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf07.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf08.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[38;2;32;31;38;48;2;255;235;238m  …[m[48;2;255;235;238m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf09.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m  …[m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf10.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf11.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf12.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf13.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf14.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf15.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Split/YOffsetOf16.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf00.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf01.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf02.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf03.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf04.golden
================================================
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf05.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf06.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf07.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf08.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[38;2;32;31;38;48;2;255;235;238m  …[m[48;2;255;235;238m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf09.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf10.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf11.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf12.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf13.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf14.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf15.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffset/Unified/YOffsetOf16.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf00.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m  …[m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf01.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf02.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf03.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf04.golden
================================================
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf05.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf06.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf07.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf08.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m [m[48;2;113;154;252m                                                 [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[38;2;32;31;38;48;2;255;235;238m  …[m[48;2;255;235;238m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf09.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m  …[m[48;2;223;219;221m                                               [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf10.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf11.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf12.golden
================================================
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf13.golden
================================================
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf14.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf15.golden
================================================
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Split/YOffsetOf16.golden
================================================
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m                                                 [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf00.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -2,6 +2,7 @@ [m[48;2;113;154;252m                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf01.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 2[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf02.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 3[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;23;146;153;48;2;241;239;239mimport[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m([m[m[48;2;241;239;239m                                        [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf03.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 4[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m    [m[38;2;64;160;43;48;2;241;239;239m"fmt"[m[m[48;2;241;239;239m                                       [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf04.golden
================================================
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m 5[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;64;160;43;48;2;232;245;233m"strings"[m[m[48;2;232;245;233m                                   [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf05.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 5[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m)[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf06.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 6[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf07.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 7[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 8[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mmain[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                                   [m
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m …[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  …[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf08.golden
================================================
[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[48;2;71;118;255m [m[38;2;77;76;87;48;2;71;118;255m …[m[48;2;71;118;255m [m[38;2;96;95;107;48;2;113;154;252m  @@ -9,5 +10,6 @@ [m[48;2;113;154;252m                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m …[m[48;2;255;205;210m [m[38;2;32;31;38;48;2;255;235;238m  …[m[48;2;255;235;238m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf09.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m 9[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf10.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m10[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [m[48;2;241;239;239m                                                [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m …[m[48;2;200;230;201m [m[38;2;32;31;38;48;2;232;245;233m  …[m[48;2;232;245;233m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf11.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m11[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m12[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;210;15;57;48;2;241;239;239mfunc[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;30;102;245;48;2;241;239;239mgetContent[m[38;2;76;79;105;48;2;241;239;239m()[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;210;15;57;48;2;241;239;239mstring[m[38;2;76;79;105;48;2;241;239;239m [m[38;2;76;79;105;48;2;241;239;239m{[m[m[48;2;241;239;239m                      [m
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf12.golden
================================================
[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m12[m[48;2;255;205;210m [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;205;210m  [m[48;2;255;205;210m [m[38;2;255;56;139;48;2;255;235;238m- [m[38;2;32;31;38;48;2;255;235;238m[38;2;76;79;105;48;2;255;235;238m    [m[38;2;136;57;239;48;2;255;235;238mreturn[m[38;2;76;79;105;48;2;255;235;238m [m[38;2;64;160;43;48;2;255;235;238m"Hello, world!"[m[m[48;2;255;235;238m                      [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf13.golden
================================================
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m13[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;76;79;105;48;2;232;245;233mcontent[m[38;2;76;79;105;48;2;232;245;233m [m[1;38;2;4;165;229;48;2;232;245;233m:=[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mstrings[m[38;2;76;79;105;48;2;232;245;233m.[m[38;2;30;102;245;48;2;232;245;233mToUpper[m[38;2;76;79;105;48;2;232;245;233m([m[38;2;64;160;43;48;2;232;245;233m"Hello, World!"[m[38;2;76;79;105;48;2;232;245;233m)[m[m[48;2;232;245;233m [m
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf14.golden
================================================
[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m  [m[48;2;200;230;201m [m[48;2;200;230;201m [m[38;2;10;220;217;48;2;200;230;201m14[m[48;2;200;230;201m [m[38;2;10;220;217;48;2;232;245;233m+ [m[38;2;32;31;38;48;2;232;245;233m[38;2;76;79;105;48;2;232;245;233m    [m[38;2;136;57;239;48;2;232;245;233mreturn[m[38;2;76;79;105;48;2;232;245;233m [m[38;2;76;79;105;48;2;232;245;233mcontent[m[m[48;2;232;245;233m                              [m
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf15.golden
================================================
[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m13[m[48;2;223;219;221m [m[48;2;223;219;221m [m[38;2;58;57;67;48;2;223;219;221m15[m[48;2;223;219;221m [m[38;2;32;31;38;48;2;241;239;239m  [38;2;76;79;105;48;2;241;239;239m}[m[m[48;2;241;239;239m                                               [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestDiffViewYOffsetInfinite/Unified/YOffsetOf16.golden
================================================
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m
[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m [m[48;2;223;219;221m  [m[48;2;223;219;221m                                                [m


================================================
FILE: internal/tui/exp/diffview/testdata/TestUdiff/Unified.golden
================================================
--- main.go
+++ main.go
@@ -5,5 +5,6 @@
 	)
 
 	func main() {
-		fmt.Println("Hello, World!")
+		content := "Hello, World!"
+		fmt.Println(content)
 	}
\ No newline at end of file



================================================
FILE: internal/tui/exp/diffview/testdata/TestUdiff/ToUnifiedDiff/DefaultContextLines/Content.golden
================================================
--- main.go
+++ main.go
@@ -5,5 +5,6 @@
 	)
 
 	func main() {
-		fmt.Println("Hello, World!")
+		content := "Hello, World!"
+		fmt.Println(content)
 	}
\ No newline at end of file



================================================
FILE: internal/tui/exp/diffview/testdata/TestUdiff/ToUnifiedDiff/DefaultContextLines/JSON.golden
================================================
{
  "From": "main.go",
  "To": "main.go",
  "Hunks": [
    {
      "FromLine": 5,
      "ToLine": 5,
      "Lines": [
        {
          "Kind": 2,
          "Content": "\t)\n"
        },
        {
          "Kind": 2,
          "Content": "\n"
        },
        {
          "Kind": 2,
          "Content": "\tfunc main() {\n"
        },
        {
          "Kind": 0,
          "Content": "\t\tfmt.Println(\"Hello, World!\")\n"
        },
        {
          "Kind": 1,
          "Content": "\t\tcontent := \"Hello, World!\"\n"
        },
        {
          "Kind": 1,
          "Content": "\t\tfmt.Println(content)\n"
        },
        {
          "Kind": 2,
          "Content": "\t}"
        }
      ]
    }
  ]
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestUdiff/ToUnifiedDiff/DefaultContextLinesPlusOne/Content.golden
================================================
--- main.go
+++ main.go
@@ -4,6 +4,7 @@
 		"fmt"
 	)
 
 	func main() {
-		fmt.Println("Hello, World!")
+		content := "Hello, World!"
+		fmt.Println(content)
 	}
\ No newline at end of file



================================================
FILE: internal/tui/exp/diffview/testdata/TestUdiff/ToUnifiedDiff/DefaultContextLinesPlusOne/JSON.golden
================================================
{
  "From": "main.go",
  "To": "main.go",
  "Hunks": [
    {
      "FromLine": 4,
      "ToLine": 4,
      "Lines": [
        {
          "Kind": 2,
          "Content": "\t\t\"fmt\"\n"
        },
        {
          "Kind": 2,
          "Content": "\t)\n"
        },
        {
          "Kind": 2,
          "Content": "\n"
        },
        {
          "Kind": 2,
          "Content": "\tfunc main() {\n"
        },
        {
          "Kind": 0,
          "Content": "\t\tfmt.Println(\"Hello, World!\")\n"
        },
        {
          "Kind": 1,
          "Content": "\t\tcontent := \"Hello, World!\"\n"
        },
        {
          "Kind": 1,
          "Content": "\t\tfmt.Println(content)\n"
        },
        {
          "Kind": 2,
          "Content": "\t}"
        }
      ]
    }
  ]
}



================================================
FILE: internal/tui/exp/diffview/testdata/TestUdiff/ToUnifiedDiff/DefaultContextLinesPlusTwo/Content.golden
================================================
--- main.go
+++ main.go
@@ -3,7 +3,8 @@
 	import (
 		"fmt"
 	)
 
 	func main() {
-		fmt.Println("Hello, World!")
+		content := "Hello, World!"
+		fmt.Println(content)
 	}
\ No newline at end of file



================================================
FILE: internal/tui/exp/diffview/testdata/TestUdiff/ToUnifiedDiff/DefaultContextLinesPlusTwo/JSON.golden
================================================
{
  "From": "main.go",
  "To": "main.go",
  "Hunks": [
    {
      "FromLine": 3,
      "ToLine": 3,
      "Lines": [
        {
          "Kind": 2,
          "Content": "\timport (\n"
        },
        {
          "Kind": 2,
          "Content": "\t\t\"fmt\"\n"
        },
        {
          "Kind": 2,
          "Content": "\t)\n"
        },
        {
          "Kind": 2,
          "Content": "\n"
        },
        {
          "Kind": 2,
          "Content": "\tfunc main() {\n"
        },
        {
          "Kind": 0,
          "Content": "\t\tfmt.Println(\"Hello, World!\")\n"
        },
        {
          "Kind": 1,
          "Content": "\t\tcontent := \"Hello, World!\"\n"
        },
        {
          "Kind": 1,
          "Content": "\t\tfmt.Println(content)\n"
        },
        {
          "Kind": 2,
          "Content": "\t}"
        }
      ]
    }
  ]
}



================================================
FILE: internal/tui/exp/list/filterable.go
================================================
package list

import (
	"regexp"
	"slices"
	"sort"
	"strings"

	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/textinput"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/sahilm/fuzzy"
)

var (
	// Pre-compiled regex for checking if a string contains alphabetic characters.
	alphaRegex = regexp.MustCompile(`[a-zA-Z]`)
	// Pre-compiled regex for checking if a string is alphanumeric.
	alphanumericRegex = regexp.MustCompile(`^[a-zA-Z0-9]*$`)
)

type FilterableItem interface {
	Item
	FilterValue() string
}

type FilterableList[T FilterableItem] interface {
	List[T]
	Cursor() *tea.Cursor
	SetInputWidth(int)
	SetInputPlaceholder(string)
	Filter(q string) tea.Cmd
}

type HasMatchIndexes interface {
	MatchIndexes([]int)
}

type filterableOptions struct {
	listOptions []ListOption
	placeholder string
	inputHidden bool
	inputWidth  int
	inputStyle  lipgloss.Style
}
type filterableList[T FilterableItem] struct {
	*list[T]
	*filterableOptions
	width, height int
	// stores all available items
	items      []T
	input      textinput.Model
	inputWidth int
	query      string
}

type filterableListOption func(*filterableOptions)

func WithFilterPlaceholder(ph string) filterableListOption {
	return func(f *filterableOptions) {
		f.placeholder = ph
	}
}

func WithFilterInputHidden() filterableListOption {
	return func(f *filterableOptions) {
		f.inputHidden = true
	}
}

func WithFilterInputStyle(inputStyle lipgloss.Style) filterableListOption {
	return func(f *filterableOptions) {
		f.inputStyle = inputStyle
	}
}

func WithFilterListOptions(opts ...ListOption) filterableListOption {
	return func(f *filterableOptions) {
		f.listOptions = opts
	}
}

func WithFilterInputWidth(inputWidth int) filterableListOption {
	return func(f *filterableOptions) {
		f.inputWidth = inputWidth
	}
}

func NewFilterableList[T FilterableItem](items []T, opts ...filterableListOption) FilterableList[T] {
	t := styles.CurrentTheme()

	f := &filterableList[T]{
		filterableOptions: &filterableOptions{
			inputStyle:  t.S().Base,
			placeholder: "Type to filter",
		},
	}
	for _, opt := range opts {
		opt(f.filterableOptions)
	}
	f.list = New(items, f.listOptions...).(*list[T])

	f.updateKeyMaps()
	f.items = slices.Collect(f.list.items.Seq())

	if f.inputHidden {
		return f
	}

	ti := textinput.New()
	ti.Placeholder = f.placeholder
	ti.SetVirtualCursor(false)
	ti.Focus()
	ti.SetStyles(t.S().TextInput)
	f.input = ti
	return f
}

func (f *filterableList[T]) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.KeyPressMsg:
		switch {
		// handle movements
		case key.Matches(msg, f.keyMap.Down),
			key.Matches(msg, f.keyMap.Up),
			key.Matches(msg, f.keyMap.DownOneItem),
			key.Matches(msg, f.keyMap.UpOneItem),
			key.Matches(msg, f.keyMap.HalfPageDown),
			key.Matches(msg, f.keyMap.HalfPageUp),
			key.Matches(msg, f.keyMap.PageDown),
			key.Matches(msg, f.keyMap.PageUp),
			key.Matches(msg, f.keyMap.End),
			key.Matches(msg, f.keyMap.Home):
			u, cmd := f.list.Update(msg)
			f.list = u.(*list[T])
			return f, cmd
		default:
			if !f.inputHidden {
				var cmds []tea.Cmd
				var cmd tea.Cmd
				f.input, cmd = f.input.Update(msg)
				cmds = append(cmds, cmd)

				if f.query != f.input.Value() {
					cmd = f.Filter(f.input.Value())
					cmds = append(cmds, cmd)
				}
				f.query = f.input.Value()
				return f, tea.Batch(cmds...)
			}
		}
	}
	u, cmd := f.list.Update(msg)
	f.list = u.(*list[T])
	return f, cmd
}

func (f *filterableList[T]) View() string {
	if f.inputHidden {
		return f.list.View()
	}

	return lipgloss.JoinVertical(
		lipgloss.Left,
		f.inputStyle.Render(f.input.View()),
		f.list.View(),
	)
}

// removes bindings that are used for search
func (f *filterableList[T]) updateKeyMaps() {
	removeLettersAndNumbers := func(bindings []string) []string {
		var keep []string
		for _, b := range bindings {
			if len(b) != 1 {
				keep = append(keep, b)
				continue
			}
			if b == " " {
				continue
			}
			m := alphanumericRegex.MatchString(b)
			if !m {
				keep = append(keep, b)
			}
		}
		return keep
	}

	updateBinding := func(binding key.Binding) key.Binding {
		newKeys := removeLettersAndNumbers(binding.Keys())
		if len(newKeys) == 0 {
			binding.SetEnabled(false)
			return binding
		}
		binding.SetKeys(newKeys...)
		return binding
	}

	f.keyMap.Down = updateBinding(f.keyMap.Down)
	f.keyMap.Up = updateBinding(f.keyMap.Up)
	f.keyMap.DownOneItem = updateBinding(f.keyMap.DownOneItem)
	f.keyMap.UpOneItem = updateBinding(f.keyMap.UpOneItem)
	f.keyMap.HalfPageDown = updateBinding(f.keyMap.HalfPageDown)
	f.keyMap.HalfPageUp = updateBinding(f.keyMap.HalfPageUp)
	f.keyMap.PageDown = updateBinding(f.keyMap.PageDown)
	f.keyMap.PageUp = updateBinding(f.keyMap.PageUp)
	f.keyMap.End = updateBinding(f.keyMap.End)
	f.keyMap.Home = updateBinding(f.keyMap.Home)
}

func (m *filterableList[T]) GetSize() (int, int) {
	return m.width, m.height
}

func (f *filterableList[T]) SetSize(w, h int) tea.Cmd {
	f.width = w
	f.height = h
	if f.inputHidden {
		return f.list.SetSize(w, h)
	}
	if f.inputWidth == 0 {
		f.input.SetWidth(w)
	} else {
		f.input.SetWidth(f.inputWidth)
	}
	return f.list.SetSize(w, h-(f.inputHeight()))
}

func (f *filterableList[T]) inputHeight() int {
	return lipgloss.Height(f.inputStyle.Render(f.input.View()))
}

func (f *filterableList[T]) Filter(query string) tea.Cmd {
	var cmds []tea.Cmd
	for _, item := range f.items {
		if i, ok := any(item).(layout.Focusable); ok {
			cmds = append(cmds, i.Blur())
		}
		if i, ok := any(item).(HasMatchIndexes); ok {
			i.MatchIndexes(make([]int, 0))
		}
	}

	f.selectedItem = ""
	if query == "" || len(f.items) == 0 {
		return f.list.SetItems(f.items)
	}

	words := make([]string, len(f.items))
	for i, item := range f.items {
		words[i] = strings.ToLower(item.FilterValue())
	}

	matches := fuzzy.Find(query, words)

	sort.SliceStable(matches, func(i, j int) bool {
		return matches[i].Score > matches[j].Score
	})

	var matchedItems []T
	for _, match := range matches {
		item := f.items[match.Index]
		if i, ok := any(item).(HasMatchIndexes); ok {
			i.MatchIndexes(match.MatchedIndexes)
		}
		matchedItems = append(matchedItems, item)
	}

	if f.direction == DirectionBackward {
		slices.Reverse(matchedItems)
	}

	cmds = append(cmds, f.list.SetItems(matchedItems))
	return tea.Batch(cmds...)
}

func (f *filterableList[T]) SetItems(items []T) tea.Cmd {
	f.items = items
	return f.list.SetItems(items)
}

func (f *filterableList[T]) Cursor() *tea.Cursor {
	if f.inputHidden {
		return nil
	}
	return f.input.Cursor()
}

func (f *filterableList[T]) Blur() tea.Cmd {
	f.input.Blur()
	return f.list.Blur()
}

func (f *filterableList[T]) Focus() tea.Cmd {
	f.input.Focus()
	return f.list.Focus()
}

func (f *filterableList[T]) IsFocused() bool {
	return f.list.IsFocused()
}

func (f *filterableList[T]) SetInputWidth(w int) {
	f.inputWidth = w
}

func (f *filterableList[T]) SetInputPlaceholder(ph string) {
	f.placeholder = ph
}



================================================
FILE: internal/tui/exp/list/filterable_group.go
================================================
package list

import (
	"regexp"
	"slices"
	"sort"
	"strings"

	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/textinput"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/sahilm/fuzzy"
)

// Pre-compiled regex for checking if a string is alphanumeric.
// Note: This is duplicated from filterable.go to avoid circular dependencies.
var alphanumericRegexGroup = regexp.MustCompile(`^[a-zA-Z0-9]*$`)

type FilterableGroupList[T FilterableItem] interface {
	GroupedList[T]
	Cursor() *tea.Cursor
	SetInputWidth(int)
	SetInputPlaceholder(string)
}
type filterableGroupList[T FilterableItem] struct {
	*groupedList[T]
	*filterableOptions
	width, height int
	groups        []Group[T]
	// stores all available items
	input      textinput.Model
	inputWidth int
	query      string
}

func NewFilterableGroupedList[T FilterableItem](items []Group[T], opts ...filterableListOption) FilterableGroupList[T] {
	t := styles.CurrentTheme()

	f := &filterableGroupList[T]{
		filterableOptions: &filterableOptions{
			inputStyle:  t.S().Base,
			placeholder: "Type to filter",
		},
	}
	for _, opt := range opts {
		opt(f.filterableOptions)
	}
	f.groupedList = NewGroupedList(items, f.listOptions...).(*groupedList[T])

	f.updateKeyMaps()

	if f.inputHidden {
		return f
	}

	ti := textinput.New()
	ti.Placeholder = f.placeholder
	ti.SetVirtualCursor(false)
	ti.Focus()
	ti.SetStyles(t.S().TextInput)
	f.input = ti
	return f
}

func (f *filterableGroupList[T]) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.KeyPressMsg:
		switch {
		// handle movements
		case key.Matches(msg, f.keyMap.Down),
			key.Matches(msg, f.keyMap.Up),
			key.Matches(msg, f.keyMap.DownOneItem),
			key.Matches(msg, f.keyMap.UpOneItem),
			key.Matches(msg, f.keyMap.HalfPageDown),
			key.Matches(msg, f.keyMap.HalfPageUp),
			key.Matches(msg, f.keyMap.PageDown),
			key.Matches(msg, f.keyMap.PageUp),
			key.Matches(msg, f.keyMap.End),
			key.Matches(msg, f.keyMap.Home):
			u, cmd := f.groupedList.Update(msg)
			f.groupedList = u.(*groupedList[T])
			return f, cmd
		default:
			if !f.inputHidden {
				var cmds []tea.Cmd
				var cmd tea.Cmd
				f.input, cmd = f.input.Update(msg)
				cmds = append(cmds, cmd)

				if f.query != f.input.Value() {
					cmd = f.Filter(f.input.Value())
					cmds = append(cmds, cmd)
				}
				f.query = f.input.Value()
				return f, tea.Batch(cmds...)
			}
		}
	}
	u, cmd := f.groupedList.Update(msg)
	f.groupedList = u.(*groupedList[T])
	return f, cmd
}

func (f *filterableGroupList[T]) View() string {
	if f.inputHidden {
		return f.groupedList.View()
	}

	return lipgloss.JoinVertical(
		lipgloss.Left,
		f.inputStyle.Render(f.input.View()),
		f.groupedList.View(),
	)
}

// removes bindings that are used for search
func (f *filterableGroupList[T]) updateKeyMaps() {
	removeLettersAndNumbers := func(bindings []string) []string {
		var keep []string
		for _, b := range bindings {
			if len(b) != 1 {
				keep = append(keep, b)
				continue
			}
			if b == " " {
				continue
			}
			m := alphanumericRegexGroup.MatchString(b)
			if !m {
				keep = append(keep, b)
			}
		}
		return keep
	}

	updateBinding := func(binding key.Binding) key.Binding {
		newKeys := removeLettersAndNumbers(binding.Keys())
		if len(newKeys) == 0 {
			binding.SetEnabled(false)
			return binding
		}
		binding.SetKeys(newKeys...)
		return binding
	}

	f.keyMap.Down = updateBinding(f.keyMap.Down)
	f.keyMap.Up = updateBinding(f.keyMap.Up)
	f.keyMap.DownOneItem = updateBinding(f.keyMap.DownOneItem)
	f.keyMap.UpOneItem = updateBinding(f.keyMap.UpOneItem)
	f.keyMap.HalfPageDown = updateBinding(f.keyMap.HalfPageDown)
	f.keyMap.HalfPageUp = updateBinding(f.keyMap.HalfPageUp)
	f.keyMap.PageDown = updateBinding(f.keyMap.PageDown)
	f.keyMap.PageUp = updateBinding(f.keyMap.PageUp)
	f.keyMap.End = updateBinding(f.keyMap.End)
	f.keyMap.Home = updateBinding(f.keyMap.Home)
}

func (m *filterableGroupList[T]) GetSize() (int, int) {
	return m.width, m.height
}

func (f *filterableGroupList[T]) SetSize(w, h int) tea.Cmd {
	f.width = w
	f.height = h
	if f.inputHidden {
		return f.groupedList.SetSize(w, h)
	}
	if f.inputWidth == 0 {
		f.input.SetWidth(w)
	} else {
		f.input.SetWidth(f.inputWidth)
	}
	return f.groupedList.SetSize(w, h-(f.inputHeight()))
}

func (f *filterableGroupList[T]) inputHeight() int {
	return lipgloss.Height(f.inputStyle.Render(f.input.View()))
}

func (f *filterableGroupList[T]) Filter(query string) tea.Cmd {
	var cmds []tea.Cmd
	for _, item := range slices.Collect(f.items.Seq()) {
		if i, ok := any(item).(layout.Focusable); ok {
			cmds = append(cmds, i.Blur())
		}
		if i, ok := any(item).(HasMatchIndexes); ok {
			i.MatchIndexes(make([]int, 0))
		}
	}

	f.selectedItem = ""
	if query == "" {
		return f.groupedList.SetGroups(f.groups)
	}

	var newGroups []Group[T]
	for _, g := range f.groups {
		words := make([]string, len(g.Items))
		for i, item := range g.Items {
			words[i] = strings.ToLower(item.FilterValue())
		}

		matches := fuzzy.Find(query, words)

		sort.SliceStable(matches, func(i, j int) bool {
			return matches[i].Score > matches[j].Score
		})

		var matchedItems []T
		for _, match := range matches {
			item := g.Items[match.Index]
			if i, ok := any(item).(HasMatchIndexes); ok {
				i.MatchIndexes(match.MatchedIndexes)
			}
			matchedItems = append(matchedItems, item)
		}
		if len(matchedItems) > 0 {
			newGroups = append(newGroups, Group[T]{
				Section: g.Section,
				Items:   matchedItems,
			})
		}
	}
	cmds = append(cmds, f.groupedList.SetGroups(newGroups))
	return tea.Batch(cmds...)
}

func (f *filterableGroupList[T]) SetGroups(groups []Group[T]) tea.Cmd {
	f.groups = groups
	return f.groupedList.SetGroups(groups)
}

func (f *filterableGroupList[T]) Cursor() *tea.Cursor {
	if f.inputHidden {
		return nil
	}
	return f.input.Cursor()
}

func (f *filterableGroupList[T]) Blur() tea.Cmd {
	f.input.Blur()
	return f.groupedList.Blur()
}

func (f *filterableGroupList[T]) Focus() tea.Cmd {
	f.input.Focus()
	return f.groupedList.Focus()
}

func (f *filterableGroupList[T]) IsFocused() bool {
	return f.groupedList.IsFocused()
}

func (f *filterableGroupList[T]) SetInputWidth(w int) {
	f.inputWidth = w
}

func (f *filterableGroupList[T]) SetInputPlaceholder(ph string) {
	f.input.Placeholder = ph
	f.placeholder = ph
}



================================================
FILE: internal/tui/exp/list/filterable_test.go
================================================
package list

import (
	"fmt"
	"slices"
	"testing"

	"github.com/charmbracelet/x/exp/golden"
	"github.com/stretchr/testify/assert"
)

func TestFilterableList(t *testing.T) {
	t.Parallel()
	t.Run("should create simple filterable list", func(t *testing.T) {
		t.Parallel()
		items := []FilterableItem{}
		for i := range 5 {
			item := NewFilterableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := NewFilterableList(
			items,
			WithFilterListOptions(WithDirectionForward()),
		).(*filterableList[FilterableItem])

		l.SetSize(100, 10)
		cmd := l.Init()
		if cmd != nil {
			cmd()
		}

		assert.Equal(t, items[0].ID(), l.selectedItem)
		golden.RequireEqual(t, []byte(l.View()))
	})
}

func TestUpdateKeyMap(t *testing.T) {
	t.Parallel()
	l := NewFilterableList(
		[]FilterableItem{},
		WithFilterListOptions(WithDirectionForward()),
	).(*filterableList[FilterableItem])

	hasJ := slices.Contains(l.keyMap.Down.Keys(), "j")
	fmt.Println(l.keyMap.Down.Keys())
	hasCtrlJ := slices.Contains(l.keyMap.Down.Keys(), "ctrl+j")

	hasUpperCaseK := slices.Contains(l.keyMap.UpOneItem.Keys(), "K")

	assert.False(t, l.keyMap.HalfPageDown.Enabled(), "should disable keys that are only letters")
	assert.False(t, hasJ, "should not contain j")
	assert.False(t, hasUpperCaseK, "should also remove upper case K")
	assert.True(t, hasCtrlJ, "should still have ctrl+j")
}

type filterableItem struct {
	*selectableItem
}

func NewFilterableItem(content string) FilterableItem {
	return &filterableItem{
		selectableItem: NewSelectableItem(content).(*selectableItem),
	}
}

func (f *filterableItem) FilterValue() string {
	return f.content
}



================================================
FILE: internal/tui/exp/list/grouped.go
================================================
package list

import (
	"slices"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/util"
)

type Group[T Item] struct {
	Section ItemSection
	Items   []T
}
type GroupedList[T Item] interface {
	util.Model
	layout.Sizeable
	Items() []Item
	Groups() []Group[T]
	SetGroups([]Group[T]) tea.Cmd
	MoveUp(int) tea.Cmd
	MoveDown(int) tea.Cmd
	GoToTop() tea.Cmd
	GoToBottom() tea.Cmd
	SelectItemAbove() tea.Cmd
	SelectItemBelow() tea.Cmd
	SetSelected(string) tea.Cmd
	SelectedItem() *T
}
type groupedList[T Item] struct {
	*list[Item]
	groups []Group[T]
}

func NewGroupedList[T Item](groups []Group[T], opts ...ListOption) GroupedList[T] {
	list := &list[Item]{
		confOptions: &confOptions{
			direction: DirectionForward,
			keyMap:    DefaultKeyMap(),
			focused:   true,
		},
		items:         csync.NewSlice[Item](),
		indexMap:      csync.NewMap[string, int](),
		renderedItems: csync.NewMap[string, renderedItem](),
	}
	for _, opt := range opts {
		opt(list.confOptions)
	}

	return &groupedList[T]{
		list: list,
	}
}

func (g *groupedList[T]) Init() tea.Cmd {
	g.convertItems()
	return g.render()
}

func (l *groupedList[T]) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	u, cmd := l.list.Update(msg)
	l.list = u.(*list[Item])
	return l, cmd
}

func (g *groupedList[T]) SelectedItem() *T {
	item := g.list.SelectedItem()
	if item == nil {
		return nil
	}
	dRef := *item
	c, ok := any(dRef).(T)
	if !ok {
		return nil
	}
	return &c
}

func (g *groupedList[T]) convertItems() {
	var items []Item
	for _, g := range g.groups {
		items = append(items, g.Section)
		for _, g := range g.Items {
			items = append(items, g)
		}
	}
	g.items.SetSlice(items)
}

func (g *groupedList[T]) SetGroups(groups []Group[T]) tea.Cmd {
	g.groups = groups
	g.convertItems()
	return g.SetItems(slices.Collect(g.items.Seq()))
}

func (g *groupedList[T]) Groups() []Group[T] {
	return g.groups
}

func (g *groupedList[T]) Items() []Item {
	return g.list.Items()
}



================================================
FILE: internal/tui/exp/list/items.go
================================================
package list

import (
	"image/color"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/ansi"
	"github.com/google/uuid"
	"github.com/rivo/uniseg"
)

type Indexable interface {
	SetIndex(int)
}

type CompletionItem[T any] interface {
	FilterableItem
	layout.Focusable
	layout.Sizeable
	HasMatchIndexes
	Value() T
	Text() string
}

type completionItemCmp[T any] struct {
	width        int
	id           string
	text         string
	value        T
	focus        bool
	matchIndexes []int
	bgColor      color.Color
	shortcut     string
}

type options struct {
	id           string
	text         string
	bgColor      color.Color
	matchIndexes []int
	shortcut     string
}

type CompletionItemOption func(*options)

func WithCompletionBackgroundColor(c color.Color) CompletionItemOption {
	return func(cmp *options) {
		cmp.bgColor = c
	}
}

func WithCompletionMatchIndexes(indexes ...int) CompletionItemOption {
	return func(cmp *options) {
		cmp.matchIndexes = indexes
	}
}

func WithCompletionShortcut(shortcut string) CompletionItemOption {
	return func(cmp *options) {
		cmp.shortcut = shortcut
	}
}

func WithCompletionID(id string) CompletionItemOption {
	return func(cmp *options) {
		cmp.id = id
	}
}

func NewCompletionItem[T any](text string, value T, opts ...CompletionItemOption) CompletionItem[T] {
	c := &completionItemCmp[T]{
		text:  text,
		value: value,
	}
	o := &options{}

	for _, opt := range opts {
		opt(o)
	}
	if o.id == "" {
		o.id = uuid.NewString()
	}
	c.id = o.id
	c.bgColor = o.bgColor
	c.matchIndexes = o.matchIndexes
	c.shortcut = o.shortcut
	return c
}

// Init implements CommandItem.
func (c *completionItemCmp[T]) Init() tea.Cmd {
	return nil
}

// Update implements CommandItem.
func (c *completionItemCmp[T]) Update(tea.Msg) (tea.Model, tea.Cmd) {
	return c, nil
}

// View implements CommandItem.
func (c *completionItemCmp[T]) View() string {
	t := styles.CurrentTheme()

	itemStyle := t.S().Base.Padding(0, 1).Width(c.width)
	innerWidth := c.width - 2 // Account for padding

	if c.shortcut != "" {
		innerWidth -= lipgloss.Width(c.shortcut)
	}

	titleStyle := t.S().Text.Width(innerWidth)
	titleMatchStyle := t.S().Text.Underline(true)
	if c.bgColor != nil {
		titleStyle = titleStyle.Background(c.bgColor)
		titleMatchStyle = titleMatchStyle.Background(c.bgColor)
		itemStyle = itemStyle.Background(c.bgColor)
	}

	if c.focus {
		titleStyle = t.S().TextSelected.Width(innerWidth)
		titleMatchStyle = t.S().TextSelected.Underline(true)
		itemStyle = itemStyle.Background(t.Primary)
	}

	var truncatedTitle string

	if len(c.matchIndexes) > 0 && len(c.text) > innerWidth {
		// Smart truncation: ensure the last matching part is visible
		truncatedTitle = c.smartTruncate(c.text, innerWidth, c.matchIndexes)
	} else {
		// No matches, use regular truncation
		truncatedTitle = ansi.Truncate(c.text, innerWidth, "…")
	}

	text := titleStyle.Render(truncatedTitle)
	if len(c.matchIndexes) > 0 {
		var ranges []lipgloss.Range
		for _, rng := range matchedRanges(c.matchIndexes) {
			// ansi.Cut is grapheme and ansi sequence aware, we match against a ansi.Stripped string, but we might still have graphemes.
			// all that to say that rng is byte positions, but we need to pass it down to ansi.Cut as char positions.
			// so we need to adjust it here:
			start, stop := bytePosToVisibleCharPos(truncatedTitle, rng)
			ranges = append(ranges, lipgloss.NewRange(start, stop+1, titleMatchStyle))
		}
		text = lipgloss.StyleRanges(text, ranges...)
	}
	parts := []string{text}
	if c.shortcut != "" {
		// Add the shortcut at the end
		shortcutStyle := t.S().Muted
		if c.focus {
			shortcutStyle = t.S().TextSelected
		}
		parts = append(parts, shortcutStyle.Render(c.shortcut))
	}
	item := itemStyle.Render(
		lipgloss.JoinHorizontal(
			lipgloss.Left,
			parts...,
		),
	)
	return item
}

// Blur implements CommandItem.
func (c *completionItemCmp[T]) Blur() tea.Cmd {
	c.focus = false
	return nil
}

// Focus implements CommandItem.
func (c *completionItemCmp[T]) Focus() tea.Cmd {
	c.focus = true
	return nil
}

// GetSize implements CommandItem.
func (c *completionItemCmp[T]) GetSize() (int, int) {
	return c.width, 1
}

// IsFocused implements CommandItem.
func (c *completionItemCmp[T]) IsFocused() bool {
	return c.focus
}

// SetSize implements CommandItem.
func (c *completionItemCmp[T]) SetSize(width int, height int) tea.Cmd {
	c.width = width
	return nil
}

func (c *completionItemCmp[T]) MatchIndexes(indexes []int) {
	c.matchIndexes = indexes
}

func (c *completionItemCmp[T]) FilterValue() string {
	return c.text
}

func (c *completionItemCmp[T]) Value() T {
	return c.value
}

// smartTruncate implements fzf-style truncation that ensures the last matching part is visible
func (c *completionItemCmp[T]) smartTruncate(text string, width int, matchIndexes []int) string {
	if width <= 0 {
		return ""
	}

	textLen := ansi.StringWidth(text)
	if textLen <= width {
		return text
	}

	if len(matchIndexes) == 0 {
		return ansi.Truncate(text, width, "…")
	}

	// Find the last match position
	lastMatchPos := matchIndexes[len(matchIndexes)-1]

	// Convert byte position to visual width position
	lastMatchVisualPos := 0
	bytePos := 0
	gr := uniseg.NewGraphemes(text)
	for bytePos < lastMatchPos && gr.Next() {
		bytePos += len(gr.Str())
		lastMatchVisualPos += max(1, gr.Width())
	}

	// Calculate how much space we need for the ellipsis
	ellipsisWidth := 1 // "…" character width
	availableWidth := width - ellipsisWidth

	// If the last match is within the available width, truncate from the end
	if lastMatchVisualPos < availableWidth {
		return ansi.Truncate(text, width, "…")
	}

	// Calculate the start position to ensure the last match is visible
	// We want to show some context before the last match if possible
	startVisualPos := max(0, lastMatchVisualPos-availableWidth+1)

	// Convert visual position back to byte position
	startBytePos := 0
	currentVisualPos := 0
	gr = uniseg.NewGraphemes(text)
	for currentVisualPos < startVisualPos && gr.Next() {
		startBytePos += len(gr.Str())
		currentVisualPos += max(1, gr.Width())
	}

	// Extract the substring starting from startBytePos
	truncatedText := text[startBytePos:]

	// Truncate to fit width with ellipsis
	truncatedText = ansi.Truncate(truncatedText, availableWidth, "")
	truncatedText = "…" + truncatedText
	return truncatedText
}

func matchedRanges(in []int) [][2]int {
	if len(in) == 0 {
		return [][2]int{}
	}
	current := [2]int{in[0], in[0]}
	if len(in) == 1 {
		return [][2]int{current}
	}
	var out [][2]int
	for i := 1; i < len(in); i++ {
		if in[i] == current[1]+1 {
			current[1] = in[i]
		} else {
			out = append(out, current)
			current = [2]int{in[i], in[i]}
		}
	}
	out = append(out, current)
	return out
}

func bytePosToVisibleCharPos(str string, rng [2]int) (int, int) {
	bytePos, byteStart, byteStop := 0, rng[0], rng[1]
	pos, start, stop := 0, 0, 0
	gr := uniseg.NewGraphemes(str)
	for byteStart > bytePos {
		if !gr.Next() {
			break
		}
		bytePos += len(gr.Str())
		pos += max(1, gr.Width())
	}
	start = pos
	for byteStop > bytePos {
		if !gr.Next() {
			break
		}
		bytePos += len(gr.Str())
		pos += max(1, gr.Width())
	}
	stop = pos
	return start, stop
}

// ID implements CompletionItem.
func (c *completionItemCmp[T]) ID() string {
	return c.id
}

func (c *completionItemCmp[T]) Text() string {
	return c.text
}

type ItemSection interface {
	Item
	layout.Sizeable
	Indexable
	SetInfo(info string)
}
type itemSectionModel struct {
	width int
	title string
	inx   int
	info  string
}

// ID implements ItemSection.
func (m *itemSectionModel) ID() string {
	return uuid.NewString()
}

func NewItemSection(title string) ItemSection {
	return &itemSectionModel{
		title: title,
		inx:   -1,
	}
}

func (m *itemSectionModel) Init() tea.Cmd {
	return nil
}

func (m *itemSectionModel) Update(tea.Msg) (tea.Model, tea.Cmd) {
	return m, nil
}

func (m *itemSectionModel) View() string {
	t := styles.CurrentTheme()
	title := ansi.Truncate(m.title, m.width-2, "…")
	style := t.S().Base.Padding(1, 1, 0, 1)
	if m.inx == 0 {
		style = style.Padding(0, 1, 0, 1)
	}
	title = t.S().Muted.Render(title)
	section := ""
	if m.info != "" {
		section = core.SectionWithInfo(title, m.width-2, m.info)
	} else {
		section = core.Section(title, m.width-2)
	}

	return style.Render(section)
}

func (m *itemSectionModel) GetSize() (int, int) {
	return m.width, 1
}

func (m *itemSectionModel) SetSize(width int, height int) tea.Cmd {
	m.width = width
	return nil
}

func (m *itemSectionModel) IsSectionHeader() bool {
	return true
}

func (m *itemSectionModel) SetInfo(info string) {
	m.info = info
}

func (m *itemSectionModel) SetIndex(inx int) {
	m.inx = inx
}



================================================
FILE: internal/tui/exp/list/keys.go
================================================
package list

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	Down,
	Up,
	DownOneItem,
	UpOneItem,
	PageDown,
	PageUp,
	HalfPageDown,
	HalfPageUp,
	Home,
	End key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		Down: key.NewBinding(
			key.WithKeys("down", "ctrl+j", "ctrl+n", "j"),
			key.WithHelp("↓", "down"),
		),
		Up: key.NewBinding(
			key.WithKeys("up", "ctrl+k", "ctrl+p", "k"),
			key.WithHelp("↑", "up"),
		),
		UpOneItem: key.NewBinding(
			key.WithKeys("shift+up", "K"),
			key.WithHelp("shift+↑", "up one item"),
		),
		DownOneItem: key.NewBinding(
			key.WithKeys("shift+down", "J"),
			key.WithHelp("shift+↓", "down one item"),
		),
		HalfPageDown: key.NewBinding(
			key.WithKeys("d"),
			key.WithHelp("d", "half page down"),
		),
		PageDown: key.NewBinding(
			key.WithKeys("pgdown", " ", "f"),
			key.WithHelp("f/pgdn", "page down"),
		),
		PageUp: key.NewBinding(
			key.WithKeys("pgup", "b"),
			key.WithHelp("b/pgup", "page up"),
		),
		HalfPageUp: key.NewBinding(
			key.WithKeys("u"),
			key.WithHelp("u", "half page up"),
		),
		Home: key.NewBinding(
			key.WithKeys("g", "home"),
			key.WithHelp("g", "home"),
		),
		End: key.NewBinding(
			key.WithKeys("G", "end"),
			key.WithHelp("G", "end"),
		),
	}
}

func (k KeyMap) KeyBindings() []key.Binding {
	return []key.Binding{
		k.Down,
		k.Up,
		k.DownOneItem,
		k.UpOneItem,
		k.HalfPageDown,
		k.HalfPageUp,
		k.Home,
		k.End,
	}
}



================================================
FILE: internal/tui/exp/list/list.go
================================================
package list

import (
	"slices"
	"strings"
	"sync"

	"github.com/charmbracelet/bubbles/v2/key"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/csync"
	"github.com/charmbracelet/crush/internal/tui/components/anim"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/lipgloss/v2"
	uv "github.com/charmbracelet/ultraviolet"
	"github.com/charmbracelet/x/ansi"
	"github.com/rivo/uniseg"
)

type Item interface {
	util.Model
	layout.Sizeable
	ID() string
}

type HasAnim interface {
	Item
	Spinning() bool
}

type List[T Item] interface {
	util.Model
	layout.Sizeable
	layout.Focusable

	// Just change state
	MoveUp(int) tea.Cmd
	MoveDown(int) tea.Cmd
	GoToTop() tea.Cmd
	GoToBottom() tea.Cmd
	SelectItemAbove() tea.Cmd
	SelectItemBelow() tea.Cmd
	SetItems([]T) tea.Cmd
	SetSelected(string) tea.Cmd
	SelectedItem() *T
	Items() []T
	UpdateItem(string, T) tea.Cmd
	DeleteItem(string) tea.Cmd
	PrependItem(T) tea.Cmd
	AppendItem(T) tea.Cmd
	StartSelection(col, line int)
	EndSelection(col, line int)
	SelectionStop()
	SelectionClear()
	SelectWord(col, line int)
	SelectParagraph(col, line int)
	GetSelectedText(paddingLeft int) string
	HasSelection() bool
}

type direction int

const (
	DirectionForward direction = iota
	DirectionBackward
)

const (
	ItemNotFound              = -1
	ViewportDefaultScrollSize = 2
)

type renderedItem struct {
	id     string
	view   string
	height int
	start  int
	end    int
}

type confOptions struct {
	width, height int
	gap           int
	// if you are at the last item and go down it will wrap to the top
	wrap         bool
	keyMap       KeyMap
	direction    direction
	selectedItem string
	focused      bool
	resize       bool
	enableMouse  bool
}

type list[T Item] struct {
	*confOptions

	offset int

	indexMap *csync.Map[string, int]
	items    *csync.Slice[T]

	renderedItems *csync.Map[string, renderedItem]

	renderMu sync.Mutex
	rendered string

	movingByItem       bool
	selectionStartCol  int
	selectionStartLine int
	selectionEndCol    int
	selectionEndLine   int

	selectionActive bool
}

type ListOption func(*confOptions)

// WithSize sets the size of the list.
func WithSize(width, height int) ListOption {
	return func(l *confOptions) {
		l.width = width
		l.height = height
	}
}

// WithGap sets the gap between items in the list.
func WithGap(gap int) ListOption {
	return func(l *confOptions) {
		l.gap = gap
	}
}

// WithDirectionForward sets the direction to forward
func WithDirectionForward() ListOption {
	return func(l *confOptions) {
		l.direction = DirectionForward
	}
}

// WithDirectionBackward sets the direction to forward
func WithDirectionBackward() ListOption {
	return func(l *confOptions) {
		l.direction = DirectionBackward
	}
}

// WithSelectedItem sets the initially selected item in the list.
func WithSelectedItem(id string) ListOption {
	return func(l *confOptions) {
		l.selectedItem = id
	}
}

func WithKeyMap(keyMap KeyMap) ListOption {
	return func(l *confOptions) {
		l.keyMap = keyMap
	}
}

func WithWrapNavigation() ListOption {
	return func(l *confOptions) {
		l.wrap = true
	}
}

func WithFocus(focus bool) ListOption {
	return func(l *confOptions) {
		l.focused = focus
	}
}

func WithResizeByList() ListOption {
	return func(l *confOptions) {
		l.resize = true
	}
}

func WithEnableMouse() ListOption {
	return func(l *confOptions) {
		l.enableMouse = true
	}
}

func New[T Item](items []T, opts ...ListOption) List[T] {
	list := &list[T]{
		confOptions: &confOptions{
			direction: DirectionForward,
			keyMap:    DefaultKeyMap(),
			focused:   true,
		},
		items:              csync.NewSliceFrom(items),
		indexMap:           csync.NewMap[string, int](),
		renderedItems:      csync.NewMap[string, renderedItem](),
		selectionStartCol:  -1,
		selectionStartLine: -1,
		selectionEndLine:   -1,
		selectionEndCol:    -1,
	}
	for _, opt := range opts {
		opt(list.confOptions)
	}

	for inx, item := range items {
		if i, ok := any(item).(Indexable); ok {
			i.SetIndex(inx)
		}
		list.indexMap.Set(item.ID(), inx)
	}
	return list
}

// Init implements List.
func (l *list[T]) Init() tea.Cmd {
	return l.render()
}

// Update implements List.
func (l *list[T]) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.MouseWheelMsg:
		if l.enableMouse {
			return l.handleMouseWheel(msg)
		}
		return l, nil
	case anim.StepMsg:
		var cmds []tea.Cmd
		for _, item := range slices.Collect(l.items.Seq()) {
			if i, ok := any(item).(HasAnim); ok && i.Spinning() {
				updated, cmd := i.Update(msg)
				cmds = append(cmds, cmd)
				if u, ok := updated.(T); ok {
					cmds = append(cmds, l.UpdateItem(u.ID(), u))
				}
			}
		}
		return l, tea.Batch(cmds...)
	case tea.KeyPressMsg:
		if l.focused {
			switch {
			case key.Matches(msg, l.keyMap.Down):
				return l, l.MoveDown(ViewportDefaultScrollSize)
			case key.Matches(msg, l.keyMap.Up):
				return l, l.MoveUp(ViewportDefaultScrollSize)
			case key.Matches(msg, l.keyMap.DownOneItem):
				return l, l.SelectItemBelow()
			case key.Matches(msg, l.keyMap.UpOneItem):
				return l, l.SelectItemAbove()
			case key.Matches(msg, l.keyMap.HalfPageDown):
				return l, l.MoveDown(l.height / 2)
			case key.Matches(msg, l.keyMap.HalfPageUp):
				return l, l.MoveUp(l.height / 2)
			case key.Matches(msg, l.keyMap.PageDown):
				return l, l.MoveDown(l.height)
			case key.Matches(msg, l.keyMap.PageUp):
				return l, l.MoveUp(l.height)
			case key.Matches(msg, l.keyMap.End):
				return l, l.GoToBottom()
			case key.Matches(msg, l.keyMap.Home):
				return l, l.GoToTop()
			}
			s := l.SelectedItem()
			if s == nil {
				return l, nil
			}
			item := *s
			var cmds []tea.Cmd
			updated, cmd := item.Update(msg)
			cmds = append(cmds, cmd)
			if u, ok := updated.(T); ok {
				cmds = append(cmds, l.UpdateItem(u.ID(), u))
			}
			return l, tea.Batch(cmds...)
		}
	}
	return l, nil
}

func (l *list[T]) handleMouseWheel(msg tea.MouseWheelMsg) (tea.Model, tea.Cmd) {
	var cmd tea.Cmd
	switch msg.Button {
	case tea.MouseWheelDown:
		cmd = l.MoveDown(ViewportDefaultScrollSize)
	case tea.MouseWheelUp:
		cmd = l.MoveUp(ViewportDefaultScrollSize)
	}
	return l, cmd
}

// selectionView renders the highlighted selection in the view and returns it
// as a string. If textOnly is true, it won't render any styles.
func (l *list[T]) selectionView(view string, textOnly bool) string {
	t := styles.CurrentTheme()
	area := uv.Rect(0, 0, l.width, l.height)
	scr := uv.NewScreenBuffer(area.Dx(), area.Dy())
	uv.NewStyledString(view).Draw(scr, area)

	selArea := uv.Rectangle{
		Min: uv.Pos(l.selectionStartCol, l.selectionStartLine),
		Max: uv.Pos(l.selectionEndCol, l.selectionEndLine),
	}
	selArea = selArea.Canon()

	specialChars := make(map[string]bool, len(styles.SelectionIgnoreIcons))
	for _, icon := range styles.SelectionIgnoreIcons {
		specialChars[icon] = true
	}

	isNonWhitespace := func(r rune) bool {
		return r != ' ' && r != '\t' && r != 0 && r != '\n' && r != '\r'
	}

	type selectionBounds struct {
		startX, endX int
		inSelection  bool
	}
	lineSelections := make([]selectionBounds, scr.Height())

	for y := range scr.Height() {
		bounds := selectionBounds{startX: -1, endX: -1, inSelection: false}

		if y >= selArea.Min.Y && y <= selArea.Max.Y {
			bounds.inSelection = true
			if selArea.Min.Y == selArea.Max.Y {
				// Single line selection
				bounds.startX = selArea.Min.X
				bounds.endX = selArea.Max.X
			} else if y == selArea.Min.Y {
				// First line of multi-line selection
				bounds.startX = selArea.Min.X
				bounds.endX = scr.Width()
			} else if y == selArea.Max.Y {
				// Last line of multi-line selection
				bounds.startX = 0
				bounds.endX = selArea.Max.X
			} else {
				// Middle lines
				bounds.startX = 0
				bounds.endX = scr.Width()
			}
		}
		lineSelections[y] = bounds
	}

	type lineBounds struct {
		start, end int
	}
	lineTextBounds := make([]lineBounds, scr.Height())

	// First pass: find text bounds for lines that have selections
	for y := range scr.Height() {
		bounds := lineBounds{start: -1, end: -1}

		// Only process lines that might have selections
		if lineSelections[y].inSelection {
			for x := range scr.Width() {
				cell := scr.CellAt(x, y)
				if cell == nil {
					continue
				}

				cellStr := cell.String()
				if len(cellStr) == 0 {
					continue
				}

				char := rune(cellStr[0])
				isSpecial := specialChars[cellStr]

				if (isNonWhitespace(char) && !isSpecial) || cell.Style.Bg != nil {
					if bounds.start == -1 {
						bounds.start = x
					}
					bounds.end = x + 1 // Position after last character
				}
			}
		}
		lineTextBounds[y] = bounds
	}

	var selectedText strings.Builder

	// Second pass: apply selection highlighting
	for y := range scr.Height() {
		selBounds := lineSelections[y]
		if !selBounds.inSelection {
			continue
		}

		textBounds := lineTextBounds[y]
		if textBounds.start < 0 {
			if textOnly {
				// We don't want to get rid of all empty lines in text-only mode
				selectedText.WriteByte('\n')
			}

			continue // No text on this line
		}

		// Only scan within the intersection of text bounds and selection bounds
		scanStart := max(textBounds.start, selBounds.startX)
		scanEnd := min(textBounds.end, selBounds.endX)

		for x := scanStart; x < scanEnd; x++ {
			cell := scr.CellAt(x, y)
			if cell == nil {
				continue
			}

			cellStr := cell.String()
			if len(cellStr) > 0 && !specialChars[cellStr] {
				if textOnly {
					// Collect selected text without styles
					selectedText.WriteString(cell.String())
					continue
				}

				// Text selection styling, which is a Lip Gloss style. We must
				// extract the values to use in a UV style, below.
				ts := t.TextSelection

				cell = cell.Clone()
				cell.Style = cell.Style.Background(ts.GetBackground()).Foreground(ts.GetForeground())
				scr.SetCell(x, y, cell)
			}
		}

		if textOnly {
			// Make sure we add a newline after each line of selected text
			selectedText.WriteByte('\n')
		}
	}

	if textOnly {
		return strings.TrimSpace(selectedText.String())
	}

	return scr.Render()
}

// View implements List.
func (l *list[T]) View() string {
	if l.height <= 0 || l.width <= 0 {
		return ""
	}
	t := styles.CurrentTheme()
	view := l.rendered
	lines := strings.Split(view, "\n")

	start, end := l.viewPosition()
	viewStart := max(0, start)
	viewEnd := min(len(lines), end+1)

	if viewStart > viewEnd {
		viewStart = viewEnd
	}
	lines = lines[viewStart:viewEnd]

	if l.resize {
		return strings.Join(lines, "\n")
	}
	view = t.S().Base.
		Height(l.height).
		Width(l.width).
		Render(strings.Join(lines, "\n"))

	if !l.hasSelection() {
		return view
	}

	return l.selectionView(view, false)
}

func (l *list[T]) viewPosition() (int, int) {
	start, end := 0, 0
	renderedLines := lipgloss.Height(l.rendered) - 1
	if l.direction == DirectionForward {
		start = max(0, l.offset)
		end = min(l.offset+l.height-1, renderedLines)
	} else {
		start = max(0, renderedLines-l.offset-l.height+1)
		end = max(0, renderedLines-l.offset)
	}
	start = min(start, end)
	return start, end
}

func (l *list[T]) recalculateItemPositions() {
	currentContentHeight := 0
	for _, item := range slices.Collect(l.items.Seq()) {
		rItem, ok := l.renderedItems.Get(item.ID())
		if !ok {
			continue
		}
		rItem.start = currentContentHeight
		rItem.end = currentContentHeight + rItem.height - 1
		l.renderedItems.Set(item.ID(), rItem)
		currentContentHeight = rItem.end + 1 + l.gap
	}
}

func (l *list[T]) render() tea.Cmd {
	if l.width <= 0 || l.height <= 0 || l.items.Len() == 0 {
		return nil
	}
	l.setDefaultSelected()

	var focusChangeCmd tea.Cmd
	if l.focused {
		focusChangeCmd = l.focusSelectedItem()
	} else {
		focusChangeCmd = l.blurSelectedItem()
	}
	// we are not rendering the first time
	if l.rendered != "" {
		// rerender everything will mostly hit cache
		l.renderMu.Lock()
		l.rendered, _ = l.renderIterator(0, false, "")
		l.renderMu.Unlock()
		if l.direction == DirectionBackward {
			l.recalculateItemPositions()
		}
		// in the end scroll to the selected item
		if l.focused {
			l.scrollToSelection()
		}
		return focusChangeCmd
	}
	l.renderMu.Lock()
	rendered, finishIndex := l.renderIterator(0, true, "")
	l.rendered = rendered
	l.renderMu.Unlock()
	// recalculate for the initial items
	if l.direction == DirectionBackward {
		l.recalculateItemPositions()
	}
	renderCmd := func() tea.Msg {
		l.offset = 0
		// render the rest

		l.renderMu.Lock()
		l.rendered, _ = l.renderIterator(finishIndex, false, l.rendered)
		l.renderMu.Unlock()
		// needed for backwards
		if l.direction == DirectionBackward {
			l.recalculateItemPositions()
		}
		// in the end scroll to the selected item
		if l.focused {
			l.scrollToSelection()
		}
		return nil
	}
	return tea.Batch(focusChangeCmd, renderCmd)
}

func (l *list[T]) setDefaultSelected() {
	if l.selectedItem == "" {
		if l.direction == DirectionForward {
			l.selectFirstItem()
		} else {
			l.selectLastItem()
		}
	}
}

func (l *list[T]) scrollToSelection() {
	rItem, ok := l.renderedItems.Get(l.selectedItem)
	if !ok {
		l.selectedItem = ""
		l.setDefaultSelected()
		return
	}

	start, end := l.viewPosition()
	// item bigger or equal to the viewport do nothing
	if rItem.start <= start && rItem.end >= end {
		return
	}
	// if we are moving by item we want to move the offset so that the
	// whole item is visible not just portions of it
	if l.movingByItem {
		if rItem.start >= start && rItem.end <= end {
			return
		}
		defer func() { l.movingByItem = false }()
	} else {
		// item already in view do nothing
		if rItem.start >= start && rItem.start <= end {
			return
		}
		if rItem.end >= start && rItem.end <= end {
			return
		}
	}

	if rItem.height >= l.height {
		if l.direction == DirectionForward {
			l.offset = rItem.start
		} else {
			l.offset = max(0, lipgloss.Height(l.rendered)-(rItem.start+l.height))
		}
		return
	}

	renderedLines := lipgloss.Height(l.rendered) - 1

	// If item is above the viewport, make it the first item
	if rItem.start < start {
		if l.direction == DirectionForward {
			l.offset = rItem.start
		} else {
			l.offset = max(0, renderedLines-rItem.start-l.height+1)
		}
	} else if rItem.end > end {
		// If item is below the viewport, make it the last item
		if l.direction == DirectionForward {
			l.offset = max(0, rItem.end-l.height+1)
		} else {
			l.offset = max(0, renderedLines-rItem.end)
		}
	}
}

func (l *list[T]) changeSelectionWhenScrolling() tea.Cmd {
	rItem, ok := l.renderedItems.Get(l.selectedItem)
	if !ok {
		return nil
	}
	start, end := l.viewPosition()
	// item bigger than the viewport do nothing
	if rItem.start <= start && rItem.end >= end {
		return nil
	}
	// item already in view do nothing
	if rItem.start >= start && rItem.end <= end {
		return nil
	}

	itemMiddle := rItem.start + rItem.height/2

	if itemMiddle < start {
		// select the first item in the viewport
		// the item is most likely an item coming after this item
		inx, ok := l.indexMap.Get(rItem.id)
		if !ok {
			return nil
		}
		for {
			inx = l.firstSelectableItemBelow(inx)
			if inx == ItemNotFound {
				return nil
			}
			item, ok := l.items.Get(inx)
			if !ok {
				continue
			}
			renderedItem, ok := l.renderedItems.Get(item.ID())
			if !ok {
				continue
			}

			// If the item is bigger than the viewport, select it
			if renderedItem.start <= start && renderedItem.end >= end {
				l.selectedItem = renderedItem.id
				return l.render()
			}
			// item is in the view
			if renderedItem.start >= start && renderedItem.start <= end {
				l.selectedItem = renderedItem.id
				return l.render()
			}
		}
	} else if itemMiddle > end {
		// select the first item in the viewport
		// the item is most likely an item coming after this item
		inx, ok := l.indexMap.Get(rItem.id)
		if !ok {
			return nil
		}
		for {
			inx = l.firstSelectableItemAbove(inx)
			if inx == ItemNotFound {
				return nil
			}
			item, ok := l.items.Get(inx)
			if !ok {
				continue
			}
			renderedItem, ok := l.renderedItems.Get(item.ID())
			if !ok {
				continue
			}

			// If the item is bigger than the viewport, select it
			if renderedItem.start <= start && renderedItem.end >= end {
				l.selectedItem = renderedItem.id
				return l.render()
			}
			// item is in the view
			if renderedItem.end >= start && renderedItem.end <= end {
				l.selectedItem = renderedItem.id
				return l.render()
			}
		}
	}
	return nil
}

func (l *list[T]) selectFirstItem() {
	inx := l.firstSelectableItemBelow(-1)
	if inx != ItemNotFound {
		item, ok := l.items.Get(inx)
		if ok {
			l.selectedItem = item.ID()
		}
	}
}

func (l *list[T]) selectLastItem() {
	inx := l.firstSelectableItemAbove(l.items.Len())
	if inx != ItemNotFound {
		item, ok := l.items.Get(inx)
		if ok {
			l.selectedItem = item.ID()
		}
	}
}

func (l *list[T]) firstSelectableItemAbove(inx int) int {
	for i := inx - 1; i >= 0; i-- {
		item, ok := l.items.Get(i)
		if !ok {
			continue
		}
		if _, ok := any(item).(layout.Focusable); ok {
			return i
		}
	}
	if inx == 0 && l.wrap {
		return l.firstSelectableItemAbove(l.items.Len())
	}
	return ItemNotFound
}

func (l *list[T]) firstSelectableItemBelow(inx int) int {
	itemsLen := l.items.Len()
	for i := inx + 1; i < itemsLen; i++ {
		item, ok := l.items.Get(i)
		if !ok {
			continue
		}
		if _, ok := any(item).(layout.Focusable); ok {
			return i
		}
	}
	if inx == itemsLen-1 && l.wrap {
		return l.firstSelectableItemBelow(-1)
	}
	return ItemNotFound
}

func (l *list[T]) focusSelectedItem() tea.Cmd {
	if l.selectedItem == "" || !l.focused {
		return nil
	}
	var cmds []tea.Cmd
	for _, item := range slices.Collect(l.items.Seq()) {
		if f, ok := any(item).(layout.Focusable); ok {
			if item.ID() == l.selectedItem && !f.IsFocused() {
				cmds = append(cmds, f.Focus())
				l.renderedItems.Del(item.ID())
			} else if item.ID() != l.selectedItem && f.IsFocused() {
				cmds = append(cmds, f.Blur())
				l.renderedItems.Del(item.ID())
			}
		}
	}
	return tea.Batch(cmds...)
}

func (l *list[T]) blurSelectedItem() tea.Cmd {
	if l.selectedItem == "" || l.focused {
		return nil
	}
	var cmds []tea.Cmd
	for _, item := range slices.Collect(l.items.Seq()) {
		if f, ok := any(item).(layout.Focusable); ok {
			if item.ID() == l.selectedItem && f.IsFocused() {
				cmds = append(cmds, f.Blur())
				l.renderedItems.Del(item.ID())
			}
		}
	}
	return tea.Batch(cmds...)
}

// renderFragment holds updated rendered view fragments
type renderFragment struct {
	view string
	gap  int
}

// renderIterator renders items starting from the specific index and limits height if limitHeight != -1
// returns the last index and the rendered content so far
// we pass the rendered content around and don't use l.rendered to prevent jumping of the content
func (l *list[T]) renderIterator(startInx int, limitHeight bool, rendered string) (string, int) {
	var fragments []renderFragment

	currentContentHeight := lipgloss.Height(rendered) - 1
	itemsLen := l.items.Len()
	finalIndex := itemsLen

	// first pass: accumulate all fragments to render until the height limit is
	// reached
	for i := startInx; i < itemsLen; i++ {
		if limitHeight && currentContentHeight >= l.height {
			finalIndex = i
			break
		}
		// cool way to go through the list in both directions
		inx := i

		if l.direction != DirectionForward {
			inx = (itemsLen - 1) - i
		}

		item, ok := l.items.Get(inx)
		if !ok {
			continue
		}

		var rItem renderedItem
		if cache, ok := l.renderedItems.Get(item.ID()); ok {
			rItem = cache
		} else {
			rItem = l.renderItem(item)
			rItem.start = currentContentHeight
			rItem.end = currentContentHeight + rItem.height - 1
			l.renderedItems.Set(item.ID(), rItem)
		}

		gap := l.gap + 1
		if inx == itemsLen-1 {
			gap = 0
		}

		fragments = append(fragments, renderFragment{view: rItem.view, gap: gap})

		currentContentHeight = rItem.end + 1 + l.gap
	}

	// second pass: build rendered string efficiently
	var b strings.Builder
	if l.direction == DirectionForward {
		b.WriteString(rendered)
		for _, f := range fragments {
			b.WriteString(f.view)
			for range f.gap {
				b.WriteByte('\n')
			}
		}

		return b.String(), finalIndex
	}

	// iterate backwards as fragments are in reversed order
	for i := len(fragments) - 1; i >= 0; i-- {
		f := fragments[i]
		b.WriteString(f.view)
		for range f.gap {
			b.WriteByte('\n')
		}
	}
	b.WriteString(rendered)

	return b.String(), finalIndex
}

func (l *list[T]) renderItem(item Item) renderedItem {
	view := item.View()
	return renderedItem{
		id:     item.ID(),
		view:   view,
		height: lipgloss.Height(view),
	}
}

// AppendItem implements List.
func (l *list[T]) AppendItem(item T) tea.Cmd {
	var cmds []tea.Cmd
	cmd := item.Init()
	if cmd != nil {
		cmds = append(cmds, cmd)
	}

	l.items.Append(item)
	l.indexMap = csync.NewMap[string, int]()
	for inx, item := range slices.Collect(l.items.Seq()) {
		l.indexMap.Set(item.ID(), inx)
	}
	if l.width > 0 && l.height > 0 {
		cmd = item.SetSize(l.width, l.height)
		if cmd != nil {
			cmds = append(cmds, cmd)
		}
	}
	cmd = l.render()
	if cmd != nil {
		cmds = append(cmds, cmd)
	}
	if l.direction == DirectionBackward {
		if l.offset == 0 {
			cmd = l.GoToBottom()
			if cmd != nil {
				cmds = append(cmds, cmd)
			}
		} else {
			newItem, ok := l.renderedItems.Get(item.ID())
			if ok {
				newLines := newItem.height
				if l.items.Len() > 1 {
					newLines += l.gap
				}
				l.offset = min(lipgloss.Height(l.rendered)-1, l.offset+newLines)
			}
		}
	}
	return tea.Sequence(cmds...)
}

// Blur implements List.
func (l *list[T]) Blur() tea.Cmd {
	l.focused = false
	return l.render()
}

// DeleteItem implements List.
func (l *list[T]) DeleteItem(id string) tea.Cmd {
	inx, ok := l.indexMap.Get(id)
	if !ok {
		return nil
	}
	l.items.Delete(inx)
	l.renderedItems.Del(id)
	for inx, item := range slices.Collect(l.items.Seq()) {
		l.indexMap.Set(item.ID(), inx)
	}

	if l.selectedItem == id {
		if inx > 0 {
			item, ok := l.items.Get(inx - 1)
			if ok {
				l.selectedItem = item.ID()
			} else {
				l.selectedItem = ""
			}
		} else {
			l.selectedItem = ""
		}
	}
	cmd := l.render()
	if l.rendered != "" {
		renderedHeight := lipgloss.Height(l.rendered)
		if renderedHeight <= l.height {
			l.offset = 0
		} else {
			maxOffset := renderedHeight - l.height
			if l.offset > maxOffset {
				l.offset = maxOffset
			}
		}
	}
	return cmd
}

// Focus implements List.
func (l *list[T]) Focus() tea.Cmd {
	l.focused = true
	return l.render()
}

// GetSize implements List.
func (l *list[T]) GetSize() (int, int) {
	return l.width, l.height
}

// GoToBottom implements List.
func (l *list[T]) GoToBottom() tea.Cmd {
	l.offset = 0
	l.selectedItem = ""
	l.direction = DirectionBackward
	return l.render()
}

// GoToTop implements List.
func (l *list[T]) GoToTop() tea.Cmd {
	l.offset = 0
	l.selectedItem = ""
	l.direction = DirectionForward
	return l.render()
}

// IsFocused implements List.
func (l *list[T]) IsFocused() bool {
	return l.focused
}

// Items implements List.
func (l *list[T]) Items() []T {
	return slices.Collect(l.items.Seq())
}

func (l *list[T]) incrementOffset(n int) {
	renderedHeight := lipgloss.Height(l.rendered)
	// no need for offset
	if renderedHeight <= l.height {
		return
	}
	maxOffset := renderedHeight - l.height
	n = min(n, maxOffset-l.offset)
	if n <= 0 {
		return
	}
	l.offset += n
}

func (l *list[T]) decrementOffset(n int) {
	n = min(n, l.offset)
	if n <= 0 {
		return
	}
	l.offset -= n
	if l.offset < 0 {
		l.offset = 0
	}
}

// MoveDown implements List.
func (l *list[T]) MoveDown(n int) tea.Cmd {
	oldOffset := l.offset
	if l.direction == DirectionForward {
		l.incrementOffset(n)
	} else {
		l.decrementOffset(n)
	}

	if oldOffset == l.offset {
		// no change in offset, so no need to change selection
		return nil
	}
	// if we are not actively selecting move the whole selection down
	if l.hasSelection() && !l.selectionActive {
		if l.selectionStartLine < l.selectionEndLine {
			l.selectionStartLine -= n
			l.selectionEndLine -= n
		} else {
			l.selectionStartLine -= n
			l.selectionEndLine -= n
		}
	}
	if l.selectionActive {
		if l.selectionStartLine < l.selectionEndLine {
			l.selectionStartLine -= n
		} else {
			l.selectionEndLine -= n
		}
	}
	return l.changeSelectionWhenScrolling()
}

// MoveUp implements List.
func (l *list[T]) MoveUp(n int) tea.Cmd {
	oldOffset := l.offset
	if l.direction == DirectionForward {
		l.decrementOffset(n)
	} else {
		l.incrementOffset(n)
	}

	if oldOffset == l.offset {
		// no change in offset, so no need to change selection
		return nil
	}

	if l.hasSelection() && !l.selectionActive {
		if l.selectionStartLine > l.selectionEndLine {
			l.selectionStartLine += n
			l.selectionEndLine += n
		} else {
			l.selectionStartLine += n
			l.selectionEndLine += n
		}
	}
	if l.selectionActive {
		if l.selectionStartLine > l.selectionEndLine {
			l.selectionStartLine += n
		} else {
			l.selectionEndLine += n
		}
	}
	return l.changeSelectionWhenScrolling()
}

// PrependItem implements List.
func (l *list[T]) PrependItem(item T) tea.Cmd {
	cmds := []tea.Cmd{
		item.Init(),
	}
	l.items.Prepend(item)
	l.indexMap = csync.NewMap[string, int]()
	for inx, item := range slices.Collect(l.items.Seq()) {
		l.indexMap.Set(item.ID(), inx)
	}
	if l.width > 0 && l.height > 0 {
		cmds = append(cmds, item.SetSize(l.width, l.height))
	}
	cmds = append(cmds, l.render())
	if l.direction == DirectionForward {
		if l.offset == 0 {
			cmd := l.GoToTop()
			if cmd != nil {
				cmds = append(cmds, cmd)
			}
		} else {
			newItem, ok := l.renderedItems.Get(item.ID())
			if ok {
				newLines := newItem.height
				if l.items.Len() > 1 {
					newLines += l.gap
				}
				l.offset = min(lipgloss.Height(l.rendered)-1, l.offset+newLines)
			}
		}
	}
	return tea.Batch(cmds...)
}

// SelectItemAbove implements List.
func (l *list[T]) SelectItemAbove() tea.Cmd {
	inx, ok := l.indexMap.Get(l.selectedItem)
	if !ok {
		return nil
	}

	newIndex := l.firstSelectableItemAbove(inx)
	if newIndex == ItemNotFound {
		// no item above
		return nil
	}
	var cmds []tea.Cmd
	if newIndex == 1 {
		peakAboveIndex := l.firstSelectableItemAbove(newIndex)
		if peakAboveIndex == ItemNotFound {
			// this means there is a section above move to the top
			cmd := l.GoToTop()
			if cmd != nil {
				cmds = append(cmds, cmd)
			}
		}
	}
	item, ok := l.items.Get(newIndex)
	if !ok {
		return nil
	}
	l.selectedItem = item.ID()
	l.movingByItem = true
	renderCmd := l.render()
	if renderCmd != nil {
		cmds = append(cmds, renderCmd)
	}
	return tea.Sequence(cmds...)
}

// SelectItemBelow implements List.
func (l *list[T]) SelectItemBelow() tea.Cmd {
	inx, ok := l.indexMap.Get(l.selectedItem)
	if !ok {
		return nil
	}

	newIndex := l.firstSelectableItemBelow(inx)
	if newIndex == ItemNotFound {
		// no item above
		return nil
	}
	item, ok := l.items.Get(newIndex)
	if !ok {
		return nil
	}
	l.selectedItem = item.ID()
	l.movingByItem = true
	return l.render()
}

// SelectedItem implements List.
func (l *list[T]) SelectedItem() *T {
	inx, ok := l.indexMap.Get(l.selectedItem)
	if !ok {
		return nil
	}
	if inx > l.items.Len()-1 {
		return nil
	}
	item, ok := l.items.Get(inx)
	if !ok {
		return nil
	}
	return &item
}

// SetItems implements List.
func (l *list[T]) SetItems(items []T) tea.Cmd {
	l.items.SetSlice(items)
	var cmds []tea.Cmd
	for inx, item := range slices.Collect(l.items.Seq()) {
		if i, ok := any(item).(Indexable); ok {
			i.SetIndex(inx)
		}
		cmds = append(cmds, item.Init())
	}
	cmds = append(cmds, l.reset(""))
	return tea.Batch(cmds...)
}

// SetSelected implements List.
func (l *list[T]) SetSelected(id string) tea.Cmd {
	l.selectedItem = id
	return l.render()
}

func (l *list[T]) reset(selectedItem string) tea.Cmd {
	var cmds []tea.Cmd
	l.rendered = ""
	l.offset = 0
	l.selectedItem = selectedItem
	l.indexMap = csync.NewMap[string, int]()
	l.renderedItems = csync.NewMap[string, renderedItem]()
	for inx, item := range slices.Collect(l.items.Seq()) {
		l.indexMap.Set(item.ID(), inx)
		if l.width > 0 && l.height > 0 {
			cmds = append(cmds, item.SetSize(l.width, l.height))
		}
	}
	cmds = append(cmds, l.render())
	return tea.Batch(cmds...)
}

// SetSize implements List.
func (l *list[T]) SetSize(width int, height int) tea.Cmd {
	oldWidth := l.width
	l.width = width
	l.height = height
	if oldWidth != width {
		cmd := l.reset(l.selectedItem)
		return cmd
	}
	return nil
}

// UpdateItem implements List.
func (l *list[T]) UpdateItem(id string, item T) tea.Cmd {
	var cmds []tea.Cmd
	if inx, ok := l.indexMap.Get(id); ok {
		l.items.Set(inx, item)
		oldItem, hasOldItem := l.renderedItems.Get(id)
		oldPosition := l.offset
		if l.direction == DirectionBackward {
			oldPosition = (lipgloss.Height(l.rendered) - 1) - l.offset
		}

		l.renderedItems.Del(id)
		cmd := l.render()

		// need to check for nil because of sequence not handling nil
		if cmd != nil {
			cmds = append(cmds, cmd)
		}
		if hasOldItem && l.direction == DirectionBackward {
			// if we are the last item and there is no offset
			// make sure to go to the bottom
			if oldPosition < oldItem.end {
				newItem, ok := l.renderedItems.Get(item.ID())
				if ok {
					newLines := newItem.height - oldItem.height
					l.offset = util.Clamp(l.offset+newLines, 0, lipgloss.Height(l.rendered)-1)
				}
			}
		} else if hasOldItem && l.offset > oldItem.start {
			newItem, ok := l.renderedItems.Get(item.ID())
			if ok {
				newLines := newItem.height - oldItem.height
				l.offset = util.Clamp(l.offset+newLines, 0, lipgloss.Height(l.rendered)-1)
			}
		}
	}
	return tea.Sequence(cmds...)
}

func (l *list[T]) hasSelection() bool {
	return l.selectionEndCol != l.selectionStartCol || l.selectionEndLine != l.selectionStartLine
}

// StartSelection implements List.
func (l *list[T]) StartSelection(col, line int) {
	l.selectionStartCol = col
	l.selectionStartLine = line
	l.selectionEndCol = col
	l.selectionEndLine = line
	l.selectionActive = true
}

// EndSelection implements List.
func (l *list[T]) EndSelection(col, line int) {
	if !l.selectionActive {
		return
	}
	l.selectionEndCol = col
	l.selectionEndLine = line
}

func (l *list[T]) SelectionStop() {
	l.selectionActive = false
}

func (l *list[T]) SelectionClear() {
	l.selectionStartCol = -1
	l.selectionStartLine = -1
	l.selectionEndCol = -1
	l.selectionEndLine = -1
	l.selectionActive = false
}

func (l *list[T]) findWordBoundaries(col, line int) (startCol, endCol int) {
	lines := strings.Split(l.rendered, "\n")
	for i, l := range lines {
		lines[i] = ansi.Strip(l)
	}

	if l.direction == DirectionBackward && len(lines) > l.height {
		line = ((len(lines) - 1) - l.height) + line + 1
	}

	if l.offset > 0 {
		if l.direction == DirectionBackward {
			line -= l.offset
		} else {
			line += l.offset
		}
	}

	if line < 0 || line >= len(lines) {
		return 0, 0
	}

	currentLine := lines[line]
	gr := uniseg.NewGraphemes(currentLine)
	startCol = -1
	upTo := col
	for gr.Next() {
		if gr.IsWordBoundary() && upTo > 0 {
			startCol = col - upTo + 1
		} else if gr.IsWordBoundary() && upTo < 0 {
			endCol = col - upTo + 1
			break
		}
		if upTo == 0 && gr.Str() == " " {
			return 0, 0
		}
		upTo -= 1
	}
	if startCol == -1 {
		return 0, 0
	}
	return
}

func (l *list[T]) findParagraphBoundaries(line int) (startLine, endLine int, found bool) {
	lines := strings.Split(l.rendered, "\n")
	for i, l := range lines {
		lines[i] = ansi.Strip(l)
		for _, icon := range styles.SelectionIgnoreIcons {
			lines[i] = strings.ReplaceAll(lines[i], icon, " ")
		}
	}
	if l.direction == DirectionBackward && len(lines) > l.height {
		line = (len(lines) - 1) - l.height + line + 1
	}

	if l.offset > 0 {
		if l.direction == DirectionBackward {
			line -= l.offset
		} else {
			line += l.offset
		}
	}

	// Ensure line is within bounds
	if line < 0 || line >= len(lines) {
		return 0, 0, false
	}

	if strings.TrimSpace(lines[line]) == "" {
		return 0, 0, false
	}

	// Find start of paragraph (search backwards for empty line or start of text)
	startLine = line
	for startLine > 0 && strings.TrimSpace(lines[startLine-1]) != "" {
		startLine--
	}

	// Find end of paragraph (search forwards for empty line or end of text)
	endLine = line
	for endLine < len(lines)-1 && strings.TrimSpace(lines[endLine+1]) != "" {
		endLine++
	}

	// revert the line numbers if we are in backward direction
	if l.direction == DirectionBackward && len(lines) > l.height {
		startLine = startLine - (len(lines) - 1) + l.height - 1
		endLine = endLine - (len(lines) - 1) + l.height - 1
	}
	if l.offset > 0 {
		if l.direction == DirectionBackward {
			startLine += l.offset
			endLine += l.offset
		} else {
			startLine -= l.offset
			endLine -= l.offset
		}
	}
	return startLine, endLine, true
}

// SelectWord selects the word at the given position.
func (l *list[T]) SelectWord(col, line int) {
	startCol, endCol := l.findWordBoundaries(col, line)
	l.selectionStartCol = startCol
	l.selectionStartLine = line
	l.selectionEndCol = endCol
	l.selectionEndLine = line
	l.selectionActive = false // Not actively selecting, just selected
}

// SelectParagraph selects the paragraph at the given position.
func (l *list[T]) SelectParagraph(col, line int) {
	startLine, endLine, found := l.findParagraphBoundaries(line)
	if !found {
		return
	}
	l.selectionStartCol = 0
	l.selectionStartLine = startLine
	l.selectionEndCol = l.width - 1
	l.selectionEndLine = endLine
	l.selectionActive = false // Not actively selecting, just selected
}

// HasSelection returns whether there is an active selection.
func (l *list[T]) HasSelection() bool {
	return l.hasSelection()
}

// GetSelectedText returns the currently selected text.
func (l *list[T]) GetSelectedText(paddingLeft int) string {
	if !l.hasSelection() {
		return ""
	}

	return l.selectionView(l.View(), true)
}



================================================
FILE: internal/tui/exp/list/list_test.go
================================================
package list

import (
	"fmt"
	"strings"
	"testing"

	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/exp/golden"
	"github.com/google/uuid"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestList(t *testing.T) {
	t.Parallel()
	t.Run("should have correct positions in list that fits the items", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 5 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 20)).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[0].ID(), l.selectedItem)
		assert.Equal(t, 0, l.offset)
		require.Equal(t, 5, l.indexMap.Len())
		require.Equal(t, 5, l.items.Len())
		require.Equal(t, 5, l.renderedItems.Len())
		assert.Equal(t, 5, lipgloss.Height(l.rendered))
		assert.NotEqual(t, "\n", string(l.rendered[len(l.rendered)-1]), "should not end in newline")
		start, end := l.viewPosition()
		assert.Equal(t, 0, start)
		assert.Equal(t, 4, end)
		for i := range 5 {
			item, ok := l.renderedItems.Get(items[i].ID())
			require.True(t, ok)
			assert.Equal(t, i, item.start)
			assert.Equal(t, i, item.end)
		}

		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should have correct positions in list that fits the items backwards", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 5 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 20)).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[4].ID(), l.selectedItem)
		assert.Equal(t, 0, l.offset)
		require.Equal(t, 5, l.indexMap.Len())
		require.Equal(t, 5, l.items.Len())
		require.Equal(t, 5, l.renderedItems.Len())
		assert.Equal(t, 5, lipgloss.Height(l.rendered))
		assert.NotEqual(t, "\n", string(l.rendered[len(l.rendered)-1]), "should not end in newline")
		start, end := l.viewPosition()
		assert.Equal(t, 0, start)
		assert.Equal(t, 4, end)
		for i := range 5 {
			item, ok := l.renderedItems.Get(items[i].ID())
			require.True(t, ok)
			assert.Equal(t, i, item.start)
			assert.Equal(t, i, item.end)
		}

		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should have correct positions in list that does not fits the items", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[0].ID(), l.selectedItem)
		assert.Equal(t, 0, l.offset)
		require.Equal(t, 30, l.indexMap.Len())
		require.Equal(t, 30, l.items.Len())
		require.Equal(t, 30, l.renderedItems.Len())
		assert.Equal(t, 30, lipgloss.Height(l.rendered))
		assert.NotEqual(t, "\n", string(l.rendered[len(l.rendered)-1]), "should not end in newline")
		start, end := l.viewPosition()
		assert.Equal(t, 0, start)
		assert.Equal(t, 9, end)
		for i := range 30 {
			item, ok := l.renderedItems.Get(items[i].ID())
			require.True(t, ok)
			assert.Equal(t, i, item.start)
			assert.Equal(t, i, item.end)
		}

		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should have correct positions in list that does not fits the items backwards", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[29].ID(), l.selectedItem)
		assert.Equal(t, 0, l.offset)
		require.Equal(t, 30, l.indexMap.Len())
		require.Equal(t, 30, l.items.Len())
		require.Equal(t, 30, l.renderedItems.Len())
		assert.Equal(t, 30, lipgloss.Height(l.rendered))
		assert.NotEqual(t, "\n", string(l.rendered[len(l.rendered)-1]), "should not end in newline")
		start, end := l.viewPosition()
		assert.Equal(t, 20, start)
		assert.Equal(t, 29, end)
		for i := range 30 {
			item, ok := l.renderedItems.Get(items[i].ID())
			require.True(t, ok)
			assert.Equal(t, i, item.start)
			assert.Equal(t, i, item.end)
		}

		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should have correct positions in list that does not fits the items and has multi line items", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[0].ID(), l.selectedItem)
		assert.Equal(t, 0, l.offset)
		require.Equal(t, 30, l.indexMap.Len())
		require.Equal(t, 30, l.items.Len())
		require.Equal(t, 30, l.renderedItems.Len())
		expectedLines := 0
		for i := range 30 {
			expectedLines += (i + 1) * 1
		}
		assert.Equal(t, expectedLines, lipgloss.Height(l.rendered))
		assert.NotEqual(t, "\n", string(l.rendered[len(l.rendered)-1]), "should not end in newline")
		start, end := l.viewPosition()
		assert.Equal(t, 0, start)
		assert.Equal(t, 9, end)
		currentPosition := 0
		for i := range 30 {
			rItem, ok := l.renderedItems.Get(items[i].ID())
			require.True(t, ok)
			assert.Equal(t, currentPosition, rItem.start)
			assert.Equal(t, currentPosition+i, rItem.end)
			currentPosition += i + 1
		}

		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should have correct positions in list that does not fits the items and has multi line items backwards", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[29].ID(), l.selectedItem)
		assert.Equal(t, 0, l.offset)
		require.Equal(t, 30, l.indexMap.Len())
		require.Equal(t, 30, l.items.Len())
		require.Equal(t, 30, l.renderedItems.Len())
		expectedLines := 0
		for i := range 30 {
			expectedLines += (i + 1) * 1
		}
		assert.Equal(t, expectedLines, lipgloss.Height(l.rendered))
		assert.NotEqual(t, "\n", string(l.rendered[len(l.rendered)-1]), "should not end in newline")
		start, end := l.viewPosition()
		assert.Equal(t, expectedLines-10, start)
		assert.Equal(t, expectedLines-1, end)
		currentPosition := 0
		for i := range 30 {
			rItem, ok := l.renderedItems.Get(items[i].ID())
			require.True(t, ok)
			assert.Equal(t, currentPosition, rItem.start)
			assert.Equal(t, currentPosition+i, rItem.end)
			currentPosition += i + 1
		}

		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should go to selected item at the beginning", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10), WithSelectedItem(items[10].ID())).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[10].ID(), l.selectedItem)

		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should go to selected item at the beginning backwards", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10), WithSelectedItem(items[10].ID())).(*list[Item])
		execCmd(l, l.Init())

		// should select the last item
		assert.Equal(t, items[10].ID(), l.selectedItem)

		golden.RequireEqual(t, []byte(l.View()))
	})
}

func TestListMovement(t *testing.T) {
	t.Parallel()
	t.Run("should move viewport up", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveUp(25))

		assert.Equal(t, 25, l.offset)
		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should move viewport up and down", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveUp(25))
		execCmd(l, l.MoveDown(25))

		assert.Equal(t, 0, l.offset)
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should move viewport down", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveDown(25))

		assert.Equal(t, 25, l.offset)
		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should move viewport down and up", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveDown(25))
		execCmd(l, l.MoveUp(25))

		assert.Equal(t, 0, l.offset)
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should not change offset when new items are appended and we are at the bottom in backwards list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())
		execCmd(l, l.AppendItem(NewSelectableItem("Testing")))

		assert.Equal(t, 0, l.offset)
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should stay at the position it is when new items are added but we moved up in backwards list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveUp(2))
		viewBefore := l.View()
		execCmd(l, l.AppendItem(NewSelectableItem("Testing\nHello\n")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 5, l.offset)
		assert.Equal(t, 33, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should stay at the position it is when the hight of an item below is increased in backwards list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveUp(2))
		viewBefore := l.View()
		item := items[29]
		execCmd(l, l.UpdateItem(item.ID(), NewSelectableItem("Item 29\nLine 2\nLine 3")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 4, l.offset)
		assert.Equal(t, 32, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should stay at the position it is when the hight of an item below is decreases in backwards list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		items = append(items, NewSelectableItem("Item 30\nLine 2\nLine 3"))
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveUp(2))
		viewBefore := l.View()
		item := items[30]
		execCmd(l, l.UpdateItem(item.ID(), NewSelectableItem("Item 30")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 0, l.offset)
		assert.Equal(t, 31, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should stay at the position it is when the hight of an item above is increased in backwards list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveUp(2))
		viewBefore := l.View()
		item := items[1]
		execCmd(l, l.UpdateItem(item.ID(), NewSelectableItem("Item 1\nLine 2\nLine 3")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 2, l.offset)
		assert.Equal(t, 32, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should stay at the position it is if an item is prepended and we are in backwards list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionBackward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveUp(2))
		viewBefore := l.View()
		execCmd(l, l.PrependItem(NewSelectableItem("New")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 2, l.offset)
		assert.Equal(t, 31, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should not change offset when new items are prepended and we are at the top in forward list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			content := strings.Repeat(fmt.Sprintf("Item %d\n", i), i+1)
			content = strings.TrimSuffix(content, "\n")
			item := NewSelectableItem(content)
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())
		execCmd(l, l.PrependItem(NewSelectableItem("Testing")))

		assert.Equal(t, 0, l.offset)
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should stay at the position it is when new items are added but we moved down in forward list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveDown(2))
		viewBefore := l.View()
		execCmd(l, l.PrependItem(NewSelectableItem("Testing\nHello\n")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 5, l.offset)
		assert.Equal(t, 33, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should stay at the position it is when the hight of an item above is increased in forward list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveDown(2))
		viewBefore := l.View()
		item := items[0]
		execCmd(l, l.UpdateItem(item.ID(), NewSelectableItem("Item 29\nLine 2\nLine 3")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 4, l.offset)
		assert.Equal(t, 32, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should stay at the position it is when the hight of an item above is decreases in forward list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		items = append(items, NewSelectableItem("At top\nLine 2\nLine 3"))
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveDown(3))
		viewBefore := l.View()
		item := items[0]
		execCmd(l, l.UpdateItem(item.ID(), NewSelectableItem("At top")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 1, l.offset)
		assert.Equal(t, 31, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})

	t.Run("should stay at the position it is when the hight of an item below is increased in forward list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveDown(2))
		viewBefore := l.View()
		item := items[29]
		execCmd(l, l.UpdateItem(item.ID(), NewSelectableItem("Item 29\nLine 2\nLine 3")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 2, l.offset)
		assert.Equal(t, 32, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})
	t.Run("should stay at the position it is if an item is appended and we are in forward list", func(t *testing.T) {
		t.Parallel()
		items := []Item{}
		for i := range 30 {
			item := NewSelectableItem(fmt.Sprintf("Item %d", i))
			items = append(items, item)
		}
		l := New(items, WithDirectionForward(), WithSize(10, 10)).(*list[Item])
		execCmd(l, l.Init())

		execCmd(l, l.MoveDown(2))
		viewBefore := l.View()
		execCmd(l, l.AppendItem(NewSelectableItem("New")))
		viewAfter := l.View()
		assert.Equal(t, viewBefore, viewAfter)
		assert.Equal(t, 2, l.offset)
		assert.Equal(t, 31, lipgloss.Height(l.rendered))
		golden.RequireEqual(t, []byte(l.View()))
	})
}

type SelectableItem interface {
	Item
	layout.Focusable
}

type simpleItem struct {
	width   int
	content string
	id      string
}
type selectableItem struct {
	*simpleItem
	focused bool
}

func NewSimpleItem(content string) *simpleItem {
	return &simpleItem{
		id:      uuid.NewString(),
		width:   0,
		content: content,
	}
}

func NewSelectableItem(content string) SelectableItem {
	return &selectableItem{
		simpleItem: NewSimpleItem(content),
		focused:    false,
	}
}

func (s *simpleItem) ID() string {
	return s.id
}

func (s *simpleItem) Init() tea.Cmd {
	return nil
}

func (s *simpleItem) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	return s, nil
}

func (s *simpleItem) View() string {
	return lipgloss.NewStyle().Width(s.width).Render(s.content)
}

func (l *simpleItem) GetSize() (int, int) {
	return l.width, 0
}

// SetSize implements Item.
func (s *simpleItem) SetSize(width int, height int) tea.Cmd {
	s.width = width
	return nil
}

func (s *selectableItem) View() string {
	if s.focused {
		return lipgloss.NewStyle().BorderLeft(true).BorderStyle(lipgloss.NormalBorder()).Width(s.width).Render(s.content)
	}
	return lipgloss.NewStyle().Width(s.width).Render(s.content)
}

// Blur implements SimpleItem.
func (s *selectableItem) Blur() tea.Cmd {
	s.focused = false
	return nil
}

// Focus implements SimpleItem.
func (s *selectableItem) Focus() tea.Cmd {
	s.focused = true
	return nil
}

// IsFocused implements SimpleItem.
func (s *selectableItem) IsFocused() bool {
	return s.focused
}

func execCmd(m tea.Model, cmd tea.Cmd) {
	for cmd != nil {
		msg := cmd()
		m, cmd = m.Update(msg)
	}
}



================================================
FILE: internal/tui/exp/list/testdata/TestFilterableList/should_create_simple_filterable_list.golden
================================================
[38;2;223;219;221m[38;2;104;255;214m> [m[38;2;96;95;107mT[m[38;2;96;95;107mype to filter[m[38;2;96;95;107m                                                                                       [m[m
[38;2;223;219;221m│Item 0                                                                                             [m   
[38;2;223;219;221mItem 1                                                                                              [m   
[38;2;223;219;221mItem 2                                                                                              [m   
[38;2;223;219;221mItem 3                                                                                              [m   
[38;2;223;219;221mItem 4                                                                                              [m   
                                                                                                       
                                                                                                       
                                                                                                       
                                                                                                       


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_go_to_selected_item_at_the_beginning.golden
================================================
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_go_to_selected_item_at_the_beginning_backwards.golden
================================================
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  
[38;2;223;219;221m│Item 10[m  


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_have_correct_positions_in_list_that_does_not_fits_the_items.golden
================================================
[38;2;223;219;221m│Item 0[m   
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 4[m    
[38;2;223;219;221mItem 5[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 7[m    
[38;2;223;219;221mItem 8[m    
[38;2;223;219;221mItem 9[m    


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_have_correct_positions_in_list_that_does_not_fits_the_items_and_has_multi_line_items.golden
================================================
[38;2;223;219;221m│Item 0[m   
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 3[m    


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_have_correct_positions_in_list_that_does_not_fits_the_items_and_has_multi_line_items_backwards.golden
================================================
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_have_correct_positions_in_list_that_does_not_fits_the_items_backwards.golden
================================================
[38;2;223;219;221mItem 20[m   
[38;2;223;219;221mItem 21[m   
[38;2;223;219;221mItem 22[m   
[38;2;223;219;221mItem 23[m   
[38;2;223;219;221mItem 24[m   
[38;2;223;219;221mItem 25[m   
[38;2;223;219;221mItem 26[m   
[38;2;223;219;221mItem 27[m   
[38;2;223;219;221mItem 28[m   
[38;2;223;219;221m│Item 29[m  


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_have_correct_positions_in_list_that_fits_the_items.golden
================================================
[38;2;223;219;221m│Item 0[m   
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 4[m    
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          


================================================
FILE: internal/tui/exp/list/testdata/TestList/should_have_correct_positions_in_list_that_fits_the_items_backwards.golden
================================================
[38;2;223;219;221mItem 0[m    
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221m│Item 4[m   
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_move_viewport_down.golden
================================================
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221m│Item 7[m   
[38;2;223;219;221m│Item 7[m   
[38;2;223;219;221m│Item 7[m   
[38;2;223;219;221m│Item 7[m   
[38;2;223;219;221m│Item 7[m   
[38;2;223;219;221m│Item 7[m   
[38;2;223;219;221m│Item 7[m   


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_move_viewport_down_and_up.golden
================================================
[38;2;223;219;221mItem 0[m    
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221m│Item 3[m   
[38;2;223;219;221m│Item 3[m   
[38;2;223;219;221m│Item 3[m   
[38;2;223;219;221m│Item 3[m   


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_move_viewport_up.golden
================================================
[38;2;223;219;221m│Item 28[m  
[38;2;223;219;221m│Item 28[m  
[38;2;223;219;221m│Item 28[m  
[38;2;223;219;221m│Item 28[m  
[38;2;223;219;221m│Item 28[m  
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_move_viewport_up_and_down.golden
================================================
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221m│Item 29[m  


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_not_change_offset_when_new_items_are_appended_and_we_are_at_the_bottom_in_backwards_list.golden
================================================
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221mItem 29[m   
[38;2;223;219;221m│Testing  [m


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_not_change_offset_when_new_items_are_prepended_and_we_are_at_the_top_in_forward_list.golden
================================================
[38;2;223;219;221m│Testing  [m
[38;2;223;219;221mItem 0[m    
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 3[m    


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_if_an_item_is_appended_and_we_are_in_forward_list.golden
================================================
[38;2;223;219;221m│Item 2[m   
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 4[m    
[38;2;223;219;221mItem 5[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 7[m    
[38;2;223;219;221mItem 8[m    
[38;2;223;219;221mItem 9[m    
[38;2;223;219;221mItem 10[m   
[38;2;223;219;221mItem 11[m   


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_if_an_item_is_prepended_and_we_are_in_backwards_list.golden
================================================
[38;2;223;219;221mItem 18[m   
[38;2;223;219;221mItem 19[m   
[38;2;223;219;221mItem 20[m   
[38;2;223;219;221mItem 21[m   
[38;2;223;219;221mItem 22[m   
[38;2;223;219;221mItem 23[m   
[38;2;223;219;221mItem 24[m   
[38;2;223;219;221mItem 25[m   
[38;2;223;219;221mItem 26[m   
[38;2;223;219;221m│Item 27[m  


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_new_items_are_added_but_we_moved_down_in_forward_list.golden
================================================
[38;2;223;219;221m│Item 2[m   
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 4[m    
[38;2;223;219;221mItem 5[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 7[m    
[38;2;223;219;221mItem 8[m    
[38;2;223;219;221mItem 9[m    
[38;2;223;219;221mItem 10[m   
[38;2;223;219;221mItem 11[m   


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_new_items_are_added_but_we_moved_up_in_backwards_list.golden
================================================
[38;2;223;219;221mItem 18[m   
[38;2;223;219;221mItem 19[m   
[38;2;223;219;221mItem 20[m   
[38;2;223;219;221mItem 21[m   
[38;2;223;219;221mItem 22[m   
[38;2;223;219;221mItem 23[m   
[38;2;223;219;221mItem 24[m   
[38;2;223;219;221mItem 25[m   
[38;2;223;219;221mItem 26[m   
[38;2;223;219;221m│Item 27[m  


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_the_hight_of_an_item_above_is_decreases_in_forward_list.golden
================================================
[38;2;223;219;221m│Item 0[m   
[38;2;223;219;221mItem 1[m    
[38;2;223;219;221mItem 2[m    
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 4[m    
[38;2;223;219;221mItem 5[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 7[m    
[38;2;223;219;221mItem 8[m    
[38;2;223;219;221mItem 9[m    


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_the_hight_of_an_item_above_is_increased_in_backwards_list.golden
================================================
[38;2;223;219;221mItem 18[m   
[38;2;223;219;221mItem 19[m   
[38;2;223;219;221mItem 20[m   
[38;2;223;219;221mItem 21[m   
[38;2;223;219;221mItem 22[m   
[38;2;223;219;221mItem 23[m   
[38;2;223;219;221mItem 24[m   
[38;2;223;219;221mItem 25[m   
[38;2;223;219;221mItem 26[m   
[38;2;223;219;221m│Item 27[m  


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_the_hight_of_an_item_above_is_increased_in_forward_list.golden
================================================
[38;2;223;219;221m│Item 2[m   
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 4[m    
[38;2;223;219;221mItem 5[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 7[m    
[38;2;223;219;221mItem 8[m    
[38;2;223;219;221mItem 9[m    
[38;2;223;219;221mItem 10[m   
[38;2;223;219;221mItem 11[m   


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_the_hight_of_an_item_below_is_decreases_in_backwards_list.golden
================================================
[38;2;223;219;221mItem 21[m   
[38;2;223;219;221mItem 22[m   
[38;2;223;219;221mItem 23[m   
[38;2;223;219;221mItem 24[m   
[38;2;223;219;221mItem 25[m   
[38;2;223;219;221mItem 26[m   
[38;2;223;219;221mItem 27[m   
[38;2;223;219;221mItem 28[m   
[38;2;223;219;221m│Item 29[m  
[38;2;223;219;221mItem 30[m   


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_the_hight_of_an_item_below_is_increased_in_backwards_list.golden
================================================
[38;2;223;219;221mItem 18[m   
[38;2;223;219;221mItem 19[m   
[38;2;223;219;221mItem 20[m   
[38;2;223;219;221mItem 21[m   
[38;2;223;219;221mItem 22[m   
[38;2;223;219;221mItem 23[m   
[38;2;223;219;221mItem 24[m   
[38;2;223;219;221mItem 25[m   
[38;2;223;219;221mItem 26[m   
[38;2;223;219;221m│Item 27[m  


================================================
FILE: internal/tui/exp/list/testdata/TestListMovement/should_stay_at_the_position_it_is_when_the_hight_of_an_item_below_is_increased_in_forward_list.golden
================================================
[38;2;223;219;221m│Item 2[m   
[38;2;223;219;221mItem 3[m    
[38;2;223;219;221mItem 4[m    
[38;2;223;219;221mItem 5[m    
[38;2;223;219;221mItem 6[m    
[38;2;223;219;221mItem 7[m    
[38;2;223;219;221mItem 8[m    
[38;2;223;219;221mItem 9[m    
[38;2;223;219;221mItem 10[m   
[38;2;223;219;221mItem 11[m   


================================================
FILE: internal/tui/highlight/highlight.go
================================================
package highlight

import (
	"bytes"
	"image/color"

	"github.com/alecthomas/chroma/v2"
	"github.com/alecthomas/chroma/v2/formatters"
	"github.com/alecthomas/chroma/v2/lexers"
	chromaStyles "github.com/alecthomas/chroma/v2/styles"
	"github.com/charmbracelet/crush/internal/tui/styles"
)

func SyntaxHighlight(source, fileName string, bg color.Color) (string, error) {
	// Determine the language lexer to use
	l := lexers.Match(fileName)
	if l == nil {
		l = lexers.Analyse(source)
	}
	if l == nil {
		l = lexers.Fallback
	}
	l = chroma.Coalesce(l)

	// Get the formatter
	f := formatters.Get("terminal16m")
	if f == nil {
		f = formatters.Fallback
	}

	style := chroma.MustNewStyle("crush", styles.GetChromaTheme())

	// Modify the style to use the provided background
	s, err := style.Builder().Transform(
		func(t chroma.StyleEntry) chroma.StyleEntry {
			r, g, b, _ := bg.RGBA()
			t.Background = chroma.NewColour(uint8(r>>8), uint8(g>>8), uint8(b>>8))
			return t
		},
	).Build()
	if err != nil {
		s = chromaStyles.Fallback
	}

	// Tokenize and format
	it, err := l.Tokenise(nil, source)
	if err != nil {
		return "", err
	}

	var buf bytes.Buffer
	err = f.Format(&buf, s, it)
	return buf.String(), err
}



================================================
FILE: internal/tui/page/page.go
================================================
package page

type PageID string

// PageChangeMsg is used to change the current page
type PageChangeMsg struct {
	ID PageID
}



================================================
FILE: internal/tui/page/chat/chat.go
================================================
package chat

import (
	"context"
	"fmt"
	"time"

	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/key"
	"github.com/charmbracelet/bubbles/v2/spinner"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/app"
	"github.com/charmbracelet/crush/internal/config"
	"github.com/charmbracelet/crush/internal/history"
	"github.com/charmbracelet/crush/internal/message"
	"github.com/charmbracelet/crush/internal/permission"
	"github.com/charmbracelet/crush/internal/pubsub"
	"github.com/charmbracelet/crush/internal/session"
	"github.com/charmbracelet/crush/internal/tui/components/anim"
	"github.com/charmbracelet/crush/internal/tui/components/chat"
	"github.com/charmbracelet/crush/internal/tui/components/chat/editor"
	"github.com/charmbracelet/crush/internal/tui/components/chat/header"
	"github.com/charmbracelet/crush/internal/tui/components/chat/messages"
	"github.com/charmbracelet/crush/internal/tui/components/chat/sidebar"
	"github.com/charmbracelet/crush/internal/tui/components/chat/splash"
	"github.com/charmbracelet/crush/internal/tui/components/completions"
	"github.com/charmbracelet/crush/internal/tui/components/core"
	"github.com/charmbracelet/crush/internal/tui/components/core/layout"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/commands"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/filepicker"
	"github.com/charmbracelet/crush/internal/tui/components/dialogs/models"
	"github.com/charmbracelet/crush/internal/tui/page"
	"github.com/charmbracelet/crush/internal/tui/styles"
	"github.com/charmbracelet/crush/internal/tui/util"
	"github.com/charmbracelet/crush/internal/version"
	"github.com/charmbracelet/lipgloss/v2"
)

var ChatPageID page.PageID = "chat"

type (
	ChatFocusedMsg struct {
		Focused bool
	}
	CancelTimerExpiredMsg struct{}
)

type PanelType string

const (
	PanelTypeChat   PanelType = "chat"
	PanelTypeEditor PanelType = "editor"
	PanelTypeSplash PanelType = "splash"
)

const (
	CompactModeWidthBreakpoint  = 120 // Width at which the chat page switches to compact mode
	CompactModeHeightBreakpoint = 30  // Height at which the chat page switches to compact mode
	EditorHeight                = 5   // Height of the editor input area including padding
	SideBarWidth                = 31  // Width of the sidebar
	SideBarDetailsPadding       = 1   // Padding for the sidebar details section
	HeaderHeight                = 1   // Height of the header

	// Layout constants for borders and padding
	BorderWidth        = 1 // Width of component borders
	LeftRightBorders   = 2 // Left + right border width (1 + 1)
	TopBottomBorders   = 2 // Top + bottom border width (1 + 1)
	DetailsPositioning = 2 // Positioning adjustment for details panel

	// Timing constants
	CancelTimerDuration = 2 * time.Second // Duration before cancel timer expires
)

type ChatPage interface {
	util.Model
	layout.Help
	IsChatFocused() bool
}

// cancelTimerCmd creates a command that expires the cancel timer
func cancelTimerCmd() tea.Cmd {
	return tea.Tick(CancelTimerDuration, func(time.Time) tea.Msg {
		return CancelTimerExpiredMsg{}
	})
}

type chatPage struct {
	width, height               int
	detailsWidth, detailsHeight int
	app                         *app.App
	keyboardEnhancements        tea.KeyboardEnhancementsMsg

	// Layout state
	compact      bool
	forceCompact bool
	focusedPane  PanelType

	// Session
	session session.Session
	keyMap  KeyMap

	// Components
	header  header.Header
	sidebar sidebar.Sidebar
	chat    chat.MessageListCmp
	editor  editor.Editor
	splash  splash.Splash

	// Simple state flags
	showingDetails   bool
	isCanceling      bool
	splashFullScreen bool
	isOnboarding     bool
	isProjectInit    bool
}

func New(app *app.App) ChatPage {
	return &chatPage{
		app:         app,
		keyMap:      DefaultKeyMap(),
		header:      header.New(app.LSPClients),
		sidebar:     sidebar.New(app.History, app.LSPClients, false),
		chat:        chat.New(app),
		editor:      editor.New(app),
		splash:      splash.New(),
		focusedPane: PanelTypeSplash,
	}
}

func (p *chatPage) Init() tea.Cmd {
	cfg := config.Get()
	compact := cfg.Options.TUI.CompactMode
	p.compact = compact
	p.forceCompact = compact
	p.sidebar.SetCompactMode(p.compact)

	// Set splash state based on config
	if !config.HasInitialDataConfig() {
		// First-time setup: show model selection
		p.splash.SetOnboarding(true)
		p.isOnboarding = true
		p.splashFullScreen = true
	} else if b, _ := config.ProjectNeedsInitialization(); b {
		// Project needs CRUSH.md initialization
		p.splash.SetProjectInit(true)
		p.isProjectInit = true
		p.splashFullScreen = true
	} else {
		// Ready to chat: focus editor, splash in background
		p.focusedPane = PanelTypeEditor
		p.splashFullScreen = false
	}

	return tea.Batch(
		p.header.Init(),
		p.sidebar.Init(),
		p.chat.Init(),
		p.editor.Init(),
		p.splash.Init(),
	)
}

func (p *chatPage) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	var cmds []tea.Cmd
	switch msg := msg.(type) {
	case tea.KeyboardEnhancementsMsg:
		p.keyboardEnhancements = msg
		return p, nil
	case tea.MouseWheelMsg:
		if p.compact {
			msg.Y -= 1
		}
		if p.isMouseOverChat(msg.X, msg.Y) {
			u, cmd := p.chat.Update(msg)
			p.chat = u.(chat.MessageListCmp)
			return p, cmd
		}
		return p, nil
	case tea.MouseClickMsg:
		if p.isOnboarding {
			return p, nil
		}
		if p.compact {
			msg.Y -= 1
		}
		if p.isMouseOverChat(msg.X, msg.Y) {
			p.focusedPane = PanelTypeChat
			p.chat.Focus()
			p.editor.Blur()
		} else {
			p.focusedPane = PanelTypeEditor
			p.editor.Focus()
			p.chat.Blur()
		}
		u, cmd := p.chat.Update(msg)
		p.chat = u.(chat.MessageListCmp)
		return p, cmd
	case tea.MouseMotionMsg:
		if p.compact {
			msg.Y -= 1
		}
		if msg.Button == tea.MouseLeft {
			u, cmd := p.chat.Update(msg)
			p.chat = u.(chat.MessageListCmp)
			return p, cmd
		}
		return p, nil
	case tea.MouseReleaseMsg:
		if p.isOnboarding {
			return p, nil
		}
		if p.compact {
			msg.Y -= 1
		}
		if msg.Button == tea.MouseLeft {
			u, cmd := p.chat.Update(msg)
			p.chat = u.(chat.MessageListCmp)
			return p, cmd
		}
		return p, nil
	case chat.SelectionCopyMsg:
		u, cmd := p.chat.Update(msg)
		p.chat = u.(chat.MessageListCmp)
		return p, cmd
	case tea.WindowSizeMsg:
		u, cmd := p.editor.Update(msg)
		p.editor = u.(editor.Editor)
		return p, tea.Batch(p.SetSize(msg.Width, msg.Height), cmd)
	case CancelTimerExpiredMsg:
		p.isCanceling = false
		return p, nil
	case editor.OpenEditorMsg:
		u, cmd := p.editor.Update(msg)
		p.editor = u.(editor.Editor)
		return p, cmd
	case chat.SendMsg:
		return p, p.sendMessage(msg.Text, msg.Attachments)
	case chat.SessionSelectedMsg:
		return p, p.setSession(msg)
	case splash.SubmitAPIKeyMsg:
		u, cmd := p.splash.Update(msg)
		p.splash = u.(splash.Splash)
		cmds = append(cmds, cmd)
		return p, tea.Batch(cmds...)
	case commands.ToggleCompactModeMsg:
		p.forceCompact = !p.forceCompact
		var cmd tea.Cmd
		if p.forceCompact {
			p.setCompactMode(true)
			cmd = p.updateCompactConfig(true)
		} else if p.width >= CompactModeWidthBreakpoint && p.height >= CompactModeHeightBreakpoint {
			p.setCompactMode(false)
			cmd = p.updateCompactConfig(false)
		}
		return p, tea.Batch(p.SetSize(p.width, p.height), cmd)
	case commands.ToggleThinkingMsg:
		return p, p.toggleThinking()
	case commands.OpenExternalEditorMsg:
		u, cmd := p.editor.Update(msg)
		p.editor = u.(editor.Editor)
		return p, cmd
	case pubsub.Event[session.Session]:
		u, cmd := p.header.Update(msg)
		p.header = u.(header.Header)
		cmds = append(cmds, cmd)
		u, cmd = p.sidebar.Update(msg)
		p.sidebar = u.(sidebar.Sidebar)
		cmds = append(cmds, cmd)
		return p, tea.Batch(cmds...)
	case chat.SessionClearedMsg:
		u, cmd := p.header.Update(msg)
		p.header = u.(header.Header)
		cmds = append(cmds, cmd)
		u, cmd = p.sidebar.Update(msg)
		p.sidebar = u.(sidebar.Sidebar)
		cmds = append(cmds, cmd)
		u, cmd = p.chat.Update(msg)
		p.chat = u.(chat.MessageListCmp)
		cmds = append(cmds, cmd)
		return p, tea.Batch(cmds...)
	case filepicker.FilePickedMsg,
		completions.CompletionsClosedMsg,
		completions.SelectCompletionMsg:
		u, cmd := p.editor.Update(msg)
		p.editor = u.(editor.Editor)
		cmds = append(cmds, cmd)
		return p, tea.Batch(cmds...)

	case models.APIKeyStateChangeMsg:
		if p.focusedPane == PanelTypeSplash {
			u, cmd := p.splash.Update(msg)
			p.splash = u.(splash.Splash)
			cmds = append(cmds, cmd)
		}
		return p, tea.Batch(cmds...)
	case pubsub.Event[message.Message],
		anim.StepMsg,
		spinner.TickMsg:
		if p.focusedPane == PanelTypeSplash {
			u, cmd := p.splash.Update(msg)
			p.splash = u.(splash.Splash)
			cmds = append(cmds, cmd)
		} else {
			u, cmd := p.chat.Update(msg)
			p.chat = u.(chat.MessageListCmp)
			cmds = append(cmds, cmd)
		}

		return p, tea.Batch(cmds...)
	case commands.ToggleYoloModeMsg:
		// update the editor style
		u, cmd := p.editor.Update(msg)
		p.editor = u.(editor.Editor)
		return p, cmd
	case pubsub.Event[history.File], sidebar.SessionFilesMsg:
		u, cmd := p.sidebar.Update(msg)
		p.sidebar = u.(sidebar.Sidebar)
		cmds = append(cmds, cmd)
		return p, tea.Batch(cmds...)
	case pubsub.Event[permission.PermissionNotification]:
		u, cmd := p.chat.Update(msg)
		p.chat = u.(chat.MessageListCmp)
		cmds = append(cmds, cmd)
		return p, tea.Batch(cmds...)

	case commands.CommandRunCustomMsg:
		if p.app.CoderAgent.IsBusy() {
			return p, util.ReportWarn("Agent is busy, please wait before executing a command...")
		}

		cmd := p.sendMessage(msg.Content, nil)
		if cmd != nil {
			return p, cmd
		}
	case splash.OnboardingCompleteMsg:
		p.splashFullScreen = false
		if b, _ := config.ProjectNeedsInitialization(); b {
			p.splash.SetProjectInit(true)
			p.splashFullScreen = true
			return p, p.SetSize(p.width, p.height)
		}
		err := p.app.InitCoderAgent()
		if err != nil {
			return p, util.ReportError(err)
		}
		p.isOnboarding = false
		p.isProjectInit = false
		p.focusedPane = PanelTypeEditor
		return p, p.SetSize(p.width, p.height)
	case commands.NewSessionsMsg:
		if p.app.CoderAgent.IsBusy() {
			return p, util.ReportWarn("Agent is busy, please wait before starting a new session...")
		}
		return p, p.newSession()
	case tea.KeyPressMsg:
		switch {
		case key.Matches(msg, p.keyMap.NewSession):
			// if we have no agent do nothing
			if p.app.CoderAgent == nil {
				return p, nil
			}
			if p.app.CoderAgent.IsBusy() {
				return p, util.ReportWarn("Agent is busy, please wait before starting a new session...")
			}
			return p, p.newSession()
		case key.Matches(msg, p.keyMap.AddAttachment):
			agentCfg := config.Get().Agents["coder"]
			model := config.Get().GetModelByType(agentCfg.Model)
			if model.SupportsImages {
				return p, util.CmdHandler(commands.OpenFilePickerMsg{})
			} else {
				return p, util.ReportWarn("File attachments are not supported by the current model: " + model.Name)
			}
		case key.Matches(msg, p.keyMap.Tab):
			if p.session.ID == "" {
				u, cmd := p.splash.Update(msg)
				p.splash = u.(splash.Splash)
				return p, cmd
			}
			p.changeFocus()
			return p, nil
		case key.Matches(msg, p.keyMap.Cancel):
			if p.session.ID != "" && p.app.CoderAgent.IsBusy() {
				return p, p.cancel()
			}
		case key.Matches(msg, p.keyMap.Details):
			p.toggleDetails()
			return p, nil
		}

		switch p.focusedPane {
		case PanelTypeChat:
			u, cmd := p.chat.Update(msg)
			p.chat = u.(chat.MessageListCmp)
			cmds = append(cmds, cmd)
		case PanelTypeEditor:
			u, cmd := p.editor.Update(msg)
			p.editor = u.(editor.Editor)
			cmds = append(cmds, cmd)
		case PanelTypeSplash:
			u, cmd := p.splash.Update(msg)
			p.splash = u.(splash.Splash)
			cmds = append(cmds, cmd)
		}
	case tea.PasteMsg:
		switch p.focusedPane {
		case PanelTypeEditor:
			u, cmd := p.editor.Update(msg)
			p.editor = u.(editor.Editor)
			cmds = append(cmds, cmd)
			return p, tea.Batch(cmds...)
		case PanelTypeChat:
			u, cmd := p.chat.Update(msg)
			p.chat = u.(chat.MessageListCmp)
			cmds = append(cmds, cmd)
			return p, tea.Batch(cmds...)
		case PanelTypeSplash:
			u, cmd := p.splash.Update(msg)
			p.splash = u.(splash.Splash)
			cmds = append(cmds, cmd)
			return p, tea.Batch(cmds...)
		}
	}
	return p, tea.Batch(cmds...)
}

func (p *chatPage) Cursor() *tea.Cursor {
	if p.header.ShowingDetails() {
		return nil
	}
	switch p.focusedPane {
	case PanelTypeEditor:
		return p.editor.Cursor()
	case PanelTypeSplash:
		return p.splash.Cursor()
	default:
		return nil
	}
}

func (p *chatPage) View() string {
	var chatView string
	t := styles.CurrentTheme()

	if p.session.ID == "" {
		splashView := p.splash.View()
		// Full screen during onboarding or project initialization
		if p.splashFullScreen {
			chatView = splashView
		} else {
			// Show splash + editor for new message state
			editorView := p.editor.View()
			chatView = lipgloss.JoinVertical(
				lipgloss.Left,
				t.S().Base.Render(splashView),
				editorView,
			)
		}
	} else {
		messagesView := p.chat.View()
		editorView := p.editor.View()
		if p.compact {
			headerView := p.header.View()
			chatView = lipgloss.JoinVertical(
				lipgloss.Left,
				headerView,
				messagesView,
				editorView,
			)
		} else {
			sidebarView := p.sidebar.View()
			messages := lipgloss.JoinHorizontal(
				lipgloss.Left,
				messagesView,
				sidebarView,
			)
			chatView = lipgloss.JoinVertical(
				lipgloss.Left,
				messages,
				p.editor.View(),
			)
		}
	}

	layers := []*lipgloss.Layer{
		lipgloss.NewLayer(chatView).X(0).Y(0),
	}

	if p.showingDetails {
		style := t.S().Base.
			Width(p.detailsWidth).
			Border(lipgloss.RoundedBorder()).
			BorderForeground(t.BorderFocus)
		version := t.S().Base.Foreground(t.Border).Width(p.detailsWidth - 4).AlignHorizontal(lipgloss.Right).Render(version.Version)
		details := style.Render(
			lipgloss.JoinVertical(
				lipgloss.Left,
				p.sidebar.View(),
				version,
			),
		)
		layers = append(layers, lipgloss.NewLayer(details).X(1).Y(1))
	}
	canvas := lipgloss.NewCanvas(
		layers...,
	)
	return canvas.Render()
}

func (p *chatPage) updateCompactConfig(compact bool) tea.Cmd {
	return func() tea.Msg {
		err := config.Get().SetCompactMode(compact)
		if err != nil {
			return util.InfoMsg{
				Type: util.InfoTypeError,
				Msg:  "Failed to update compact mode configuration: " + err.Error(),
			}
		}
		return nil
	}
}

func (p *chatPage) toggleThinking() tea.Cmd {
	return func() tea.Msg {
		cfg := config.Get()
		agentCfg := cfg.Agents["coder"]
		currentModel := cfg.Models[agentCfg.Model]

		// Toggle the thinking mode
		currentModel.Think = !currentModel.Think
		cfg.Models[agentCfg.Model] = currentModel

		// Update the agent with the new configuration
		if err := p.app.UpdateAgentModel(); err != nil {
			return util.InfoMsg{
				Type: util.InfoTypeError,
				Msg:  "Failed to update thinking mode: " + err.Error(),
			}
		}

		status := "disabled"
		if currentModel.Think {
			status = "enabled"
		}
		return util.InfoMsg{
			Type: util.InfoTypeInfo,
			Msg:  "Thinking mode " + status,
		}
	}
}

func (p *chatPage) setCompactMode(compact bool) {
	if p.compact == compact {
		return
	}
	p.compact = compact
	if compact {
		p.sidebar.SetCompactMode(true)
	} else {
		p.setShowDetails(false)
	}
}

func (p *chatPage) handleCompactMode(newWidth int, newHeight int) {
	if p.forceCompact {
		return
	}
	if (newWidth < CompactModeWidthBreakpoint || newHeight < CompactModeHeightBreakpoint) && !p.compact {
		p.setCompactMode(true)
	}
	if (newWidth >= CompactModeWidthBreakpoint && newHeight >= CompactModeHeightBreakpoint) && p.compact {
		p.setCompactMode(false)
	}
}

func (p *chatPage) SetSize(width, height int) tea.Cmd {
	p.handleCompactMode(width, height)
	p.width = width
	p.height = height
	var cmds []tea.Cmd

	if p.session.ID == "" {
		if p.splashFullScreen {
			cmds = append(cmds, p.splash.SetSize(width, height))
		} else {
			cmds = append(cmds, p.splash.SetSize(width, height-EditorHeight))
			cmds = append(cmds, p.editor.SetSize(width, EditorHeight))
			cmds = append(cmds, p.editor.SetPosition(0, height-EditorHeight))
		}
	} else {
		if p.compact {
			cmds = append(cmds, p.chat.SetSize(width, height-EditorHeight-HeaderHeight))
			p.detailsWidth = width - DetailsPositioning
			cmds = append(cmds, p.sidebar.SetSize(p.detailsWidth-LeftRightBorders, p.detailsHeight-TopBottomBorders))
			cmds = append(cmds, p.editor.SetSize(width, EditorHeight))
			cmds = append(cmds, p.header.SetWidth(width-BorderWidth))
		} else {
			cmds = append(cmds, p.chat.SetSize(width-SideBarWidth, height-EditorHeight))
			cmds = append(cmds, p.editor.SetSize(width, EditorHeight))
			cmds = append(cmds, p.sidebar.SetSize(SideBarWidth, height-EditorHeight))
		}
		cmds = append(cmds, p.editor.SetPosition(0, height-EditorHeight))
	}
	return tea.Batch(cmds...)
}

func (p *chatPage) newSession() tea.Cmd {
	if p.session.ID == "" {
		return nil
	}

	p.session = session.Session{}
	p.focusedPane = PanelTypeEditor
	p.editor.Focus()
	p.chat.Blur()
	p.isCanceling = false
	return tea.Batch(
		util.CmdHandler(chat.SessionClearedMsg{}),
		p.SetSize(p.width, p.height),
	)
}

func (p *chatPage) setSession(session session.Session) tea.Cmd {
	if p.session.ID == session.ID {
		return nil
	}

	var cmds []tea.Cmd
	p.session = session

	cmds = append(cmds, p.SetSize(p.width, p.height))
	cmds = append(cmds, p.chat.SetSession(session))
	cmds = append(cmds, p.sidebar.SetSession(session))
	cmds = append(cmds, p.header.SetSession(session))
	cmds = append(cmds, p.editor.SetSession(session))

	return tea.Sequence(cmds...)
}

func (p *chatPage) changeFocus() {
	if p.session.ID == "" {
		return
	}
	switch p.focusedPane {
	case PanelTypeChat:
		p.focusedPane = PanelTypeEditor
		p.editor.Focus()
		p.chat.Blur()
	case PanelTypeEditor:
		p.focusedPane = PanelTypeChat
		p.chat.Focus()
		p.editor.Blur()
	}
}

func (p *chatPage) cancel() tea.Cmd {
	if p.isCanceling {
		p.isCanceling = false
		if p.app.CoderAgent != nil {
			p.app.CoderAgent.Cancel(p.session.ID)
		}
		return nil
	}

	if p.app.CoderAgent != nil && p.app.CoderAgent.QueuedPrompts(p.session.ID) > 0 {
		p.app.CoderAgent.ClearQueue(p.session.ID)
		return nil
	}
	p.isCanceling = true
	return cancelTimerCmd()
}

func (p *chatPage) setShowDetails(show bool) {
	p.showingDetails = show
	p.header.SetDetailsOpen(p.showingDetails)
	if !p.compact {
		p.sidebar.SetCompactMode(false)
	}
}

func (p *chatPage) toggleDetails() {
	if p.session.ID == "" || !p.compact {
		return
	}
	p.setShowDetails(!p.showingDetails)
}

func (p *chatPage) sendMessage(text string, attachments []message.Attachment) tea.Cmd {
	session := p.session
	var cmds []tea.Cmd
	if p.session.ID == "" {
		newSession, err := p.app.Sessions.Create(context.Background(), "New Session")
		if err != nil {
			return util.ReportError(err)
		}
		session = newSession
		cmds = append(cmds, util.CmdHandler(chat.SessionSelectedMsg(session)))
	}
	if p.app.CoderAgent == nil {
		return util.ReportError(fmt.Errorf("coder agent is not initialized"))
	}
	_, err := p.app.CoderAgent.Run(context.Background(), session.ID, text, attachments...)
	if err != nil {
		return util.ReportError(err)
	}
	cmds = append(cmds, p.chat.GoToBottom())
	return tea.Batch(cmds...)
}

func (p *chatPage) Bindings() []key.Binding {
	bindings := []key.Binding{
		p.keyMap.NewSession,
		p.keyMap.AddAttachment,
	}
	if p.app.CoderAgent != nil && p.app.CoderAgent.IsBusy() {
		cancelBinding := p.keyMap.Cancel
		if p.isCanceling {
			cancelBinding = key.NewBinding(
				key.WithKeys("esc"),
				key.WithHelp("esc", "press again to cancel"),
			)
		}
		bindings = append([]key.Binding{cancelBinding}, bindings...)
	}

	switch p.focusedPane {
	case PanelTypeChat:
		bindings = append([]key.Binding{
			key.NewBinding(
				key.WithKeys("tab"),
				key.WithHelp("tab", "focus editor"),
			),
		}, bindings...)
		bindings = append(bindings, p.chat.Bindings()...)
	case PanelTypeEditor:
		bindings = append([]key.Binding{
			key.NewBinding(
				key.WithKeys("tab"),
				key.WithHelp("tab", "focus chat"),
			),
		}, bindings...)
		bindings = append(bindings, p.editor.Bindings()...)
	case PanelTypeSplash:
		bindings = append(bindings, p.splash.Bindings()...)
	}

	return bindings
}

func (p *chatPage) Help() help.KeyMap {
	var shortList []key.Binding
	var fullList [][]key.Binding
	switch {
	case p.isOnboarding && !p.splash.IsShowingAPIKey():
		shortList = append(shortList,
			// Choose model
			key.NewBinding(
				key.WithKeys("up", "down"),
				key.WithHelp("↑/↓", "choose"),
			),
			// Accept selection
			key.NewBinding(
				key.WithKeys("enter", "ctrl+y"),
				key.WithHelp("enter", "accept"),
			),
			// Quit
			key.NewBinding(
				key.WithKeys("ctrl+c"),
				key.WithHelp("ctrl+c", "quit"),
			),
		)
		// keep them the same
		for _, v := range shortList {
			fullList = append(fullList, []key.Binding{v})
		}
	case p.isOnboarding && p.splash.IsShowingAPIKey():
		if p.splash.IsAPIKeyValid() {
			shortList = append(shortList,
				key.NewBinding(
					key.WithKeys("enter"),
					key.WithHelp("enter", "continue"),
				),
			)
		} else {
			shortList = append(shortList,
				// Go back
				key.NewBinding(
					key.WithKeys("esc"),
					key.WithHelp("esc", "back"),
				),
			)
		}
		shortList = append(shortList,
			// Quit
			key.NewBinding(
				key.WithKeys("ctrl+c"),
				key.WithHelp("ctrl+c", "quit"),
			),
		)
		// keep them the same
		for _, v := range shortList {
			fullList = append(fullList, []key.Binding{v})
		}
	case p.isProjectInit:
		shortList = append(shortList,
			key.NewBinding(
				key.WithKeys("ctrl+c"),
				key.WithHelp("ctrl+c", "quit"),
			),
		)
		// keep them the same
		for _, v := range shortList {
			fullList = append(fullList, []key.Binding{v})
		}
	default:
		if p.editor.IsCompletionsOpen() {
			shortList = append(shortList,
				key.NewBinding(
					key.WithKeys("tab", "enter"),
					key.WithHelp("tab/enter", "complete"),
				),
				key.NewBinding(
					key.WithKeys("esc"),
					key.WithHelp("esc", "cancel"),
				),
				key.NewBinding(
					key.WithKeys("up", "down"),
					key.WithHelp("↑/↓", "choose"),
				),
			)
			for _, v := range shortList {
				fullList = append(fullList, []key.Binding{v})
			}
			return core.NewSimpleHelp(shortList, fullList)
		}
		if p.app.CoderAgent != nil && p.app.CoderAgent.IsBusy() {
			cancelBinding := key.NewBinding(
				key.WithKeys("esc"),
				key.WithHelp("esc", "cancel"),
			)
			if p.isCanceling {
				cancelBinding = key.NewBinding(
					key.WithKeys("esc"),
					key.WithHelp("esc", "press again to cancel"),
				)
			}
			if p.app.CoderAgent != nil && p.app.CoderAgent.QueuedPrompts(p.session.ID) > 0 {
				cancelBinding = key.NewBinding(
					key.WithKeys("esc"),
					key.WithHelp("esc", "clear queue"),
				)
			}
			shortList = append(shortList, cancelBinding)
			fullList = append(fullList,
				[]key.Binding{
					cancelBinding,
				},
			)
		}
		globalBindings := []key.Binding{}
		// we are in a session
		if p.session.ID != "" {
			tabKey := key.NewBinding(
				key.WithKeys("tab"),
				key.WithHelp("tab", "focus chat"),
			)
			if p.focusedPane == PanelTypeChat {
				tabKey = key.NewBinding(
					key.WithKeys("tab"),
					key.WithHelp("tab", "focus editor"),
				)
			}
			shortList = append(shortList, tabKey)
			globalBindings = append(globalBindings, tabKey)
		}
		commandsBinding := key.NewBinding(
			key.WithKeys("ctrl+p"),
			key.WithHelp("ctrl+p", "commands"),
		)
		helpBinding := key.NewBinding(
			key.WithKeys("ctrl+g"),
			key.WithHelp("ctrl+g", "more"),
		)
		globalBindings = append(globalBindings, commandsBinding)
		globalBindings = append(globalBindings,
			key.NewBinding(
				key.WithKeys("ctrl+s"),
				key.WithHelp("ctrl+s", "sessions"),
			),
		)
		if p.session.ID != "" {
			globalBindings = append(globalBindings,
				key.NewBinding(
					key.WithKeys("ctrl+n"),
					key.WithHelp("ctrl+n", "new sessions"),
				))
		}
		shortList = append(shortList,
			// Commands
			commandsBinding,
		)
		fullList = append(fullList, globalBindings)

		switch p.focusedPane {
		case PanelTypeChat:
			shortList = append(shortList,
				key.NewBinding(
					key.WithKeys("up", "down"),
					key.WithHelp("↑↓", "scroll"),
				),
				messages.CopyKey,
			)
			fullList = append(fullList,
				[]key.Binding{
					key.NewBinding(
						key.WithKeys("up", "down"),
						key.WithHelp("↑↓", "scroll"),
					),
					key.NewBinding(
						key.WithKeys("shift+up", "shift+down"),
						key.WithHelp("shift+↑↓", "next/prev item"),
					),
					key.NewBinding(
						key.WithKeys("pgup", "b"),
						key.WithHelp("b/pgup", "page up"),
					),
					key.NewBinding(
						key.WithKeys("pgdown", " ", "f"),
						key.WithHelp("f/pgdn", "page down"),
					),
				},
				[]key.Binding{
					key.NewBinding(
						key.WithKeys("u"),
						key.WithHelp("u", "half page up"),
					),
					key.NewBinding(
						key.WithKeys("d"),
						key.WithHelp("d", "half page down"),
					),
					key.NewBinding(
						key.WithKeys("g", "home"),
						key.WithHelp("g", "home"),
					),
					key.NewBinding(
						key.WithKeys("G", "end"),
						key.WithHelp("G", "end"),
					),
				},
				[]key.Binding{
					messages.CopyKey,
					messages.ClearSelectionKey,
				},
			)
		case PanelTypeEditor:
			newLineBinding := key.NewBinding(
				key.WithKeys("shift+enter", "ctrl+j"),
				// "ctrl+j" is a common keybinding for newline in many editors. If
				// the terminal supports "shift+enter", we substitute the help text
				// to reflect that.
				key.WithHelp("ctrl+j", "newline"),
			)
			if p.keyboardEnhancements.SupportsKeyDisambiguation() {
				newLineBinding.SetHelp("shift+enter", newLineBinding.Help().Desc)
			}
			shortList = append(shortList, newLineBinding)
			fullList = append(fullList,
				[]key.Binding{
					newLineBinding,
					key.NewBinding(
						key.WithKeys("ctrl+f"),
						key.WithHelp("ctrl+f", "add image"),
					),
					key.NewBinding(
						key.WithKeys("/"),
						key.WithHelp("/", "add file"),
					),
					key.NewBinding(
						key.WithKeys("ctrl+o"),
						key.WithHelp("ctrl+o", "open editor"),
					),
				})

			if p.editor.HasAttachments() {
				fullList = append(fullList, []key.Binding{
					key.NewBinding(
						key.WithKeys("ctrl+r"),
						key.WithHelp("ctrl+r+{i}", "delete attachment at index i"),
					),
					key.NewBinding(
						key.WithKeys("ctrl+r", "r"),
						key.WithHelp("ctrl+r+r", "delete all attachments"),
					),
					key.NewBinding(
						key.WithKeys("esc"),
						key.WithHelp("esc", "cancel delete mode"),
					),
				})
			}
		}
		shortList = append(shortList,
			// Quit
			key.NewBinding(
				key.WithKeys("ctrl+c"),
				key.WithHelp("ctrl+c", "quit"),
			),
			// Help
			helpBinding,
		)
		fullList = append(fullList, []key.Binding{
			key.NewBinding(
				key.WithKeys("ctrl+g"),
				key.WithHelp("ctrl+g", "less"),
			),
		})
	}

	return core.NewSimpleHelp(shortList, fullList)
}

func (p *chatPage) IsChatFocused() bool {
	return p.focusedPane == PanelTypeChat
}

// isMouseOverChat checks if the given mouse coordinates are within the chat area bounds.
// Returns true if the mouse is over the chat area, false otherwise.
func (p *chatPage) isMouseOverChat(x, y int) bool {
	// No session means no chat area
	if p.session.ID == "" {
		return false
	}

	var chatX, chatY, chatWidth, chatHeight int

	if p.compact {
		// In compact mode: chat area starts after header and spans full width
		chatX = 0
		chatY = HeaderHeight
		chatWidth = p.width
		chatHeight = p.height - EditorHeight - HeaderHeight
	} else {
		// In non-compact mode: chat area spans from left edge to sidebar
		chatX = 0
		chatY = 0
		chatWidth = p.width - SideBarWidth
		chatHeight = p.height - EditorHeight
	}

	// Check if mouse coordinates are within chat bounds
	return x >= chatX && x < chatX+chatWidth && y >= chatY && y < chatY+chatHeight
}



================================================
FILE: internal/tui/page/chat/keys.go
================================================
package chat

import (
	"github.com/charmbracelet/bubbles/v2/key"
)

type KeyMap struct {
	NewSession    key.Binding
	AddAttachment key.Binding
	Cancel        key.Binding
	Tab           key.Binding
	Details       key.Binding
}

func DefaultKeyMap() KeyMap {
	return KeyMap{
		NewSession: key.NewBinding(
			key.WithKeys("ctrl+n"),
			key.WithHelp("ctrl+n", "new session"),
		),
		AddAttachment: key.NewBinding(
			key.WithKeys("ctrl+f"),
			key.WithHelp("ctrl+f", "add attachment"),
		),
		Cancel: key.NewBinding(
			key.WithKeys("esc"),
			key.WithHelp("esc", "cancel"),
		),
		Tab: key.NewBinding(
			key.WithKeys("tab"),
			key.WithHelp("tab", "change focus"),
		),
		Details: key.NewBinding(
			key.WithKeys("ctrl+d"),
			key.WithHelp("ctrl+d", "toggle details"),
		),
	}
}



================================================
FILE: internal/tui/styles/charmtone.go
================================================
package styles

import (
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/exp/charmtone"
)

func NewCharmtoneTheme() *Theme {
	t := &Theme{
		Name:   "charmtone",
		IsDark: true,

		Primary:   charmtone.Charple,
		Secondary: charmtone.Dolly,
		Tertiary:  charmtone.Bok,
		Accent:    charmtone.Zest,

		// Backgrounds
		BgBase:        charmtone.Pepper,
		BgBaseLighter: charmtone.BBQ,
		BgSubtle:      charmtone.Charcoal,
		BgOverlay:     charmtone.Iron,

		// Foregrounds
		FgBase:      charmtone.Ash,
		FgMuted:     charmtone.Squid,
		FgHalfMuted: charmtone.Smoke,
		FgSubtle:    charmtone.Oyster,
		FgSelected:  charmtone.Salt,

		// Borders
		Border:      charmtone.Charcoal,
		BorderFocus: charmtone.Charple,

		// Status
		Success: charmtone.Guac,
		Error:   charmtone.Sriracha,
		Warning: charmtone.Zest,
		Info:    charmtone.Malibu,

		// Colors
		White: charmtone.Butter,

		BlueLight: charmtone.Sardine,
		Blue:      charmtone.Malibu,

		Yellow: charmtone.Mustard,
		Citron: charmtone.Citron,

		Green:      charmtone.Julep,
		GreenDark:  charmtone.Guac,
		GreenLight: charmtone.Bok,

		Red:      charmtone.Coral,
		RedDark:  charmtone.Sriracha,
		RedLight: charmtone.Salmon,
		Cherry:   charmtone.Cherry,
	}

	// Text selection.
	t.TextSelection = lipgloss.NewStyle().Foreground(charmtone.Salt).Background(charmtone.Charple)

	// LSP and MCP status.
	t.ItemOfflineIcon = lipgloss.NewStyle().Foreground(charmtone.Squid).SetString("●")
	t.ItemBusyIcon = t.ItemOfflineIcon.Foreground(charmtone.Citron)
	t.ItemErrorIcon = t.ItemOfflineIcon.Foreground(charmtone.Coral)
	t.ItemOnlineIcon = t.ItemOfflineIcon.Foreground(charmtone.Guac)

	t.YoloIconFocused = lipgloss.NewStyle().Foreground(charmtone.Oyster).Background(charmtone.Citron).Bold(true).SetString(" ! ")
	t.YoloIconBlurred = t.YoloIconFocused.Foreground(charmtone.Pepper).Background(charmtone.Squid)
	t.YoloDotsFocused = lipgloss.NewStyle().Foreground(charmtone.Zest).SetString(":::")
	t.YoloDotsBlurred = t.YoloDotsFocused.Foreground(charmtone.Squid)

	return t
}



================================================
FILE: internal/tui/styles/chroma.go
================================================
package styles

import (
	"github.com/alecthomas/chroma/v2"
	"github.com/charmbracelet/glamour/v2/ansi"
)

func chromaStyle(style ansi.StylePrimitive) string {
	var s string

	if style.Color != nil {
		s = *style.Color
	}
	if style.BackgroundColor != nil {
		if s != "" {
			s += " "
		}
		s += "bg:" + *style.BackgroundColor
	}
	if style.Italic != nil && *style.Italic {
		if s != "" {
			s += " "
		}
		s += "italic"
	}
	if style.Bold != nil && *style.Bold {
		if s != "" {
			s += " "
		}
		s += "bold"
	}
	if style.Underline != nil && *style.Underline {
		if s != "" {
			s += " "
		}
		s += "underline"
	}

	return s
}

func GetChromaTheme() chroma.StyleEntries {
	t := CurrentTheme()
	rules := t.S().Markdown.CodeBlock

	return chroma.StyleEntries{
		chroma.Text:                chromaStyle(rules.Chroma.Text),
		chroma.Error:               chromaStyle(rules.Chroma.Error),
		chroma.Comment:             chromaStyle(rules.Chroma.Comment),
		chroma.CommentPreproc:      chromaStyle(rules.Chroma.CommentPreproc),
		chroma.Keyword:             chromaStyle(rules.Chroma.Keyword),
		chroma.KeywordReserved:     chromaStyle(rules.Chroma.KeywordReserved),
		chroma.KeywordNamespace:    chromaStyle(rules.Chroma.KeywordNamespace),
		chroma.KeywordType:         chromaStyle(rules.Chroma.KeywordType),
		chroma.Operator:            chromaStyle(rules.Chroma.Operator),
		chroma.Punctuation:         chromaStyle(rules.Chroma.Punctuation),
		chroma.Name:                chromaStyle(rules.Chroma.Name),
		chroma.NameBuiltin:         chromaStyle(rules.Chroma.NameBuiltin),
		chroma.NameTag:             chromaStyle(rules.Chroma.NameTag),
		chroma.NameAttribute:       chromaStyle(rules.Chroma.NameAttribute),
		chroma.NameClass:           chromaStyle(rules.Chroma.NameClass),
		chroma.NameConstant:        chromaStyle(rules.Chroma.NameConstant),
		chroma.NameDecorator:       chromaStyle(rules.Chroma.NameDecorator),
		chroma.NameException:       chromaStyle(rules.Chroma.NameException),
		chroma.NameFunction:        chromaStyle(rules.Chroma.NameFunction),
		chroma.NameOther:           chromaStyle(rules.Chroma.NameOther),
		chroma.Literal:             chromaStyle(rules.Chroma.Literal),
		chroma.LiteralNumber:       chromaStyle(rules.Chroma.LiteralNumber),
		chroma.LiteralDate:         chromaStyle(rules.Chroma.LiteralDate),
		chroma.LiteralString:       chromaStyle(rules.Chroma.LiteralString),
		chroma.LiteralStringEscape: chromaStyle(rules.Chroma.LiteralStringEscape),
		chroma.GenericDeleted:      chromaStyle(rules.Chroma.GenericDeleted),
		chroma.GenericEmph:         chromaStyle(rules.Chroma.GenericEmph),
		chroma.GenericInserted:     chromaStyle(rules.Chroma.GenericInserted),
		chroma.GenericStrong:       chromaStyle(rules.Chroma.GenericStrong),
		chroma.GenericSubheading:   chromaStyle(rules.Chroma.GenericSubheading),
		chroma.Background:          chromaStyle(rules.Chroma.Background),
	}
}



================================================
FILE: internal/tui/styles/icons.go
================================================
package styles

const (
	CheckIcon    string = "✓"
	ErrorIcon    string = "×"
	WarningIcon  string = "⚠"
	InfoIcon     string = "ⓘ"
	HintIcon     string = "∵"
	SpinnerIcon  string = "..."
	LoadingIcon  string = "⟳"
	DocumentIcon string = "🖼"
	ModelIcon    string = "◇"

	// Tool call icons
	ToolPending string = "●"
	ToolSuccess string = "✓"
	ToolError   string = "×"

	BorderThin  string = "│"
	BorderThick string = "▌"
)

var SelectionIgnoreIcons = []string{
	// CheckIcon,
	// ErrorIcon,
	// WarningIcon,
	// InfoIcon,
	// HintIcon,
	// SpinnerIcon,
	// LoadingIcon,
	// DocumentIcon,
	// ModelIcon,
	//
	// // Tool call icons
	// ToolPending,
	// ToolSuccess,
	// ToolError,

	BorderThin,
	BorderThick,
}



================================================
FILE: internal/tui/styles/markdown.go
================================================
package styles

import (
	"github.com/charmbracelet/glamour/v2"
)

// Helper functions for style pointers
func boolPtr(b bool) *bool       { return &b }
func stringPtr(s string) *string { return &s }
func uintPtr(u uint) *uint       { return &u }

// returns a glamour TermRenderer configured with the current theme
func GetMarkdownRenderer(width int) *glamour.TermRenderer {
	t := CurrentTheme()
	r, _ := glamour.NewTermRenderer(
		glamour.WithStyles(t.S().Markdown),
		glamour.WithWordWrap(width),
	)
	return r
}



================================================
FILE: internal/tui/styles/theme.go
================================================
package styles

import (
	"fmt"
	"image/color"
	"strings"

	"github.com/charmbracelet/bubbles/v2/filepicker"
	"github.com/charmbracelet/bubbles/v2/help"
	"github.com/charmbracelet/bubbles/v2/textarea"
	"github.com/charmbracelet/bubbles/v2/textinput"
	tea "github.com/charmbracelet/bubbletea/v2"
	"github.com/charmbracelet/crush/internal/tui/exp/diffview"
	"github.com/charmbracelet/glamour/v2/ansi"
	"github.com/charmbracelet/lipgloss/v2"
	"github.com/charmbracelet/x/exp/charmtone"
	"github.com/lucasb-eyer/go-colorful"
	"github.com/rivo/uniseg"
)

const (
	defaultListIndent      = 2
	defaultListLevelIndent = 4
	defaultMargin          = 2
)

type Theme struct {
	Name   string
	IsDark bool

	Primary   color.Color
	Secondary color.Color
	Tertiary  color.Color
	Accent    color.Color

	BgBase        color.Color
	BgBaseLighter color.Color
	BgSubtle      color.Color
	BgOverlay     color.Color

	FgBase      color.Color
	FgMuted     color.Color
	FgHalfMuted color.Color
	FgSubtle    color.Color
	FgSelected  color.Color

	Border      color.Color
	BorderFocus color.Color

	Success color.Color
	Error   color.Color
	Warning color.Color
	Info    color.Color

	// Colors
	// White
	White color.Color

	// Blues
	BlueLight color.Color
	Blue      color.Color

	// Yellows
	Yellow color.Color
	Citron color.Color

	// Greens
	Green      color.Color
	GreenDark  color.Color
	GreenLight color.Color

	// Reds
	Red      color.Color
	RedDark  color.Color
	RedLight color.Color
	Cherry   color.Color

	// Text selection.
	TextSelection lipgloss.Style

	// LSP and MCP status indicators.
	ItemOfflineIcon lipgloss.Style
	ItemBusyIcon    lipgloss.Style
	ItemErrorIcon   lipgloss.Style
	ItemOnlineIcon  lipgloss.Style

	// Editor: Yolo Mode
	YoloIconFocused lipgloss.Style
	YoloIconBlurred lipgloss.Style
	YoloDotsFocused lipgloss.Style
	YoloDotsBlurred lipgloss.Style

	styles *Styles
}

type Styles struct {
	Base         lipgloss.Style
	SelectedBase lipgloss.Style

	Title        lipgloss.Style
	Subtitle     lipgloss.Style
	Text         lipgloss.Style
	TextSelected lipgloss.Style
	Muted        lipgloss.Style
	Subtle       lipgloss.Style

	Success lipgloss.Style
	Error   lipgloss.Style
	Warning lipgloss.Style
	Info    lipgloss.Style

	// Markdown & Chroma
	Markdown ansi.StyleConfig

	// Inputs
	TextInput textinput.Styles
	TextArea  textarea.Styles

	// Help
	Help help.Styles

	// Diff
	Diff diffview.Style

	// FilePicker
	FilePicker filepicker.Styles
}

func (t *Theme) S() *Styles {
	if t.styles == nil {
		t.styles = t.buildStyles()
	}
	return t.styles
}

func (t *Theme) buildStyles() *Styles {
	base := lipgloss.NewStyle().
		Foreground(t.FgBase)
	return &Styles{
		Base: base,

		SelectedBase: base.Background(t.Primary),

		Title: base.
			Foreground(t.Accent).
			Bold(true),

		Subtitle: base.
			Foreground(t.Secondary).
			Bold(true),

		Text:         base,
		TextSelected: base.Background(t.Primary).Foreground(t.FgSelected),

		Muted: base.Foreground(t.FgMuted),

		Subtle: base.Foreground(t.FgSubtle),

		Success: base.Foreground(t.Success),

		Error: base.Foreground(t.Error),

		Warning: base.Foreground(t.Warning),

		Info: base.Foreground(t.Info),

		TextInput: textinput.Styles{
			Focused: textinput.StyleState{
				Text:        base,
				Placeholder: base.Foreground(t.FgSubtle),
				Prompt:      base.Foreground(t.Tertiary),
				Suggestion:  base.Foreground(t.FgSubtle),
			},
			Blurred: textinput.StyleState{
				Text:        base.Foreground(t.FgMuted),
				Placeholder: base.Foreground(t.FgSubtle),
				Prompt:      base.Foreground(t.FgMuted),
				Suggestion:  base.Foreground(t.FgSubtle),
			},
			Cursor: textinput.CursorStyle{
				Color: t.Secondary,
				Shape: tea.CursorBar,
				Blink: true,
			},
		},
		TextArea: textarea.Styles{
			Focused: textarea.StyleState{
				Base:             base,
				Text:             base,
				LineNumber:       base.Foreground(t.FgSubtle),
				CursorLine:       base,
				CursorLineNumber: base.Foreground(t.FgSubtle),
				Placeholder:      base.Foreground(t.FgSubtle),
				Prompt:           base.Foreground(t.Tertiary),
			},
			Blurred: textarea.StyleState{
				Base:             base,
				Text:             base.Foreground(t.FgMuted),
				LineNumber:       base.Foreground(t.FgMuted),
				CursorLine:       base,
				CursorLineNumber: base.Foreground(t.FgMuted),
				Placeholder:      base.Foreground(t.FgSubtle),
				Prompt:           base.Foreground(t.FgMuted),
			},
			Cursor: textarea.CursorStyle{
				Color: t.Secondary,
				Shape: tea.CursorBar,
				Blink: true,
			},
		},

		Markdown: ansi.StyleConfig{
			Document: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					// BlockPrefix: "\n",
					// BlockSuffix: "\n",
					Color: stringPtr(charmtone.Smoke.Hex()),
				},
				// Margin: uintPtr(defaultMargin),
			},
			BlockQuote: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{},
				Indent:         uintPtr(1),
				IndentToken:    stringPtr("│ "),
			},
			List: ansi.StyleList{
				LevelIndent: defaultListIndent,
			},
			Heading: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					BlockSuffix: "\n",
					Color:       stringPtr(charmtone.Malibu.Hex()),
					Bold:        boolPtr(true),
				},
			},
			H1: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					Prefix:          " ",
					Suffix:          " ",
					Color:           stringPtr(charmtone.Zest.Hex()),
					BackgroundColor: stringPtr(charmtone.Charple.Hex()),
					Bold:            boolPtr(true),
				},
			},
			H2: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					Prefix: "## ",
				},
			},
			H3: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					Prefix: "### ",
				},
			},
			H4: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					Prefix: "#### ",
				},
			},
			H5: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					Prefix: "##### ",
				},
			},
			H6: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					Prefix: "###### ",
					Color:  stringPtr(charmtone.Guac.Hex()),
					Bold:   boolPtr(false),
				},
			},
			Strikethrough: ansi.StylePrimitive{
				CrossedOut: boolPtr(true),
			},
			Emph: ansi.StylePrimitive{
				Italic: boolPtr(true),
			},
			Strong: ansi.StylePrimitive{
				Bold: boolPtr(true),
			},
			HorizontalRule: ansi.StylePrimitive{
				Color:  stringPtr(charmtone.Charcoal.Hex()),
				Format: "\n--------\n",
			},
			Item: ansi.StylePrimitive{
				BlockPrefix: "• ",
			},
			Enumeration: ansi.StylePrimitive{
				BlockPrefix: ". ",
			},
			Task: ansi.StyleTask{
				StylePrimitive: ansi.StylePrimitive{},
				Ticked:         "[✓] ",
				Unticked:       "[ ] ",
			},
			Link: ansi.StylePrimitive{
				Color:     stringPtr(charmtone.Zinc.Hex()),
				Underline: boolPtr(true),
			},
			LinkText: ansi.StylePrimitive{
				Color: stringPtr(charmtone.Guac.Hex()),
				Bold:  boolPtr(true),
			},
			Image: ansi.StylePrimitive{
				Color:     stringPtr(charmtone.Cheeky.Hex()),
				Underline: boolPtr(true),
			},
			ImageText: ansi.StylePrimitive{
				Color:  stringPtr(charmtone.Squid.Hex()),
				Format: "Image: {{.text}} →",
			},
			Code: ansi.StyleBlock{
				StylePrimitive: ansi.StylePrimitive{
					Prefix:          " ",
					Suffix:          " ",
					Color:           stringPtr(charmtone.Coral.Hex()),
					BackgroundColor: stringPtr(charmtone.Charcoal.Hex()),
				},
			},
			CodeBlock: ansi.StyleCodeBlock{
				StyleBlock: ansi.StyleBlock{
					StylePrimitive: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Charcoal.Hex()),
					},
					Margin: uintPtr(defaultMargin),
				},
				Chroma: &ansi.Chroma{
					Text: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Smoke.Hex()),
					},
					Error: ansi.StylePrimitive{
						Color:           stringPtr(charmtone.Butter.Hex()),
						BackgroundColor: stringPtr(charmtone.Sriracha.Hex()),
					},
					Comment: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Oyster.Hex()),
					},
					CommentPreproc: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Bengal.Hex()),
					},
					Keyword: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Malibu.Hex()),
					},
					KeywordReserved: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Pony.Hex()),
					},
					KeywordNamespace: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Pony.Hex()),
					},
					KeywordType: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Guppy.Hex()),
					},
					Operator: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Salmon.Hex()),
					},
					Punctuation: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Zest.Hex()),
					},
					Name: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Smoke.Hex()),
					},
					NameBuiltin: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Cheeky.Hex()),
					},
					NameTag: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Mauve.Hex()),
					},
					NameAttribute: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Hazy.Hex()),
					},
					NameClass: ansi.StylePrimitive{
						Color:     stringPtr(charmtone.Salt.Hex()),
						Underline: boolPtr(true),
						Bold:      boolPtr(true),
					},
					NameDecorator: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Citron.Hex()),
					},
					NameFunction: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Guac.Hex()),
					},
					LiteralNumber: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Julep.Hex()),
					},
					LiteralString: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Cumin.Hex()),
					},
					LiteralStringEscape: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Bok.Hex()),
					},
					GenericDeleted: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Coral.Hex()),
					},
					GenericEmph: ansi.StylePrimitive{
						Italic: boolPtr(true),
					},
					GenericInserted: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Guac.Hex()),
					},
					GenericStrong: ansi.StylePrimitive{
						Bold: boolPtr(true),
					},
					GenericSubheading: ansi.StylePrimitive{
						Color: stringPtr(charmtone.Squid.Hex()),
					},
					Background: ansi.StylePrimitive{
						BackgroundColor: stringPtr(charmtone.Charcoal.Hex()),
					},
				},
			},
			Table: ansi.StyleTable{
				StyleBlock: ansi.StyleBlock{
					StylePrimitive: ansi.StylePrimitive{},
				},
			},
			DefinitionDescription: ansi.StylePrimitive{
				BlockPrefix: "\n ",
			},
		},

		Help: help.Styles{
			ShortKey:       base.Foreground(t.FgMuted),
			ShortDesc:      base.Foreground(t.FgSubtle),
			ShortSeparator: base.Foreground(t.Border),
			Ellipsis:       base.Foreground(t.Border),
			FullKey:        base.Foreground(t.FgMuted),
			FullDesc:       base.Foreground(t.FgSubtle),
			FullSeparator:  base.Foreground(t.Border),
		},

		Diff: diffview.Style{
			DividerLine: diffview.LineStyle{
				LineNumber: lipgloss.NewStyle().
					Foreground(t.FgHalfMuted).
					Background(t.BgBaseLighter),
				Code: lipgloss.NewStyle().
					Foreground(t.FgHalfMuted).
					Background(t.BgBaseLighter),
			},
			MissingLine: diffview.LineStyle{
				LineNumber: lipgloss.NewStyle().
					Background(t.BgBaseLighter),
				Code: lipgloss.NewStyle().
					Background(t.BgBaseLighter),
			},
			EqualLine: diffview.LineStyle{
				LineNumber: lipgloss.NewStyle().
					Foreground(t.FgMuted).
					Background(t.BgBase),
				Code: lipgloss.NewStyle().
					Foreground(t.FgMuted).
					Background(t.BgBase),
			},
			InsertLine: diffview.LineStyle{
				LineNumber: lipgloss.NewStyle().
					Foreground(lipgloss.Color("#629657")).
					Background(lipgloss.Color("#2b322a")),
				Symbol: lipgloss.NewStyle().
					Foreground(lipgloss.Color("#629657")).
					Background(lipgloss.Color("#323931")),
				Code: lipgloss.NewStyle().
					Background(lipgloss.Color("#323931")),
			},
			DeleteLine: diffview.LineStyle{
				LineNumber: lipgloss.NewStyle().
					Foreground(lipgloss.Color("#a45c59")).
					Background(lipgloss.Color("#312929")),
				Symbol: lipgloss.NewStyle().
					Foreground(lipgloss.Color("#a45c59")).
					Background(lipgloss.Color("#383030")),
				Code: lipgloss.NewStyle().
					Background(lipgloss.Color("#383030")),
			},
		},
		FilePicker: filepicker.Styles{
			DisabledCursor:   base.Foreground(t.FgMuted),
			Cursor:           base.Foreground(t.FgBase),
			Symlink:          base.Foreground(t.FgSubtle),
			Directory:        base.Foreground(t.Primary),
			File:             base.Foreground(t.FgBase),
			DisabledFile:     base.Foreground(t.FgMuted),
			DisabledSelected: base.Background(t.BgOverlay).Foreground(t.FgMuted),
			Permission:       base.Foreground(t.FgMuted),
			Selected:         base.Background(t.Primary).Foreground(t.FgBase),
			FileSize:         base.Foreground(t.FgMuted),
			EmptyDirectory:   base.Foreground(t.FgMuted).PaddingLeft(2).SetString("Empty directory"),
		},
	}
}

type Manager struct {
	themes  map[string]*Theme
	current *Theme
}

var defaultManager *Manager

func SetDefaultManager(m *Manager) {
	defaultManager = m
}

func DefaultManager() *Manager {
	if defaultManager == nil {
		defaultManager = NewManager()
	}
	return defaultManager
}

func CurrentTheme() *Theme {
	if defaultManager == nil {
		defaultManager = NewManager()
	}
	return defaultManager.Current()
}

func NewManager() *Manager {
	m := &Manager{
		themes: make(map[string]*Theme),
	}

	t := NewCharmtoneTheme() // default theme
	m.Register(t)
	m.current = m.themes[t.Name]

	return m
}

func (m *Manager) Register(theme *Theme) {
	m.themes[theme.Name] = theme
}

func (m *Manager) Current() *Theme {
	return m.current
}

func (m *Manager) SetTheme(name string) error {
	if theme, ok := m.themes[name]; ok {
		m.current = theme
		return nil
	}
	return fmt.Errorf("theme %s not found", name)
}

func (m *Manager) List() []string {
	names := make([]string, 0, len(m.themes))
	for name := range m.themes {
		names = append(names, name)
	}
	return names
}

// ParseHex converts hex string to color
func ParseHex(hex string) color.Color {
	var r, g, b uint8
	fmt.Sscanf(hex, "#%02x%02x%02x", &r, &g, &b)
	return color.RGBA{R: r, G: g, B: b, A: 255}
}

// Alpha returns a color with transparency
func Alpha(c color.Color, alpha uint8) color.Color {
	r, g, b, _ := c.RGBA()
	return color.RGBA{
		R: uint8(r >> 8),
		G: uint8(g >> 8),
		B: uint8(b >> 8),
		A: alpha,
	}
}

// Darken makes a color darker by percentage (0-100)
func Darken(c color.Color, percent float64) color.Color {
	r, g, b, a := c.RGBA()
	factor := 1.0 - percent/100.0
	return color.RGBA{
		R: uint8(float64(r>>8) * factor),
		G: uint8(float64(g>>8) * factor),
		B: uint8(float64(b>>8) * factor),
		A: uint8(a >> 8),
	}
}

// Lighten makes a color lighter by percentage (0-100)
func Lighten(c color.Color, percent float64) color.Color {
	r, g, b, a := c.RGBA()
	factor := percent / 100.0
	return color.RGBA{
		R: uint8(min(255, float64(r>>8)+255*factor)),
		G: uint8(min(255, float64(g>>8)+255*factor)),
		B: uint8(min(255, float64(b>>8)+255*factor)),
		A: uint8(a >> 8),
	}
}

func ForegroundGrad(input string, bold bool, color1, color2 color.Color) []string {
	if input == "" {
		return []string{""}
	}
	t := CurrentTheme()
	if len(input) == 1 {
		style := t.S().Base.Foreground(color1)
		if bold {
			style.Bold(true)
		}
		return []string{style.Render(input)}
	}
	var clusters []string
	gr := uniseg.NewGraphemes(input)
	for gr.Next() {
		clusters = append(clusters, string(gr.Runes()))
	}

	ramp := blendColors(len(clusters), color1, color2)
	for i, c := range ramp {
		style := t.S().Base.Foreground(c)
		if bold {
			style.Bold(true)
		}
		clusters[i] = style.Render(clusters[i])
	}
	return clusters
}

// ApplyForegroundGrad renders a given string with a horizontal gradient
// foreground.
func ApplyForegroundGrad(input string, color1, color2 color.Color) string {
	if input == "" {
		return ""
	}
	var o strings.Builder
	clusters := ForegroundGrad(input, false, color1, color2)
	for _, c := range clusters {
		fmt.Fprint(&o, c)
	}
	return o.String()
}

// ApplyBoldForegroundGrad renders a given string with a horizontal gradient
// foreground.
func ApplyBoldForegroundGrad(input string, color1, color2 color.Color) string {
	if input == "" {
		return ""
	}
	var o strings.Builder
	clusters := ForegroundGrad(input, true, color1, color2)
	for _, c := range clusters {
		fmt.Fprint(&o, c)
	}
	return o.String()
}

// blendColors returns a slice of colors blended between the given keys.
// Blending is done in Hcl to stay in gamut.
func blendColors(size int, stops ...color.Color) []color.Color {
	if len(stops) < 2 {
		return nil
	}

	stopsPrime := make([]colorful.Color, len(stops))
	for i, k := range stops {
		stopsPrime[i], _ = colorful.MakeColor(k)
	}

	numSegments := len(stopsPrime) - 1
	blended := make([]color.Color, 0, size)

	// Calculate how many colors each segment should have.
	segmentSizes := make([]int, numSegments)
	baseSize := size / numSegments
	remainder := size % numSegments

	// Distribute the remainder across segments.
	for i := range numSegments {
		segmentSizes[i] = baseSize
		if i < remainder {
			segmentSizes[i]++
		}
	}

	// Generate colors for each segment.
	for i := range numSegments {
		c1 := stopsPrime[i]
		c2 := stopsPrime[i+1]
		segmentSize := segmentSizes[i]

		for j := range segmentSize {
			var t float64
			if segmentSize > 1 {
				t = float64(j) / float64(segmentSize-1)
			}
			c := c1.BlendHcl(c2, t)
			blended = append(blended, c)
		}
	}

	return blended
}



================================================
FILE: internal/tui/util/util.go
================================================
package util

import (
	"log/slog"
	"time"

	tea "github.com/charmbracelet/bubbletea/v2"
)

type Cursor interface {
	Cursor() *tea.Cursor
}

type Model interface {
	tea.Model
	tea.ViewModel
}

func CmdHandler(msg tea.Msg) tea.Cmd {
	return func() tea.Msg {
		return msg
	}
}

func ReportError(err error) tea.Cmd {
	slog.Error("Error reported", "error", err)
	return CmdHandler(InfoMsg{
		Type: InfoTypeError,
		Msg:  err.Error(),
	})
}

type InfoType int

const (
	InfoTypeInfo InfoType = iota
	InfoTypeWarn
	InfoTypeError
)

func ReportInfo(info string) tea.Cmd {
	return CmdHandler(InfoMsg{
		Type: InfoTypeInfo,
		Msg:  info,
	})
}

func ReportWarn(warn string) tea.Cmd {
	return CmdHandler(InfoMsg{
		Type: InfoTypeWarn,
		Msg:  warn,
	})
}

type (
	InfoMsg struct {
		Type InfoType
		Msg  string
		TTL  time.Duration
	}
	ClearStatusMsg struct{}
)

func Clamp(v, low, high int) int {
	if high < low {
		low, high = high, low
	}
	return min(high, max(low, v))
}



================================================
FILE: internal/version/version.go
================================================
package version

import "runtime/debug"

// Build-time parameters set via -ldflags

var Version = "unknown"

// A user may install crush using `go install github.com/charmbracelet/crush@latest`.
// without -ldflags, in which case the version above is unset. As a workaround
// we use the embedded build version that *is* set when using `go install` (and
// is only set for `go install` and not for `go build`).
func init() {
	info, ok := debug.ReadBuildInfo()
	if !ok {
		// < go v1.18
		return
	}
	mainVersion := info.Main.Version
	if mainVersion == "" || mainVersion == "(devel)" {
		// bin not built using `go install`
		return
	}
	// bin built using `go install`
	Version = mainVersion
}



================================================
FILE: scripts/run-issue-labeler.sh
================================================
ISSUES=$(gh issue list --state=all --limit=1000 --json "number" -t '{{range .}}{{printf "%.0f\n" .number}}{{end}}')
PRS=$(gh pr list --state=all --limit=1000 --json "number" -t '{{range .}}{{printf "%.0f\n" .number}}{{end}}')

for issue in $ISSUES; do
  echo "Dispatching issue-labeler.yml for $issue"
  gh workflow run issue-labeler.yml -f issue-number="$issue"
done

for pr in $PRS; do
  echo "Dispatching issue-labeler.yml for $pr"
  gh workflow run issue-labeler.yml -f issue-number="$pr"
done



================================================
FILE: .github/cla-signatures.json
================================================
{
  "signedContributors": [
    {
      "name": "caarlos0",
      "id": 245435,
      "comment_id": 3133376230,
      "created_at": "2025-07-29T17:11:51Z",
      "repoId": 987670088,
      "pullRequestNo": 333
    },
    {
      "name": "raphamorim",
      "id": 3630346,
      "comment_id": 3133374793,
      "created_at": "2025-07-29T17:11:19Z",
      "repoId": 987670088,
      "pullRequestNo": 230
    },
    {
      "name": "raphamorim",
      "id": 3630346,
      "comment_id": 3133379333,
      "created_at": "2025-07-29T17:13:00Z",
      "repoId": 987670088,
      "pullRequestNo": 230
    },
    {
      "name": "aymanbagabas",
      "id": 3187948,
      "comment_id": 3133374319,
      "created_at": "2025-07-29T17:11:08Z",
      "repoId": 987670088,
      "pullRequestNo": 224
    },
    {
      "name": "aymanbagabas",
      "id": 3187948,
      "comment_id": 3133398259,
      "created_at": "2025-07-29T17:19:30Z",
      "repoId": 987670088,
      "pullRequestNo": 224
    },
    {
      "name": "andreynering",
      "id": 7011819,
      "comment_id": 3133398174,
      "created_at": "2025-07-29T17:19:29Z",
      "repoId": 987670088,
      "pullRequestNo": 323
    },
    {
      "name": "ras0q",
      "id": 66677201,
      "comment_id": 3133486409,
      "created_at": "2025-07-29T17:51:25Z",
      "repoId": 987670088,
      "pullRequestNo": 335
    },
    {
      "name": "meowgorithm",
      "id": 25087,
      "comment_id": 3134117697,
      "created_at": "2025-07-29T21:23:05Z",
      "repoId": 987670088,
      "pullRequestNo": 343
    },
    {
      "name": "kujtimiihoxha",
      "id": 14311743,
      "comment_id": 3135739620,
      "created_at": "2025-07-30T10:35:23Z",
      "repoId": 987670088,
      "pullRequestNo": 352
    },
    {
      "name": "rio",
      "id": 883894,
      "comment_id": 3136448851,
      "created_at": "2025-07-30T13:51:45Z",
      "repoId": 987670088,
      "pullRequestNo": 358
    },
    {
      "name": "douglarek",
      "id": 1488134,
      "comment_id": 3136721507,
      "created_at": "2025-07-30T14:55:51Z",
      "repoId": 987670088,
      "pullRequestNo": 362
    },
    {
      "name": "taigrr",
      "id": 8261498,
      "comment_id": 3138718122,
      "created_at": "2025-07-31T06:31:11Z",
      "repoId": 987670088,
      "pullRequestNo": 391
    },
    {
      "name": "fluffypony",
      "id": 1944293,
      "comment_id": 3139828932,
      "created_at": "2025-07-31T12:45:05Z",
      "repoId": 987670088,
      "pullRequestNo": 400
    },
    {
      "name": "jedisct1",
      "id": 124872,
      "comment_id": 3140242221,
      "created_at": "2025-07-31T14:39:23Z",
      "repoId": 987670088,
      "pullRequestNo": 408
    },
    {
      "name": "Djiit",
      "id": 1169844,
      "comment_id": 3140319096,
      "created_at": "2025-07-31T15:01:49Z",
      "repoId": 987670088,
      "pullRequestNo": 409
    },
    {
      "name": "steipete",
      "id": 58493,
      "comment_id": 3140446226,
      "created_at": "2025-07-31T15:40:05Z",
      "repoId": 987670088,
      "pullRequestNo": 414
    },
    {
      "name": "lmn451",
      "id": 14910239,
      "comment_id": 3141170246,
      "created_at": "2025-07-31T19:54:14Z",
      "repoId": 987670088,
      "pullRequestNo": 429
    },
    {
      "name": "petersanchez",
      "id": 199166,
      "comment_id": 3141358800,
      "created_at": "2025-07-31T21:14:55Z",
      "repoId": 987670088,
      "pullRequestNo": 434
    },
    {
      "name": "alvaro17f",
      "id": 89421445,
      "comment_id": 3144148093,
      "created_at": "2025-08-01T10:50:27Z",
      "repoId": 987670088,
      "pullRequestNo": 451
    },
    {
      "name": "bbrodriges",
      "id": 871322,
      "comment_id": 3144263924,
      "created_at": "2025-08-01T11:33:11Z",
      "repoId": 987670088,
      "pullRequestNo": 454
    },
    {
      "name": "SyedaAnshrahGillani",
      "id": 90501474,
      "comment_id": 3144865858,
      "created_at": "2025-08-01T14:57:07Z",
      "repoId": 987670088,
      "pullRequestNo": 460
    },
    {
      "name": "spachava753",
      "id": 34797853,
      "comment_id": 3145329017,
      "created_at": "2025-08-01T17:49:37Z",
      "repoId": 987670088,
      "pullRequestNo": 469
    },
    {
      "name": "tabletcorry",
      "id": 456754,
      "comment_id": 3145908475,
      "created_at": "2025-08-01T22:18:28Z",
      "repoId": 987670088,
      "pullRequestNo": 480
    },
    {
      "name": "yumosx",
      "id": 141902143,
      "comment_id": 3146472558,
      "created_at": "2025-08-02T12:24:29Z",
      "repoId": 987670088,
      "pullRequestNo": 504
    },
    {
      "name": "bold84",
      "id": 21118257,
      "comment_id": 3146962342,
      "created_at": "2025-08-03T04:07:16Z",
      "repoId": 987670088,
      "pullRequestNo": 519
    },
    {
      "name": "jooray",
      "id": 1028688,
      "comment_id": 3148713433,
      "created_at": "2025-08-03T21:35:15Z",
      "repoId": 987670088,
      "pullRequestNo": 527
    },
    {
      "name": "Ed4ward",
      "id": 153800328,
      "comment_id": 3150375016,
      "created_at": "2025-08-04T12:16:16Z",
      "repoId": 987670088,
      "pullRequestNo": 539
    },
    {
      "name": "ngnhng",
      "id": 51743767,
      "comment_id": 3150846779,
      "created_at": "2025-08-04T14:01:30Z",
      "repoId": 987670088,
      "pullRequestNo": 546
    },
    {
      "name": "zloeber",
      "id": 4702624,
      "comment_id": 3152513500,
      "created_at": "2025-08-04T21:55:42Z",
      "repoId": 987670088,
      "pullRequestNo": 564
    },
    {
      "name": "nelsenm2",
      "id": 197524521,
      "comment_id": 3152872109,
      "created_at": "2025-08-05T00:24:50Z",
      "repoId": 987670088,
      "pullRequestNo": 569
    },
    {
      "name": "mohseenrm",
      "id": 10768371,
      "comment_id": 3153159347,
      "created_at": "2025-08-05T03:39:12Z",
      "repoId": 987670088,
      "pullRequestNo": 574
    },
    {
      "name": "0xWelt",
      "id": 49543594,
      "comment_id": 3157331134,
      "created_at": "2025-08-06T04:07:52Z",
      "repoId": 987670088,
      "pullRequestNo": 584
    },
    {
      "name": "kslamph",
      "id": 15257433,
      "comment_id": 3157402768,
      "created_at": "2025-08-06T04:56:35Z",
      "repoId": 987670088,
      "pullRequestNo": 585
    },
    {
      "name": "kslamph",
      "id": 15257433,
      "comment_id": 3157429309,
      "created_at": "2025-08-06T05:14:23Z",
      "repoId": 987670088,
      "pullRequestNo": 585
    },
    {
      "name": "Sunsvea",
      "id": 14066471,
      "comment_id": 3159014183,
      "created_at": "2025-08-06T10:04:39Z",
      "repoId": 987670088,
      "pullRequestNo": 593
    },
    {
      "name": "taciturnaxolotl",
      "id": 92754843,
      "comment_id": 3160702345,
      "created_at": "2025-08-06T15:48:47Z",
      "repoId": 987670088,
      "pullRequestNo": 606
    },
    {
      "name": "bashbunni",
      "id": 15822994,
      "comment_id": 3160746002,
      "created_at": "2025-08-06T16:02:06Z",
      "repoId": 987670088,
      "pullRequestNo": 187
    },
    {
      "name": "edafonseca",
      "id": 3027921,
      "comment_id": 3161714270,
      "created_at": "2025-08-06T21:41:34Z",
      "repoId": 987670088,
      "pullRequestNo": 618
    },
    {
      "name": "smores56",
      "id": 22140449,
      "comment_id": 3161853491,
      "created_at": "2025-08-06T22:51:42Z",
      "repoId": 987670088,
      "pullRequestNo": 620
    },
    {
      "name": "danielsz",
      "id": 859131,
      "comment_id": 3163327861,
      "created_at": "2025-08-07T09:39:26Z",
      "repoId": 987670088,
      "pullRequestNo": 628
    },
    {
      "name": "pavelzw",
      "id": 29506042,
      "comment_id": 3164728921,
      "created_at": "2025-08-07T15:33:23Z",
      "repoId": 987670088,
      "pullRequestNo": 631
    },
    {
      "name": "CyrusZei",
      "id": 5053903,
      "comment_id": 3165875211,
      "created_at": "2025-08-07T21:45:30Z",
      "repoId": 987670088,
      "pullRequestNo": 638
    },
    {
      "name": "maxjustus",
      "id": 24899,
      "comment_id": 3166599830,
      "created_at": "2025-08-08T05:12:37Z",
      "repoId": 987670088,
      "pullRequestNo": 645
    },
    {
      "name": "akaytatsu",
      "id": 2520440,
      "comment_id": 3167400968,
      "created_at": "2025-08-08T10:32:51Z",
      "repoId": 987670088,
      "pullRequestNo": 647
    },
    {
      "name": "theguy000",
      "id": 52881001,
      "comment_id": 3167442675,
      "created_at": "2025-08-08T10:46:15Z",
      "repoId": 987670088,
      "pullRequestNo": 648
    },
    {
      "name": "pwnintended",
      "id": 92651319,
      "comment_id": 3169309904,
      "created_at": "2025-08-08T21:08:45Z",
      "repoId": 987670088,
      "pullRequestNo": 668
    },
    {
      "name": "tazjin",
      "id": 1552853,
      "comment_id": 3169412729,
      "created_at": "2025-08-08T22:05:40Z",
      "repoId": 987670088,
      "pullRequestNo": 672
    },
    {
      "name": "liznear",
      "id": 160093988,
      "comment_id": 3170486027,
      "created_at": "2025-08-09T08:15:27Z",
      "repoId": 987670088,
      "pullRequestNo": 681
    },
    {
      "name": "jamestrew",
      "id": 66286082,
      "comment_id": 3171975481,
      "created_at": "2025-08-09T17:55:31Z",
      "repoId": 987670088,
      "pullRequestNo": 689
    },
    {
      "name": "wwwjfy",
      "id": 126527,
      "comment_id": 3172676799,
      "created_at": "2025-08-10T14:35:04Z",
      "repoId": 987670088,
      "pullRequestNo": 702
    },
    {
      "name": "orospakr",
      "id": 16714,
      "comment_id": 3181859171,
      "created_at": "2025-08-13T01:01:30Z",
      "repoId": 987670088,
      "pullRequestNo": 746
    },
    {
      "name": "samiulsami",
      "id": 33352407,
      "comment_id": 3189231059,
      "created_at": "2025-08-14T17:12:20Z",
      "repoId": 987670088,
      "pullRequestNo": 779
    },
    {
      "name": "neomantra",
      "id": 26842,
      "comment_id": 3189674073,
      "created_at": "2025-08-14T19:42:53Z",
      "repoId": 987670088,
      "pullRequestNo": 752
    },
    {
      "name": "uri",
      "id": 676443,
      "comment_id": 3190313833,
      "created_at": "2025-08-15T00:58:11Z",
      "repoId": 987670088,
      "pullRequestNo": 782
    },
    {
      "name": "lpmitchell",
      "id": 5081038,
      "comment_id": 3191789654,
      "created_at": "2025-08-15T15:23:59Z",
      "repoId": 987670088,
      "pullRequestNo": 790
    },
    {
      "name": "marcosktsz",
      "id": 58952492,
      "comment_id": 3193569650,
      "created_at": "2025-08-16T10:29:10Z",
      "repoId": 987670088,
      "pullRequestNo": 798
    },
    {
      "name": "sainadh-d",
      "id": 15155045,
      "comment_id": 3193680786,
      "created_at": "2025-08-16T13:49:03Z",
      "repoId": 987670088,
      "pullRequestNo": 803
    },
    {
      "name": "ericcoleta",
      "id": 42539971,
      "comment_id": 3201263288,
      "created_at": "2025-08-19T15:38:48Z",
      "repoId": 987670088,
      "pullRequestNo": 835
    },
    {
      "name": "linw1995",
      "id": 13523027,
      "comment_id": 3209540243,
      "created_at": "2025-08-21T08:29:20Z",
      "repoId": 987670088,
      "pullRequestNo": 850
    },
    {
      "name": "khareyash05",
      "id": 60147732,
      "comment_id": 3213528951,
      "created_at": "2025-08-22T08:26:23Z",
      "repoId": 987670088,
      "pullRequestNo": 860
    },
    {
      "name": "mpj",
      "id": 17815,
      "comment_id": 3214796891,
      "created_at": "2025-08-22T15:35:12Z",
      "repoId": 987670088,
      "pullRequestNo": 865
    },
    {
      "name": "xPrimeTime",
      "id": 101987372,
      "comment_id": 3217970106,
      "created_at": "2025-08-24T09:28:11Z",
      "repoId": 987670088,
      "pullRequestNo": 873
    },
    {
      "name": "mercmobily",
      "id": 2128734,
      "comment_id": 3219992206,
      "created_at": "2025-08-25T12:00:54Z",
      "repoId": 987670088,
      "pullRequestNo": 882
    },
    {
      "name": "xhos",
      "id": 60789741,
      "comment_id": 3221119175,
      "created_at": "2025-08-25T17:26:06Z",
      "repoId": 987670088,
      "pullRequestNo": 892
    }
  ]
}


================================================
FILE: .github/CODEOWNERS
================================================
*.go @charmbracelet/everyone



================================================
FILE: .github/dependabot.yml
================================================
version: 2

updates:
  - package-ecosystem: "gomod"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "05:00"
      timezone: "America/New_York"
    labels:
      - "area: dependencies"
    commit-message:
      prefix: "chore"
      include: "scope"

  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "05:00"
      timezone: "America/New_York"
    labels:
      - "area: dependencies"
    commit-message:
      prefix: "chore"
      include: "scope"

  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "05:00"
      timezone: "America/New_York"
    labels:
      - "area: dependencies"
    commit-message:
      prefix: "chore"
      include: "scope"



================================================
FILE: .github/entitlements.plist
================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
    <true/>
  </dict>
</plist>



================================================
FILE: .github/labeler.yml
================================================
# NOTE(@andreynering): We should have a single entry per label, because if we
# have multiple the action would only apply the label if ALL of them match.

"area: ci":
  - "/^ci: /i"
"area: diff":
  - "/diff/i"
"area: docs":
  - "/(docs|documentation|readme)/i"
"area: images":
  - "/image/i"
"area: lsp":
  - "/lsp/i"
"area: mcp":
  - "/mcp/i"
"area: mouse":
  - "/(mouse|scroll)/i"
"area: onboarding":
  - "/(onboarding)/i"
"area: permissions":
  - "/permission/i"
"area: releasing":
  - "/(release|releasing|aur|brew|nix|npm|scoop|termux|winget)/i"
"area: session":
  - "/session/i"
"area: themes":
  - "/theme/i"
"area: tools":
  - "/tool/i"
"os: android":
  - "/(android|termux)/i"
"os: linux":
  - "/(linux|arch|fedora|debian|ubuntu)/i"
"os: macos":
  - "/(macos|osx|darwin)/i"
"os: windows":
  - "/(windows|win10|win11|win32|wsl|scoop|winget)/i"
"panic / crash":
  - "/(panic|crash|segfault)/i"
"provider: anthropic claude":
  - "/(anthropic|claude)/i"
"provider: aws bedrock":
  - "/(aws|bedrock)/i"
"provider: google gemini":
  - "/gemini/i"
"provider: google vertex":
  - "/vertex/i"
"provider: grok":
  - "/grok/i"
"provider: kimi":
  - "/kimi/i"
"provider: ollama":
  - "/llama/i"
"provider: openai chatgpt":
  - "/(openai|gpt)/i"
"provider: openrouter":
  - "/openrouter/i"
"provider: qwen":
  - "/qwen/i"
"security":
  - "/(security|vulnerability|exploit)/i"



================================================
FILE: .github/workflows/build.yml
================================================
name: build
on: [push, pull_request]

jobs:
  build:
    uses: charmbracelet/meta/.github/workflows/build.yml@main
    with:
      go-version: ""
      go-version-file: ./go.mod
    secrets:
      gh_pat: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"

  dependabot:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: |
          echo "Approving..."
          gh pr review --approve "$PR_URL"
          echo "Merging..."
          gh pr merge --squash --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}



================================================
FILE: .github/workflows/cla.yml
================================================
name: "CLA Assistant"

on:
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened, closed, synchronize]

permissions:
  actions: write
  contents: write
  pull-requests: write
  statuses: write

jobs:
  CLAAssistant:
    if: github.repository == 'charmbracelet/crush'
    runs-on: ubuntu-latest
    steps:
      - name: "CLA Assistant"
        if: |
          github.event.comment.body == 'recheck' ||
          github.event.comment.body == 'I have read the Contributor License Agreement (CLA) and hereby sign the CLA.' ||
          github.event_name == 'pull_request_target'
        uses: contributor-assistant/github-action@v2.6.1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          path-to-signatures: ".github/cla-signatures.json"
          path-to-document: "https://github.com/charmbracelet/crush/blob/main/CLA.md"
          branch: "main"
          allowlist: charmcli,charmcrush,dependabot[bot]
          custom-pr-sign-comment: "I have read the Contributor License Agreement (CLA) and hereby sign the CLA."
          custom-notsigned-prcomment: "Thank you for your submission. We really appreciate it! Like many open-source projects, we ask that you sign our [Contributor License Agreement](https://github.com/charmbracelet/crush/blob/main/CLA.md) before we can accept your contribution. You can sign the CLA by just posting a Pull Request comment same as the below format."
          lock-pullrequest-aftermerge: false
          signed-commit-message: "chore(legal): @$contributorName has signed the CLA"



================================================
FILE: .github/workflows/issue-labeler.yml
================================================
name: Issue Labeler

on:
  issues:
    types: [opened]
  pull_request_target:
    types: [opened]
  workflow_dispatch:
    inputs:
      issue-number:
        description: Issue Number
        required: true
        type: string

permissions:
  issues: write
  contents: read

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: github/issue-labeler@v3.4
        with:
          configuration-path: .github/labeler.yml
          enable-versioned-regex: 0
          include-title: 1
          include-body: 0
          repo-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          issue-number: ${{ github.event.inputs.issue-number || github.event.issue.number || github.event.pull_request.number }}



================================================
FILE: .github/workflows/lint-sync.yml
================================================
name: lint-sync
on:
  schedule:
    # every Sunday at midnight
    - cron: "0 0 * * 0"
  workflow_dispatch: # allows manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    uses: charmbracelet/meta/.github/workflows/lint-sync.yml@main



================================================
FILE: .github/workflows/lint.yml
================================================
name: lint
on:
  push:
  pull_request:

jobs:
  lint:
    uses: charmbracelet/meta/.github/workflows/lint.yml@main
    with:
      golangci_path: .golangci.yml
      golangci_version: v2.4
      timeout: 10m



================================================
FILE: .github/workflows/nightly.yml
================================================
name: nightly

on:
  schedule:
    - cron: "0 0 * * *" # every day at midnight
  workflow_dispatch: # allows manual triggering

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1
      - id: check
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          if gh run list --workflow nightly.yml -c $(git rev-parse HEAD) -s success | grep 'completed'; then
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi
  nightly:
    needs: check
    if: needs.check.outputs.should_run == 'true'
    uses: charmbracelet/meta/.github/workflows/nightly.yml@main
    secrets:
      goreleaser_key: ${{ secrets.GORELEASER_KEY }}



================================================
FILE: .github/workflows/release.yml
================================================
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: goreleaser

on:
  push:
    tags:
      - v*.*.*

concurrency:
  group: goreleaser
  cancel-in-progress: true

jobs:
  goreleaser:
    uses: charmbracelet/meta/.github/workflows/goreleaser.yml@main
    with:
      go_version: "1.25"
      macos_sign_entitlements: "./.github/entitlements.plist"
    secrets:
      docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_token: ${{ secrets.DOCKERHUB_TOKEN }}
      gh_pat: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      goreleaser_key: ${{ secrets.GORELEASER_KEY }}
      fury_token: ${{ secrets.FURY_TOKEN }}
      nfpm_gpg_key: ${{ secrets.NFPM_GPG_KEY }}
      nfpm_passphrase: ${{ secrets.NFPM_PASSPHRASE }}
      npm_token: ${{ secrets.NPM_TOKEN }}
      snapcraft_token: ${{ secrets.SNAPCRAFT_TOKEN }}
      aur_key: ${{ secrets.AUR_KEY }}
      macos_sign_p12: ${{ secrets.MACOS_SIGN_P12 }}
      macos_sign_password: ${{ secrets.MACOS_SIGN_PASSWORD }}
      macos_notary_issuer_id: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}
      macos_notary_key_id: ${{ secrets.MACOS_NOTARY_KEY_ID }}
      macos_notary_key: ${{ secrets.MACOS_NOTARY_KEY }}



================================================
FILE: .github/workflows/schema-update.yml
================================================
name: Update Schema

on:
  push:
    branches: [main]
    paths:
      - "internal/config/**"

jobs:
  update-schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go run . schema > ./schema.json
      - uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v5
        with:
          commit_message: "chore: auto-update generated files"
          branch: main
          commit_user_name: actions-user
          commit_user_email: actions@github.com
          commit_author: actions-user <actions@github.com>


